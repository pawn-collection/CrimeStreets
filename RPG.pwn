/*
Crime Streets RPG by Bomj&Gop true team
*/

// Тащи бандеровец, только не делай хуйни

// native gpci (playerid, serial [], len); // this is the native.



#include <a_samp>
#include <core>
#include <float>
#include <time>
#include <file>
#include <utils>
#include <a_http>
#include <mysql>

#pragma dynamic 8000



//#define LOCALHOST
#define SAMP1


#if defined LOCALHOST
#define MYSQL_HOST	"127.0.0.1"
#define MYSQL_USER	"root"
#define MYSQL_DB	"crimestreets"
#define MYSQL_PASS 	""
#endif

#if defined SAMP1
#define MYSQL_HOST	"127.0.0.1"
#define MYSQL_USER	"root"
#define MYSQL_DB	"crimestreets"
#define MYSQL_PASS 	""
#define SERVER_ID 1
#endif

#if defined SAMP2
#define MYSQL_HOST	"127.0.0.1"
#define MYSQL_USER	"root"
#define MYSQL_DB	"crimestreets"
#define MYSQL_PASS 	""
#define SERVER_ID 2
#endif

#if defined SAMP3
#define MYSQL_HOST	"127.0.0.1"
#define MYSQL_USER	"root"
#define MYSQL_DB	"crimestreets"
#define MYSQL_PASS 	""
#define SERVER_ID 3
#endif





#define UsersTable "Users"
#define HousesTable "Houses"
#define SBizzesTable "SBizzes"
#define BizzesTable "Bizzes"
#define BanTable "Ban"
#define BanipTable "Banip"
#define CarsTable "Cars"
#define ZonesTable "Zones"
#define OtherTable "Other"
#define DonateTable "Donate"
#define VipTable "Vip"
#define DonateLog "DonateLog"

#define Gang_LCNCarsTable "Gang_LCNCars"
#define Gang_YakuzaCarsTable "Gang_YakuzaCars"
#define Gang_BikersCarsTable "Gang_BikersCars"
#define Gang_RMCarsTable "Gang_RMCars"
#define Gang_BallasCarsTable "Gang_BallasCars"
#define Gang_GroveCarsTable "Gang_GroveCars"
#define Gang_VagosCarsTable "Gang_VagosCars"
#define Gang_CoronosCarsTable "Gang_CoronosCars"
#define Gang_RifaCarsTable "Gang_RifaCars"
#define Gang_KolhozCarsTable "Gang_KolhozCars"
#define Gang_SpawnsTable "Gang_Spawns"
#define Gang_NewsTable "Gang_News"
#define Gang_CommonTable "Gang_Commons"

#define ChangenameTable "Log_Changename"
#define MakeAdminTable "Log_MakeAdmin"
#define UnbanTable "Log_Unban"
#define RankTable "Faction_Ranks"

#define rand(%0,%1) (%0+random(%1 - %0))
#define GONT_OOC_MESSAGE 		0xa1cc82FF
#define CHECKPOINT_NONE 0
#define CHECKPOINT_HOME 12
#define CHECKPOINT_DELIVERY 23
#define CHECKPOINT_PRITON 24
#define CHECKPOINT_RACE 25
#define CHECKPOINT_AUTOSCHOOL 26
#define CHECKPOINT_BUSJOB 27
#define COLLECTORSJOB_CHECKPOINT 29
#define COLLECTORSJOBLOAD_CHECKPOINT 30
#define COLLECTORTOCAR_CHECKPOINT 31
#define COLLECTORENDJOB_CHECKPOINT 32
#define RACESF_CHECKPOINT 33
#define CHECKPOINT_GPS 35
#define CHECKPOINT_PIZZA 36
#define CHECKPOINT_LOADFUEL 37
#define CHECKPOINT_FISHER 38
#define CHECKPOINT_OILJOB 39
#define CHECKPOINT_OILJOBTOFACTORY 40
#define CHECKPOINT_SELLOIL 41
#define CHECKPOINT_CLEANER 42
#define CHECKPOINT_FINDONDUMP 43
#define CHECKPOINT_DUMPLOAD 44
#define CHECKPOINT_CHASE 45

#define CHECKPOINT_QUEST_1 46
#define CHECKPOINT_QUEST_1_GET 47

#define CHECKPOINT_QUEST_2_LV_1 48
#define CHECKPOINT_QUEST_2_LV_2 49
#define CHECKPOINT_QUEST_2_SF_1 50
#define CHECKPOINT_QUEST_2_SF_2 51
#define CHECKPOINT_QUEST_2_LS_1 52
#define CHECKPOINT_QUEST_2_LS_2 53

#define CHECKPOINT_QUEST_3_GOTO 54
#define CHECKPOINT_QUEST_3_OBJECT 55
#define CHECKPOINT_QUEST_3_TO_CAR 56
#define CHECKPOINT_QUEST_3_END 57

#define CHECKPOINT_QUEST_4_START 58
#define CHECKPOINT_QUEST_4_RACE 59
#define CHECKPOINT_QUEST_4_FINISH 60
#define CHECKPOINT_QUEST_4_GARAGE 61

#define CHECKPOINT_QUEST_5_DUMP 62
#define CHECKPOINT_QUEST_5_GETBOX 63
#define CHECKPOINT_QUEST_5_TOCAR 64
#define CHECKPOINT_QUEST_5_END 65

#define CHECKPOINT_QUEST_6_AREA 66
#define CHECKPOINT_QUEST_6_FLYING 67
#define CHECKPOINT_QUEST_6_FINISH 68

#define CHECKPOINT_WORKER 69
#define CHECKPOINT_WORKER2 70

#define CHECKPOINT_ROBCAR 71
#define CHECKPOINT_ROBGARAGE 72
#define CHECKPOINT_PVP_RACE 73

#define CHECKPOINT_MINER 74

#define COLOR_GREY 		0xBFC0C2FF // Серый цвет, для помощи при неверном действии
#define COLOR_GREEN 	0x20ba09FF // Зеленый цвет, для информации при выполнении работы, на мероприятиях
#define COLOR_YELLOW 	0xFFFF00AA // Желтые сообщения для телефона
#define COLOR_RED		0xAA3333AA // Цвета предупреждения
#define COLOR_INFO      0x33AA33FF // Цвета информации (например о начале пейнтбола)
#define COLOR_INFO2		0x96eb02FF
#define COLOR_INFO3		0xe7fbc5FF
#define COLOR_INFO4		0xd2ff00FF
#define COLOR_ADMIN     0xAA3333AA // Сообщения для админов
#define COLOR_MUTE      0xFF8282AA // оповещение о молчанке
#define COLOR_DBLUE 	0x2641FEAA // Сообщение в полицию
#define OOC_MESSAGE 	0xa1cc82FF // /о чат
#define COLOR_ALLDEPT 	0xFF8282AA // /d
#define COLOR_AD 		0xffd800FF



#define COLOR_GRAD1 			0xB4B5B7FF
#define COLOR_GRAD2 			0xBFC0C2FF
#define COLOR_GRAD3 			0xCBCCCEFF
#define COLOR_GRAD4 			0xD8D8D8FF
#define COLOR_GRAD5 			0xE3E3E3FF
#define COLOR_GRAD6				0xF0F0F0FF
#define COLOR_BRIGHTRED 		0xDC143CAA
#define COLOR_CGREEN3d 			0xBFF600FF
#define COLOR_GREEN3D		 	0x33AA33FF
#define COLOR_WHITE 			0xFFFFFFAA
#define COLOR_LIGHTRED 			0xFF6347AA
#define COLOR_NAVY 				0x000080AA
#define COLOR_AQUA 				0xF0F8FFAA
#define COLOR_CRIMSON 			0xDC143CAA
#define COLOR_FLBLUE 			0x6495EDAA
#define COLOR_BISQUE 			0xFFE4C4AA
#define COLOR_BLACK 			0x000000AA
#define COLOR_CHARTREUSE 		0x7FFF00AA
#define COLOR_BROWN 			0xA52A2AAA
#define COLOR_CORAL 			0xFF7F50AA
#define COLOR_GOLD 				0xB8860BAA
#define COLOR_GREENYELLOW 		0xADFF2FAA
#define COLOR_INDIGO 			0x4B00B0AA
#define COLOR_IVORY 			0xFFFF82AA
#define COLOR_LAWNGREEN 		0x7CFC00AA
#define COLOR_LIMEGREEN 		0x32CD32AA
#define COLOR_MIDNIGHTBLUE 		0x191970AA
#define COLOR_MAROON 			0x800000AA
#define COLOR_OLIVE 			0x808000AA
#define COLOR_ORANGERED 		0xFF4500AA
#define COLOR_PINK 				0xFF9CF0FF
#define COLOR_SPRINGGREEN 		0x00FF7FAA
#define COLOR_TOMATO 			0xFF6347AA
#define COLOR_YELLOWGREEN 		0x9ACD32AA
#define COLOR_MEDIUMAQUA 		0x83BFBFAA
#define COLOR_MEDIUMMAGENTA 	0x8B008BAA
#define COLOR_BRIGHTRED 		0xDC143CAA
#define COLOR_SYSTEM 			0xEFEFF7AA
#define COLOR_LIGHTGREEN 		0x9ACD32AA
#define COLOR_YELLOW2 			0xF5DEB3AA
#define COLOR_BLUE 				0x01FCFFFF // Цвета чата организаций
#define COLOR_LIGHTBLUE 		0x33CCFFAA
#define COLOR_ORANGE 			0xFF9900AA
#define COLOR_LIME 				0x10F441AA
#define COLOR_MAGENTA 			0xFF00FFFF
#define COLOR_FADE1 			0xE6E6E6E6
#define COLOR_FADE2 			0xC8C8C8C8
#define COLOR_FADE3 			0xAAAAAAAA
#define COLOR_FADE4 			0x8C8C8C8C
#define COLOR_FADE5 			0x6E6E6E6E
#define COLOR_PURPLE			0xC2A2DAAA
#define COLOR_DBLUE 			0x2641FEAA
#define COLOR_ALLDEPT 			0xFF8282AA
#define COLOR_OOC 				0xE0FFFFAA
#define NEWSCOLORNEW 			0x00ACF6AA
#define TEAM_GREEN_COLOR 		0xFFFFFFAA
#define TEAM_HIT_COLOR 			0xFFFFFF00
#define TEAM_BLUE_COLOR 		0x8D8DFF00
#define TEAM_GROVE_COLOR 		0x00D900C8
#define TEAM_VAGOS_COLOR 		0xFFC801C8
#define TEAM_BALLAS_COLOR 		0xD900D3C8
#define TEAM_AZTECAS_COLOR 		0x01FCFFC8
#define TEAM_CYAN_COLOR 		0xFF8282AA

#define RGB_WHITE              	"{ffffff}"
#define RGB_BLACK              	"{000000}"
#define RGB_CYAN              	"{0000ff}"
#define RGB_BLUE              	"{b0daf9}"
#define RGB_RED              	"{e52727}"
#define RGB_GREEN         		"{b3f9b0}"
#define RGB_DARKGREEN           "{3caa3c}"
#define RGB_YELLOW              "{ffff00}"
#define RGB_ORANGE              "{ffa500}"
#define RGB_BROWN              	"{964b00}"
#define RGB_GREY              	"{bbbbbb}"
#define RGB_OLIVE          		"{808000}"
#define RGB_ICHAT1          	"{6b8e23}"
#define RGB_ICHAT2          	"{b5a642}"
#define RGB_LAZUREGREY          "{0095b6}"

#if defined LOCALHOST
	#define RGB_SERVER          	"{FFFFFF}"
	#define CAR_COLOR               1
#endif

#if defined SAMP1
	#define RGB_SERVER          	"{FF7F00}" // оранжевый
	#define CAR_COLOR               6
#endif

#if defined SAMP2
	#define RGB_SERVER          	"{7cfc00}" // зеленый
	#define CAR_COLOR               86
#endif

#if defined SAMP3
	#define RGB_SERVER          	"{19baca}" // морской волны
	#define CAR_COLOR               147
#endif

#define MAX_NUMBER 2147483643

#define Mayors 0// мэрия
#define LSDEP 1 // LSDEP
#define BANKLS 2 // BANKLS
#define LSBAR 3// LSBAR ЛС
#define StoreLS 4 // магазин 24/7
#define BurgerLS 5 // бургер шот ЛС
#define SportZalls 6 // спортзал ЛС

#define FLYMOD_ONFOOT 111 // флай на шифт
#define FLYMOD_DRIVER 112 // флай на шифт
#define FLYMOD_PASSEN 113 // флай на шифт
#define SWIMCHEAT 222 // плавать в воздухе (ю)
#define MEGAJUMP 333 // хенкок
#define CHEATCARGUN 555 // Убил с апача или танка
#define SPEEDHACK 556 // спидхак на Alt
#define GUNCHEAT 777 // чит на оружие
#define GUNCHEATKEY 778 // чит на оружие (проверка в кнопках)
#define INFAMMO 780 // чит на БП
#define WINDOWSHOOT 781 // Стрельба из окон
#define CJRUN 800 // бег CJ
#define TUNINGCAR 900 // Тюнинг тачки
#define SPRAYCAR 901 // Покраска тачки
#define PAINTJOBCHEAT 902 // Рисунок на тачке
#define REMOVEFROMVEH 1000 // чит езда без прав
#define JETPACK 1001 // джетпак
#define REPAIRVEHICLE "1002" // починка тачки
#define GRUZCIKCHEAT 2001 // работа грузчика
#define GRUZCIKCHEAT2 20012 // работа грузчика
#define FACTORYWORKER 33211 // работа на заводе
#define OILCHEAT 2002 // работа на погрузщике (античит)
#define OILCHEAT2 2003 // работа на доставке нефти (античит)
#define DUMPCHEAT 2004 // грузщик на свалке (античит)
#define DUMPCHEAT2 20041 // грузщик на свалке (античит)
#define MATSCHEAT1 3001 // Гандиллер
#define MATSCHEAT2 3002 // Гандиллер
#define AUTODRIVER 403 // Флуд тачками
#define SKINCHANGE 501 // Смена скина
#define SKINCHANGE2 502 // Смена скина
#define INKASCHECK 2005 // Инкасатор
#define DROPCARCHEAT 3003 // дропкар
#define DROPCARCHEAT2 3004 // дроп 2
#define FLOODHACK 148
#define SPEC_CHEAT 4322 // спек
#define PIZDARVANKA 5342


#define ICON_JOB 98 // для иконок работ
#define HOUSE_ICON 99 // иконка твоего дома на карте
#define ICON_QUEST 97 // квесты

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
	
#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))
	
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

#define GivePVarInt(%1,%2,%3) SetPVarInt(%1,%2,GetPVarInt(%1,%2) + %3)
#define GivePVarFloat(%1,%2,%3) SetPVarFloat(%1,%2,GetPVarFloat(%1,%2) + %3)
#define dcmd(%1,%2,%3) if (!strcmp((%3)[1], #%1, true, (%2)) && ((((%3)[(%2) + 1] == '\0') && (dcmd_%1(playerid, ""))) || (((%3)[(%2) + 1] == ' ') && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1

stock bool:ThisGangCanWar(id)
{
	switch(GetPVarInt(id,"Team"))
	{
	    case 5, 6, 10, 12..18: return true;
	}
	return false;
}
stock bool:IsAGang(id)
{
    switch(GetPVarInt(id, "Team"))
    {
        case 10, 13..18: return true;
	}
	return false;
}
stock bool:IsAMafia(id)
{
    switch(GetPVarInt(id, "Team"))
    {
        case 5, 6, 12: return true;
	}
	return false;
}

#define Kick_(%1) SetTimerEx("Re_Kick", 300, 0, "d", %1)

#if defined MAX_VEHICLES
#undef MAX_VEHICLES
#endif
#define MAX_VEHICLES 1500


#define Houses 700
#define Bizzes 29
#define SBizzes 32
#define MAX_CARS 600 // колличество тачек
#define GANG_ZONES 88 // 88 ганг зоны


//#define TEMP_BAN_FILE "BansFileIp.txt"

#if ( !defined MAILER_MAX_MAIL_SIZE )
	#define MAILER_MAX_MAIL_SIZE  (1024)
#endif
#define MAILER_URL "zadrot.hhos.ru.s33.hhos.ru/mailoq.php"
#if ( !defined MAILER_URL )
	#error Please define MAILER_URL before including the mailer include.
#endif

// Антикапс

#define AntiCaps(%0);\
	new _i, _anticaps;\
	while ( %0[_i++]) if('А' <= %0[_i] <= 'Я' || 'A' <= %0[_i] <= 'Z') _anticaps++;\
	if(_anticaps > (_i / 4))\
	{\
		_i = 0;\
		while( %0[_i++] )\
		{\
			switch(%0[_i])\
			{\
				case 64..91, 191..223: %0[_i] += 32;\
	   		}\
		}\
	}


#define VehFile "CarsForSale.ini" // файл с тачками

#define ELEVATOR_SPEED      (5.0)   // Movement speed of the elevator.
#define DOORS_SPEED         (4.0)   // Movement speed of the doors.
#define ELEVATOR_WAIT_TIME  (5000)  // Time in ms that the elevator will wait in each floor before continuing with the queue.
									// Be sure to give enough time for doors to open.
// Private:
#define X_DOOR_CLOSED       (1786.627685)
#define X_DOOR_R_OPENED     (1785.027685)
#define X_DOOR_L_OPENED     (1788.227685)
#define GROUND_Z_COORD      (14.511476)
#define ELEVATOR_OFFSET     (0.059523)

forward SetupPlayerForClassSelection(playerid);
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward GameModeInitExitFunc();
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward ClearFamily(family);
forward CarCheck();
forward Fillup(playerid, veh, price);
forward SyncTime();
forward SyncUp();
forward Production();
forward PayDay();
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward FixHour(hour);
forward DrugEffectGone(playerid);
forward BikersGateClose();
forward cclose();
forward lcnclose();
forward UnMutedX(playerid);

forward Elevator_Boost(floorid);        	// Increases the elevator speed until it reaches 'floorid'.
forward Elevator_TurnToIdle();
forward Float:GetElevatorZCoordForFloor(floorid);
forward Float:GetDoorsZCoordForFloor(floorid);


stock SetPlayerSkinEx(playerid, skinid)
{
	ClearAnimations(playerid, 1);
	SetPlayerSkin(playerid, skinid);
	return 1;
}

new Float:Pickup_Pos[MAX_PICKUPS][3];
stock CreatePickupEx(model, type, Float:X, Float:Y, Float:Z, Virtualworld)
{
	new p_idex = CreatePickup(model, type, X, Y, Z, Virtualworld);
	Pickup_Pos[p_idex][0] = X;
	Pickup_Pos[p_idex][1] = Y;
	Pickup_Pos[p_idex][2] = Z;
	return p_idex;
}
#define CreatePickup CreatePickupEx

new network[500];
stock ReturnNetWorkValue(playerid, networkname[])
{
 	GetPlayerNetworkStats(playerid, network, sizeof(network));
 	new starPos = strfind(network, networkname)+strlen(networkname);
	strmid(network, network, starPos, strfind(network, "\n", false, starPos));
	return strval(network);
}


stock bool:Text_Flood(playerid, text[])
{
	new string[260];
	GetPVarString(playerid, "Text_Flood2", string, sizeof(string));
	format(string, sizeof(string), "%s", string); // Пвары не работают с русскими буквами на прямую
	if(strcmp(string, text, true) == 0 && strlen(string) > 0)
	{
	    return true;
	}
	GetPVarString(playerid, "Text_Flood1", string, sizeof(string));
	format(string, sizeof(string), "%s", string);
	if(strcmp(string, text, true) == 0 && strlen(string) > 0)
	{
	    return true;
	}
	SetPVarString(playerid, "Text_Flood1", text);
	SetPVarString(playerid, "Text_Flood2", string);
	return false;
}


new PlayerText:PlayerVModel[MAX_PLAYERS];

stock PlayerViewModel(playerid, model)
{
	PlayerVModel[playerid] = CreatePlayerTextDraw(playerid, 497.0, 115.0, "_"); // it has to be set with SetText later
 	PlayerTextDrawFont(playerid, PlayerVModel[playerid], TEXT_DRAW_FONT_MODEL_PREVIEW);
  	PlayerTextDrawColor(playerid, PlayerVModel[playerid], 0xFFFFFFFF);
   	PlayerTextDrawBackgroundColor(playerid, PlayerVModel[playerid], 0x00000085);
    PlayerTextDrawTextSize(playerid, PlayerVModel[playerid], 111.0, 111.0); // Text size is the Width:Height
    PlayerTextDrawSetPreviewModel(playerid, PlayerVModel[playerid], model);
   	if(model > 399)
   	{
	   PlayerTextDrawSetPreviewRot(playerid, PlayerVModel[playerid], -15.0, 0.0, -40.0, 1.0);
	   PlayerTextDrawSetPreviewVehCol(playerid, PlayerVModel[playerid], 6, 6);
	}
    PlayerTextDrawShow(playerid, PlayerVModel[playerid]);
	return 1;
}
stock PlayerHideModel(playerid)
{
    PlayerTextDrawHide(playerid, PlayerVModel[playerid]);
    PlayerTextDrawDestroy(playerid, PlayerVModel[playerid]);
    return 1;
}



new From_Biz_Nalog;
new From_Chanhe_Nalog;
new From_Skins_Nalog;
new From_Tax_Nalog;
new From_Tax_Bankomat;
new moneypaydays; // Банк. процент + пей дей
new To_Zones_money;

new action_holiday = 0; // Акция или праздник

new bool:IsConnected[MAX_PLAYERS] = {false, ...};


new dsc_kick, dsc_exit, dsc_timeout;
new AdminCreateObject[100];
//new OWNERS[600][24];
//=========== ВОРОТА ==================
// Ворота ФБР
new FBIrotate, FBIrotaction,
	FBIgate[2], FBIgateaction[2];

// Ворота ЛСПД
new LSPDrotate, LSPDrotateaction,
	LSPDgate, LSPDgateaction,
	LSPDdoor, LSPDdooraction;

// Репортеры
new CNNrotate, CNNrotaction;

// Ворота Армии
new ARMYgate, Armygateaction,
	ARMYangar[3], Angaraction[3];

// Ворота мэрии
new HALLgate[2], HELLgateaction[2];

// Ворота лицензеров
new LICENZERSrotate, Licgateaction;
//==================================
#define MAX_VEHOBJECT 5
new AttachOjects[MAX_PLAYERS][MAX_VEHOBJECT];
new Float:VehicleHealth[MAX_VEHICLES] = 1000.0;
new bool:HealthChanged[MAX_VEHICLES];
new LockedCarP[MAX_VEHICLES] = 0;
new LockForPlayer[MAX_VEHICLES] = -1;
new Old_Car[MAX_PLAYERS];
new UnSerfCar[MAX_VEHICLES]; // Если 1, то нельзя ездить на крыше кара
new AdminFlood[MAX_PLAYERS] = {-1,...};

new DoubleCheckTP; // для тп античита
new Float:SpeedPos[MAX_PLAYERS][3];
new Float:Dop_CheckPos[MAX_PLAYERS][6];
new Float:Check_Radius[MAX_PLAYERS] = {30.0,...};
new Float:Check_Pos_Value[MAX_PLAYERS] = {40.0,...};

new TotalPlayerRun[MAX_PLAYERS];

new Cuffed_Timer[MAX_PLAYERS];
new Heart_Pickup[4];
new Veh_Command_Cars[100]; // Не более 100 каров


new LastTaxiCall = -1;
new LastMedicCall = -1;
new LastMecCall = -1;


new Pickup_Job_Miner;
new Pickup_Miner_Info;
new Pickup_Miner_Ware[3];

/* ====================== Квесты ============================================ */
new PickupPhoneQuest[2];
new QuestCars[MAX_PLAYERS][2]; // Тачки которые будут создаваться для квестов, удалить их при дисконнекте
/* ========================================================================== */
new HoursOnline[24];

enum dCars
{
	cName[24],
	cId,
	cPrice,
	cChange
}
new DonateCar[][dCars] = {
{"Faggio\t\t",   462, 100, 1}, // Простые гражданские авто
{"Manana\t\t",   410, 250, 150},
{"Bravura\t",    401, 300, 200},
{"Perenniel\t",  404, 300, 200},
{"Sentinel\t",   405, 300, 200},
{"Washington\t", 421, 300, 200},
{"Admiral\t\t",  445, 300, 200},
{"Virgo\t\t",    491, 300, 200},
{"Greenwood\t",  492, 300, 200},

{"Alpha\t\t",  602, 400, 300}, // Спортивные простые авто
{"Club\t\t",   589, 400, 300},
{"Euros\t\t",  587, 400, 300},
{"ZR-350\t\t", 477, 400, 300},
{"Blista\t\t", 496, 400, 300},

{"Rancher\t",     489, 400, 300}, // Внедорожники
{"Huntley\t\t",   579, 400, 300},
{"Landstalker\t", 400, 350, 250},

{"Sultan\t\t",  560, 550, 450}, // Спортивные авто с хорошим тюнингом
{"Elegy\t\t",   562, 550, 450},
{"Uranus\t\t",  558, 500, 400},
{"Jester\t\t",  559, 500, 400},
{"Stratum\t\t", 561, 500, 400},
{"Flash\t\t",   565, 500, 400},

{"Remington\t", 534, 500, 400}, // Лоурайдерские
{"Slamvan\t",   535, 500, 400},
{"Blade\t\t",   536, 500, 400},
{"Savanna\t",   567, 500, 400},
{"Broadway\t",  575, 400, 300},
{"Tornado\t",   576, 400, 300},

{"Infernus\t",  411, 600, 500}, // Дорогие спортивные
{"Cheetah\t",   415, 600, 500},
{"Banshee\t",   429, 600, 500},
{"Turismo\t",   451, 600, 500},
{"Bullet\t\t",  541, 600, 500},
{"Super GT\t",  506, 550, 450},
{"Comet\t\t",   480, 550, 450},

{"NRG-500\t",    522, 500, 400}, // Байки
{"FCR-900\t",    521, 450, 350},
{"PCJ-600\t",    461, 400, 300},
{"Freeway\t",    463, 300, 200},
{"Sanchez\t",    468, 300, 200},

{"Monster\t", 	   444, 800, 700}, // Редкие и необычные авто
{"Monster A\t",    556, 800, 700},
{"Monster B\t",    557, 800, 700},
{"Hotring1\t",     494, 700, 600},
{"Hotring2\t",     502, 700, 600},
{"Hotring3\t",     503, 700, 600},
{"Sandking\t", 	   495, 700, 600},
{"Dune\t\t", 	   573, 700, 600},
{"Bandito\t\t",    568, 550, 450},
{"Hotknife\t", 	   434, 550, 450},
{"Hustler\t\t",    545, 550, 450}
};

enum dSkins
{
	sId,
	sPrice
}
new DonateSkin[][dSkins] = {
{294, 350},
{99, 350},
{92, 350},
{96, 350},
{273, 300},
{289, 300},
{3, 300},
{4, 300},
{5, 300},
{6, 300},
{8, 300},
{42, 300},
{119, 300},
{1, 200},
{2, 200},
{7, 200},
{11, 200},
{12, 200},
{13, 200},
{14, 200},
{18, 200},
{19, 200},
{21, 200},
{22, 200},
{23, 200},
{24, 200},
{25, 200},
{26, 200},
{28, 200},
{29, 200},
{40, 200},
{45, 200},
{47, 200},
{51, 200},
{52, 200},
{63, 200},
{64, 200},
{66, 200},
{67, 200},
{72, 200},
{80, 200},
{81, 200},
{82, 200},
{83, 200},
{84, 200},
{85, 200},
{87, 200},
{90, 200},
{91, 200},
{93, 200},
{97, 200},
{138, 200},
{139, 200},
{140, 200},
{145, 200},
{146, 200},
{152, 200},
{154, 200},
{167, 200},
{178, 200},
{192, 200},
{193, 200},
{211, 200},
{214, 200},
{216, 200},
{217, 200},
{219, 200},
{233, 200},
{237, 200},
{243, 200},
{244, 200},
{245, 200},
{246, 200},
{251, 200},
{252, 200},
{256, 200},
{257, 200},
{263, 200},
{293, 200}
};


enum aFloo
{
	lastCheck,
	countCheck
}
new maxFunCalls[MAX_PLAYERS][26][aFloo],
maxCalls[26] = {5, 7, 7, 7, 7, 10, 5, 10, 20, 30, 10, 10, 15, 80, 15, 15, 20, 20, 10, 10, 150, 10, 10, 700, 700, 10};

stock bool:CheckFCalls(playerid, pid)
{
	if(playerid < 0 || playerid >= MAX_PLAYERS) return true;
	new gtime = gettime();

	if(maxFunCalls[playerid][pid][lastCheck] < gtime)
	{
	    maxFunCalls[playerid][pid][lastCheck] = gtime+1;
	    maxFunCalls[playerid][pid][countCheck] = 0;
	}
	else
	{
	    maxFunCalls[playerid][pid][countCheck] ++;
	    if(maxFunCalls[playerid][pid][countCheck] > maxCalls[pid])
	    {
			Kick(playerid); // FLOODHACK
			return true;
		}
	}
	return false;
}
/*
new PrevIp[24];
new PrevTime = 0;
new PrevBanned = 0;
*/

new FactionRanks[19][20][25];

new globalstr[4100];


new PDDpickup;
new autoschoolpickup;
new PlayerSchoolCar[MAX_PLAYERS];

new Float:ASCheckpoints[][4] = {
{-2034.414184,-72.759025,35.171875, 0.0},
{-2003.830810,-59.401016,35.047626, 0.0},
{-2003.351562,-2.931138,34.092353, 0.0},
{-2003.158447,78.078071,27.546554, 0.0},
{-2003.273559,150.609725,27.421537, 0.0},
{-2003.448852,208.690139,27.421535, 0.0},
{-1991.142700,225.465652,28.460926, 0.0},
{-1910.163696,228.734878,34.883026, 0.0},
{-1911.014526,267.219635,40.929157, 0.0},
{-1939.031494,246.057678,40.929191, 0.0},
{-1975.790405,253.353973,35.054271, 0.0},
{-1985.325439,288.040802,34.506374, 0.0},
{-1999.786376,306.941589,34.783580, 0.0},
{-1985.497070,341.781127,34.681983, 0.0},
{-1928.765014,339.023864,31.589468, 0.0},
{-1877.729736,379.631805,20.577928, 0.0},
{-1847.868774,403.008270,16.898099, 0.0},
{-1788.872680,344.659057,15.229672, 0.0},
{-1717.536132,329.399261,6.913726, 0.0},
{-1653.745727,392.661254,6.913750, 0.0},
{-1643.855590,434.217559,7.062167, 0.0},
{-1678.174316,423.999450,7.062160, 0.0},
{-1696.712646,374.634002,7.023653, 0.0},
{-1661.388549,385.766571,6.913720, 0.0},
{-1592.349243,454.706420,6.913762, 0.0},
{-1556.536254,566.130432,6.913769, 0.0},
{-1555.943359,669.353759,6.921581, 0.0},
{-1538.304199,763.828918,6.921557, 0.0},
{-1526.807617,874.288452,6.920832, 0.0},
{-1582.552490,934.018371,7.421525, 0.0},
{-1720.147827,933.630371,24.624687, 0.0},
{-1780.928833,933.674133,24.627948, 0.0},
{-1780.256103,971.837829,24.596961, 0.0},
{-1747.071411,981.693908,17.975671, 0.0},
{-1698.193603,986.577270,17.470779, 0.0},
{-1696.573852,1048.200073,17.468494, 0.0},
{-1728.117187,1048.150024,17.469127, 0.0},
{-1734.392333,1000.090332,17.460700, 0.0},
{-1753.296142,987.438842,19.220018, 0.0},
{-1781.673095,996.414306,24.616699, 0.0},
{-1791.568603,1089.913208,45.179054, 0.0},
{-1831.236450,1106.853637,45.171585, 0.0},
{-1904.231933,1080.437377,46.265316, 0.0},
{-1968.860229,1080.146362,55.451286, 0.0},
{-2007.089111,1028.537597,55.423534, 0.0},
{-2020.161132,926.294799,45.564575, 0.0},
{-2036.363281,946.635803,49.297145, 0.0},
{-2045.818603,913.578247,53.749801, 0.0},
{-2063.789306,947.122192,59.834079, 0.0},
{-2082.588378,911.376770,66.041893, 0.0},
{-2092.192138, 948.215332, 70.673522, 0.0},
{-2106.728027,910.862854,76.940399, 0.0},
{-2147.980712,905.561035,79.734016, 0.0},
{-2147.283935,760.572448,69.296669, 0.0},
{-2147.598876,652.510925,52.072723, 0.0},
{-2147.784912,546.486877,34.898277, 0.0},
{-2148.709228,402.635528,34.990058, 0.0},
{-2149.131347, 322.961120, 35.054344, 0.0},
{-2254.734130, 306.966278, 35.046520, 0.0},
{-2255.033447,150.268585,35.054397, 0.0},
{-2257.757324,37.904754,35.054409, 0.0},
{-2252.372070,-70.577346,35.054363, 0.0},
{-2174.220458,-73.329544,35.055240, 0.0},
{-2077.422363,-72.436286,35.054389, 0.0},
{-2031.640014,-77.753158,34.716464, 1.0}
};




#if defined LOCALHOST
new pickupautosalon;
enum ArrayCars
{
	ACarName[24],
	ACarID,
	ACarPrice
}
new ACarsInfo[][ArrayCars] = {
{"Perenniel", 404, 289000},
{"Sentinel", 405, 299000},
{"Manana", 410, 311000},
{"PCJ-600", 461, 237000},
{"Mesa", 500, 310000},
{"Buffalo", 402, 358000},
{"Voodoo", 412, 423000},
{"Cheetah", 415, 377000},
{"BF Injection", 424, 269000},
{"Stallion", 439, 343000},
{"Solair", 458, 511000},
{"Phoenix", 603, 499000},
{"Alpha", 602, 506000},
{"Uranus", 558, 579000},
{"Slamvan", 535, 405000},
{"Infernus", 411, 950000},
{"Turismo", 451, 876000},
{"Elegy", 562, 847000},
{"Stratum", 561, 519000},
{"Sultan", 560, 789000},
{"Jester", 559, 689000},
{"Bullet", 541, 700000},
{"NRG-500", 522, 614000},
{"Super GT", 506, 555000},
{"Romero", 442, 451000}
};
#endif



// --- Рыбалка ---
new FishingBoat[10],
	FishingPickup[2];
new SellFishPickup;

new pickupHallJobs;

new LoginDelay[MAX_PLAYERS] = {-1,...};
new PlayerAmmo[MAX_PLAYERS][13];


new BikeJumpTimer[MAX_PLAYERS] = {-1,...}; // для античита на прыжки на байке
new PlayerChase[MAX_PLAYERS] = {-1,...}; // Для преследования преступника
new TimeShowTimer[MAX_PLAYERS] = {-1,...}; // Для часов /time
new DrugsGone[MAX_PLAYERS] = {-1,...};

// Система такси
new Taxi[11];
new TaxiLeaveTimer[MAX_PLAYERS] = {-1,...};// когда вышел из тачки
new PassengerTimer[MAX_PLAYERS] = {-1,...};// таймер для пассажира

stock bool:IsTaxi(vid)
{
	for(new i; i < sizeof(Taxi); i ++)
	{
	    if(vid == Taxi[i]) return true;
	}
	return false;
}
//------

new Reg_Race_Pvp;
new Pvp_Race_Car[MAX_PLAYERS]; // Удалить тачку при выходе


new Float:CarPos_LS_Lap1[][] = {
{1441.744262,-2486.085937,13.259398,269.018188},
{1441.744262,-2501.657226,13.259991,269.018188}
};
new Float:CP_LS_Lap1[][] = {
{1486.511474,-2493.647949,13.258966},
{1682.014282,-2493.743408,13.260290},
{1949.470947,-2493.892578,13.244660},
{2080.677490,-2496.811767,13.251533},
{2074.070068,-2592.279785,13.251516},
{1879.152832,-2593.176025,13.251402},
{1619.346069,-2593.345703,13.251413},
{1489.222045,-2594.098876,13.251422},
{1432.569335,-2549.916748,13.251493},
{1486.511474,-2493.647949,13.258966},
{1682.014282,-2493.743408,13.260290},
{1949.470947,-2493.892578,13.244660},
{2080.677490,-2496.811767,13.251533},
{2074.070068,-2592.279785,13.251516},
{1879.152832,-2593.176025,13.251402},
{1619.346069,-2593.345703,13.251413},
{1489.222045,-2594.098876,13.251422},
{1432.569335,-2549.916748,13.251493},
{1486.511474,-2493.647949,13.258966},
{1682.014282,-2493.743408,13.260290},
{1949.470947,-2493.892578,13.244660},
{2080.677490,-2496.811767,13.251533},
{2074.070068,-2592.279785,13.251516},
{1879.152832,-2593.176025,13.251402},
{1619.346069,-2593.345703,13.251413},
{1489.222045,-2594.098876,13.251422},
{1432.569335,-2549.916748,13.251493},
{1486.511474,-2493.647949,13.258966}
};


new Float:CarPos_SF_Lap1[][] = {
{-1825.355224,-576.016845,16.041322,90.0},
{-1825.355224,-584.168457,16.043083,90.0}
};
new Float:CP_SF_Lap1[][] = {
{-1865.347290,-579.978759,23.259109},
{-1923.525268,-579.850463,24.150949},
{-2003.587036,-579.718078,25.345458},
{-2149.112060,-499.767059,40.250560},
{-2253.678710,-369.787231,50.570686},
{-2255.997070,-155.599838,34.876586},
{-2253.805908,62.596752,34.876583},
{-2252.426757,300.749481,34.867835},
{-2217.230468,320.514556,34.876468},
{-2052.720458,320.225524,34.720207},
{-1977.813842,343.622528,34.233524},
{-1882.259155,372.297332,21.945182},
{-1847.803833,407.152679,16.719648},
{-1763.348754,323.846527,7.168927},
{-1772.256103,283.840667,9.205549},
{-1809.520629,150.807571,14.665627},
{-1799.526123,-52.331703,13.209536},
{-1799.858520,-178.926910,11.324461},
{-1799.781250,-304.892211,24.752855},
{-1823.908691,-473.956298,14.665590},
{-1825.458618,-577.958618,16.043861},
{-1865.347290,-579.978759,23.259109},
{-1923.525268,-579.850463,24.150949},
{-2003.587036,-579.718078,25.345458},
{-2149.112060,-499.767059,40.250560},
{-2253.678710,-369.787231,50.570686},
{-2255.997070,-155.599838,34.876586},
{-2253.805908,62.596752,34.876583},
{-2252.426757,300.749481,34.867835},
{-2217.230468,320.514556,34.876468},
{-2052.720458,320.225524,34.720207},
{-1977.813842,343.622528,34.233524},
{-1882.259155,372.297332,21.945182},
{-1847.803833,407.152679,16.719648},
{-1763.348754,323.846527,7.168927},
{-1772.256103,283.840667,9.205549},
{-1809.520629,150.807571,14.665627},
{-1799.526123,-52.331703,13.209536},
{-1799.858520,-178.926910,11.324461},
{-1799.781250,-304.892211,24.752855},
{-1823.908691,-473.956298,14.665590},
{-1825.458618,-577.958618,16.043861},
{-1865.347290,-579.978759,23.259109}
};


new Float:CarPos_LV_Lap1[][] = {
{2089.829101,1033.778564,10.425272,303.337951},
{2087.720703,1038.031005,10.408981,303.069763}
};
new Float:CP_LV_Lap1[][] = {
{2111.254638,1052.405273,10.691085},
{2164.653808,1114.397094,12.303978},
{2187.496582,1235.810424,10.376450},
{2187.464843,1347.690551,10.376468},
{2204.052490,1373.229980,10.376051},
{2359.058593,1373.138061,10.415039},
{2625.761230,1368.176513,10.376464},
{2627.991699,1288.977050,10.377519},
{2607.526367,1219.634033,10.376438},
{2602.549316,1028.444335,10.379876},
{2501.682128,1012.983581,10.381540},
{2410.636718,1031.224609,10.519078},
{2371.672119,998.870788,10.524906},
{2271.797851,973.214904,10.376440},
{2070.875000,979.572570,10.267650},
{2086.179443,1034.521850,10.423703},
{2111.254638,1052.405273,10.691085},
{2164.653808,1114.397094,12.303978},
{2187.496582,1235.810424,10.376450},
{2187.464843,1347.690551,10.376468},
{2204.052490,1373.229980,10.376051},
{2359.058593,1373.138061,10.415039},
{2625.761230,1368.176513,10.376464},
{2627.991699,1288.977050,10.377519},
{2607.526367,1219.634033,10.376438},
{2602.549316,1028.444335,10.379876},
{2501.682128,1012.983581,10.381540},
{2410.636718,1031.224609,10.519078},
{2371.672119,998.870788,10.524906},
{2271.797851,973.214904,10.376440},
{2070.875000,979.572570,10.267650},
{2086.179443,1034.521850,10.423703},
{2111.254638,1052.405273,10.691085}
};


new Float:CarPos_LV_Sprint1[][] = {
{2333.280029,1393.444213,42.525127,1.0},
{2320.195312,1393.444213,42.526069,1.0}
};
new Float:CP_LV_Sprint1[][] = {
{2326.042480,1430.159179,42.524951},
{2298.319580,1511.382934,42.524448},
{2304.916015,1395.529785,36.126445},
{2309.862304,1511.008911,29.728078},
{2306.593505,1396.154663,23.329772},
{2308.802734,1510.842773,16.923482},
{2306.284667,1381.130859,10.434248}
};


new Float:CarPos_LS_Sprint1[][] = {
{1344.947387,-2304.903564,12.778971,0.947924},
{1333.835449,-2309.318115,12.778793,359.596038}
};
new Float:CP_LS_Sprint1[][] = {
{1339.010253,-2266.402832,12.942818},
{1390.079833,-2140.620849,12.942835},
{1643.118774,-2050.266357,21.102174},
{1636.616821,-1837.267822,25.454223},
{1630.783203,-1601.638549,27.911014},
{1818.429687,-1516.722656,5.235134},
{2165.257812,-1555.491699,1.638103},
{2460.294433,-1618.326416,14.796297},
{2730.015136,-1593.397949,13.196532},
{2736.551269,-1430.739135,29.734136},
{2737.231201,-1257.371093,58.955364},
{2706.737304,-1078.879882,68.797874},
{2651.048828,-1050.264770,68.808395},
{2836.619628,-1059.735229,22.664176},
{2858.112060,-1284.047973,18.705837},
{2859.745117,-1600.461059,10.489642},
{2830.571777,-2031.524414,10.501407}
};


new Float:CarPos_LV_Lap2[][] = {
{230.383621,969.916442,27.587263,293.441253},
{230.383621,974.915100,27.593454,293.441253}
};
new Float:CP_LV_Lap2[][] = {
{248.463790,980.498107,27.586668},
{402.906982,1022.093261,27.777570},
{694.292236,1099.217285,27.780855},
{831.315063,1225.996459,26.726514},
{769.735290,1426.044555,19.342672},
{828.685363,1728.955688,4.397803},
{812.294799,1927.851196,5.506378},
{754.555297,2312.935302,10.608832},
{859.537414,2533.919433,29.299577},
{861.030761,2690.169189,34.326278},
{604.790893,2715.592041,58.489528},
{384.008697,2706.239257,60.083610},
{161.050674,2748.629150,55.209117},
{-21.665439,2638.850097,62.231716},
{-218.164688,2635.031982,62.287651},
{-420.718475,2719.678955,61.627643},
{-594.184570,2751.934326,59.765640},
{-773.964843,2729.888427,44.762699},
{-1030.451049,2708.233398,45.263156},
{-1269.785522,2669.622558,48.060306},
{-1393.801269,2569.891845,57.939277},
{-1383.079101,2247.726806,54.354965},
{-1336.215209,2009.559814,53.307086},
{-1195.284545,1845.838378,40.735942},
{-1147.464111,1778.958007,38.392787},
{-898.432312,1681.770263,26.640193},
{-844.614929,1561.670898,23.762126},
{-841.153198,1409.801025,13.005327},
{-656.870483,1222.864135,11.565437},
{-530.066162,1084.209106,10.427210},
{-328.904632,932.433898,10.630048},
{-243.373535,790.726440,17.146728},
{9.932332,884.889465,22.926546},
{208.689483,961.382019,27.509479},
{449.727813,1033.333496,27.788089}
};


enum Race_Car_Info
{
	CarName[20],
	CarModel,
	bool:n2o
}
new Racer_Cars_Pvp[][Race_Car_Info] = {
{"Buffalo", 402, true},
{"Stretch", 409, true},
{"Infernus", 411, true},
{"Voodoo", 412, true},
{"Cheetah", 415, true},
{"BF Injection", 424, true},
{"Banshee", 429, true},
{"Hotknife", 434, true},
{"Turismo", 451, true},
{"Sanchez", 468, false},
{"Quad", 471, false},
{"Comet", 480, true},
{"Hotring Racer", 494, true},
{"Sandking", 495, true},
{"Bloodring Banger", 504, true},
{"Super GT", 506, true},
{"FCR-900", 521, false},
{"NRG-500", 522, false},
{"Bullet", 541, true},
{"Jester", 559, true},
{"Sultan", 560, true},
{"Elegy", 562, true},
{"Flash", 565, true},
{"Savanna", 567, true}
};


new Enter_TDM;
new Reg_TDM;
new bool:OpenTDM = false;
new TDM_Money = 0;
new TDM_Timer;
new TDM_Map;
new TDM_Players;
new TDM_Team_Kills[2];
new Text:TDM_Count;


enum tdminfo
{
	TDM_Name[25],
	TDM_On,
	TDM_Playerid,
	TDM_Kills
}
new TDM_Info[10][2][tdminfo];
// 0 синяя команда, 1 красная

// Инт 10, Магазин игрушек
new Float:Red_Map_TDM_0[sizeof(TDM_Info)][] = {
{10.0, -969.871215,1098.741210,1345.001831, 124.658531},//RED1
{10.0, -969.936401,1090.219726,1345.008789, 119.645164},//RED2
{10.0, -973.733764,1077.083984,1344.992553, 123.091880},//RED3
{10.0, -970.371520,1061.004516,1345.036987, 99.905029},//RED4
{10.0, -979.404663,1056.151855,1344.982299, 63.558010},//RED5
{10.0, -969.568359,1049.414794,1345.051513, 105.545005},//RED6
{10.0, -969.278137,1031.751708,1345.070800, 125.598533},//RED7
{10.0, -974.246520,1023.934631,1345.044433, 67.631317},//RED8
{10.0, -979.552124,1066.435058,1344.967407, 108.654861},//RED9
{10.0, -974.366882,1090.420898,1348.437500, 114.608245}//RED10
};

new Float:Blue_Map_TDM_0[sizeof(TDM_Info)][] = {
{10.0, -1131.775878,1029.161499,1345.731323, 280.653076},//BLUE1
{10.0, -1133.423706,1022.648864,1345.731933, 297.549865},//BLUE2
{10.0, -1136.268188,1028.115234,1345.755371, 350.503723},//BLUE3
{10.0, -1132.119384,1041.245727,1345.740356, 320.110137},//BLUE4
{10.0, -1134.876342,1057.169677,1345.775878, 280.629791},//BLUE5
{10.0, -1136.674804,1067.323974,1345.795288, 329.510253},//BLUE6
{10.0, -1133.951171,1091.664428,1345.801635, 255.562911},//BLUE7
{10.0, -1127.004272,1098.520141,1345.766235, 237.389328},//BLUE8
{10.0, -1127.725463,1082.677856,1345.754150, 244.909393},//BLUE9
{10.0, -1126.250366,1062.874511,1345.720214, 170.576171}//BLUE10
};


// Интерьер 0, завод КАСС
new Float:Red_Map_TDM_1[sizeof(TDM_Info)][] = {
{0.0, 2547.434570,2846.301757,10.820312, 256.164886},//RED1
{0.0, 2563.030029,2847.334960,10.820312, 210.417831},//RED2
{0.0, 2584.003417,2847.452880,10.820312, 202.584304},//RED3
{0.0, 2595.122802,2806.479248,10.820312, 326.352081},//RED4
{0.0, 2556.100585,2805.376220,10.820312, 279.038238},//RED5
{0.0, 2561.945556,2822.021240,10.820312, 297.525115},//RED6
{0.0, 2602.654296,2847.759033,10.820312, 205.404190},//RED7
{0.0, 2615.431396,2839.299560,10.820312, 178.457305},//RED8
{0.0, 2613.745361,2824.166748,10.820312, 310.371917},//RED9
{0.0, 2601.473876,2807.594726,14.255933, 325.388610}//RED10
};

new Float:Blue_Map_TDM_1[sizeof(TDM_Info)][] = {
{0.0, 2636.843261,2740.665527,23.822219, 345.105499},//BLUE1
{0.0, 2625.927734,2740.097656,23.822219, 329.752014},//BLUE2
{0.0, 2623.646972,2744.457763,23.822219, 341.972137},//BLUE3
{0.0, 2619.708251,2755.317138,23.822219, 296.851715},//BLUE4
{0.0, 2617.614013,2763.541503,23.822219, 313.458618},//BLUE5
{0.0, 2608.863525,2764.033935,23.822219, 319.725341},//BLUE6
{0.0, 2599.388183,2757.373291,23.822219, 299.985168},//BLUE7
{0.0, 2597.179687,2745.625732,23.822219, 314.711975},//BLUE8
{0.0, 2603.196044,2738.977539,23.822219, 324.425445},//BLUE9
{0.0, 2613.399414,2732.595214,36.538642, 348.238983}//BLUE10
};


// Интерьер 0, подземная стоянка
new Float:Red_Map_TDM_2[sizeof(TDM_Info)][] = {
{0.0, -1352.849609,-6.243237,6.000000, 150.430984},//RED1
{0.0, -1352.115112,1.858439,6.000000, 160.771087},//RED2
{0.0, -1338.740844,6.655430,6.000000, 137.584197},//RED3
{0.0, -1343.216552,13.119143,6.000000, 158.264389},//RED4
{0.0, -1348.601806,16.423648,6.000000, 165.157791},//RED5
{0.0, -1343.670532,20.978147,6.000000, 198.684753},//RED6
{0.0, -1347.348632,26.473569,6.000000, 179.571121},//RED7
{0.0, -1351.333251,30.730226,6.000000, 183.331329},//RED8
{0.0, -1339.255004,33.481216,6.000000, 162.337738},//RED9
{0.0, -1344.173095,35.971229,6.000000, 175.497833}//RED10
};

new Float:Blue_Map_TDM_2[sizeof(TDM_Info)][] = {
{0.0, -1458.457153,-64.414619,6.000000, 38.693153},//Blue1
{0.0, -1471.471557,-60.878711,6.000000, 330.385864},//Blue2
{0.0, -1468.447143,-53.196300,6.006942, 357.019470},//Blue3
{0.0, -1467.490966,-72.930725,6.006942, 356.706085},//Blue4
{0.0, -1474.604736,-73.474990,6.000000, 340.412658},//Blue5
{0.0, -1465.324340,-87.260192,6.000000, 347.932800},//Blue6
{0.0, -1458.087036,-89.970512,6.000000, 10.806365},//Blue7
{0.0, -1472.692382,-103.021408,6.000000, 345.112792},//Blue8
{0.0, -1475.513916,-110.268379,6.000000, 350.439483},//Blue9
{0.0, -1469.544555,-111.459159,6.000000, 351.066162}//Blue10
};





enum GasCarsInfo
{
	gMaincar,
	gBarrel1,
	gBarrel2,
	gBarrel3
}
new LoadCar[15][GasCarsInfo];

enum Oiltnk
{
	gMailcar,
	gOil,
	Text3D:gOilText
}
new OilTank[6][Oiltnk];

new pickupbuyoil;
new pickupinfooil;
new pickupoiljob;
new pickupdrivertruck;
new Text3D:buyoil;
new OilTruck[6];
#define OIL_COMPANY 31 // ид сбизнеса нефтезавода


stock GetLoaderCar(vid)
{
	for(new i; i < sizeof(LoadCar); i ++)
	{
	    if(vid == LoadCar[i][gMaincar]) return i;
	}
	return -1;
}
stock GetVehicleTank(vid)
{
	new trailer = GetVehicleTrailer(vid);
	for(new i; i < sizeof(OilTank); i++)
	{
	    if(trailer == OilTank[i][gMailcar]) return i;
	}
	return -1;
}
stock bool:IsOilTruck(vid)
{
	for(new i; i < sizeof(OilTruck); i++)
	{
	    if(vid == OilTruck[i]) return true;
	}
	return false;
}



enum Robcar
{
	cMaincar,
	cTotalp
}
new RobCarInfo[3][Robcar];
stock GetRobCar(vid)
{
	for(new i; i < sizeof(RobCarInfo); i++)
	{
	    if(vid == RobCarInfo[i][cMaincar]) return i;
	}
	return -1;
}


new Float:DumpDots[][4] = {
{2185.929931,-2006.645751,13.546875,272.265838},//cp1
{2189.650634,-2009.493286,13.546875,91.157417},//cp2
{2172.834716,-2004.294799,13.546875,351.516540},//cp3
{2168.812744,-2003.572265,13.546875,349.949859},//cp4
{2169.515625,-1999.674316,13.546875,166.334747},//cp5
{2173.453369,-2000.333007,13.546875,169.781463},//cp6
{2171.427246,-1996.324462,13.546875,274.412475},//cp7
{2179.341796,-1992.424926,13.546875,88.603988},//cp8
{2180.991455,-1996.156005,13.546875,357.736450},//cp9
{2175.538330,-1998.142700,13.546875,3.376494},//cp10
{2152.026611,-1990.158935,13.546875,73.877189},//cp11
{2152.869873,-1988.699096,13.546875,349.276397},//cp12
{2155.070312,-1985.381958,13.551346,73.250511},//cp13
{2158.124267,-1983.872558,13.552092,45.676963},//cp14
{2160.205810,-1979.011108,13.552600,138.424484},//cp15
{2157.510009,-1979.196899,13.551942,231.485397},//cp16
{2154.707763,-1980.812011,13.551258,163.804748},//cp17
{2151.703125,-1979.901855,13.546875,165.371444},//cp18
{2148.684814,-1983.068359,13.546875,258.119018},//cp19
{2142.093750,-1973.270507,13.546875,52.280460},//cp20
{2141.241210,-1970.158447,13.554628,151.608108},//cp21
{2137.717285,-1968.192871,13.554628,151.921432},//cp22
{2135.729736,-1971.648071,13.554628,333.656463},//cp23
{2122.785400,-1973.940795,13.546875,43.530433},//cp24
{2119.606445,-1973.909667,13.546875,304.516174},//cp25
{2120.327148,-1970.867065,13.546875,218.662002},//cp26
{2123.598876,-1968.532592,13.546875,231.822143}//cp27
};
new PickupJobDump;
new PickupDriverDump;
new PickupDumpInfo;

new Text3D:Dump3dText;
new Text3D:LoadDump;
new DumpLoad;

enum dumpc
{
	dMaincar,
	dValue,
	Text3D:dText
}
new DumpCar[5][dumpc];

stock GetDumpCar(car)
{
	for(new i; i < sizeof(DumpCar); i++)
	{
	    if(car == DumpCar[i][dMaincar]) return i;
	}
	return -1;
}
// -------
new pickupzagotovki[3];
new pickupstoliL[6];
new pickupstoliR[6];
new sdatzagotovku;
new pickupzavodINFO;
new pickupJOBzavod;
new totalprods;
new Text3D:prods3d;
new slagbfactory;
new slagbclose;
new pickupEnterFact;
new pickupExitFact;
new Text3D:buyprod;
new pickupJOBrazvoz;

new Materials_Get;
new Materials_Deliver;
//------------------------------------------------------------------------------------------------------
new TotalAnswers;
new besthelper[24] = "No";

new PizzaEatPickup[2];

new bool:AdminTPplayers; // Админ ТПшит игроков
new Float:posxTP[3]; // чтоб все в кучу не ТПшились


new RegDayUsers;
new VisitorsDay;
new GetLicens;

new Restart = 0;
new togreport = 1;
new canAD = 1;
new toggow = 1;
new DelayPayCheck[MAX_PLAYERS];
new GangDialogNews[18][11][60],
	GangNewsPickup[18],
    Text3D:Gang3dTextNews[18];
    
new AFKText[MAX_PLAYERS];
new CheckCJRunTimer[MAX_PLAYERS];
new RemovePlayerFromVehicleTimer[MAX_PLAYERS];

new collectorcars[10];
new HelpGamePickup,
	HelpGamePickup2;
//------------------ ГОНКИ ----------------
new bool:RaceOpen; // 1 - если можно зарегаться на гонку, 0 - если нельзя
new RacePrize; // Сколько денег выделится на призы с гонки
new RacersReg; // Сколько человек зарегалось на гонку (макс = 24, мин = 5)

new EnterRaceReg; // пикап входа в здание регистрации на гонку
new ExitRaceReg; // пикап выхода
new RegPickupRace; // пикап регистрации на гонку

new RaceCar[24];  // тачки рейсерские

new TimerRace; // для таймера
new CountRace; // Отсчет

//-----античит-------
new PlayerWeapons[MAX_PLAYERS][47];
//-----античит------
new Text:WelcomeText;
new Text:CarName_Line;
new Text:CarName_Vehicle;
new PlayerText:CarName_Name[MAX_PLAYERS];
new Timer_VehName[MAX_PLAYERS];
new PlayerText:Quest_4_Timer[MAX_PLAYERS];

new bool:dodebug = false;
new ReadPm[MAX_PLAYERS];
new TaimSuppReport[MAX_PLAYERS];//анти флуд в репорт
new Password = 0;
new Tax = 0;
new TaxValue = 0;
new MatsAmmount = 0;
new DrugsPritonAmmount = 0;
new DrugsFarmAmmount = 0;
new StartingPaintballRound = 0;
new AnnouncedPaintballRound = 0;
new PaintballPlayers = 0;
new PaintballRound = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new order[MAX_PLAYERS];
new MatsTime[MAX_PLAYERS];
new JobDuty[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new SchoolSpawn[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new GotPaper[MAX_PLAYERS]; //The player has a paper so he can use /read
new WritingPaper[MAX_PLAYERS]; //Used for onplayertext so he can type in lines
new WritingPaperNumber[MAX_PLAYERS]; //To which Paper in PaperInfo will it be written
new WritingLine[MAX_PLAYERS]; //Used for onplayertext to see which line he's at
new SpawnChange[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new PaperOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new ApprovedLawyer[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new STDPlayer[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gLastCar[MAX_PLAYERS];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new Pobegtime[MAX_PLAYERS];
new DClog[MAX_PLAYERS];



enum ninf
{
	Textad[130],
	Owner[24],
}
new AdvInfo[15][ninf];
new TimeAdv = 0;



enum ProdCar
{
	prodCar,
	prodMax,
	prodNow,
	Text3D:prodCar3d
}
new ProdCarInfo[8][ProdCar];



new Float:FisherJobPlace[12][3] = {
{-1285.175781,829.247558,0.639971},
{-1298.348510,1104.639526,0.641945},
{-994.692199,890.824951,0.640452},
{-878.858703,625.546936,0.643005},
{-890.914123,452.239776,0.640106},
{-994.159729,331.494323,0.639486},
{-1041.882690,107.981628,0.641735},
{-1036.746337,-137.535751,0.640147},
{-1089.935424,-330.808319,0.639882},
{-849.556518,-341.579406,0.639520},
{-519.161254,380.856292,0.643031},
{-724.517517,485.106597,-0.489276}
};




new EnterGlassShop;
new ExitGlassShop;
new GlassPickup;
new Menu:GlassMenu;

new EnterCapsShop;
new CapsPickup;
new Menu:CapsMenu;


new Float:GarageRob[][3] = {
{2736.837646,-2001.733398,13.115471},//LS1
{2078.107910,-2048.191650,13.111628},//LS2
{1361.319946,-1641.650024,12.945888},//LS3

{-1790.963378,1425.239868,6.750012},//SF1
{-1724.033447,-119.500747,3.107596},//SF2
{-1862.815307,-142.925369,11.470240},//SF3

{1023.478454,2366.554931,10.216222},//LV1
{1704.399414,1012.033264,10.216460},//LV2
{1645.164428,755.089172,10.216184}//LV3
};




new Float:CourseLS1[][4] = {
{745.341003,-1389.796386,13.312713, 1.0},//Ostanovka
{731.777343,-1392.080444,13.185115, 0.0},//CP
{599.875305,-1399.304077,13.125521, 0.0},//CP
{468.960266,-1436.280273,22.387374, 0.0},//CP
{441.116546,-1506.140502,30.595153, 0.0},//CP
{442.583374,-1606.368530,25.139137, 0.0},//CP
{466.461181,-1662.973266,24.652860, 1.0},//Ostanovka
{479.593261,-1663.035766,22.991024, 0.0},//CP
{593.850646,-1676.454345,15.902287, 0.0},//CP
{712.612426,-1675.257080,10.371131, 0.0},//CP
{813.200012,-1653.926513,13.109888, 0.0},//CP
{852.975891,-1604.969970,13.193298, 1.0},//Ostanovka
{859.770141,-1595.160522,13.113606, 0.0},//CP
{980.095214,-1574.126098,13.109956, 0.0},//CP
{1167.440307,-1575.065551,13.023223, 0.0},//CP
{1294.966918,-1584.717895,13.109838, 0.0},//CP
{1294.808349,-1727.880615,13.110361, 0.0},//CP
{1314.734130,-1842.563964,13.109885, 0.0},//CP
{1364.821166,-1734.602661,13.109940, 0.0},//CP
{1457.450317,-1737.048706,13.189039, 1.0},//Ostanovka
{1470.778564,-1734.927490,13.109890, 0.0},//CP
{1606.824218,-1734.297485,13.109920, 0.0},//CP
{1735.129028,-1734.060058,13.120353, 0.0},//CP
{1826.526733,-1706.893920,13.189000, 1.0},//Ostanovka
{1824.057983,-1693.873657,13.109892, 0.0},//CP
{1847.351562,-1515.638305,13.098451, 0.0},//CP
{1852.757568,-1333.053222,13.120469, 0.0},//CP
{1802.824584,-1261.198608,13.274922, 1.0},//Ostanovka
{1793.092773,-1270.033325,13.201519, 0.0},//CP
{1717.341796,-1265.901855,13.115510, 0.0},//CP
{1676.851928,-1158.870849,23.383340, 0.0},//CP
{1579.143798,-1124.223022,23.140310, 0.0},//CP
{1440.624511,-1028.924926,23.466083, 1.0},//Ostanovka
{1425.225219,-1031.226806,23.383329, 0.0},//CP
{1342.407592,-1103.792480,23.548158, 0.0},//CP
{1322.789550,-1140.159912,23.383329, 0.0},//CP
{794.441589,-1168.345214,22.659055, 0.0},//CP
{795.153198,-1344.750000,13.109907, 0.0}//CP
};







// Лос сантос 2
new Float:CourseLS2[][4] = {
{778.412536,-1330.230957,13.273521, 0.0},//CP
{762.196838,-1314.390380,13.189024, 1.0},//Ostanovka
{752.259582,-1317.086059,13.117710, 0.0},//CP
{610.194396,-1318.003417,13.449222, 0.0},//CP
{509.929534,-1370.318603,15.767222, 1.0},//Ostanovka
{517.299865,-1384.997924,15.577007, 0.0},//CP
{510.943054,-1413.476318,15.703067, 0.0},//CP
{412.831756,-1468.069702,30.338731, 0.0},//CP
{330.922241,-1548.117797,32.909030, 0.0},//CP
{304.809509,-1581.290893,32.690647, 0.0},//CP
{250.521194,-1550.826293,32.418083, 0.0},//CP
{284.370758,-1483.254882,31.921953, 0.0},//CP
{201.420806,-1521.246337,14.038831, 0.0},//CP
{158.507720,-1537.684448,11.140730, 0.0},//CP
{127.668701,-1584.580200,10.267948, 0.0},//CP
{194.958648,-1739.853637,4.123547, 1.0},//Ostanovka
{209.325119,-1735.460693,4.152278, 0.0},//CP
{340.669555,-1760.889160,4.719606, 0.0},//CP
{420.110656,-1775.403442,5.006902, 0.0},//CP
{473.300598,-1726.298950,10.500037, 0.0},//CP
{586.832580,-1741.093139,12.834581, 0.0},//CP
{662.499328,-1755.605346,13.157086, 0.0},//CP
{798.645141,-1785.734252,12.985880, 0.0},//CP
{998.974487,-1807.889892,13.770305, 0.0},//CP
{1042.208007,-1839.111816,13.181491, 0.0},//CP
{1058.458740,-1854.146972,13.110476, 0.0},//CP
{1207.408203,-1854.505126,13.110774, 0.0},//CP
{1408.808227,-1874.199340,13.109882, 0.0},//CP
{1477.050781,-1877.574829,13.189067, 1.0},//Ostanovka
{1491.162353,-1875.334472,13.109889, 0.0},//CP
{1616.076416,-1874.331909,13.109894, 0.0},//CP
{1650.034545,-1877.921264,13.187183, 1.0},//Ostanovka
{1661.333496,-1874.928710,13.114150, 0.0},//CP
{1691.174072,-1833.101440,13.109891, 0.0},//CP
{1691.669921,-1705.286621,13.109886, 0.0},//CP
{1672.217651,-1590.427612,13.109891, 0.0},//CP
{1520.831542,-1590.073364,13.109894, 0.0},//CP
{1482.743041,-1586.868164,13.188983, 1.0},//Ostanovka
{1472.287963,-1589.756591,13.109924, 0.0},//CP
{1384.277465,-1585.165039,13.091659, 0.0},//CP
{1316.166503,-1554.278930,13.117668, 0.0},//CP
{1359.609985,-1385.595092,13.241273, 0.0},//CP
{1362.416870,-1295.538818,13.166486, 1.0},//Ostanovka
{1360.562622,-1281.119628,13.097980, 0.0},//CP
{1359.590454,-1133.301879,23.383342, 0.0},//CP
{1372.369018,-1000.389099,27.815912, 0.0},//CP
{1344.407958,-927.107788,34.789928, 0.0},//CP
{1141.412597,-942.013671,42.443130, 0.0},//CP
{903.567382,-972.851379,37.418785, 0.0},//CP
{842.194458,-1018.080139,27.287734, 0.0},//CP
{692.645568,-1131.279174,16.280111, 0.0},//CP
{582.314331,-1219.536987,17.415077, 0.0},//CP
{533.021484,-1241.866821,16.299421, 1.0},//Ostanovka
{523.981750,-1251.636108,15.951884, 0.0},//CP
{485.915802,-1312.446411,15.327528, 0.0},//CP
{510.553344,-1370.851806,15.767197, 1.0},//Ostanovka
{517.732788,-1386.610961,15.559610, 0.0},//CP
{555.068908,-1417.383666,15.016713, 0.0},//CP
{704.811462,-1407.858764,13.109708, 0.0},//CP
{799.901000,-1379.846313,13.131772, 0.0},//CP
{786.333740,-1317.632446,13.109890, 0.0}//CP
};







// Межгород ЛС-СФ
new Float:CourseBetweenLSSF[][4] = {
{777.199035,-1327.329589,13.273952, 0.0},//CP
{762.017089,-1314.777587,13.191118, 1.0},//Ostanovka
{750.072692,-1316.943359,13.117704, 0.0},//CP
{615.933288,-1317.132324,13.654239, 0.0},//CP
{528.697143,-1333.951660,14.789239, 0.0},//CP
{413.533477,-1391.794677,31.319747, 0.0},//CP
{400.140777,-1426.753051,33.089538, 0.0},//CP
{443.372619,-1552.618774,27.349897, 0.0},//CP
{466.293701,-1663.163452,24.663999, 1.0},//Ostanovka
{478.982482,-1662.030517,23.126373, 0.0},//CP
{624.850158,-1697.721923,14.876106, 0.0},//CP
{601.852783,-1722.873413,13.463697, 0.0},//CP
{382.694030,-1699.315429,7.392603, 0.0},//CP
{200.834487,-1612.824218,14.149261, 0.0},//CP
{65.165496,-1523.978515,4.704907, 0.0},//CP
{-116.285987,-1472.012084,2.422403, 0.0},//CP
{-138.347717,-1350.159667,1.436200, 1.0},//Ostanovka
{-136.861465,-1334.255615,1.629305, 0.0},//CP
{-57.325553,-1328.100830,9.302855, 0.0},//CP
{-128.110305,-1433.018188,12.536663, 0.0},//CP
{-278.111236,-1627.817016,15.421856, 0.0},//CP
{-376.822021,-1897.328002,26.895408, 0.0},//CP
{-364.282958,-2039.522583,27.957027, 0.0},//CP
{-311.580352,-2241.509277,28.955873, 0.0},//CP
{-198.727127,-2390.762207,33.809181, 0.0},//CP
{-47.848320,-2744.505371,41.079681, 0.0},//CP
{-202.399520,-2821.560791,43.793224, 0.0},//CP
{-452.263031,-2762.122802,66.258987, 0.0},//CP
{-900.515747,-2829.900634,69.984802, 0.0},//CP
{-1119.820068,-2848.951171,67.445861, 0.0},//CP
{-1564.431274,-2771.273681,47.632663, 0.0},//CP
{-1696.286743,-2653.840087,47.810947, 0.0},//CP
{-1786.239868,-2558.264404,54.151161, 0.0},//CP
{-1905.835449,-2536.050537,39.679088, 0.0},//CP
{-1971.745849,-2543.232177,37.456005, 0.0},//CP
{-2096.600341,-2448.062988,30.195827, 0.0},//CP
{-2122.345703,-2422.956542,30.271392, 1.0},//Ostanovka
{-2133.263183,-2418.129394,30.195825, 0.0},//CP
{-2177.612060,-2350.469726,30.195827, 0.0},//CP
{-2196.823486,-2278.191650,30.195846, 0.0},//CP
{-2292.933349,-2221.714843,26.244375, 0.0},//CP
{-2433.589111,-2270.685058,14.182830, 0.0},//CP
{-2515.583984,-2174.917968,29.255746, 0.0},//CP
{-2625.647216,-2061.558837,39.471416, 0.0},//CP
{-2791.625976,-1940.358398,45.400321, 0.0},//CP
{-2887.003906,-1745.500122,26.765050, 0.0},//CP
{-2923.751708,-1509.276245,10.443139, 0.0},//CP
{-2922.016113,-1321.966918,11.431157, 0.0},//CP
{-2893.857421,-1130.518310,9.219326, 0.0},//CP
{-2867.036132,-961.535034,9.219304, 0.0},//CP
{-2860.491210,-754.373168,6.766270, 0.0},//CP
{-2717.784912,-420.084594,7.054957, 0.0},//CP
{-2454.026367,-343.751953,33.405406, 0.0},//CP
{-2219.723876,-350.298461,37.129779, 0.0},//CP
{-2021.287841,-313.373565,34.984123, 0.0},//CP
{-2002.032836,-145.315505,35.438018, 0.0},//CP
{-2000.633056,-116.487777,35.509857, 1.0},//Ostanovka
{-2003.607543,-99.630058,35.309913, 0.0},//CP
{-2004.039672,-22.067470,34.732131, 0.0},//CP
{-2003.332641,87.566398,27.266180, 0.0},//CP
{-1991.646728,116.816139,27.266147, 0.0},//CP
{-1986.887817,156.263961,27.338035, 1.0},//Ostanovka
{-1990.680541,175.005752,27.266139, 0.0},//CP
{-2002.421508,232.441162,28.208929, 0.0},//CP
{-1996.608886,423.855346,34.818183, 1.0},//Ostanovka
{-1999.254394,441.077209,34.742706, 0.0},//CP
{-2028.850708,506.090515,34.742702, 0.0},//CP
{-2187.007812,510.597137,34.742713, 0.0},//CP
{-2228.600341,485.220428,34.742706, 0.0},//CP
{-2255.444824,424.548614,34.742706, 0.0},//CP
{-2261.444091,358.985931,32.845737, 0.0},//CP
{-2255.226562,251.585250,34.891170, 0.0},//CP
{-2260.340820,-89.242057,34.899044, 0.0},//CP
{-2260.463623,-257.632507,40.763515, 0.0},//CP
{-2194.706787,-461.742706,49.252777, 0.0},//CP
{-1946.400268,-583.574645,24.187650, 0.0},//CP
{-1789.417724,-585.313659,16.043888, 0.0},//CP
{-1764.325317,-617.318725,16.401899, 0.0},//CP
{-1714.843872,-748.166503,36.941257, 0.0},//CP
{-1543.742431,-816.647277,54.168823, 0.0},//CP
{-1375.298217,-818.726318,80.658645, 0.0},//CP
{-1206.117553,-746.723999,60.389144, 0.0},//CP
{-1161.567260,-627.546325,39.914672, 0.0},//CP
{-1064.811279,-467.582580,34.287349, 0.0},//CP
{-952.497558,-450.116729,32.524600, 0.0},//CP
{-694.979797,-419.314178,17.136129, 0.0},//CP
{-509.544372,-399.472900,15.890066, 0.0},//CP
{-416.245758,-576.623535,12.236404, 0.0},//CP
{-387.163482,-700.044677,20.416337, 0.0},//CP
{-329.082000,-789.367492,32.646705, 0.0},//CP
{-285.911376,-880.677551,45.805229, 0.0},//CP
{-170.473602,-953.921936,30.696937, 0.0},//CP
{-102.938232,-1135.126220,0.925446, 0.0},//CP
{-117.717094,-1158.071655,2.002864, 1.0},//Ostanovka
{-120.873870,-1173.594726,2.422389, 0.0},//CP
{-147.040756,-1278.953369,2.422416, 0.0},//CP
{-139.937194,-1444.800903,2.422410, 0.0},//CP
{-21.139291,-1520.646728,1.551217, 0.0},//CP
{85.000854,-1541.031005,5.340949, 0.0},//CP
{172.835571,-1539.930053,12.401371, 0.0},//CP
{207.549301,-1488.117553,12.572063, 0.0},//CP
{350.266113,-1388.323364,14.030416, 0.0},//CP
{506.708068,-1284.080200,15.505675, 0.0},//CP
{695.833435,-1156.531250,15.124416, 0.0},//CP
{763.364196,-1061.382080,24.069684, 0.0},//CP
{794.054199,-1082.063354,23.859384, 0.0},//CP
{795.554138,-1180.691284,21.165229, 0.0},//CP
{795.138916,-1274.017700,13.107749, 0.0},//CP
{784.862243,-1317.445068,13.110008, 0.0}//CP
};



// Сан Фиерро
new Float:CourseSF[][4] = {
{799.586120,-1294.375610,13.109888, 0.0},//CP
{799.671447,-1105.310058,23.474264, 0.0},//CP
{767.475463,-1049.560791,23.884790, 0.0},//CP
{687.501403,-1142.074096,15.556345, 0.0},//CP
{612.079467,-1161.177978,22.050527, 0.0},//CP
{431.270202,-1114.081787,27.074298, 0.0},//CP
{308.164154,-1144.982299,22.758563, 0.0},//CP
{167.533096,-1204.973632,16.746328, 0.0},//CP
{-147.340072,-1453.930908,12.532270, 0.0},//CP
{-312.341888,-1738.514892,14.866537, 0.0},//CP
{-349.056182,-2121.112304,28.078823, 0.0},//CP
{-173.046493,-2416.499511,35.453945, 0.0},//CP
{-190.954162,-2822.378417,42.753887, 0.0},//CP
{-469.378601,-2758.915039,66.169044, 0.0},//CP
{-858.893432,-2811.748046,70.074623, 0.0},//CP
{-1077.137695,-2849.401123,67.446174, 0.0},//CP
{-1307.232421,-2869.853759,58.499595, 0.0},//CP
{-1562.525878,-2771.816650,47.597957, 0.0},//CP
{-1985.894653,-2607.837402,61.184345, 0.0},//CP
{-2448.922363,-2417.273193,32.190559, 0.0},//CP
{-2633.079345,-2056.975585,40.037906, 0.0},//CP
{-2890.290283,-1734.823364,25.286672, 0.0},//CP
{-2894.804443,-1133.234741,9.219176, 0.0},//CP
{-2861.489501,-706.567810,6.766169, 0.0},//CP
{-2393.672607,-344.376159,37.184841, 0.0},//CP
{-2004.831665,-287.340393,35.047393, 0.0},//CP
{-2000.703735,-117.279129,35.509956, 1.0},//Ostanovka_PovtorOtsyda
{-2003.439208,-99.878540,35.318798, 0.0},//CP
{-2003.928588,72.102127,28.035352, 0.0},//CP
{-1986.677246,154.716567,27.337980, 1.0},//Ostanovka
{-1990.323364,176.775680,27.266145, 0.0},//CP
{-2002.187744,252.595275,29.937992, 0.0},//CP
{-2000.372436,367.888854,34.742706, 0.0},//CP
{-1996.619140,423.041534,34.818183, 1.0},//Ostanovka
{-1999.607177,440.549407,34.742710, 0.0},//CP
{-1981.781250,600.449218,34.746578, 0.0},//CP
{-1709.724365,690.976318,24.461463, 0.0},//CP
{-1688.298217,726.051635,22.342365, 0.0},//CP
{-1586.732177,726.425659,8.163528, 0.0},//CP
{-1539.200683,758.858276,6.766145, 0.0},//CP
{-1520.827880,923.782714,6.837950, 1.0},//Ostanovka
{-1524.079345,942.218200,6.766136, 0.0},//CP
{-1580.520507,1076.357177,6.766158, 0.0},//CP
{-1645.705078,1263.661499,6.767461, 0.0},//CP
{-1876.153320,1361.575805,6.838330, 1.0},//Ostanovka
{-1888.649169,1347.220458,6.771941, 0.0},//CP
{-1984.125244,1312.871582,6.766171, 0.0},//CP
{-2165.654785,1336.323486,6.765170, 0.0},//CP
{-2308.645019,1358.877197,6.766160, 0.0},//CP
{-2453.906250,1380.362304,6.765552, 0.0},//CP
{-2605.112060,1336.816894,6.839419, 1.0},//Ostanovka
{-2617.445068,1319.670288,6.770421, 0.0},//CP
{-2716.323730,1293.885864,6.778318, 0.0},//CP
{-2864.558593,1221.910644,5.187949, 0.0},//CP
{-2863.309570,997.279663,40.176837, 0.0},//CP
{-2802.266845,829.182189,45.951622, 0.0},//CP
{-2753.637939,792.915893,53.062652, 0.0},//CP
{-2752.270507,643.100708,27.839244, 0.0},//CP
{-2725.510009,562.069641,14.125533, 0.0},//CP
{-2663.520019,558.442199,14.259875, 1.0},//Ostanovka
{-2651.349609,561.452392,14.188019, 0.0},//CP
{-2608.645019,505.902984,14.188029, 0.0},//CP
{-2608.926269,413.288055,13.598796, 0.0},//CP
{-2576.430664,343.516723,8.892261, 0.0},//CP
{-2538.061523,361.262603,19.807853, 0.0},//CP
{-2480.687988,459.440368,28.558580, 0.0},//CP
{-2405.433105,492.618041,29.716999, 1.0},//Ostanovka
{-2391.665527,499.679168,29.201726, 0.0},//CP
{-2365.927978,484.760528,30.249351, 0.0},//CP
{-2295.113037,401.166931,34.742740, 0.0},//CP
{-2255.010009,253.657409,34.891174, 0.0},//CP
{-2256.855224,58.122165,34.898990, 0.0},//CP
{-2265.486572,-135.709625,34.970783, 1.0},//Ostanovka
{-2262.042480,-148.745834,34.898952, 0.0},//CP
{-2230.247558,-192.434188,34.912147, 0.0},//CP
{-2211.345214,-231.131454,35.047405, 0.0},//CP
{-2155.755126,-294.979766,35.149860, 0.0},//CP
{-2052.423339,-295.747070,35.148925, 0.0},//CP
{-2003.361328,-264.494598,35.129661, 0.0}//CP
};

enum Buss
{
	BusCar,
	BusPrice,
	BusDriver
}
new BusInfo[11][Buss];

stock GetBusID(vid)
{
	for(new i; i < sizeof(BusInfo); i ++)
	{
	    if(vid == BusInfo[i][BusCar]) return i;
	}
	return -1;
}

new BusTimer[MAX_PLAYERS] = {-1,...}; // Таймер, если игрок не вернулся в автобус через 15 сек, то работа заканчивается
new StationTimer[MAX_PLAYERS] = {-1,...}; // Таймер когда ждет на остановке




new Float:SpawnPeint[15][4] = {
{-1134.981933,1025.288574,1345.746459, 0.0},
{-1133.297607,1034.134155,1345.738891, 0.0},
{-1135.823608,1066.550048,1345.790893, 0.0},
{-1133.547729,1081.972656,1349.492065, 0.0},
{-1132.045410,1090.868530,1345.788330, 0.0},
{-1069.146972,1090.548828,1343.456542, 0.0},
{-1029.795898,1077.562133,1343.216186, 0.0},
{-1020.503540,1047.897338,1342.892211, 0.0},
{-973.883728,1093.338012,1344.979980, 0.0},
{-969.668212,1042.127319,1345.057983, 0.0},
{-973.627441,1028.276855,1345.044433, 0.0},
{-972.853393,1033.513183,1348.738403, 0.0},
{-1016.169555,1049.205444,1342.404907, 0.0},
{-1057.711303,1025.141967,1343.670654, 0.0},
{-1132.172729,1028.931274,1349.180175, 0.0}
};


new Float:FactoryPeint[15][4] = {
{2545.934570,2838.317138,10.820312, 352.503295},//1 Завод
{2540.819335,2817.580810,10.820312, 326.182952},//2
{2555.548339,2805.945068,10.820312, 208.295913},//3
{2572.739746,2849.099365,10.820312, 228.108596},//4
{2592.046386,2846.622070,10.820312, 258.743103},//5
{2604.422363,2806.104492,10.820312, 352.358245},//6
{2618.082275,2821.028808,10.820312, 356.263183},//7
{2596.978515,2802.221435,10.820312, 180.071334},//8
{2669.701660,2799.503906,14.255933, 91.156974},//9
{2671.809082,2786.835449,10.820312, 109.353912},//10
{2668.285400,2756.758544,10.820312, 92.457138},//11
{2670.873046,2750.298583,10.820312, 85.250480},//12
{2649.719482,2772.193603,19.322219, 306.419128},//13
{2632.811523,2750.472656,23.822219, 327.099334},//14
{2629.341796,2779.108886,23.822219, 0.626200}//15
};



new Float:FarmPeint[15][4] = {
{-65.033569,97.406028,3.117187,274.819030},//1 Ферма
{-39.352069,100.288246,3.117187,199.931564},//2
{-42.143707,54.039867,6.484375,183.324798},//3
{-52.419483,57.552707,3.110269,249.462173},//4
{-96.050712,49.500885,3.117187, 342.0},//5
{-51.587074,0.582972,3.117187,237.892105},//6
{-104.002517,-16.875675,3.109395,243.218780},//7
{-89.607391,-25.026374,6.484375,179.947647},//8
{-92.314926,-55.462360,3.117187,296.196014},//9
{-119.249687,-89.975990,3.118082,38.006923},//10
{-122.564071,-94.317375,6.514017,275.829162},//11
{-96.791099,-94.303802,3.118082,249.195556},//12
{-139.566406,-95.954254,8.796907,29.906902},//13
{-71.227661,-110.639030,3.117187,339.796508},//14
{-56.321098,-67.908958,3.117187,304.943603}//15
};

new Float:VilPeint[15][4] = {
{-572.535034,-175.727371,78.406250,44.077030},//1 Деревня
{-566.781799,-180.324386,78.406250,197.515899},//2
{-551.101440,-195.598175,78.406250,294.409301},//3
{-552.289489,-181.578720,78.406250,220.171997},//4
{-520.775756,-207.197463,78.406250,48.487030},//5
{-488.200775,-170.851562,78.210937,182.258209},//6
{-473.370513,-171.372879,78.210937,177.558303},//7
{-538.422302,-104.069869,63.296875,301.326049},//8
{-488.059783,-91.575927,60.906414,350.519866},//9
{-470.549346,-77.593063,60.288398,0.546438},//10
{-436.458404,-59.665889,58.875000,181.654937},//11
{-541.237365,-60.388984,62.992187,270.329193},//12
{-545.706115,-74.486305,62.859375,232.728805},//13
{-575.432006,-49.154865,64.823226,170.325744},//14
{-620.123413,-98.017951,65.377807,6.619298}//15
};


enum paintl
{
	Killername[24],
	KillsPoint,
	DeathsPoint,
	DamagePoint,
	PlayerID, // -1 если нет игрока под этим номером
	Sortirovan
}
new PaintList[15][paintl];

new mesto[15];
new EnterPaint; // вход на пейнт
new ExitPaint; // выход на улицу
new RegPaint; // пикап регистрации
new PeintMap; // карта

new bool:PaintOpenReg = false; // Открыта или закрыта регистрация
new PeintMoney; // Сколько денег выделится на приз
new PeintTimer; // Для таймера
new PeintCount = 10; // Для отсчета времени


new VehiclesName[][] =
{
   "Landstalker",
   "Bravura",
   "Buffalo",
   "Linerunner",
   "Pereniel",
   "Sentinel",
   "Dumper",
   "Firetruck",
   "Trashmaster",
   "Stretch",
   "Manana",
   "Infernus",
   "Voodoo",
   "Pony",
   "Mule",
   "Cheetah",
   "Ambulance",
   "Leviathan",
   "Moonbeam",
   "Esperanto",
   "Taxi",
   "Washington",
   "Bobcat",
   "Mr Whoopee",
   "BF Injection",
   "Hunter",
   "Premier",
   "Enforcer",
   "Securicar",
   "Banshee",
   "Predator",
   "Bus",
   "Rhino",
   "Barracks",
   "Hotknife",
   "Trailer",
   "Previon",
   "Coach",
   "Cabbie",
   "Stallion",
   "Rumpo",
   "RC Bandit",
   "Romero",
   "Packer",
   "Monster Truck",
   "Admiral",
   "Squalo",
   "Seasparrow",
   "Pizzaboy",
   "Tram",
   "Trailer",
   "Turismo",
   "Speeder",
   "Reefer",
   "Tropic",
   "Flatbed",
   "Yankee",
   "Caddy",
   "Solair",
   "Berkley's RC Van",
   "Skimmer",
   "PCJ-600",
   "Faggio",
   "Freeway",
   "RC Baron",
   "RC Raider",
   "Glendale",
   "Oceanic",
   "Sanchez",
   "Sparrow",
   "Patriot",
   "Quad",
   "Coastguard",
   "Dinghy",
   "Hermes",
   "Sabre",
   "Rustler",
   "ZR-350",
   "Walton",
   "Regina",
   "Comet",
   "BMX",
   "Burrito",
   "Camper",
   "Marquis",
   "Baggage",
   "Dozer",
   "Maverick",
   "News Chopper",
   "Rancher",
   "FBI Rancher",
   "Virgo",
   "Greenwood",
   "Jetmax",
   "Hotring",
   "Sandking",
   "Blista Compact",
   "Police Maverick",
   "Boxville",
   "Benson",
   "Mesa",
   "RC Goblin",
   "Hotring Racer",
   "Hotring Racer",
   "Bloodring Banger",
   "Rancher",
   "Super GT",
   "Elegant",
   "Journey",
   "Bike",
   "Mountain Bike",
   "Beagle",
   "Cropdust",
   "Stunt",
   "Tanker",
   "RoadTrain",
   "Nebula",
   "Majestic",
   "Buccaneer",
   "Shamal",
   "Hydra",
   "FCR-900",
   "NRG-500",
   "HPV1000",
   "Cement Truck",
   "Tow Truck",
   "Fortune",
   "Cadrona",
   "FBI Truck",
   "Willard",
   "Forklift",
   "Tractor",
   "Combine",
   "Feltzer",
   "Remington",
   "Slamvan",
   "Blade",
   "Freight",
   "Streak",
   "Vortex",
   "Vincent",
   "Bullet",
   "Clover",
   "Sadler",
   "Firetruck",
   "Hustler",
   "Intruder",
   "Primo",
   "Cargobob",
   "Tampa",
   "Sunrise",
   "Merit",
   "Utility",
   "Nevada",
   "Yosemite",
   "Windsor",
   "Monster Truck",
   "Monster Truck",
   "Uranus",
   "Jester",
   "Sultan",
   "Stratum",
   "Elegy",
   "Raindance",
   "RC Tiger",
   "Flash",
   "Tahoma",
   "Savanna",
   "Bandito",
   "Freight",
   "Trailer",
   "Kart",
   "Mower",
   "Duneride",
   "Sweeper",
   "Broadway",
   "Tornado",
   "AT-400",
   "DFT-30",
   "Huntley",
   "Stafford",
   "BF-400",
   "Newsvan",
   "Tug",
   "Trailer",
   "Emperor",
   "Wayfarer",
   "Euros",
   "Hotdog",
   "Club",
   "Trailer",
   "Trailer",
   "Andromada",
   "Dodo",
   "RC Cam",
   "Launch",
   "Police Car (LSPD)",
   "Police Car (SFPD)",
   "Police Car (LVPD)",
   "Police Ranger",
   "Picador",
   "S.W.A.T. Van",
   "Alpha",
   "Phoenix",
   "Glendale",
   "Sadler",
   "Luggage Trailer",
   "Luggage Trailer",
   "Stair Trailer",
   "Boxville",
   "Farm Plow",
   "Utility Trailer"
};
/*
new Float:MaxVehicleSpeed[] = {
{158.000000}, // 400
{151.000000}, // 401
{186.000000}, // 402
{110.000000}, // 403
{133.000000}, // 404
{164.000000}, // 405
{110.000000}, // 406
{148.000000}, // 407
{100.000000}, // 408
{158.000000}, // 409
{130.000000}, // 410
{222.000000}, // 411
{169.000000}, // 412
{110.000000}, // 413
{105.000000}, // 414
{192.000000}, // 415
{154.000000}, // 416
{125.000000}, // 417
{115.000000}, // 418
{149.000000}, // 419
{145.000000}, // 420
{154.000000}, // 421
{140.000000}, // 422
{99.000000}, // 423
{135.000000}, // 424
{207.000000}, // 425
{173.000000}, // 426
{165.000000}, // 427
{157.000000}, // 428
{202.000000}, // 429
{184.000000}, // 430
{130.000000}, // 431
{116.000000}, // 432
{110.000000}, // 433
{167.000000}, // 434
{200.000000}, // 435
{149.000000}, // 436
{158.000000}, // 437
{139.000000}, // 438
{162.000000}, // 439
{136.000000}, // 440
{136.000000}, // 441
{139.000000}, // 442
{126.000000}, // 443
{110.000000}, // 444
{164.000000}, // 445
{240.000000}, // 446
{120.000000}, // 447
{186.000000}, // 448
{120.000000}, // 449
{120.000000}, // 450
{194.000000}, // 451
{181.000000}, // 452
{59.000000}, // 453
{124.000000}, // 454
{158.000000}, // 455
{106.000000}, // 456
{95.000000}, // 457
{157.000000}, // 458
{136.000000}, // 459
{200.000000}, // 460
{241.000000}, // 461
{178.000000}, // 462
{204.000000}, // 463
{120.000000}, // 464
{120.000000}, // 465
{147.000000}, // 466
{140.000000}, // 467
{202.000000}, // 468
{109.000000}, // 469
{157.000000}, // 470
{124.000000}, // 471
{200.000000}, // 472
{200.000000}, // 473
{149.000000}, // 474
{173.000000}, // 475
{290.000000}, // 476
{186.000000}, // 477
{118.000000}, // 478
{140.000000}, // 479
{184.000000}, // 480
{96.000000}, // 481
{158.000000}, // 482
{123.000000}, // 483
{200.000000}, // 484
{99.000000}, // 485
{64.000000}, // 486
{180.000000}, // 487
{180.000000}, // 488
{140.000000}, // 489
{157.000000}, // 490
{149.000000}, // 491
{140.000000}, // 492
{220.000000}, // 493
{215.000000}, // 494
{176.000000}, // 495
{163.000000}, // 496
{200.000000}, // 497
{108.000000}, // 498
{123.000000}, // 499
{140.000000}, // 500
{140.000000}, // 501
{215.000000}, // 502
{215.000000}, // 503
{173.000000}, // 504
{140.000000}, // 505
{180.000000}, // 506
{166.000000}, // 507
{108.000000}, // 508
{108.000000}, // 509
{130.000000}, // 510
{300.000000}, // 511
{300.000000}, // 512
{300.000000}, // 513
{121.000000}, // 514
{142.000000}, // 515
{157.000000}, // 516
{157.000000}, // 517
{164.000000}, // 518
{300.000000}, // 519
{300.000000}, // 520
{245.000000}, // 521
{257.000000}, // 522
{181.000000}, // 523
{130.000000}, // 524
{160.000000}, // 525
{158.000000}, // 526
{149.000000}, // 527
{176.000000}, // 528
{149.000000}, // 529
{60.000000}, // 530
{70.000000}, // 531
{110.000000}, // 532
{167.000000}, // 533
{169.000000}, // 534
{158.000000}, // 535
{173.000000}, // 536
{300.000000}, // 537
{300.000000}, // 538
{120.000000}, // 539
{149.000000}, // 540
{203.000000}, // 541
{164.000000}, // 542
{151.000000}, // 543
{148.000000}, // 544
{147.000000}, // 545
{149.000000}, // 546
{143.000000}, // 547
{300.000000}, // 548
{154.000000}, // 549
{145.000000}, // 550
{158.000000}, // 551
{121.000000}, // 552
{300.000000}, // 553
{144.000000}, // 554
{158.000000}, // 555
{111.000000}, // 556
{110.000000}, // 557
{156.000000}, // 558
{178.000000}, // 559
{169.000000}, // 560
{154.000000}, // 561
{178.000000}, // 562
{300.000000}, // 563
{140.000000}, // 564
{165.000000}, // 565
{160.000000}, // 566
{173.000000}, // 567
{146.000000}, // 568
{300.000000}, // 569
{300.000000}, // 570
{93.000000}, // 571
{60.000000}, // 572
{111.000000}, // 573
{60.000000}, // 574
{158.000000}, // 575
{158.000000}, // 576
{300.000000}, // 577
{130.000000}, // 578
{158.000000}, // 579
{153.000000}, // 580
{178.000000}, // 581
{136.000000}, // 582
{86.000000}, // 583
{100.000000}, // 584
{153.000000}, // 585
{201.000000}, // 586
{165.000000}, // 587
{108.000000}, // 588
{163.000000}, // 589
{300.000000}, // 590
{300.000000}, // 591
{300.000000}, // 592
{300.000000}, // 593
{300.000000}, // 594
{300.000000}, // 595
{176.000000}, // 596
{176.000000}, // 597
{176.000000}, // 598
{158.000000}, // 599
{151.000000}, // 600
{110.000000}, // 601
{169.000000}, // 602
{171.000000}, // 603
{147.000000}, // 604
{151.000000}, // 605
{151.000000}, // 606
{151.000000}, // 607
{151.000000}, // 608
{108.000000}, // 609
{108.000000}, // 610
{108.000000} // 611
};
*/


new aWeaponNames[][32] = {
{"Кулаки"}, 		 // 0
{"Кастет"}, 		 // 1
{"Клюшка"}, 				 // 2
{"Дубинка"},			 // 3
{"Нож"},					 // 4
{"Бита"}, 			 // 5
{"Лопата"}, 				 // 6
{"Кий"},				 // 7
{"Катана"}, 				 // 8
{"Бензопила"}, 				 // 9
{"Самотык"}, 			 // 10
{"Вибратор"},		 // 11
{"Вибратор"}, 	 // 12
{"Вибратор"}, 	 // 13
{"Цветы"}, 				 // 14
{"Трость"},					 // 15
{"Гранаты"}, 				 // 16
{"Слезоточивый газ"}, // 17
{"Молотов"}, // 18
{" "}, // 19
{" "}, // 20
{" "}, // 21
{"9mm"}, // 22
{"Кольт с глушителем"}, // 23
{"Deagle"}, // 24
{"Shotgun"}, // 25
{"Обрезы"}, // 26
{"Спаз"}, // 27
{"Узи"}, // 28
{"MP5"}, // 29
{"AK-47"}, // 30
{"m4"}, // 31
{"Тек9"}, // 32
{"Сельская винтовка"}, // 33
{"Снайперская винтовка"}, // 34
{"Ракетница"}, // 35
{"Самонаводящиеся ракеты"}, // 36
{"Огнемет"}, // 37
{"Миниган"}, // 38
{"Ранцевый заряд"}, // 39
{"Детонатор"}, // 40
{"Балончик"}, // 41
{"Огнетушитель"}, // 42
{"Камера"}, // 43
{"Очки н.в."}, // 44
{"Инф. очки"}, // 45
{"Парашют"}, // 46
{"Пистолет"} // 47
};

new Float:RaceCars[24][4] = {
{-1527.716308,-588.849243,13.819496,40.746200},
{-1524.830322,-586.318908,13.825468,42.146369},
{-1522.531860,-584.013916,13.825748,43.489299},
{-1520.195068,-581.667846,13.808322,43.037284},
{-1517.471801,-579.067260,13.821521,44.265872},
{-1514.673461,-576.390991,13.816168,44.530166},
{-1508.189086,-578.932373,13.819718,68.079399},
{-1511.409057,-582.294616,13.823135,67.358741},
{-1514.059204,-585.000976,13.825918,71.576927},
{-1516.664062,-587.773010,13.825106,67.334098},
{-1519.882080,-590.085327,13.819635,65.770980},
{-1522.630126,-592.946716,13.823844,63.363826},
{-1501.577270,-581.428466,13.818089,71.986236},
{-1504.963745,-584.457641,13.825899,74.790679},
{-1507.387207,-587.203552,13.822689,74.048721},
{-1509.821655,-589.989013,13.826985,69.284378},
{-1513.788574,-592.637329,13.820346,68.321434},
{-1516.634887,-595.422912,13.821488,68.939491},
{-1495.987060,-582.763732,13.827141,81.269485},
{-1498.825805,-585.888305,13.826364,77.800666},
{-1501.720214,-588.833068,13.821851,72.810615},
{-1504.212158,-591.658325,13.814654,74.043403},
{-1507.795654,-594.422668,13.821239,74.488777},
{-1510.771240,-597.182617,13.823968,75.105796}
};
new Float:RaceCarsLV[24][4] = {
{2079.022949, 849.262023,6.458413,90.000},
{2078.808105, 854.758972,6.462305,90.000},
{2086.937011, 854.825744,6.462404,90.000},
{2086.855712, 849.429321,6.454481,90.000},
{2095.323486, 849.394104,6.454579,90.000},
{2095.355468, 854.977416,6.462354,90.000},
{2105.320068, 854.850341,6.461755,90.000},
{2104.638427, 849.595886,6.454531,90.000},
{2113.548095, 849.756774,6.454629,90.000},
{2113.878173, 854.962402,6.462354,90.000},
{2122.407714, 855.037109,6.462075,90.000},
{2122.181884, 849.713439,6.469910,90.000},
{2079.366455,830.840637,6.462303,90.000},
{2079.172607,837.311157,6.469921,90.000},
{2087.090087,837.223205,6.470065,90.000},
{2087.394287,831.130126,6.457734,90.000},
{2095.208496,831.187377,6.462305,90.000},
{2095.564697,837.053344,6.470117,90.000},
{2103.468994,837.113464,6.470067,90.000},
{2103.218261,831.243591,6.461963,90.000},
{2112.385009,831.456604,6.459598,90.000},
{2112.491210,837.272155,6.470015,90.000},
{2120.600585,837.089660,6.470114,90.000},
{2120.829589,831.411437,6.462405,90.000}
};
new Float:RaceCarsDesert[24][4] = {
{375.115295,1011.701782,28.304723,284.247558},
{373.411224,1017.354736,28.212297,282.464355},
{365.021209,1014.954284,28.227033,284.288177},
{366.389160,1009.765686,28.312837,283.542419},
{358.581756,1007.955078,28.311779,283.223449},
{357.491607,1013.247070,28.228843,282.403900},
{350.799926,1012.176086,28.077245,279.885803},
{352.076965,1006.703552,28.200244,282.489074},
{344.186279,1005.151550,28.159446,281.559844},
{342.966918,1010.482299,28.071649,282.595184},
{335.312652,1008.917358,28.067052,279.879455},
{336.162109,1003.349670,28.157506,281.422119},
{373.121643,1021.992492,28.123847,257.201965},
{375.473815,1005.944091,29.067861,296.673889},
{364.582458,1021.353881,28.174505,280.723327},
{368.136016,1003.330200,29.217658,284.058288},
{360.055633,1002.014282,29.161241,280.626678},
{356.739471,1019.701904,27.896104,280.417755},
{349.675659,1017.981933,27.968832,283.563262},
{353.079162,1000.906738,29.113008,280.444335},
{345.071502,999.423217,29.164760,281.386535},
{342.254760,1016.009216,28.044246,284.156127},
{334.075347,1013.845092,28.320302,283.096038},
{336.776611,997.842285,29.151193,280.712554}
};
new Float:RaceCarsAllSA[24][4] = {
{2835.951416,-1903.912475,10.663390,0.467927},
{2840.013916,-1904.061279,10.664995,2.224575},
{2840.332031,-1912.160644,10.663759,0.544286},
{2836.002685,-1911.821411,10.647659,356.736419},
{2835.877441,-1919.498535,10.662407,359.297515},
{2840.353515,-1919.582763,10.664462,0.595612},
{2840.103515,-1926.948486,10.665105,359.651977},
{2835.930908,-1926.892211,10.663595,359.140991},
{2835.834716,-1934.316040,10.665431,359.558105},
{2840.195556,-1934.292358,10.663634,1.322860},
{2840.303710,-1941.662475,10.665081,0.000000},
{2835.996582,-1941.748901,10.664426,0.873348},
{2820.005859,-1905.754028,10.665478,359.347625},
{2825.317138,-1905.762207,10.665069,359.827545},
{2825.301757,-1913.555786,10.665427,0.046393},
{2820.329833,-1913.590942,10.664903,0.060966},
{2820.235839,-1921.123046,10.665378,359.739440},
{2825.294433,-1921.142456,10.665379,0.633038},
{2825.366943,-1928.341186,10.665271,0.541224},
{2820.451171,-1928.616699,10.664490,359.803161},
{2820.415283,-1936.365112,10.663417,1.918058},
{2825.331054,-1936.406250,10.665376,358.956298},
{2825.430664,-1944.589721,10.668019,359.673156},
{2820.605224,-1944.426635,10.665458,358.973876}
};

new Float:RaceCarsDamba[24][4] = {
{-533.979980,2000.786132,60.548202,231.839981},
{-541.072509,2006.020019,60.530315,232.084503},
{-547.540954,2011.374511,60.543289,231.055908},
{-554.133483,2016.227905,60.538398,233.534652},
{-560.502136,2020.554443,60.540634,236.081054},
{-567.115417,2025.110107,60.538387,236.428039},
{-574.502929,2029.616821,60.536876,238.045532},
{-581.701660,2034.094726,60.527862,238.144165},
{-589.966979,2038.406616,60.536281,241.926773},
{-542.331298,1990.028320,60.538440,229.443084},
{-548.895996,1995.441406,60.539962,228.110946},
{-554.382751,2000.737670,60.553852,231.212738},
{-560.963195,2005.477905,60.586536,235.372650},
{-566.920349,2010.096435,60.575267,236.652801},
{-573.594299,2014.199462,60.565860,239.235046},
{-580.450744,2018.483398,60.543754,239.840606},
{-587.552185,2022.745239,60.548782,241.176574},
{-594.956970,2026.643554,60.543109,242.564758},
{-596.408508,2035.687744,60.732913,241.158691},
{-589.318786,2031.458984,60.733810,241.887847},
{-582.078796,2027.484375,60.730945,239.782791},
{-574.628906,2022.876831,60.738857,235.495483},
{-567.111999,2017.564208,60.726001,236.329391},
{-558.543273,2011.655761,60.733341,236.115493}
};
new Float:RaceCarsBikes[24][4] = {
{1078.691528,1787.425537,10.383126,127.979820},
{1078.402465,1790.375854,10.380346,129.752624},
{1078.070312,1793.467041,10.377052,134.166702},
{1077.764648,1797.264282,10.381436,143.668487},
{1076.312866,1801.738525,10.389402,181.268692},
{1074.156738,1801.464111,10.381702,177.807601},
{1072.160888,1801.717529,10.391636,174.241989},
{1069.824218,1801.447387,10.378088,177.145568},
{1067.512207,1801.536376,10.386820,177.888198},
{1065.039428,1801.660278,10.388515,179.821929},
{1062.551025,1801.628173,10.386206,180.650070},
{1059.873779,1801.543823,10.375293,189.032836},
{1057.515502,1801.420654,10.380457,190.297256},
{1054.817993,1801.354125,10.389141,181.226333},
{1052.248046,1801.365112,10.388427,179.736389},
{1049.749877,1801.426025,10.388163,179.742782},
{1047.185668,1801.281982,10.381252,176.748611},
{1044.526245,1801.442749,10.389004,182.598922},
{1041.732666,1801.261962,10.389326,181.546188},
{1039.012573,1801.330932,10.391707,175.011795},
{1036.882690,1796.305541,10.387879,216.649871},
{1036.898925,1793.558471,10.386349,223.457977},
{1036.756347,1790.347045,10.386890,232.090270},
{1036.547729,1787.269287,10.379837,230.780242}
};


new PizzaBoyPickup;
new PizzaBoy[8];
new Float:PizzaCourse[19][3] = {
	{-2249.313476,-89.153999,34.767677},
	{-2248.251464,129.698593,34.772880},
	{-2073.676025,225.355514,35.431709},
	{-1817.880249,612.828735,34.611068},
	{-1703.765991,688.902893,24.482826},
	{-1919.201782,720.809509,45.041492},
	{-2273.590576,692.125000,48.885757},
	{-2583.338867,572.483520,14.055236},
	{-2651.081542,257.337249,3.776296},
	{-2626.126464,214.085205,4.064328},
	{-2558.557373,193.697647,5.741925},
	{-2607.813476,-7.347251,3.776645},
	{-2219.964111,102.034011,34.916526},
	{-1987.136108,145.580154,27.130649},
	{-1921.809326,301.005615,40.643318},
	{-2032.623901,-79.313621,34.919757},
	{-2014.167968,-29.305807,34.825359},
	{-2022.076904,67.180564,28.070253},
	{-2173.011474,-41.805492,34.912490}
};
new Float:PizzaCourse2[19][3] = {
	{-2219.964111,102.034011,34.916526},
	{-1987.136108,145.580154,27.130649},
	{-1921.809326,301.005615,40.643318},
	{-2032.623901,-79.313621,34.919757},
	{-2014.167968,-29.305807,34.825359},
	{-2022.076904,67.180564,28.070253},
	{-2173.011474,-41.805492,34.912490},
	{-2249.313476,-89.153999,34.767677},
	{-2248.251464,129.698593,34.772880},
	{-2073.676025,225.355514,35.431709},
	{-1817.880249,612.828735,34.611068},
	{-1703.765991,688.902893,24.482826},
	{-1919.201782,720.809509,45.041492},
	{-2273.590576,692.125000,48.885757},
	{-2583.338867,572.483520,14.055236},
	{-2651.081542,257.337249,3.776296},
	{-2626.126464,214.085205,4.064328},
	{-2558.557373,193.697647,5.741925},
	{-2607.813476,-7.347251,3.776645}
};
new Float:PizzaCourse3[19][3] = {
	{-2273.590576,692.125000,48.885757},
	{-2583.338867,572.483520,14.055236},
	{-2651.081542,257.337249,3.776296},
	{-2626.126464,214.085205,4.064328},
	{-2558.557373,193.697647,5.741925},
	{-2607.813476,-7.347251,3.776645},
	{-2219.964111,102.034011,34.916526},
	{-1987.136108,145.580154,27.130649},
	{-1921.809326,301.005615,40.643318},
	{-2032.623901,-79.313621,34.919757},
	{-2249.313476,-89.153999,34.767677},
	{-2248.251464,129.698593,34.772880},
	{-2073.676025,225.355514,35.431709},
	{-1817.880249,612.828735,34.611068},
	{-1703.765991,688.902893,24.482826},
	{-1919.201782,720.809509,45.041492},
	{-2014.167968,-29.305807,34.825359},
	{-2022.076904,67.180564,28.070253},
	{-2173.011474,-41.805492,34.912490}
};





new Float:AutoSchoolTrash[][3] = {
{-2083.10009766,-77.30000305,34.59999847}, //object(cj_urb_rub_3) (1)
{-2054.89990234,-71.59999847,34.50000000}, //object(cj_urb_rub_3) (2)
{-2018.30004883,-77.69999695,34.59999847}, //object(cj_urb_rub_3) (3)
{-2014.30004883,-93.40000153,34.79999924}, //object(cj_urb_rub_3) (4)
{-2006.80004883,-122.80000305,35.00000000}, //object(cj_urb_rub_3) (5)
{-1998.59997559,-154.60000610,35.20000076}, //object(cj_urb_rub_3) (6)
{-1998.09997559,-183.39999390,35.20000076}, //object(cj_urb_rub_3) (7)
{-2006.00000000,-205.60000610,35.00000000}, //object(cj_urb_rub_3) (8)
{-1998.59997559,-235.60000610,35.09999847}, //object(cj_urb_rub_3) (9)
{-1997.90002441,-259.20001221,34.90000153}, //object(cj_urb_rub_3) (10)
{-2008.80004883,-282.10000610,34.59999847}, //object(cj_urb_rub_3) (11)
{-2022.90002441,-285.00000000,34.79999924}, //object(cj_urb_rub_3) (12)
{-2053.69995117,-284.39999390,34.90000153}, //object(cj_urb_rub_3) (13)
{-2071.69995117,-291.39999390,34.70000076}, //object(cj_urb_rub_3) (14)
{-2119.80004883,-294.29998779,34.70000076}, //object(cj_urb_rub_3) (15)
{-2164.89990234,-285.70001221,34.79999924}, //object(cj_urb_rub_3) (16)
{-2205.39990234,-285.50000000,34.59999847}, //object(cj_urb_rub_3) (17)
{-2208.69995117,-269.00000000,34.59999847}, //object(cj_urb_rub_3) (18)
{-2217.00000000,-241.39999390,34.79999924}, //object(cj_urb_rub_3) (19)
{-2216.80004883,-213.10000610,34.79999924}, //object(cj_urb_rub_3) (20)
{-2208.00000000,-197.80000305,34.50000000}, //object(cj_urb_rub_3) (21)
{-2198.19995117,-189.00000000,34.50000000}, //object(cj_urb_rub_3) (22)
{-2180.50000000,-175.10000610,34.59999847}, //object(cj_urb_rub_3) (23)
{-2174.60009766,-145.10000610,34.59999847}, //object(cj_urb_rub_3) (24)
{-2168.80004883,-123.90000153,34.50000000}, //object(cj_urb_rub_3) (25)
{-2160.80004883,-104.30000305,34.59999847}, //object(cj_urb_rub_3) (26)
{-2167.10009766,-75.50000000,34.50000000}, //object(cj_urb_rub_3) (27)
{-2148.50000000,-63.79999924,34.59999847}, //object(cj_urb_rub_3) (28)
{-2121.89990234,-64.09999847,34.59999847} //object(cj_urb_rub_3) (29)

};

new Float:BusBaseTrash[][3] = {
{767.59997559,-1387.50000000,12.89999962}, //object(rubbish_box1) (1)
{763.29998779,-1394.40002441,12.60000038}, //object(rubbish_box1) (2)
{758.09997559,-1399.59997559,12.60000038}, //object(rubbish_box1) (3)
{744.79998779,-1399.00000000,12.60000038}, //object(rubbish_box1) (4)
{735.09997559,-1403.40002441,12.60000038}, //object(rubbish_box1) (5)
{723.79998779,-1398.00000000,12.60000038}, //object(rubbish_box1) (6)
{712.40002441,-1393.59997559,12.69999981}, //object(rubbish_box1) (7)
{708.70001221,-1407.00000000,12.60000038}, //object(rubbish_box1) (8)
{694.00000000,-1388.19995117,12.89999962}, //object(rubbish_box1) (9)
{686.00000000,-1392.40002441,12.69999981}, //object(rubbish_box1) (10)
{675.29998779,-1397.00000000,12.69999981}, //object(rubbish_box1) (11)
{661.50000000,-1393.30004883,12.69999981}, //object(rubbish_box1) (12)
{642.09997559,-1387.90002441,12.80000019}, //object(rubbish_box1) (13)
{637.79998779,-1375.50000000,12.80000019}, //object(rubbish_box1) (14)
{643.90002441,-1352.00000000,12.80000019}, //object(rubbish_box1) (15)
{644.59997559,-1328.30004883,12.80000019}, //object(rubbish_box1) (16)
{647.79998779,-1321.90002441,12.60000038}, //object(rubbish_box1) (17)
{654.90002441,-1318.59997559,12.60000038}, //object(rubbish_box1) (18)
{662.00000000,-1321.90002441,12.69999981}, //object(rubbish_box1) (19)
{674.09997559,-1326.50000000,12.89999962}, //object(rubbish_box1) (20)
{685.00000000,-1326.59997559,13.00000000}, //object(rubbish_box1) (21)
{701.90002441,-1312.50000000,12.89999962}, //object(rubbish_box1) (22)
{714.59997559,-1316.90002441,12.69999981}, //object(rubbish_box1) (23)
{719.79998779,-1321.50000000,12.69999981}, //object(rubbish_box1) (24)
{738.20001221,-1317.19995117,12.60000038}, //object(rubbish_box1) (25)
{756.90002441,-1327.09997559,12.80000019}, //object(rubbish_box1) (26)
{772.40002441,-1316.40002441,12.60000038}, //object(rubbish_box1) (27)
{787.59997559,-1326.80004883,12.80000019}, //object(rubbish_box1) (28)
{798.09997559,-1338.00000000,12.60000038} //object(rubbish_box1) (29)
};

new Float:BankLSTrash[][3] = {
{1558.90002441,-1084.30004883,23.00000000}, //object(cj_urb_rub_3) (1)
{1558.09997559,-1068.90002441,22.89999962}, //object(cj_urb_rub_3) (2)
{1550.30004883,-1057.00000000,22.89999962}, //object(cj_urb_rub_3) (3)
{1543.80004883,-1042.40002441,23.10000038}, //object(cj_urb_rub_3) (4)
{1530.19995117,-1042.59997559,22.89999962}, //object(cj_urb_rub_3) (5)
{1519.50000000,-1046.90002441,23.10000038}, //object(cj_urb_rub_3) (6)
{1508.09997559,-1042.59997559,23.10000038}, //object(cj_urb_rub_3) (7)
{1493.90002441,-1033.69995117,22.89999962}, //object(cj_urb_rub_3) (8)
{1482.50000000,-1037.40002441,23.00000000}, //object(cj_urb_rub_3) (9)
{1482.30004883,-1050.90002441,23.00000000}, //object(cj_urb_rub_3) (10)
{1488.69995117,-1065.69995117,23.10000038}, //object(cj_urb_rub_3) (11)
{1482.69995117,-1081.90002441,23.00000000}, //object(cj_urb_rub_3) (12)
{1475.30004883,-1098.90002441,23.10000038}, //object(cj_urb_rub_3) (13)
{1481.30004883,-1118.50000000,23.10000038}, //object(cj_urb_rub_3) (14)
{1484.19995117,-1137.30004883,23.20000076}, //object(cj_urb_rub_3) (15)
{1479.30004883,-1151.90002441,23.20000076}, //object(cj_urb_rub_3) (16)
{1468.59997559,-1153.59997559,23.29999924}, //object(cj_urb_rub_3) (17)
{1451.69995117,-1158.59997559,23.00000000}, //object(cj_urb_rub_3) (18)
{1440.19995117,-1158.09997559,23.00000000}, //object(cj_urb_rub_3) (19)
{1420.40002441,-1150.90002441,23.10000038}, //object(cj_urb_rub_3) (20)
{1399.19995117,-1149.59997559,23.00000000}, //object(cj_urb_rub_3) (21)
{1381.69995117,-1140.30004883,23.00000000}, //object(cj_urb_rub_3) (22)
{1365.30004883,-1121.80004883,23.20000076}, //object(cj_urb_rub_3) (23)
{1363.69995117,-1094.19995117,23.39999962}, //object(cj_urb_rub_3) (24)
{1370.90002441,-1087.40002441,24.00000000}, //object(cj_urb_rub_3) (25)
{1375.19995117,-1061.19995117,26.10000038}, //object(cj_urb_rub_3) (26)
{1370.80004883,-1046.30004883,25.79999924}, //object(cj_urb_rub_3) (27)
{1416.00000000,-1041.50000000,23.10000038}, //object(cj_urb_rub_3) (28)
{1432.80004883,-1034.50000000,23.00000000} //object(cj_urb_rub_3) (29)
};


new Float:CentrLSTrash[][3] = {
{1519.50000000,-1600.50000000,12.80000019}, //object(cj_urb_rub_3) (1)
{1514.40002441,-1590.90002441,12.69999981}, //object(cj_urb_rub_3) (2)
{1504.50000000,-1585.59997559,12.80000019}, //object(cj_urb_rub_3) (3)
{1501.69995117,-1591.50000000,12.69999981}, //object(cj_urb_rub_3) (4)
{1489.30004883,-1595.69995117,12.69999981}, //object(cj_urb_rub_3) (5)
{1477.00000000,-1600.19995117,12.80000019}, //object(cj_urb_rub_3) (6)
{1468.09997559,-1592.00000000,12.69999981}, //object(cj_urb_rub_3) (7)
{1454.50000000,-1585.19995117,12.80000019}, //object(cj_urb_rub_3) (8)
{1448.40002441,-1592.30004883,12.69999981}, //object(cj_urb_rub_3) (9)
{1437.59997559,-1604.09997559,12.80000019}, //object(cj_urb_rub_3) (10)
{1429.19995117,-1612.69995117,12.69999981}, //object(cj_urb_rub_3) (11)
{1422.59997559,-1623.90002441,12.80000019}, //object(cj_urb_rub_3) (12)
{1439.09997559,-1628.69995117,12.80000019}, //object(cj_urb_rub_3) (13)
{1430.00000000,-1646.30004883,12.69999981}, //object(cj_urb_rub_3) (14)
{1422.00000000,-1661.40002441,12.80000019}, //object(cj_urb_rub_3) (15)
{1422.50000000,-1673.30004883,12.80000019}, //object(cj_urb_rub_3) (16)
{1428.59997559,-1694.00000000,12.69999981}, //object(cj_urb_rub_3) (17)
{1438.59997559,-1712.80004883,12.80000019}, //object(cj_urb_rub_3) (18)
{1444.00000000,-1724.59997559,12.80000019}, //object(cj_urb_rub_3) (19)
{1452.69995117,-1731.80004883,12.69999981}, //object(cj_urb_rub_3) (20)
{1468.19995117,-1733.19995117,12.69999981}, //object(cj_urb_rub_3) (21)
{1506.59997559,-1739.69995117,12.80000019}, //object(cj_urb_rub_3) (22)
{1517.50000000,-1724.19995117,12.80000019}, //object(cj_urb_rub_3) (23)
{1521.30004883,-1715.09997559,12.80000019}, //object(cj_urb_rub_3) (24)
{1530.69995117,-1709.09997559,12.69999981}, //object(cj_urb_rub_3) (25)
{1536.30004883,-1695.09997559,12.80000019}, //object(cj_urb_rub_3) (26)
{1528.09997559,-1684.30004883,12.69999981}, //object(cj_urb_rub_3) (27)
{1520.80004883,-1677.50000000,12.80000019}, //object(cj_urb_rub_3) (28)
{1520.30004883,-1668.69995117,12.80000019} //object(cj_urb_rub_3) (29)
};

new Float:HotelSFTrash[][3] = {
{-2013.80004883,385.39999390,34.50000000}, //object(cj_urb_rub_3) (1)
{-2004.59997559,408.10000610,34.29999924}, //object(cj_urb_rub_3) (2)
{-1995.80004883,424.79998779,34.50000000}, //object(cj_urb_rub_3) (3)
{-2004.19995117,445.60000610,34.29999924}, //object(cj_urb_rub_3) (4)
{-2009.69995117,463.00000000,34.90000153}, //object(cj_urb_rub_3) (5)
{-2000.59997559,486.20001221,34.29999924}, //object(cj_urb_rub_3) (6)
{-2021.80004883,505.60000610,34.29999924}, //object(cj_urb_rub_3) (7)
{-2034.40002441,511.20001221,34.50000000}, //object(cj_urb_rub_3) (8)
{-2049.69995117,505.50000000,34.29999924}, //object(cj_urb_rub_3) (9)
{-2064.69995117,497.20001221,34.50000000}, //object(cj_urb_rub_3) (10)
{-2088.69995117,501.39999390,34.29999924}, //object(cj_urb_rub_3) (11)
{-2109.60009766,491.29998779,34.50000000}, //object(cj_urb_rub_3) (12)
{-2123.30004883,474.50000000,34.50000000}, //object(cj_urb_rub_3) (13)
{-2131.50000000,427.29998779,34.50000000}, //object(cj_urb_rub_3) (14)
{-2139.00000000,412.70001221,34.50000000}, //object(cj_urb_rub_3) (15)
{-2148.60009766,399.10000610,34.40000153}, //object(cj_urb_rub_3) (16)
{-2146.10009766,375.70001221,34.50000000}, //object(cj_urb_rub_3) (17)
{-2144.60009766,357.70001221,34.50000000}, //object(cj_urb_rub_3) (18)
{-2153.39990234,332.29998779,34.59999847}, //object(cj_urb_rub_3) (19)
{-2138.10009766,327.60000610,34.59999847}, //object(cj_urb_rub_3) (20)
{-2124.19995117,322.50000000,34.40000153}, //object(cj_urb_rub_3) (21)
{-2089.10009766,326.39999390,34.50000000}, //object(cj_urb_rub_3) (22)
{-2063.00000000,327.79998779,34.50000000}, //object(cj_urb_rub_3) (23)
{-2012.69995117,333.50000000,34.50000000}, //object(cj_urb_rub_3) (24)
{-2007.30004883,338.70001221,34.29999924}, //object(cj_urb_rub_3) (25)
{-2000.19995117,351.00000000,34.29999924}, //object(cj_urb_rub_3) (26)
{-2000.00000000,380.00000000,34.29999924}, //object(cj_urb_rub_3) (27)
{-1995.00000000,392.00000000,34.50000000}, //object(cj_urb_rub_3) (28)
{-2001.00000000,422.79998779,34.29999924} //object(cj_urb_rub_3) (29)

};

new Float:DepoSFTrash[][3] = {
{-2014.40002441,233.60000610,28.00000000}, //object(cj_urb_rub_3) (1)
{-2008.00000000,216.80000305,26.79999924}, //object(cj_urb_rub_3) (2)
{-2014.00000000,202.00000000,27.00000000}, //object(cj_urb_rub_3) (3)
{-1992.30004883,194.69999695,26.79999924}, //object(cj_urb_rub_3) (4)
{-1984.19995117,186.00000000,27.00000000}, //object(cj_urb_rub_3) (5)
{-1971.80004883,181.80000305,27.00000000}, //object(cj_urb_rub_3) (6)
{-1978.30004883,173.39999390,27.00000000}, //object(cj_urb_rub_3) (7)
{-1985.19995117,148.10000610,27.00000000}, //object(cj_urb_rub_3) (8)
{-1991.40002441,126.69999695,26.79999924}, //object(cj_urb_rub_3) (9)
{-1984.19995117,100.59999847,27.00000000}, //object(cj_urb_rub_3) (10)
{-1994.40002441,88.80000305,27.00000000}, //object(cj_urb_rub_3) (11)
{-2009.50000000,97.69999695,26.79999924}, //object(cj_urb_rub_3) (12)
{-2016.50000000,100.00000000,27.00000000}, //object(cj_urb_rub_3) (13)
{-2036.80004883,101.80000305,27.79999924}, //object(cj_urb_rub_3) (14)
{-2046.59997559,106.50000000,28.00000000}, //object(cj_urb_rub_3) (15)
{-2061.50000000,106.69999695,29.10000038}, //object(cj_urb_rub_3) (16)
{-2099.19995117,118.00000000,34.59999847}, //object(cj_urb_rub_3) (17)
{-2125.89990234,110.40000153,34.50000000}, //object(cj_urb_rub_3) (18)
{-2142.30004883,135.10000610,34.59999847}, //object(cj_urb_rub_3) (19)
{-2145.60009766,161.69999695,34.50000000}, //object(cj_urb_rub_3) (20)
{-2139.30004883,190.50000000,34.59999847}, //object(cj_urb_rub_3) (21)
{-2145.80004883,224.30000305,34.50000000}, //object(cj_urb_rub_3) (22)
{-2155.19995117,241.60000610,34.59999847}, //object(cj_urb_rub_3) (23)
{-2153.19995117,258.10000610,34.59999847}, //object(cj_urb_rub_3) (24)
{-2148.69995117,276.20001221,34.50000000}, //object(cj_urb_rub_3) (25)
{-2144.80004883,294.20001221,34.50000000}, //object(cj_urb_rub_3) (26)
{-2134.19995117,317.89999390,34.40000153}, //object(cj_urb_rub_3) (27)
{-2108.89990234,322.60000610,34.29999924}, //object(cj_urb_rub_3) (28)
{-2081.80004883,327.00000000,34.50000000} //object(cj_urb_rub_3) (29)
};

new Float:HotelLSTrash[][3] = {
{557.29998779,-1675.90002441,17.79999924}, //object(rubbish_box1) (1)
{555.00000000,-1669.40002441,17.70000076}, //object(rubbish_box1) (2)
{547.79998779,-1663.69995117,17.79999924}, //object(rubbish_box1) (3)
{540.09997559,-1667.50000000,17.79999924}, //object(rubbish_box1) (4)
{533.70001221,-1673.50000000,18.00000000}, //object(rubbish_box1) (5)
{524.50000000,-1666.19995117,17.79999924}, //object(rubbish_box1) (6)
{514.59997559,-1658.80004883,18.00000000}, //object(rubbish_box1) (7)
{504.10000610,-1657.50000000,18.70000076}, //object(rubbish_box1) (8)
{495.79998779,-1663.59997559,19.39999962}, //object(rubbish_box1) (9)
{486.29998779,-1667.40002441,21.29999924}, //object(rubbish_box1) (10)
{475.20001221,-1661.09997559,23.39999962}, //object(rubbish_box1) (11)
{468.60000610,-1652.19995117,24.20000076}, //object(rubbish_box1) (12)
{452.20001221,-1646.40002441,24.60000038}, //object(rubbish_box1) (13)
{444.50000000,-1636.90002441,25.10000038}, //object(rubbish_box1) (14)
{452.00000000,-1624.50000000,25.20000076}, //object(rubbish_box1) (15)
{444.60000610,-1610.09997559,24.79999924}, //object(rubbish_box1) (16)
{458.70001221,-1603.09997559,24.70000076}, //object(rubbish_box1) (17)
{464.79998779,-1591.40002441,24.60000038}, //object(rubbish_box1) (18)
{470.79998779,-1584.19995117,24.10000038}, //object(rubbish_box1) (19)
{507.79998779,-1578.90002441,15.10000038}, //object(rubbish_box1) (20)
{527.00000000,-1587.09997559,15.30000019}, //object(rubbish_box1) (21)
{539.90002441,-1600.50000000,15.30000019}, //object(rubbish_box1) (22)
{548.40002441,-1620.50000000,16.00000000}, //object(rubbish_box1) (23)
{540.20001221,-1633.90002441,16.29999924}, //object(rubbish_box1) (24)
{532.59997559,-1650.40002441,17.29999924}, //object(rubbish_box1) (25)
{563.29998779,-1661.50000000,17.60000038}, //object(rubbish_box1) (26)
{580.50000000,-1674.40002441,16.20000076}, //object(rubbish_box1) (27)
{593.59997559,-1670.19995117,15.50000000}, //object(rubbish_box1) (28)
{610.50000000,-1668.69995117,15.39999962} //object(rubbish_box1) (29)
};


new TrashObject[7][10];
new Float:TrashCoords[7][10][3];
new CleanerCar[12];
new PlayerCleaner[12] = {-1,...}; // Это все уборшики сервера
new pickupcleaner[2];
new RandomObectTrash[] = {853, 928, 1264, 1265}; // Тут объекты мусора всякие
new TimerEndCleanerWork[MAX_PLAYERS] = {-1,...}; // для античита на прыжки на байке

stock bool:IsACleanerCar(vid)
{
	for(new i; i < sizeof(CleanerCar); i ++)
	{
	    if(vid == CleanerCar[i]) return true;
	}
	return false;
}







new vehname[128];
new BigEar[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];

//new gCarLock[MAX_VEHICLES];
new Gas[MAX_VEHICLES] = {100,...};

new noooc = 0;
//new adds = 1;
//new addtimer = 90000;
//new RStart;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new realtime = 1;
new wtime = 15;
new levelcost = 300;
//new deathcost = 5;
new timeshift = 0;
new shifthour;
new synctimer;
//new secondtimer[5];
//new twosecondtimer[2];
//new fueltimer;
new productiontimer;
//new accountstimer;
new cartimer;
new levelexp = 4;
new SELLCAR1[] = { 500, 512, 524, 534, 547, 557, 563, 576, 589, 594, 500 };
new SELLCAR2[] = { 609, 613, 625, 637, 645, 656, 661, 672, 687, 698, 600  };
new SELLCAR3[] = { 705, 717, 721, 737, 745, 755, 767, 775, 786, 796, 800 };
new SELLCAR4[] = { 807, 812, 827, 837, 842, 856, 861, 875, 889, 891, 800 };
//new RandomZoneOwner[] = { 5, 6, 10, 12, 13, 14, 15, 16, 17, 18 };
new Menu:drinkmenu;
new Menu:gunmenu;
new Menu:gunmenu1;
new Menu:gunmenu2;
new Menu:gunmenu3;
new Menu:gunmenu4;
new Menu:gunmenu5;
new Menu:gunmenu6;
new Menu:DildoMenu;
new Menu:changeInteriorMenu[2];

new CarColorPickup;
new Menu:ColorMenu1_1;
new Menu:ColorMenu1_2;
new Menu:ColorMenu2_1;
new Menu:ColorMenu2_2;


new Menu:PizzaMenu;
new Menu:BurgerMenu;
new Menu:CluckMenu;
new DMjail[MAX_PLAYERS];//дм в камере
new DMdemorgan[MAX_PLAYERS];
new AntiDB[MAX_PLAYERS];
new SpecJail[MAX_PLAYERS];//анти побег
new SpecDem[MAX_PLAYERS];
new wantsex[MAX_PLAYERS];
new Text3D:vehicle3Dtext;
new Text3D:DutyText[MAX_PLAYERS];
new Text3D:BizzLabels[Bizzes];


new Text3D:KolhozText;
new Text3D:PritonText;
new Text3D:RifaText;
new Text3D:WantedCarsText;

new racersdialog[5][30]; // первые 5 победителей
new RaceTrack; // ид гоночного трека

//===[МАШИНЫ БОТОВ]===
new MyBotVehicle;
new TrainNPCVehicle;
new TramVehicle;
//===================

new PickupEnterDuel;
new PickupExitDuel;
new PickupCreateDuel;
//new demorgan1,demorgan2;
//new lavka,lavka2,lavka3,lavka4;
new pizzamenupickup, burgermenupickup, cluckenmenupickup;
new FBIhealth, FBIarmour, FBIammo,NGammo;
new HitOrderPickup;
new BuyGunPickupLS1, BuyGunPickupLS2,BuyGunPickupSF, ShopPickup;
new DildoPickup;
new LSparashut;
new WhoreReg, DrugDealerReg, PaperBoyReg,  ArmsDealerReg,ForemanReg;
new CannabisPickup[100];
new Cannabis[100];
new CannabisDeleted[100];

new reporters1,reporters2;
//new bargryv1, bargryv2, bargryv3, bargryv4;
new yakuzapickup1,yakuzapickup2,yakuzapickup3,yakuzapickup4;
new entermarket1, entermarket2, entermarket3, entermarket4, exitmarket;
new enterburger1, enterburger2, enterburger3, enterburger4, enterburger5, exitburger;
new enterclucken1, enterclucken2, enterclucken3, enterclucken4, enterclucken5, enterclucken6, enterclucken7, enterclucken8, exitclucken;
new enterpizza1, enterpizza2, enterpizza3, enterpizza4, enterpizza5, exitpizza;
new fbienter, fbiexit, fbienter2, fbiexit2;
new RMenter, RMexit;
new LCNenter, LCNexit;
new BikersEnter, BikersExit;
new MedicEnter, MedicExit, MedicRoomEnter, MedicRoomExit;
new KolhozEnter;
new entermotel;
new entermotel2;
new exitmotel;
new entergroove;
new exitgroove;
new enterpriton;
new exitpriton;
new entergum;
new exitgum;
new enterlspd;
new exitlspd;
new entermeria;
new exitmeria;
new enterpigpen;
new exitpigpen;
new enterah1;//АШ
new exitah1;
new enterah2;
new exitah2;//АШ
new enterotel;
new exitotel;
new enterkrisha;
new exitkrisha;
new entermayak;
new exitmayak;
new enterhitbar;
new FChotelEnter, FChotelExit;
new FCchurchEnter, FCchurchExit;
new FixCarPickup[3], FCchurchPickup;
new exitmeriya2;
new entermeriya2;


new
Text: txtTimeDisp,
Text: sait,
Text: nodmtext,
Text: CarSystem[MAX_PLAYERS],
Text: CarHelpText,
Text: ProgressBarText[5];


new rastamob0,rastamob1,rastamob2,rastamob3,rastamob4,rastamob5;
//_______________________________________________CARS________________________________________
new PoliceCar[19];
new FBICar[17];
new ArmyCar[25];
new AmbulanceCar[10];
new MeriyaCar[14];
new HitmansCar[6];
new SanNewsCar[5];
new LicenzersCar[12];
new MehanikCar[5];
new KartCar[6];
new HotringBizCar[4];
new Bike1BizCar[4];
new Bike2BizCar[4];
new RentLSCar[3];
new RentSFCar[3];
//___________________________________________________________________________________________
new HouseCar172[2];

new AutoSchoolMoped[5];

new WantedCars[2][10];
new KillPoint[19][GANG_ZONES]; // Кол-во банд, у кого сколько убийств
new ThisGangWar[19][GANG_ZONES]; // Если банда уже воюет за какую-то территорию, то true


new Obj_Elevator, Obj_ElevatorDoors[2],
	Obj_FloorDoors[21][2];
new Text3D:Label_Elevator, Text3D:Label_Floors[21];
#define ELEVATOR_STATE_IDLE     (0)
#define ELEVATOR_STATE_WAITING  (1)
#define ELEVATOR_STATE_MOVING   (2)
new ElevatorState,
	ElevatorFloor;  // If Idle or Waiting, this is the current floor. If Moving, the floor it's moving to.
#define INVALID_FLOOR           (-1)
new ElevatorQueue[21],  	// Floors in queue.
	FloorRequestedBy[21];   // FloorRequestedBy[floor_id] = playerid; - Points out who requested which floor.
new ElevatorBoostTimer;     // Timer that makes the elevator move faster after players start surfing the object.

static FloorNames[21][] =
{
	"Улица",
	"1-ый этаж",
	"2-ый этаж",
	"3-ый этаж",
	"4-ый этаж",
	"5-ый этаж",
	"6-ый этаж",
	"7-ый этаж",
	"8-ый этаж",
	"9-ый этаж",
	"10-ый этаж",
	"11-ый этаж",
	"12-ый этаж",
	"13-ый этаж",
	"14-ый этаж",
	"15-ый этаж",
	"16-ый этаж",
	"17-ый этаж",
	"18-ый этаж",
	"19-ый этаж",
	"Пентхаус"
};

static Float:FloorZOffsets[21] =
{
    0.0,		// 0.0,
    8.5479,		// 8.5479,
    13.99945,   // 8.5479 + (5.45155 * 1.0),
    19.45100,   // 8.5479 + (5.45155 * 2.0),
    24.90255,   // 8.5479 + (5.45155 * 3.0),
    30.35410,   // 8.5479 + (5.45155 * 4.0),
    35.80565,   // 8.5479 + (5.45155 * 5.0),
    41.25720,   // 8.5479 + (5.45155 * 6.0),
    46.70875,   // 8.5479 + (5.45155 * 7.0),
    52.16030,   // 8.5479 + (5.45155 * 8.0),
    57.61185,   // 8.5479 + (5.45155 * 9.0),
    63.06340,   // 8.5479 + (5.45155 * 10.0),
    68.51495,   // 8.5479 + (5.45155 * 11.0),
    73.96650,   // 8.5479 + (5.45155 * 12.0),
    79.41805,   // 8.5479 + (5.45155 * 13.0),
    84.86960,   // 8.5479 + (5.45155 * 14.0),
    90.32115,   // 8.5479 + (5.45155 * 15.0),
    95.77270,   // 8.5479 + (5.45155 * 16.0),
    101.22425,  // 8.5479 + (5.45155 * 17.0),
    106.67580,	// 8.5479 + (5.45155 * 18.0),
    112.12735	// 8.5479 + (5.45155 * 19.0)
};

new RandomVehicleID[69][1] = {
{400},{401},{402},{404},{405},{410},{411},{415},{418},{419},{421},{424},{426},{429},{436},{439},{442},{445},{451},{458},
{461},{463},{466},{468},{471},{475},{477},{480},{489},{491},{492},{495},{496},{500},{506},{507},{516},{517},{518},{521},
{522},{526},{527},{529},{533},{534},{535},{541},{542},{543},{546},{547},{549},{551},{555},{558},{559},{560},{561},{562},
{581},{585},{586},{587},{589},{600},{602},{603},{603}
};


// Координаты зон
new Float:GangZones[GANG_ZONES][5] = {
    {0.0, 0.0, 0.0, 0.0}, // !!!
	{1826.161621,  -2156.885009,  1954.161621,  -2028.885009, 0.0},
	{1826.161621,  -2028.885009,  1954.161621,  -1900.885009, 0.0},
	{1826.161621,  -1900.885009,  1954.161621,  -1772.885009, 0.0},
	{1826.161621,  -1772.885009,  1954.161621,  -1644.885009, 0.0},
	{1826.161621,  -1644.885009,  1954.161621,  -1516.885009, 0.0},
	{1826.161621,  -1516.885009,  1954.161621,  -1388.885009, 0.0},
	{1826.161621,  -1388.885009,  1954.161621,  -1260.885009, 0.0},
	{1826.161621,  -1260.885009,  1954.161621,  -1132.885009, 0.0},
	{1826.161621,  -1132.885009,  1954.161621,  -1004.885009, 0.0},
	{1954.161621,  -2156.885009,  2082.161621,  -2028.885009, 0.0},
	{1954.161621,  -2028.885009,  2082.161621,  -1900.885009, 0.0},
	{1954.161621,  -1900.885009,  2082.161621,  -1772.885009, 0.0},
	{1954.161621,  -1772.885009,  2082.161621,  -1644.885009, 0.0},
	{1954.161621,  -1644.885009,  2082.161621,  -1516.885009, 0.0},
	{1954.161621,  -1516.885009,  2082.161621,  -1388.885009, 0.0},
	{1954.161621,  -1388.885009,  2082.161621,  -1260.885009, 0.0},
	{1954.161621,  -1260.885009,  2082.161621,  -1132.885009, 0.0},
	{1954.161621,  -1132.885009,  2082.161621,  -1004.885009, 0.0},
	{2082.161621,  -2156.885009,  2210.161621,  -2028.885009, 0.0},
	{2082.161621,  -2028.885009,  2210.161621,  -1900.885009, 0.0},
	{2082.161621,  -1900.885009,  2210.161621,  -1772.885009, 0.0},
	{2082.161621,  -1772.885009,  2210.161621,  -1644.885009, 0.0},
	{2082.161621,  -1644.885009,  2210.161621,  -1516.885009, 0.0},
	{2082.161621,  -1516.885009,  2210.161621,  -1388.885009, 0.0},
	{2082.161621,  -1388.885009,  2210.161621,  -1260.885009, 0.0},
	{2082.161621,  -1260.885009,  2210.161621,  -1132.885009, 0.0},
	{2082.161621,  -1132.885009,  2210.161621,  -1004.885009, 0.0},
	{2210.161621,  -2156.885009,  2338.161621,  -2028.885009, 0.0},
	{2210.161621,  -2028.885009,  2338.161621,  -1900.885009, 0.0},
	{2210.161621,  -1900.885009,  2338.161621,  -1772.885009, 0.0},
	{2210.161621,  -1772.885009,  2338.161621,  -1644.885009, 0.0},
	{2210.161621,  -1644.885009,  2338.161621,  -1516.885009, 0.0},
	{2210.161621,  -1516.885009,  2338.161621,  -1388.885009, 0.0},
	{2210.161621,  -1388.885009,  2338.161621,  -1260.885009, 0.0},
	{2210.161621,  -1260.885009,  2338.161621,  -1132.885009, 0.0},
	{2210.161621,  -1132.885009,  2338.161621,  -1004.885009, 0.0},
	{2338.161621,  -2156.885009,  2466.161621,  -2028.885009, 0.0},
	{2338.161621,  -2028.885009,  2466.161621,  -1900.885009, 0.0},
	{2338.161621,  -1900.885009,  2466.161621,  -1772.885009, 0.0},
	{2338.161621,  -1772.885009,  2466.161621,  -1644.885009, 0.0},
	{2338.161621,  -1644.885009,  2466.161621,  -1516.885009, 0.0},
	{2338.161621,  -1516.885009,  2466.161621,  -1388.885009, 0.0},
	{2338.161621,  -1388.885009,  2466.161621,  -1260.885009, 0.0},
	{2338.161621,  -1260.885009,  2466.161621,  -1132.885009, 0.0},
	{2338.161621,  -1132.885009,  2466.161621,  -1004.885009, 0.0},
	{2466.161621,  -2156.885009,  2594.161621,  -2028.885009, 0.0},
	{2466.161621,  -2028.885009,  2594.161621,  -1900.885009, 0.0},
	{2466.161621,  -1900.885009,  2594.161621,  -1772.885009, 0.0},
	{2466.161621,  -1772.885009,  2594.161621,  -1644.885009, 0.0},
	{2466.161621,  -1644.885009,  2594.161621,  -1516.885009, 0.0},
	{2466.161621,  -1516.885009,  2594.161621,  -1388.885009, 0.0},
	{2466.161621,  -1388.885009,  2594.161621,  -1260.885009, 0.0},
	{2466.161621,  -1260.885009,  2594.161621,  -1132.885009, 0.0},
	{2466.161621,  -1132.885009,  2594.161621,  -1004.885009, 0.0},
	{2594.161621,  -2156.885009,  2722.161621,  -2028.885009, 0.0},
	{2594.161621,  -2028.885009,  2722.161621,  -1900.885009, 0.0},
	{2594.161621,  -1900.885009,  2722.161621,  -1772.885009, 0.0},
	{2594.161621,  -1772.885009,  2722.161621,  -1644.885009, 0.0},
	{2594.161621,  -1644.885009,  2722.161621,  -1516.885009, 0.0},
	{2594.161621,  -1516.885009,  2722.161621,  -1388.885009, 0.0},
	{2594.161621,  -1388.885009,  2722.161621,  -1260.885009, 0.0},
	{2594.161621,  -1260.885009,  2722.161621,  -1132.885009, 0.0},
	{2594.161621,  -1132.885009,  2722.161621,  -1004.885009, 0.0},
	{2722.161621,  -2156.885009,  2850.161621,  -2028.885009, 0.0},
	{2722.161621,  -2028.885009,  2850.161621,  -1900.885009, 0.0},
	{2722.161621,  -1900.885009,  2850.161621,  -1772.885009, 0.0},
	{2722.161621,  -1772.885009,  2850.161621,  -1644.885009, 0.0},
	{2722.161621,  -1644.885009,  2850.161621,  -1516.885009, 0.0},
	{2722.161621,  -1516.885009,  2850.161621,  -1388.885009, 0.0},
	{2722.161621,  -1388.885009,  2850.161621,  -1260.885009, 0.0},
	{2722.161621,  -1260.885009,  2850.161621,  -1132.885009, 0.0},
	{2722.161621,  -1132.885009,  2850.161621,  -1004.885009, 0.0},
	{1020.863769, 	1386.489379, 	1196.863769, 	1798.489379, 1.0},
  	{2071.470947, 	986.071777, 	2335.470947, 	1186.071777, 1.0},
  	{1354.486816, 	673.087097, 	1558.486816, 	805.087097,  1.0},
  	{1127.953613, 	2720.947265, 	1415.953613, 	2852.947265, 1.0},
  	{2513.410156, 	1723.403076, 	2669.410156, 	1939.403076, 1.0},
  	{2767.934814, 	842.161926, 	2891.934814, 	1022.161926, 1.0},
  	{1248.340576, 	1227.039550, 	1376.340576, 	1691.039550, 1.0},
  	{2232.939453, 	2717.297607, 	2424.939453, 	2809.297607, 1.0},
  	{1916.540893, 	1474.014526, 	2028.540893, 	1654.014526, 1.0},
  	{1398.881103, 	2178.735107, 	1558.881103, 	2298.735107, 1.0},
  	{2430.518310, 	1477.358642, 	2598.518310, 	1613.358642, 1.0},
  	{1688.128540, 	2713.370849, 	1920.128540, 	2881.370849, 1.0},
  	{904.462768, 	1856.286987, 	1008.462768, 	1960.286987, 1.0},
  	{901.190795, 	2182.481933, 	1021.190795, 	2406.481933, 1.0},
  	{1061.610595, 	2170.510986, 	1165.610595, 	2346.510986, 1.0}
};



new Victim_EnterLS;
new Victim_EnterSF;
new Victim_EnterLV;
new Victim_Exit;

new Victim_Mans;
new Victim_Womans;

#define TOTAL_FACTIONS 18
new Menu:Victim_Menu_Man[TOTAL_FACTIONS];
new Menu:Victim_Menu_Woman[TOTAL_FACTIONS];

new Menu:Civilian_Man[2];
new Menu:Civilian_Woman[2];


new MaxManCloth[TOTAL_FACTIONS] = {
10, // ЛСПД
6,  // ФБР
4,  // Армия
11, // МЧС
7,  // ЛКН
7,  // Якудза
6,  // Мэрия
11,  // Хиты
11, // Репортеры
8,  // Байкеры
11, // Лицеры
7,  // РМ
7,  // Баллас
9,  // Грув
5,  // Вагос
7,  // Коронос
9,  // Рифа
11  // Колхоз
};
new ClothesMan[TOTAL_FACTIONS][12] = {
{265, 266, 267, 280, 281, 282, 283, 284, 285, 288,   0, 0}, // ЛСПД
{163, 164, 165, 166, 286, 295, 0,   0,    0,    0,   0, 0}, // ФБР
{73,  287, 179, 291, 0,     0, 0,   0,    0,    0,   0, 0}, // Армия
{70,   71, 227, 228, 229, 274, 275, 276, 277, 278, 279, 0}, // МЧС
{98,  124, 290, 250, 223, 127, 119,   0,   0,   0,   0, 0}, // ЛКН
{120, 121, 122, 123, 186, 228, 229,   0,   0,   0,   0, 0}, // Якудза
{17,  147, 170, 240, 227, 188,   0,   0,   0,   0,   0, 0}, // Мэрия
{1,   250, 186, 125, 185,  25, 277, 156, 187, 217, 241, 0}, // Хитманы
{250, 228, 227, 210, 184, 142, 170,  60,  36,  37,  15, 0}, // Репортеры
{254, 248, 247, 241,  32, 242, 181, 100,   0,   0,   0, 0}, // Байкеры
{36,   59,  60,  98, 170, 171, 187, 188, 189, 250, 240, 0}, // Лицензеры
{46,  111, 112, 113, 125, 126, 272,   0,   0,   0,   0, 0}, // Русская мафия
{102, 103, 104,  28,  21,  22,  25,   0,   0,   0,   0, 0}, // Баллас
{105, 106, 107, 149, 293, 269, 270, 271,  86,   0,   0, 0}, // Грув
{108, 109, 110,  47,  30,  0,   0,    0,   0,   0,   0, 0}, // Вагос
{114, 115, 116, 292, 291,  44,  48,   0,   0,   0,   0, 0}, // Коронос
{173, 174, 175, 176, 184, 185, 222, 236, 273,   0,   0, 0}, // Рифа
{262, 261, 234, 213, 200, 206,  32,  33,  34,  44,  95, 0} // Колхоз
};
new MaxWomanCloth[TOTAL_FACTIONS] = {
6, // ЛСПД
8, // ФБР
8, // Армия
6, // МЧС
4, // ЛКН
6, // Якудза
5, // Мэрия
6, // Хитманы
6, // Репортеры
5, // Байкеры
6, // Лицензеры
6, // Русская мафия
4, // Баллас
6, // Грув
5, // Вагос
6, // Коронос
6, // Рифа
8 // Кохоз
};

new ClothesWoman[TOTAL_FACTIONS][9] = {
{76,   93, 141, 148, 150, 233,   0,   0, 0}, // ЛСПД
{76,   93, 141, 148, 150, 191, 192, 211, 0}, // ФБР
{76,   93, 141, 148, 150, 191, 192, 211, 0}, // Армия
{226, 219, 211, 193, 148,  69,   0,   0, 0}, // МЧС
{85,   91,  93, 152,   0,   0,   0,   0, 0}, // ЛКН
{85,   91,  93, 214, 263, 169,   0,   0, 0}, // Якудза
{233, 219, 216, 211, 150,   0,   0,   0, 0}, // Мэрия
{226, 219, 211, 233, 150, 216,   0,   0, 0}, // Хитманы
{12,   40,  55,  56,  91,  93,   0,   0, 0}, // Репортеры
{190, 192, 193, 211, 246,   0,   0,   0, 0}, // Байкеры
{219, 226, 233,  11,  91, 172,   0,   0, 0}, // Лицензеры
{256, 237, 233, 216, 214, 211,   0,   0, 0}, // Русская мафия
{195, 192, 152,  93,   0,   0,   0,   0, 0}, // Баллас
{90,   12,  13,  40,  55,  56,   0,   0, 0}, // Грув
{56,   64,  65,  85, 152,   0,   0,   0, 0}, // Вагос
{190, 192, 193, 216, 226,  41,   0,   0, 0}, // Коронос
{69,   90,  91,  93, 190, 192,   0,   0, 0}, // Рифа
{201, 196, 192, 157, 152, 129,  91,  85, 0} // Колхоз
};


new NormalPedsMan[29][2] = {
{137, 100},
{212, 300},
{2,  1000},
{6,  2300},
{209,3500},
{18, 4000},
{19, 6000},
{21, 8000},
{62, 9000},
{7,  10000},
{25, 11000},
{8,  12000},
{29, 14000},
{51, 17000},
{20, 20000},
{144, 22000},
{80,  24000},
{81,  24000},
{236, 30000},
{249, 37000},
{261, 50000},
{170, 65000},
{82,  90000},
{217, 140000},
{2,   170000},
{48,  210000},
{3,   460000},
{66,  540000},
{240, 650000}
};

new NormalPedsWoman[19][2] = {
{9,   1000},
{63,  2000},
{12,  3000},
{152, 5000},
{85,  6000},
{90,  7000},
{92,  7000},
{244, 8000},
{245, 8000},
{246, 9000},
{93,  10000},
{226, 30000},
{237, 40000},
{193, 50000},
{211, 60000},
{233, 90000},
{91,  100000},
{216, 150000},
{219, 160000}
};






// Массив инфо о зонах
enum gzInfo
{
	zOwner, // Ид банды которой она принадлежит
	zAttacked, // Кем атакована
	Float:zoneX,
	Float:zoneY,
	Float:zoneX2,
	Float:zoneY2,
	zID, // ид для GangZoneCreate
 	zType
}
new ZoneInfo[GANG_ZONES][gzInfo];


enum GangInfoSpawn
{
	Float:gSpawnX,
	Float:gSpawnY,
	Float:gSpawnZ,
	Float:gSpawnA,
	gInterior,
	gVirtWorld
}
new GangSpawn[10][GangInfoSpawn]; // 10 банд и мафий

new GangCapture[10];

enum GCInfo
{
	Float:gCarSpawnX, // Спавн X
	Float:gCarSpawnY, // Спавн Y
	Float:gCarSpawnZ, // Спавн Z
	Float:gCarSpawnA, // Поворот
	gCarModel, // Модель тачки
	gCarColor1, // Цвет 1
	gCarColor2, // Цвет 2
	gRespDelay, // Время респавна тачки
	gCarRank,
	gVehId // тут привязка самой тачки к переменной
}
new GangCarInfo[10][15][GCInfo];


enum GangCommon
{
	Drugs,
	Materials,
	Cash,
	gPassword
}
new CommonInfo[10][GangCommon];

stock bool:IsVehicleWithDriver(id)
{
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(GetPlayerVehicleID(i) == id && GetPlayerState(i) == PLAYER_STATE_DRIVER) return true;
	}
	return false;
}
stock bool:ProxDetectorS(Float:radi, playerid, targetid)
{
	new Float:pos[3];
	GetPlayerPos(targetid, pos[0], pos[1], pos[2]);
	
	if(IsPlayerInRangeOfPoint(playerid, radi, pos[0], pos[1], pos[2])) return true;
	return false;
}
stock GetName(playerid)
{
	new name[24];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}

// Система заправок ============================================================
enum binzc
{
	Text3D:BenfInfo,
	Benz,
	Truck,
	Trailer
}
new BenzCar[7][binzc];
new FuelTruckerPickup;

stock bool:IsFuelTruck(car)
{
	for(new i; i < sizeof(BenzCar); i++)
	{
	    if(car == BenzCar[i][Truck]) return true;
	}
	return false;
}

stock GetTrail(car)
{
	for(new i; i < sizeof(BenzCar); i++)
	{
	    if(car == BenzCar[i][Trailer]) return i;
	}
	return -1;
}

stock GetPlayerGasStation(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10.0,1004.0070,-939.3102,42.1797)) 		return 15; // 1 (15 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1944.3260,-1772.9254,13.3906)) return 16; // 2 (16 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-90.5515,-1169.4578,2.4079)) 	return 17; // 3 (17 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1609.7958,-2718.2048,48.5391))return 18; // 4 (18 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2029.4968,156.4366,28.9498)) 	return 19; // 5 (19 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2408.7590,976.0934,45.4175)) 	return 20; // 6 (20 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2243.9629,-2560.6477,31.8841))return 21; // 7 (21 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1676.6323,414.0262,6.9484)) 	return 22; // 8 (22 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2202.2349,2474.3494,10.5258)) 	return 23; // 9 (23 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,614.9333,1689.7418,6.6968)) 	return 24; // 10 (24 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1328.8250,2677.2173,49.7665)) return 25; // 11 (25 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,70.3882,1218.6783,18.5165)) 	return 26; // 12 (26 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2113.7390,920.1079,10.5255)) 	return 27; // 13 (27 сбиз)
	else if(IsPlayerInRangeOfPoint(playerid,10.0,653.2737,-565.6024,16.0574)) 	return 28; // 14 (28 сбиз)
    else if(IsPlayerInRangeOfPoint(playerid,15.0,1383.047851,465.239135,20.196241)) 	return 29; // 15 (29 сбиз)
	return 0;
}


// =============================================================================



stock bool:IsFishingBoat(car)
{
	for(new i; i < sizeof(FishingBoat); i ++)
	{
	    if(car == FishingBoat[i]) return true;
	}
	return false;
}
stock bool:IsPlayerInRangeOfBoat(playerid)
{
	new Float:pos[3];
	for(new i; i < sizeof(FishingBoat); i ++)
	{
		GetVehiclePos(FishingBoat[i], pos[0], pos[1], pos[2]);
		if(IsPlayerInRangeOfPoint(playerid, 10.0, pos[0], pos[1], pos[2])) return true;
	}
	return false;
}

stock containsAnyIP ( string[] )
{
    new digits, digitGroups;
    for ( new pos; ; pos++ )
    {
        switch ( string[pos] )
        {
            case 0 : break;
            case '0'..'9' : digits++;
            default :
            {
                if ( digits >= 2 )
                {
                    digitGroups++;
                    digits = 0;
                }
            }
        }
    }
    if ( digits >= 2 ) digitGroups++;
    if ( digitGroups >= 4 ) return 1;

    if(strfind(string, ".ru", true)  != -1 ||
       strfind(string, ".com", true) != -1 ||
	   strfind(string, ".su", true)  != -1) return 1;
	   
    return 0;
}

stock sscanf(string[], format[], {Float,_}:...)
{
	#if defined isnull
		if (isnull(string))
	#else
		if (string[0] == 0 || (string[0] == 1 && string[1] == 0))
	#endif
		{
			return format[0];
		}
	#pragma tabsize 4
	new
		formatPos = 0,
		stringPos = 0,
		paramPos = 2,
		paramCount = numargs(),
		delim = ' ';
	while (string[stringPos] && string[stringPos] <= ' ')
	{
		stringPos++;
	}
	while (paramPos < paramCount && string[stringPos])
	{
		switch (format[formatPos++])
		{
			case '\0':
			{
				return 0;
			}
			case 'i', 'd':
			{
				new
					neg = 1,
					num = 0,
					ch = string[stringPos];
				if (ch == '-')
				{
					neg = -1;
					ch = string[++stringPos];
				}
				do
				{
					stringPos++;
					if ('0' <= ch <= '9')
					{
						num = (num * 10) + (ch - '0');
					}
					else
					{
						return -1;
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num * neg);
			}
			case 'h', 'x':
			{
				new
					num = 0,
					ch = string[stringPos];
				do
				{
					stringPos++;
					switch (ch)
					{
						case 'x', 'X':
						{
							num = 0;
							continue;
						}
						case '0' .. '9':
						{
							num = (num << 4) | (ch - '0');
						}
						case 'a' .. 'f':
						{
							num = (num << 4) | (ch - ('a' - 10));
						}
						case 'A' .. 'F':
						{
							num = (num << 4) | (ch - ('A' - 10));
						}
						default:
						{
							return -1;
						}
					}
				}
				while ((ch = string[stringPos]) > ' ' && ch != delim);
				setarg(paramPos, 0, num);
			}
			case 'c':
			{
				setarg(paramPos, 0, string[stringPos++]);
			}
			case 'f':
			{

				new changestr[16], changepos = 0, strpos = stringPos;
				while(changepos < 16 && string[strpos] && string[strpos] != delim)
				{
					changestr[changepos++] = string[strpos++];
    				}
				changestr[changepos] = '\0';
				setarg(paramPos,0,_:floatstr(changestr));
			}
			case 'p':
			{
				delim = format[formatPos++];
				continue;
			}
			case '\'':
			{
				new
					end = formatPos - 1,
					ch;
				while ((ch = format[++end]) && ch != '\'') {}
				if (!ch)
				{
					return -1;
				}
				format[end] = '\0';
				if ((ch = strfind(string, format[formatPos], false, stringPos)) == -1)
				{
					if (format[end + 1])
					{
						return -1;
					}
					return 0;
				}
				format[end] = '\'';
				stringPos = ch + (end - formatPos);
				formatPos = end + 1;
			}
			case 'u':
			{
				new
					end = stringPos - 1,
					id = 0,
					bool:num = true,
					ch;
				while ((ch = string[++end]) && ch != delim)
				{
					if (num)
					{
						if ('0' <= ch <= '9')
						{
							id = (id * 10) + (ch - '0');
						}
						else
						{
							num = false;
						}
					}
				}
				if (num && IsPlayerConnected(id))
				{
					setarg(paramPos, 0, id);
				}
				else
				{
					#if !defined foreach
						#define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if (IsPlayerConnected(%2))
						#define __SSCANF_FOREACH__
					#endif
					string[end] = '\0';
					num = false;
					new
						name[MAX_PLAYER_NAME];
					id = end - stringPos;
					foreach (Player, playerid)
					{
						GetPlayerName(playerid, name, sizeof (name));
						if (!strcmp(name, string[stringPos], true, id))
						{
							setarg(paramPos, 0, playerid);
							num = true;
							break;
						}
					}
					if (!num)
					{
						setarg(paramPos, 0, INVALID_PLAYER_ID);
					}
					string[end] = ch;
					#if defined __SSCANF_FOREACH__
						#undef foreach
						#undef __SSCANF_FOREACH__
					#endif
				}
				stringPos = end;
			}
			case 's', 'z':
			{
				new
					i = 0,
					ch;
				if (format[formatPos])
				{
					while ((ch = string[stringPos++]) && ch != delim)
					{
						setarg(paramPos, i++, ch);
					}
					if (!i)
					{
						return -1;
					}
				}
				else
				{
					while ((ch = string[stringPos++]))
					{
						setarg(paramPos, i++, ch);
					}
				}
				stringPos--;
				setarg(paramPos, i, '\0');
			}
			default:
			{
				continue;
			}
		}
		while (string[stringPos] && string[stringPos] != delim && string[stringPos] > ' ')
		{
			stringPos++;
		}
		while (string[stringPos] && (string[stringPos] == delim || string[stringPos] <= ' '))
		{
			stringPos++;
		}
		paramPos++;
	}
	do
	{
		if ((delim = format[formatPos++]) > ' ')
		{
			if (delim == '\'')
			{
				while ((delim = format[formatPos++]) && delim != '\'') {}
			}
			else if (delim != 'z')
			{
				return delim;
			}
		}
	}
	while (delim > ' ');
	return 0;
}

new Float:RobHouse_Objects[][4] = {
{1518.0,-280.00000000,1453.80004883,1083.69995117},//SetPlayerAttachedObject(playerid, 0, 1518, 1, 0.300000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1719.0,-293.79998779,1474.00000000,1083.90002441},//SetPlayerAttachedObject(playerid, 0, 1719, 1, 0.070000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1719.0,-278.50000000,1453.80004883,1083.80004883},
{1719.0,89.30000305,1329.59997559,1082.90002441},
{1747.0,140.10000610,1380.30004883,1083.30004883},//SetPlayerAttachedObject(playerid, 0, 1747, 1, -0.009999, 0.200000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1748.0,-285.00000000,1475.80004883,1084.40002441},//SetPlayerAttachedObject(playerid, 0, 1748, 1, -0.009999, 0.100000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1748.0,-264.89999390,1451.40002441,1084.30004883},
{1748.0,266.29998779,1285.59997559,1079.80004883},
{1750.0,267.60000610,1295.09997559,1080.30004883},//SetPlayerAttachedObject(playerid, 0, 1750, 1, -0.009999, 0.100000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1750.0,2187.89990234,-1215.59997559,1048.69995117},
{1750.0,2190.89990234,-1201.00000000,1048.59997559},
{1752.0,-292.20001221,1474.09997559,1083.40002441},//SetPlayerAttachedObject(playerid, 0, 1752, 1, -0.009999, 0.250000, 0.100000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1752.0,87.80000305,1329.69995117,1082.90002441},
{1783.0,2262.30004883,-1208.69995117,1048.69995117},//SetPlayerAttachedObject(playerid, 0, 1783, 1, 0.070000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1788.0,1278.30004883,-794.40002441,1083.19995117},//SetPlayerAttachedObject(playerid, 0, 1788, 1, 0.070000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1788.0,2281.69995117,-1135.90002441,1050.50000000},
{1788.0,2195.10009766,-1201.00000000,1048.69995117},
{1792.0,153.00000000,1367.69995117,1082.90002441},//SetPlayerAttachedObject(playerid, 0, 1792, 1, 0.000000, 0.200000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
{1792.0,-295.50000000,1476.30004883,1088.40002441},
{2103.0,233.19999695,1290.00000000,1081.69995117},
{2103.0,2360.89990234,-1130.40002441,1051.00000000},
{2230.0,1295.69995117,-835.20001221,1084.59997559},
{2230.0,1295.69995117,-838.59997559,1084.59997559},
{2316.0,2491.19995117,-1694.59997559,1014.29998779},
{2316.0,2306.19995117,-1207.30004883,1048.90002441},
{2318.0,2235.10009766,-1105.09997559,1051.19995117},
{2318.0,226.60000610,1293.30004883,1081.90002441},
{2322.0,2255.10009766,-1212.80004883,1049.09997559},
{2320.0,2282.00000000,-1137.80004883,1050.90002441},
{2421.0,2500.39990234,-1711.40002441,1014.90002441},
{2312.0,2209.39990234,-1077.69995117,1050.40002441},
{2312.0,2242.89990234,-1066.69995117,1049.19995117},
{2229.0,2325.60009766,-1017.50000000,1049.19995117},
{2229.0,2329.00000000,-1017.90002441,1049.19995117},
{2229.0,1272.50000000,-794.20001221,1083.19995117},
{2229.0,1279.69995117,-794.79998779,1083.19995117},
{2190.0,2322.69995117,-1015.09997559,1054.50000000},
{2318.0,258.60000610,1293.80004883,1080.09997559},
{2028.0,258.60000610,1292.50000000,1079.80004883},
{2028.0,151.30000305,1367.69995117,1082.90002441},
{2102.0,263.50000000,1288.80004883,1079.69995117},
{2102.0,78.59999847,1341.30004883,1083.59997559},
{2102.0,79.90000153,1337.19995117,1087.90002441},
{2102.0,-288.50000000,1480.50000000,1084.09997559},
{2102.0,148.50000000,1383.19995117,1087.80004883},
{2102.0,-266.50000000,1447.19995117,1084.19995117},
{2102.0,147.30000305,1373.59997559,1083.30004883},
{2149.0,-283.79998779,1477.00000000,1084.19995117},
{2149.0,-268.10000610,1447.19995117,1084.19995117},
{2149.0,266.89999390,1290.90002441,1080.30004883},
{2149.0,77.80000305,1339.40002441,1083.50000000},
{2101.0,-270.60000610,1447.40002441,1087.90002441},
{2101.0,2327.00000000,-1017.70001221,1049.69995117},
{2101.0,2311.30004883,-1207.19995117,1048.50000000},
{2101.0,148.50000000,1376.80004883,1087.69995117},
{2101.0,2369.69995117,-1126.00000000,1050.40002441},
{2149.0,323.79998779,1478.30004883,1084.50000000},
{1518.0,319.89999390,1478.59997559,1084.69995117},
{2102.0,321.10000610,1478.30004883,1084.40002441},
{2317.0,326.39999390,1490.00000000,1084.19995117},
{1788.0,326.39999390,1488.69995117,1084.00000000},
{1748.0,419.20001221,2541.00000000,9.60000038},
{1786.0,2264.80004883,-1137.30004883,1050.09997559},
{2101.0,2331.10009766,-1068.59997559,1048.00000000}
};
stock bool:IsAtCandySprunk(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 2.0, -2420.219, 984.578, 44.297)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2420.180, 985.945, 44.297)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2225.203, -1153.422, 1025.906)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2576.703, -1284.430, 1061.094)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2155.906, 1606.773, 1000.055)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2209.906, 1607.195, 1000.055)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2222.203, 1606.773, 1000.055)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 495.969, -24.320, 1000.734)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 501.828, -1.430, 1000.734)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 373.828, -178.141, 1000.734)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 330.680, 178.500, 1020.070)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 331.922, 178.500, 1020.070)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 350.906, 206.086, 1008.477)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 361.563, 158.617, 1008.477)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 371.594, 178.453, 1020.070)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 374.891, 188.977, 1008.477)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2155.844, 1607.875, 1000.063)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2202.453, 1617.008, 1000.063)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2209.242, 1621.211, 1000.063)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2222.367, 1602.641, 1000.063)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 500.563, -1.367, 1000.734)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 379.039, -178.883, 1000.734)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2480.86,-1959.27,12.9609)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1634.11,-2237.53,12.8906)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2139.52,-1161.48,23.3594)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2153.23,-1016.15,62.2344)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1350.12,493.859,10.5859)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2229.19,286.414,34.7031)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1659.46,1722.86,10.2188)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2647.7,1129.66,10.2188)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2845.73,1295.05,10.7891)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1398.84,2222.61,10.4219)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1455.12,2591.66,55.2344)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -76.0312,1227.99,19.125)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 662.43,-552.164,15.7109)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -253.742,2599.76,62.2422)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2271.73,-76.4609,25.9609)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1789.21,-1369.27,15.1641)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1729.79,-1943.05,12.9453)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2060.12,-1897.64,12.9297)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1928.73,-1772.45,12.9453)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2325.98,-1645.13,14.2109)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2352.18,-1357.16,23.7734)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1154.73,-1460.89,15.1562)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1350.12,492.289,10.5859)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2118.97,-423.648,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2118.62,-422.414,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2097.27,-398.336,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2092.09,-490.055,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2063.27,-490.055,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2005.65,-490.055,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2034.46,-490.055,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2068.56,-398.336,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2039.85,-398.336,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2011.14,-398.336,34.7266)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -1980.79,142.664,27.0703)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2319.99,2532.85,10.2188)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1520.15,1055.27,10.00)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2503.14,1243.7,10.2188)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2085.77,2071.36,10.4531)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -862.828,1536.61,21.9844)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -14.7031,1175.36,18.9531)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, -253.742,2597.95,62.2422)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 201.016,-107.617,0.898438)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1277.84,372.516,18.9531)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 315.913208,-140.520568,999.601562)) return true;
    else if(IsPlayerInRangeOfPoint(playerid, 4.0, -33.272846,-185.693786,1003.546875)) return true;
    else return false;
}

enum cinf
{
	Float:carX, 	// Координата X
	Float:carY, 	// Координата Y
	Float:carZ, 	// Координата Z
	Float:carA, 	// Координата Поворота авто

	cModel, 		// Модель авто
	cMaincar, 		// Сама тачка
	Text3D:c3d, 	// 3д текст
	cNumber[20],    // Номера

	cSpoiler, 		// Тюнинг
	cHood, 			// Тюнинг
	cSideskirt, 	// Тюнинг
	cNitro, 		// Тюнинг
	cLamps, 		// Тюнинг
	cExhaust, 		// Тюнинг
	cWheels, 		// Тюнинг
	cRoof, 			// Тюнинг
	cStereo, 		// Тюнинг
	cHydraulics, 	// Тюнинг
	cBullbar, 		// Тюнинг
	cRearBullbars, 	// Тюнинг
	cFrontSign, 	// Тюнинг
	cFrontBullbars, // Тюнинг
	cFrontBumper, 	// Тюнинг
	cRearBumper, 	// Тюнинг
	cVents, 		// Тюнинг

	cColor1, 		// Цвет 1
	cColor2, 		// Цвет 2
	cPaintJob, 		// Покраска

	cSQL 			// Порядковый номер авто, к каждой след. тачке +1
};
new CarInfo[MAX_PLAYERS][cinf];
new bool:IsForSaleCar[MAX_VEHICLES] = false;
stock bool:ValidCarForNumber(model)
{
	switch(model)
	{
	    case 400..416, 418..423, 426..429, 431,
		433..434, 436..440, 442..445, 451,
		455..459, 466..467, 470, 474..475,
		477..480, 482..483, 489..492, 494..496,
		498..500, 502..508, 514..518, 521..522,
		524..529, 533..536, 540..547, 549..552,
		554..562, 565..567, 573, 575, 576, 578..582,
	    585..589, 596..600, 602..605, 609: return true;
	}
	return false;
}


public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}



new Float:PaintballSpawns[7][3] = {
{-394.8027,2232.2317,42.4297},
{-430.8412,2240.5371,42.9834},
{-369.2361,2248.3127,42.4844},
{-350.8910,2218.0215,42.4912},
{-384.0544,2206.2908,42.4235},
{-395.7100,2214.9480,42.4297},
{-445.3718,2222.5481,42.4297}
};




new Float:InteriorsForChange[31][3] = {
{260.66,1237.82,1084.26},
{83.26, 1322.93,1083.86},
{-42.80,1405.90,1084.43},
{2365.10, -1134.81, 1050.88},
{2217.62, -1076.04, 1050.48},
{2807.48, -1173.98, 1025.57},
{-68.83, 1352.09,1080.21},
{140.24, 1366.80,1083.86},
{22.51,1404.36,1084.43},
{-261.27,1456.57,1084.37},
{2324.47,-1148.81,1050.71},
{222.00,1141.04,1082.61},
{447.24,1397.75,1084.30},
{260.95,1285.09,1080.26},
{226.96, 1114.44,1081.00},
{223.09, 1287.74,1082.14},
{225.64, 1239.91,1082.14},
{234.95, 1187.91,1080.26},
{2260.13, -1136.15,1050.63},
{2317.94, -1026.04,1050.22},
{2233.67, -1114.42,1050.88},
{266.95,304.85,999.15},
{2468.3770,-1698.1050,1013.5078},//22
{244.23,304.94,999.15},
{2196.5378,-1204.1652,1049.0234},
{2269.08,-1210.73,1047.56},
{2308.68,-1212.24,1049.02},
{2332.91,-1075.92,1049.02},
{225.86,1022.37,1084.02},
{1298.7312,-796.7465,1084.0078},
{1260.6440,-785.3558,1091.9063}
};

new InteriorsForChange2[31][2] = {
{9,300},
{9,350},
{8,250},
{8,400},
{1,200},
{8,350},
{6,250},
{5,500},
{5,350},
{4,350},
{12,550},
{4,250},
{2,300},
{4,300},
{5,400},
{1,250},
{2,250},
{3,400},
{10,200},
{9,550},
{5,200},
{2,100},
{2,200},//22
{1,100},
{6,350},
{10,350},
{6,200},
{6,200},
{7,700},
{5,1000},
{5,1000}
};

enum pPaperInfo
{
	PaperUsed,
	PaperMaker[20],
	PaperTitle[64],
	PaperText1[128],
	PaperText2[128],
	PaperText3[128],
	PaperText4[128],
	PaperText5[128],
	PaperText6[128],
	PaperText7[128],
	SafeSaving
};
new PaperInfo[10][pPaperInfo];

enum pPaper
{
	pMaker[20],
	pTitle[64],
	pLine1[128],
	pLine2[128],
	pLine3[128],
	pLine4[128],
	pLine5[128],
	pLine6[128],
	pLine7[128]
};
new Paper[MAX_PLAYERS][pPaper];



enum hInfo
{
    hOwned,
    hOwner[MAX_PLAYER_NAME],
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	hInt,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hPrice,
	hHel,
	hArm,
	hSignal,
	hNarks,
	hMats,
	hLock,
	hRent,
	hRentabil,
	hMoney,
	hLevel,
	hWorld,
	hBar,
	hDonatePrice,
	hRobbed, // Время на грабеж
	hRobMoney, // Скока украли, не более 5 предметов в сутки
	hRobTry, // Попытки взлома
	hObjects[sizeof(RobHouse_Objects)],
	
	hPickup
};

new HouseInfo[Houses][hInfo];

enum bInfo
{
    bOwned,
	bOwner[24],
	bDiscription[32],
	bExtortion,
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevel,
	bPrice,
	bEntranceCost,
	bMoney,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
	bWorld,
	bIcon,
	bDonatePrice,
	bProcent,
	
	bPickup,
	bExitPickup
};
new BizzInfo[Bizzes][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[24],
	sbDiscription[32],
	sbExtortion,
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevel,
	sbPrice,
	sbEntranceCost,
	sbMoney,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
	sbDonatePrice,
	sbProcent,
	
	sbPickup
};
new SBizzInfo[SBizzes][sbInfo];


stock bool:CheckBiz(playerid, id) // Нужно для проверки ника и ключа
{
	new name[24];
	GetPlayerName(playerid, name, 24);
	
	if(id >= 0 && id < sizeof(BizzInfo))
	{
	    if(strcmp(BizzInfo[id][bOwner], name, false) == 0) return false;
	}
	if(id > 99 && id < sizeof(SBizzInfo)+100)
	{
		if(strcmp(SBizzInfo[id-100][sbOwner], name, false) == 0) return false;
	}
	return true;
}
stock bool:CheckHouse(playerid, id) // Нужно для проверки ника и ключа
{
	new name[24];
	GetPlayerName(playerid, name, 24);

	if(id >= 0 && id < sizeof(HouseInfo))
	{
	    if(strcmp(HouseInfo[id][hOwner], name, false) == 0) return false;
	}
	return true;
}



enum mHaul
{
	mCapacity,
	mLoad,
};

new MatsInfo[15][mHaul];

new DrugsLoad[15];

enum pCrime
{
	Cop[24],
	Reason[30]
};
new PlayerCrime[MAX_PLAYERS][pCrime];




//------------------------------------------------------------------------------------------------------

main()
{
	print(" ");
	print(" ");
	print(" Crime Streets RPG");
	print("_____________________");
	print(" By: BomjGop Team");
	print(" ");
}


//------------------------------------------------------------------------------------------------------


public PreparePaintball()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
	        if(PlayerPaintballing[i] != 0) SendClientMessage(i, COLOR_INFO, "Матч по пейнтболу начнется через 20 секунд");
		}
	}
 	SetTimer("StartPaintball", 20000, 0);
	return 1;
}

public StartPaintball()
{
	PaintballRound = 1;
	StartingPaintballRound = 0;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            ResetPlayerWeaponsUAC(i);
             	GivePlayerWeaponUAC(i, 29, 999);
	            SendClientMessage(i, COLOR_INFO, "До окончания матча 4 минуты!");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        }
	    }
	}
	SetTimer("PaintballEnded", 240000, 0);
	return 1;
}

public PaintballEnded()
{
	new string[150];
	new name[MAX_PLAYER_NAME];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                GetPlayerName(PaintballWinner, name, sizeof(name));
	                format(string,sizeof(string), "%s выиграл матч с %d убийствами!",name,PaintballWinnerKills);
	                SendClientMessage(i, COLOR_INFO, string);
	            }
	            ResetPlayerWeaponsUAC(i);
	            PlayerPaintballing[i] = 0;
	            oSetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
	        }
		}
	}
	AnnouncedPaintballRound = 0;
    PaintballRound = 0;
	return 1;
}

stock GetProdCar(vehid)
{
	for(new i; i < sizeof(ProdCarInfo); i ++)
	{
	    if(vehid == ProdCarInfo[i][prodCar]) return i;
	}
	return -1;
}
stock bool:IsAnInstructor(playerid)
{
    switch(GetPVarInt(playerid,"Team"))
    {
        case 11: return true;
	}
	return false;
}
stock bool:IsAGungMember(playerid)
{
    switch(GetPVarInt(playerid,"Team"))
    {
        case 10, 13..17: return true;
	}
	return false;
}
stock bool:IsAMafiaMember(playerid)
{
    switch(GetPVarInt(playerid,"Team"))
    {
        case 5..6, 12: return true;
	}
	return false;
}
stock bool:IsAFractionMember(playerid)
{
    switch(GetPVarInt(playerid,"Team"))
    {
        case 7..9: return true;
	}
	return false;
}
stock bool:IsACop(playerid)
{
    switch(GetPVarInt(playerid,"Team"))
    {
        case 1..3: return true;
	}
	return false;
}
stock bool:IsAFarmer(playerid)
{
    switch(GetPVarInt(playerid,"Team"))
    {
        case 18: return true;
	}
	return false;
}
stock bool:IsAtClothShop(playerid)
{

    if(IsPlayerInRangeOfPoint(playerid,25.0,207.5627,-103.7291,1005.2578)) 			return true;
	else if(IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047)) 		return true;
	else if(IsPlayerInRangeOfPoint(playerid, 25.0, 207.9146,-134.8147,1002.8672)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,30.0,214.4470,-7.6471,1001.2109)) 		return true;
	else if(IsPlayerInRangeOfPoint(playerid,50.0,161.3765,-83.8416,1001.8047)) 		return true;
	return false;
}
stock bool:IsAtGasStation(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10.0,1004.0070,-939.3102,42.1797)) 		return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1944.3260,-1772.9254,13.3906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-90.5515,-1169.4578,2.4079)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1609.7958,-2718.2048,48.5391))return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2029.4968,156.4366,28.9498)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2408.7590,976.0934,45.4175)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-2243.9629,-2560.6477,31.8841))return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1676.6323,414.0262,6.9484)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2202.2349,2474.3494,10.5258)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,614.9333,1689.7418,6.6968)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1328.8250,2677.2173,49.7665)) return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,70.3882,1218.6783,18.5165)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2113.7390,920.1079,10.5255)) 	return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1327.7218,2678.8723,50.0625)) return true;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,653.2737,-565.6024,16.0574)) 	return true;
	return false;
}
stock IsAtFishPlace(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,1.0,403.8266,-2088.7598,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,398.7553,-2088.7490,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,1.0,396.2197,-2088.6692,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,391.1094,-2088.7976,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,1.0,383.4157,-2088.7849,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,374.9598,-2088.7979,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,1.0,369.8107,-2088.7927,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,367.3637,-2088.7925,7.8359)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,1.0,362.2244,-2088.7981,7.8359) || IsPlayerInRangeOfPoint(playerid,1.0,354.5382,-2088.7979,7.8359)) return 1;
	return 0;
}
stock IsAtCookPlace(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,3.0,369.9786,-4.0798,1001.8589)) return 1; //Cluckin Bell
    else if(IsPlayerInRangeOfPoint(playerid,3.0,376.4466,-60.9574,1001.5078) || IsPlayerInRangeOfPoint(playerid,3.0,378.1215,-57.4928,1001.5078)) return 1; //Burgershot
	else if(IsPlayerInRangeOfPoint(playerid,3.0,374.1185,-113.6361,1001.4922) || IsPlayerInRangeOfPoint(playerid,3.0,377.7971,-113.7668,1001.4922)) return 1; //Well Stacked Pizza
	return 0;
}
stock bool:IsAtGreenZone(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 3.75, 761.253417, 10.783032, 1001.163940)) 		return false; // Ринг в спортзале
    else if(GetPlayerInterior(playerid) == 10) return false; /// для пейнтбола
    
    else if(IsPlayerInArea(playerid,-2295.179199, -80.054550, -1871.179199, 611.945434)) 		return true; // СФ большой квадрат
    
    else if(IsPlayerInArea(playerid,-2214.973144, -317.836853, -1930.973144, 98.163154)) 
    {
        if(GetPVarInt(playerid, "Team") == 11) return false;
        return true;
	}
	
    else if(IsPlayerInArea(playerid,1390.780639, -1777.088378, 1514.780639, -1673.088378)) 		return true; // Мэрия
    else if(IsPlayerInArea(playerid,1748.297607, -1341.499633, 1852.297607, -1253.499633)) 		return true; // Репортеры
    else if(IsPlayerInArea(playerid, ZoneInfo[20][zoneX], ZoneInfo[20][zoneY], ZoneInfo[20][zoneX2], ZoneInfo[20][zoneY2])) return true;

	else if(IsPlayerInRangeOfPoint(playerid, 70.0, 1464.388061,-1024.412475,23.828125)) return true;//modm-bankLS(70)
	else if(IsPlayerInRangeOfPoint(playerid, 60.0, 381.864349,-1897.043579,7.835937)) return true;//Paintball(60)
	else if(IsPlayerInRangeOfPoint(playerid, 70.0, -1546.398071,-438.974456,6.000000)) return true;//gonki(70)
	else if(IsPlayerInRangeOfPoint(playerid, 100.0, -2439.341552,520.845886,34.169033)) return true;//inkasatori(200)
	else if(IsPlayerInRangeOfPoint(playerid, 100.0, 481.428375,-1652.416503,23.237207)) return true;//otelLS(100)
	else if(IsPlayerInRangeOfPoint(playerid, 50.0, 2312.397949,-9.530097,26.742187)) return true;//banki(50)
	else if(IsPlayerInRangeOfPoint(playerid, 200.0, 2822.187500,1297.327758,10.533504)) return true;//spawnLV(200)
	else if(IsPlayerInRangeOfPoint(playerid, 50.0, -1662.496337,1210.307861,7.250000)) return true; // гонки пвп
	else if(IsPlayerInRangeOfPoint(playerid, 100.0, 1174.939208,-1324.262573,14.200626)) return true; // мчс
	else if(GetPlayerInterior(playerid) != 0) return true;
 	return false;
}
stock IsAtBar(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,7.0,495.7801,-76.0305,998.7578) || IsPlayerInRangeOfPoint(playerid,7.0,499.9654,-20.2515,1000.6797)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,7.0,1215.9480,-13.3519,1000.9219) || IsPlayerInRangeOfPoint(playerid,10.0,-2658.9749,1407.4136,906.2734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid,6.0,1257.8400,-791.0323,1084.0078)) return 1;//yakuza
	else if(IsPlayerInRangeOfPoint(playerid,6.0,968.7729,-46.6298,1001.1172)) return 1;//RM
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-224.7820,1405.0039,27.7734)) return 1;//bikers
	else if(IsPlayerInRangeOfPoint(playerid,30.0,-787.5648,500.3819,1371.7422)) return 1;//restraunt
	else if(IsPlayerInRangeOfPoint(playerid,10.0,2537.5273,-1285.7012,1054.6406)) return 1;//LCN
	else if(IsPlayerInRangeOfPoint(playerid,10.0,1207.2397,-29.1111,1000.9531)) return 1;//Strip Club
	else if(IsPlayerInRangeOfPoint(playerid,15.0,240.399490,1025.020263,1084.007812) && GetPlayerVirtualWorld(playerid) == 190) return 1;
	new location = GetPVarInt(playerid, "Local");
	if(location >= 1000 && location-1000 < sizeof(HouseInfo) && HouseInfo[location-1000][hBar]) return 1;
	return 0;
}
stock bool:IsAtModShop(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid,20.0,617.5318,-1.9900,1000.6398)) return true;
    else if(IsPlayerInRangeOfPoint(playerid,20.0,615.2848,-124.2390,997.6927)) return true;
    else if(IsPlayerInRangeOfPoint(playerid,20.0,616.7810,-74.8151,997.7679)) return true;
    
    else if(IsPlayerInRangeOfPoint(playerid,10.0,2645.0210,-2038.4083,13.3174)) return true;
    else if(IsPlayerInRangeOfPoint(playerid,20.0,-1935.8278,244.3521,34.4609)) return true;
    else if(IsPlayerInRangeOfPoint(playerid,20.0,-2722.6348,217.5993,4.4844)) return true;
    else if(IsPlayerInRangeOfPoint(playerid,20.0,1041.7347,-1016.8036,32.1016)) return true;
    else if(IsPlayerInRangeOfPoint(playerid,20.0,2386.6943,1050.0391,10.8203)) return true;
    return false;
}
    
stock bool:Bankomat(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,1.4, 833.598632,3.221422,1004.179687)) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, 830.649719,-0.279378,1004.179687) ) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, -2032.366577,-57.468070,35.332847) ) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, 1540.252197,-1618.886108,13.546875) ) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, 475.037261,-1648.377441,24.484584) ) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, 716.959411,-1439.769409,13.539062) ) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, 1834.402587,-1851.701904,13.389747) ) return true;
	else if( IsPlayerInRangeOfPoint(playerid,1.4, 2837.10009766,1283.80004883,11.5) ) return true;
	return false;
}

stock bool:IsABoat(carid)
{
	switch(GetVehicleModel(carid))
	{
	    case 472, 473, 493, 595, 484, 430, 453, 446, 452, 454: return true;
	}
	return false;
}

stock bool:IsAPlane(carid)
{
	switch(GetVehicleModel(carid))
	{
	    case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469: return true;
	}
	return false;
}

stock bool:IsABike(carid)
{
    switch(GetVehicleModel(carid))
	{
	    case 510, 481, 509, 462, 448: return true;
	}
	return false;
}
stock IsACopCar(carid)
{
	if(IsAPoliceCar(carid) || IsAFBICar(carid) || IsAArmyCar(carid)) return 1;
	return 0;
}
stock IsAPoliceCar(carid)
{
    for(new c = 0; c < sizeof(PoliceCar); c++)
	{
 		if(carid == PoliceCar[c]) return 1;
	}
	return 0;
}
stock IsAFBICar(carid)
{
    for(new c = 0; c < sizeof(FBICar); c++)
	{
 		if(carid == FBICar[c]) return 1;
	}
	return 0;
}
stock IsAArmyCar(carid)
{
    for(new c = 0; c < sizeof(ArmyCar); c++)
	{
 		if(carid == ArmyCar[c]) return 1;
	}
	return 0;
}
stock IsACollectorcar(carid)
{
	for(new c = 0; c < sizeof(collectorcars); c++)
	{
 		if(carid == collectorcars[c]) return 1;
	}
	return 0;
}
stock IsAnAmbulance(carid)
{
	for(new c = 0; c < sizeof(AmbulanceCar); c++)
	{
 		if(carid == AmbulanceCar[c]) return 1;
	}
	return 0;
}
stock IsAHarvester(carid)
{
	for(new c = 0; c < sizeof(GangCarInfo[]); c++)
	{
 		if(carid == GangCarInfo[9][c][gVehId] && GetVehicleModel(carid) == 532) return 1;
	}
	return 0;
}


stock IsARifaWorkCar(carid)
{
	for(new c = 0; c < sizeof(GangCarInfo[]); c++)
	{
	  if(carid == GangCarInfo[8][c][gVehId] && MatsInfo[c][mCapacity] > 0) return 1;
	}
	return 0;
}
stock IsAFarmerCar(carid)
{
	for(new c = 0; c < sizeof(GangCarInfo[]); c++)
	{
 		if(carid == GangCarInfo[9][c][gVehId] && GangCarInfo[9][c][gCarModel] != 532) return 1;
	}
	return 0;
}

stock IsAHitmansCar(carid)
{
	for(new c = 0; c < sizeof(HitmansCar); c++)
	{
 		if(carid == HitmansCar[c]) return 1;
	}
	return 0;
}
stock IsAMeriyaCar(carid)
{
	for(new c = 0; c < sizeof(MeriyaCar); c++)
	{
 		if(carid == MeriyaCar[c]) return 1;
	}
	return 0;
}
stock IsASanNewsCar(carid)
{
	for(new c = 0; c < sizeof(SanNewsCar); c++)
	{
 		if(carid == SanNewsCar[c]) return 1;
	}
	return 0;
}
stock IsALicenzersCar(carid)
{
	for(new c = 0; c < sizeof(LicenzersCar); c++)
	{
 		if(carid == LicenzersCar[c]) return 1;
	}
	return 0;
}
stock IsAMehanikCar(carid)
{
	for(new c = 0; c < sizeof(MehanikCar); c++)
	{
 		if(carid == MehanikCar[c]) return 1;
	}
	return 0;
}
stock IsAKartCar(carid)
{
	for(new c = 0; c < sizeof(KartCar); c++)
	{
 		if(carid == KartCar[c]) return 1;
	}
	return 0;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
    
    if(IsConnected[playerid] == true)
    {
        Kick(playerid);
        return 1;
    }
    IsConnected[playerid] = true;
    
    for(new i; i < sizeof(maxFunCalls[]); i++)
    {
        maxFunCalls[playerid][i][countCheck] = 0;
	}
	
	new ip[24];
	new otherip[24];
	new totalpls;
	GetPlayerIp(playerid, ip, sizeof(ip));



	static PrevConnect;
	static PrevIP[24];
	static NoBans;

	if(PrevConnect > GetTickCount() && strcmp(PrevIP, ip, true) == 0 && strlen(ip) > 5 && strlen(PrevIP) > 5 && NoBans < gettime())
	{
	    new str[128];
	    Kick_(playerid);
		format(str, sizeof(str), "banip %s", ip);
		SendRconCommand(str);
		SendRconCommand("reloadbans");
		NoBans = gettime()+10;
		
		format(str, sizeof(str), "Забанен ip: %s за флуд атаку", ip);
		ABroadCast(str);
		return 1;
	}
	PrevConnect = GetTickCount()+400;
	strmid(PrevIP, ip, 0, strlen(ip), 255);
	
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		GetPlayerIp(i, otherip, sizeof(otherip));
		if(strcmp(ip, otherip, true) == 0 && AFKText[i] > 3 && GetPVarInt(i, "Level") < 3)
		{
		    totalpls++;
		}
	}
	if(totalpls >= 3)
	{
	    new str[128];
	    format(str, sizeof(str), "AdmCmd: %s[ip: %s] пытался подключить несколько аккаунтов (%d)", GetName(playerid), ip, totalpls);
	    ABroadCast(str);
	    
	    SendClientMessage(playerid, COLOR_RED, "На сервере запрещена игра с нескольких аккаунтов");
	    Kick_(playerid);
	    return 1;
	}
	
   	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);

    
    SetPlayerVirtualWorld(playerid,435332);
    AFKText[playerid] = 0;
 	SetPVarInt(playerid, "HealthDelay", 1);
 	SpecJail[playerid] = 0;
 	SetPlayerArmedWeapon(playerid, 0);
    ResetPlayerWeaponsUAC(playerid);
    SetPlayerHealthUAC(playerid, 100.0);

    new name[MAX_PLAYER_NAME];
    new hour, minute;
   	gettime(hour, minute);
    SetPlayerTime(playerid,hour,minute);
  	GetPlayerName(playerid, name, sizeof(name));
  	
  	if(LoginDelay[playerid] != -1)
  	{
  	    KillTimer(LoginDelay[playerid]);
  	    LoginDelay[playerid] = -1;
	}
	if(BikeJumpTimer[playerid] != -1)
	{
	    KillTimer(BikeJumpTimer[playerid]);
	    BikeJumpTimer[playerid] = -1;
	}
	if(BusTimer[playerid] != -1)
	{
	    KillTimer(BusTimer[playerid]);
	    BusTimer[playerid] = -1;
	}
	if(StationTimer[playerid] != -1)
	{
	    KillTimer(StationTimer[playerid]);
	    StationTimer[playerid] = -1;
	}
	if(PassengerTimer[playerid] != -1)
	{
		KillTimer(PassengerTimer[playerid]);
		PassengerTimer[playerid] = -1;
	}
	if(TaxiLeaveTimer[playerid] != -1)
	{
		KillTimer(TaxiLeaveTimer[playerid]);
		TaxiLeaveTimer[playerid] = -1;
	}
    if(Restart)
	{
		 SendClientMessage(playerid, COLOR_RED, "Сервер временно недоступен (рестарт)");
		 Kick_(playerid);
		 return 1;
	}
	
	
	SetPVarInt(playerid, "SpecTV", -1);
	PlayerChase[playerid] = -1;
	Pobegtime[playerid] = 0;
	order[playerid] = 0;
	MatsTime[playerid] = 0;
    ApprovedLawyer[playerid] = 0;
	UsedFind[playerid] = 0;
	SpawnChange[playerid] = 1;
	CarOffer[playerid] = 999;
	CarPrice[playerid] = 0;
	CarID[playerid] = 0;
	CarCalls[playerid] = 0;
	Condom[playerid] = 0;
	STDPlayer[playerid] = 0;
	SexOffer[playerid] = 999;
	SexPrice[playerid] = 0;
	TalkingLive[playerid] = 999;
	LiveOffer[playerid] = 999;
	TakingLesson[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	OrderReady[playerid] = 0;
	WantedPoints[playerid] = 0;
	PlacedNews[playerid] = 0;
	WantedLevel[playerid] = 0;
	SchoolSpawn[playerid] = 0;
 	PlayerTied[playerid] = 0;
	FindTimePoints[playerid] = 0;
	FindTime[playerid] = 0;
	JobDuty[playerid] = 0;
	WritingPaper[playerid] = 0;
	WritingPaperNumber[playerid] = 999;
	WritingLine[playerid] = 0;
	GotPaper[playerid] = 0;
	PaperOffer[playerid] = 999;
    gLastCar[playerid] = 0;
	FirstSpawn[playerid] = 0;
	gOoc[playerid] = 0;
	gNews[playerid] = 0;
	BigEar[playerid] = 0;
	gDice[playerid] = 0;
	gFam[playerid] = 0;
	PlayerTazeTime[playerid] = 0;
	MatsHolding[playerid] = 0;
	HireCar[playerid] = 99999;
	SetPVarInt(playerid, "Caller", -1);
	SetPVarInt(playerid, "readPmPlayer", -1);
	DClog[playerid] = 0;
	PlayerPaintballing[playerid] = 0;
	PlayerPaintballKills[playerid] = 0;
	DelayPayCheck[playerid] = 0;
	ClearCrime(playerid);
	Old_Car[playerid] = 0;
	TaimSuppReport[playerid] = 0;//антифлудэ
	DMjail[playerid] = 10;// анти ДМ в камере
    DMdemorgan[playerid] = 15;
	DMdemorgan[playerid] = 15;
	ReadPm[playerid] = 0;//читать личку
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	DisablePlayerCheckpoint(playerid);
	RemovePlayerFromVehicleTimer[playerid] = 0;
	ClearMarriage(playerid);
	ClearMail(playerid);
	SetPVarString(playerid, "Forum", "no");
	SetPlayerColor(playerid,COLOR_GRAD2);
	
	// Текст названия машины
	CarName_Name[playerid] = CreatePlayerTextDraw(playerid, 508.000000,386.499908,"car name");

	PlayerTextDrawSetProportional(playerid, CarName_Name[playerid],1);
	PlayerTextDrawColor(playerid, CarName_Name[playerid],0xffffffff);
	PlayerTextDrawLetterSize(playerid, CarName_Name[playerid],0.349999,0.999999);
	PlayerTextDrawFont(playerid, CarName_Name[playerid],2);
	PlayerTextDrawBackgroundColor(playerid, CarName_Name[playerid],0x00000033);
	PlayerTextDrawAlignment(playerid, CarName_Name[playerid],0);
	PlayerTextDrawSetOutline(playerid, CarName_Name[playerid],1);
	// =========
	
	ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "   ","{ffffff}Загрузка игры, пожалуйста, подождите...", "Ok", "");
	SetTimerEx("Camera", 1000, false, "i", playerid);
	
	RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 5291, 2177.9921875, -2006.7578125, 23.2890625, 15.0);
	RemoveBuildingForPlayer(playerid, 5357, 2177.9921875, -2006.7578125, 23.2890625, 15.0); // LOD
	RemoveBuildingForPlayer(playerid, 3722, 2099.1999511719, -1982.9000244141, 17.0, 15.0);
	RemoveBuildingForPlayer(playerid, 3723, 2099.1999511719, -1982.9000244141, 17.0, 15.0); // LOD
 	return 1;
}

stock ClearMarriage(playerid)
{
    SetPVarString(playerid, "MarriedTo", "no");
	SetPVarInt(playerid, "Married", 0);
	return 1;
}

stock ClearMail(playerid)
{
    SetPVarString(playerid, "Mail", "no");
	return 1;
}

stock ClearPaper(paper)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "нет");
	PaperInfo[paper][PaperUsed] = 0;
	strmid(PaperInfo[paper][PaperMaker], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperTitle], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText1], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText2], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText3], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText4], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText5], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText6], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText7], string, 0, strlen(string), 255);
	return 1;
}

stock ClearCrime(playerid)
{
	strmid(PlayerCrime[playerid][Cop], "Нет", 0, strlen("Нет"), 255);
	strmid(PlayerCrime[playerid][Reason], "Нет", 0, strlen("Нет"), 255);

	SetPlayerWantedLevel(playerid, 0);
	return 1;
}

stock FishCost(fish)
{
	new cost = 0;
	switch (fish)
	{
	    case 1: cost = 1;
	    case 2: cost = 3;
	    case 3: cost = 3;
	    case 5: cost = 3;
	    case 6: cost = 2;
	    case 8: cost = 4;
	    case 9: cost = 6;
	    case 11: cost = 5;
	    case 12: cost = 7;
	    case 14: cost = 6;
	    case 15: cost = 4;
	    case 16: cost = 3;
	    case 17: cost = 5;
	    case 18: cost = 3;
	    case 19: cost = 4;
	    case 21: cost = 3;
	}
	return cost;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
	if(IsConnected[playerid] == false) return 1;
    IsConnected[playerid] = false;
    
	if(WantedLevel[playerid] > 0 && GetPVarInt(playerid, "Jailed") == 0)
	{
		SetPVarInt(playerid, "Jailed", 1);
		switch(WantedLevel[playerid])
		{
			case 1..3: SetPVarInt(playerid, "JailTime", 300);
			case 4..6: SetPVarInt(playerid, "JailTime", 900);
			case 7..9: SetPVarInt(playerid, "JailTime", 2100);
			case 10:   SetPVarInt(playerid, "JailTime", 2700);
		}
	}
	OnPlayerUpdateGF(playerid);
    DestroyPlayerCar(playerid);
   	UpdateBizzLastVisit(playerid, GetPVarInt(playerid, "Bizz"));

	
	if(CheckCJRunTimer[playerid])
	{
		KillTimer(CheckCJRunTimer[playerid]);
		CheckCJRunTimer[playerid] = 0;
	}
	if(LoginDelay[playerid] != -1)
	{
	    KillTimer(LoginDelay[playerid]);
	    LoginDelay[playerid] = -1;
	}
	if(BikeJumpTimer[playerid] != -1)
	{
	    KillTimer(BikeJumpTimer[playerid]);
	    BikeJumpTimer[playerid] = -1;
	}
	if(PassengerTimer[playerid] != -1)
	{
		KillTimer(PassengerTimer[playerid]);
		PassengerTimer[playerid] = -1;
	}
	if(TaxiLeaveTimer[playerid] != -1)
	{
		KillTimer(TaxiLeaveTimer[playerid]);
		TaxiLeaveTimer[playerid] = -1;
	}
	if(Timer_VehName[playerid] != 0)
	{
	    KillTimer(Timer_VehName[playerid]);
	    Timer_VehName[playerid] = 0;
	}
	if(TimerEndCleanerWork[playerid] != -1)
	{
	    KillTimer(TimerEndCleanerWork[playerid]);
	    TimerEndCleanerWork[playerid] = -1;
	}
	if(PlayerSchoolCar[playerid] != 0)
	{
	    DestroyVehicle(PlayerSchoolCar[playerid]);
	    PlayerSchoolCar[playerid] = 0;
	}
	if(Cuffed_Timer[playerid] != 0)
	{
	    KillTimer(Cuffed_Timer[playerid]);
	    Cuffed_Timer[playerid] = 0;
	}
	if(AdminFlood[playerid] != -1)
	{
 		KillTimer(AdminFlood[playerid]);
   		AdminFlood[playerid] = -1;
	}
	if(TimeShowTimer[playerid] != -1)
	{
 		KillTimer(TimeShowTimer[playerid]);
   		TimeShowTimer[playerid] = -1;
	}
	if(DrugsGone[playerid] != -1)
	{
	    KillTimer(DrugsGone[playerid]);
	    DrugsGone[playerid] = -1;
	}
	if(GetPVarInt(playerid, "FactoryObject") != 0)
	{
		DestroyObject(GetPVarInt(playerid, "FactoryObject"));
	}
	if(Pvp_Race_Car[playerid] != 0)
	{
	    DestroyVehicle(Pvp_Race_Car[playerid]);
	    Pvp_Race_Car[playerid] = 0;
	}
 	if(TalkingLive[playerid] != 999)
  	{
   		SendClientMessage(TalkingLive[playerid], COLOR_WHITE, "Прямой эфир окончен");
     	TalkingLive[TalkingLive[playerid]] = 999;
      	TalkingLive[playerid] = 999;
   	}
	for(new i; i < sizeof(PlayerCleaner); i++)
	{
		if(PlayerCleaner[i] == playerid)
		{
		    PlayerCleaner[i] = -1;
		    break;
		}
	}
	for(new i; i < 10; i++)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			RemovePlayerAttachedObject(playerid, i);
		}
	}
	for(new i; i < MAX_VEHOBJECT; i++)
	{
		if(AttachOjects[playerid][i] != 0)
		{
	    	DestroyObject(AttachOjects[playerid][i]);
	    	AttachOjects[playerid][i] = 0;
		}
	}
	for(new i; i < sizeof(QuestCars[]); i++)
	{
	    if(QuestCars[playerid][i] != 0)
	    {
	        DestroyVehicle(QuestCars[playerid][i]);
	        QuestCars[playerid][i] = 0;
		}
	}
	if(GetPVarInt(playerid, "RegOnTDM") == 1)
	{
	  	TDM_Players --;
	}
	if(GetPVarInt(playerid, "RegOnPaint") == 1)
	{
		strmid(PaintList[GetPVarInt(playerid, "OnPaint")][Killername], "Нет", 0, strlen("Нет"), 255);
		PaintList[GetPVarInt(playerid, "OnPaint")][KillsPoint] = 0;
		PaintList[GetPVarInt(playerid, "OnPaint")][DeathsPoint] = 0;
		PaintList[GetPVarInt(playerid, "OnPaint")][PlayerID] = -1;
		PaintList[GetPVarInt(playerid, "OnPaint")][Sortirovan] = 0;
		PaintList[GetPVarInt(playerid, "OnPaint")][DamagePoint] = 0;
	}
 	if(GetPVarInt(playerid, "Race_Pvp_On") == 1)
	{
		new id = GetPVarInt(playerid, "Race_Pvp_Play");
		if(IsPlayerConnected(id) && GetPVarInt(id, "Race_Pvp_On") == 1)
		{

			GivePlayerPCash(id, GetPVarInt(id, "Race_Pvp_Money"), "Sopernik pokinul pvp");

			new str[64];
			format(str, sizeof(str), "~g~+%d", GetPVarInt(id, "Race_Pvp_Money"));
	    	GameTextForPlayer(id, str, 3000, 1);

			SendClientMessage(id, COLOR_INFO, "Соперник покинул сервер");
			SetTimerEx("Return_To_Hole_Race", 4000, 0, "dd", id, -1);
		}
	}
 	if(GetPVarInt(playerid, "On_Duel") == 1)
	{
		new id = GetPVarInt(playerid, "Duel_Play");
		if(IsPlayerConnected(id) && GetPVarInt(id, "On_Duel") == 1)
		{

			GivePlayerPCash(id, GetPVarInt(id, "Duel_Money"), "Sopernik pokinul duel");

			new str[64];
			format(str, sizeof(str), "~g~+%d", GetPVarInt(id, "Duel_Money"));
	    	GameTextForPlayer(id, str, 3000, 1);

			SendClientMessage(id, COLOR_INFO, "Соперник покинул сервер");
			ClearPVars_Duel(id);
			SetPlayerToTeamColor(id);
			SetTimerEx("ReturnToHole_Duel", 4000, 0, "d", id);
		}
	}
	PlayerChase[playerid] = -1;
	AFKText[playerid] = 0;
	WantedLevel[playerid] = 0;
	Old_Car[playerid] = 0;
    ResetPlayerWeaponsUAC(playerid);
    
	TextDrawHideForPlayer(playerid, CarSystem[playerid]);
	TextDrawHideForPlayer(playerid, sait);
	PlayerTextDrawDestroy(playerid, CarName_Name[playerid]);
	ShowPlayerZones(playerid, 0);
	if(GetPVarInt(playerid, "OnRace"))
 	{
		RacePrize -= 500;
		RacersReg --;
	}

	if(GetPVarInt(playerid, "OnTaxiJob") != 0 || GetPVarInt(playerid, "OnBusJob") != 0)
	{
		Delete3DTextLabel(DutyText[playerid]);
	}
	
	if(GetPVarInt(playerid,"Logged") == 1)
	{
		new nick[MAX_PLAYER_NAME], msg[144];
		GetPlayerName(playerid, nick, sizeof(nick));
		switch (reason)
		{
			case 0:  format(msg, sizeof(msg), "%s[%d] покинул(а) cервер (Обрыв связи)", nick, playerid);
			case 1:  format(msg, sizeof(msg), "%s[%d] покинул(а) cервер (Выход)", nick, playerid);
			default: format(msg, sizeof(msg), "%s[%d] покинул(а) cервер (Кикнут)", nick, playerid);
		}
		for(new i=0;i<MAX_PLAYERS;i++)
		{
			if(DClog[i] == 1) SendClientMessage(i, COLOR_GREY, msg);
		}
	}

	if(GetPVarInt(playerid, "IrcChannel")) LeaveIRCChannel(playerid, GetPVarInt(playerid, "IrcChannel"));
	if(PlayerPaintballing[playerid] != 0) PaintballPlayers --;
	
	if(HireCar[playerid] != 99999)
	{
		UnLockCar(HireCar[playerid]);
	}
    
	new Caller = GetPVarInt(playerid, "Caller");
	if(Caller != -1)
	{
	    SendClientMessage(Caller, COLOR_YELLOW, "Звонок завершен (( Игрок вышел с сервера ))");
	    SetPVarInt(Caller, "Caller", -1);
	    DeletePVar(Caller, "StartCall");
	    SetPlayerSpecialAction(Caller, SPECIAL_ACTION_NONE);
     	RemovePlayerAttachedObject(Caller, 6);
	}
	
	if(reason == 0) Kick(playerid);
	
	switch(reason)
	{
	    case 0: dsc_timeout++;
	    case 1: dsc_exit++;
		case 2: dsc_kick++;
	}
	return 1;
}

stock SetPlayerSpawn(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
   	SetTimerEx("ClearHealthDelay", 4000, false, "i", playerid);
   	
    ApplyAnimation(playerid,"CARRY","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"FOOD","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"FAT","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"OTB","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"CRACK","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"BOMBER","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"MISC","null",0.0,0,0,0,0,0,0);
    ApplyAnimation(playerid,"SWORD","null",0.0,0,0,0,0,0,0);
    

	if(GetPVarInt(playerid, "Glass_ID") != 0)
	{
		SetPlayerAttachedObject(playerid, 9, GetPVarInt(playerid, "Glass_ID"), 2, GetPVarFloat(playerid, "Glass_X"), GetPVarFloat(playerid, "Glass_Y"), GetPVarFloat(playerid, "Glass_Z"), GetPVarFloat(playerid, "Glass_oX"), GetPVarFloat(playerid, "Glass_oY"), GetPVarFloat(playerid, "Glass_oZ"), 1.000000, 1.000000, 1.000000);
	}
	if(GetPVarInt(playerid, "Cap_ID") != 0)
	{
		SetPlayerAttachedObject(playerid, 8, GetPVarInt(playerid, "Cap_ID"), 2, GetPVarFloat(playerid, "Cap_X"), GetPVarFloat(playerid, "Cap_Y"), GetPVarFloat(playerid, "Cap_Z"), GetPVarFloat(playerid, "Cap_oX"), GetPVarFloat(playerid, "Cap_oY"), GetPVarFloat(playerid, "Cap_oZ"), GetPVarFloat(playerid, "Size_X"), GetPVarFloat(playerid, "Size_Y"), GetPVarFloat(playerid, "Size_Z"));
	}
    if(GetPVarFloat(playerid, "Spec_X") != 0.0)
    {
        oSetPlayerPos(playerid, GetPVarFloat(playerid, "Spec_X"), GetPVarFloat(playerid, "Spec_Y"), GetPVarFloat(playerid, "Spec_Z"));
        SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "Spec_A"));
        SetPlayerInterior(playerid, GetPVarInt(playerid, "Spec_Interior"));
        SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "Spec_World"));
        SetCameraBehindPlayer(playerid);
        SetPlayerWeapons(playerid);
        
        DeletePVar(playerid, "Spec_X");
        DeletePVar(playerid, "Spec_Y");
        DeletePVar(playerid, "Spec_Z");
        DeletePVar(playerid, "Spec_A");
        DeletePVar(playerid, "Spec_Interior");
        DeletePVar(playerid, "Spec_World");
        return 1;
    }
    if(GetPVarInt(playerid, "Return_To_Hole") == 1)
    {
		ResetPlayerWeaponsUAC(playerid);
		oSetPlayerPos(playerid, 308.569580,-166.880416,999.593750);
	  	SetPlayerFacingAngle(playerid, 350.013092);
	  	SetPlayerInterior(playerid, 6);
	  	SetPlayerVirtualWorld(playerid, 1);
	  	SetPlayerWeapons(playerid);
	  	SetPlayerHealthUAC(playerid, 100.0);
        DeletePVar(playerid, "Return_To_Hole");
        return 1;
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    ResetPlayerWeaponsUAC(playerid);
  		GivePlayerWeaponUAC(playerid, 29, 999);
	    new rand = random(sizeof(PaintballSpawns));
		oSetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
	    return 1;
	}
	if(GetPVarInt(playerid, "RegOnPaint") == 1)
	{
		new i = GetPVarInt(playerid, "OnPaint");
		
		switch(PeintMap)
		{
		    case 0:
		    {
				new randspawn = random(sizeof(SpawnPeint));
				oSetPlayerPos(PaintList[i][PlayerID], SpawnPeint[randspawn][0], SpawnPeint[randspawn][1], SpawnPeint[randspawn][2]);
				SetPlayerFacingAngle(PaintList[i][PlayerID], SpawnPeint[randspawn][3]);
				SetPlayerInterior(PaintList[i][PlayerID], 10);
			}
			case 1:
		    {
				new randspawn = random(sizeof(FactoryPeint));
				oSetPlayerPos(PaintList[i][PlayerID], FactoryPeint[randspawn][0], FactoryPeint[randspawn][1], FactoryPeint[randspawn][2]);
				SetPlayerFacingAngle(PaintList[i][PlayerID], FactoryPeint[randspawn][3]);
				SetPlayerInterior(PaintList[i][PlayerID], 0);
			}
			case 2:
		    {
				new randspawn = random(sizeof(FarmPeint));
				oSetPlayerPos(PaintList[i][PlayerID], FarmPeint[randspawn][0], FarmPeint[randspawn][1], FarmPeint[randspawn][2]);
				SetPlayerFacingAngle(PaintList[i][PlayerID], FarmPeint[randspawn][3]);
				SetPlayerInterior(PaintList[i][PlayerID], 0);
			}
			default:
		    {
				new randspawn = random(sizeof(VilPeint));
				oSetPlayerPos(PaintList[i][PlayerID], VilPeint[randspawn][0], VilPeint[randspawn][1], VilPeint[randspawn][2]);
				SetPlayerFacingAngle(PaintList[i][PlayerID], VilPeint[randspawn][3]);
				SetPlayerInterior(PaintList[i][PlayerID], 0);
			}
		}

		ResetPlayerWeaponsUAC(PaintList[i][PlayerID]);
		
		GivePlayerWeaponUAC(PaintList[i][PlayerID], 24, 999);
		GivePlayerWeaponUAC(PaintList[i][PlayerID], 25, 999);
		GivePlayerWeaponUAC(PaintList[i][PlayerID], 31, 999);
		GivePlayerWeaponUAC(PaintList[i][PlayerID], 34, 999);
		GivePlayerWeaponUAC(PaintList[i][PlayerID], 29, 999);

		SetPlayerVirtualWorld(PaintList[i][PlayerID], 2);

		SetPlayerHealthUAC(playerid, 100.0);
		SetPlayerArmour(playerid, 0.0);
		return 1;
	}
	if(GetPVarInt(playerid, "RegOnTDM") == 1)
	{
		new r = random(10);
		if(GetPVarInt(playerid, "TDM_Team") == 0)
		{
		    SetPlayerTeam(playerid, 1);
		    SetPlayerSkinEx(playerid, 177);
		    SetPlayerColor(playerid, COLOR_BLUE);
			switch(TDM_Map)
			{
			    case 0:  oSetPlayerPos(playerid, Blue_Map_TDM_0[r][1], Blue_Map_TDM_0[r][2], Blue_Map_TDM_0[r][3]), SetPlayerFacingAngle(playerid, Blue_Map_TDM_0[r][4]), SetPlayerInterior(playerid, floatround(Blue_Map_TDM_0[r][0]));
			    case 1:  oSetPlayerPos(playerid, Blue_Map_TDM_1[r][1], Blue_Map_TDM_1[r][2], Blue_Map_TDM_1[r][3]), SetPlayerFacingAngle(playerid, Blue_Map_TDM_1[r][4]), SetPlayerInterior(playerid, floatround(Blue_Map_TDM_1[r][0]));
			    default: oSetPlayerPos(playerid, Blue_Map_TDM_2[r][1], Blue_Map_TDM_2[r][2], Blue_Map_TDM_2[r][3]), SetPlayerFacingAngle(playerid, Blue_Map_TDM_2[r][4]), SetPlayerInterior(playerid, floatround(Blue_Map_TDM_2[r][0]));
			}
		}
		else
		{
		    SetPlayerTeam(playerid, 2);
		    SetPlayerSkinEx(playerid, 170);
		    SetPlayerColor(playerid, COLOR_RED);
			switch(TDM_Map)
			{
			    case 0:  oSetPlayerPos(playerid, Red_Map_TDM_0[r][1], Red_Map_TDM_0[r][2], Red_Map_TDM_0[r][3]), SetPlayerFacingAngle(playerid, Red_Map_TDM_0[r][4]), SetPlayerInterior(playerid, floatround(Red_Map_TDM_0[r][0]));
			    case 1:  oSetPlayerPos(playerid, Red_Map_TDM_1[r][1], Red_Map_TDM_1[r][2], Red_Map_TDM_1[r][3]), SetPlayerFacingAngle(playerid, Red_Map_TDM_1[r][4]), SetPlayerInterior(playerid, floatround(Red_Map_TDM_1[r][0]));
			    default: oSetPlayerPos(playerid, Red_Map_TDM_2[r][1], Red_Map_TDM_2[r][2], Red_Map_TDM_2[r][3]), SetPlayerFacingAngle(playerid, Red_Map_TDM_2[r][4]), SetPlayerInterior(playerid, floatround(Red_Map_TDM_2[r][0]));
			}
		}
		ResetPlayerWeaponsUAC(playerid);
		GivePlayerWeaponUAC(playerid, 24, 999);
		GivePlayerWeaponUAC(playerid, 25, 999);
		GivePlayerWeaponUAC(playerid, 29, 999);
		GivePlayerWeaponUAC(playerid, 31, 999);
		SetPlayerVirtualWorld(playerid, 2);
		SetPlayerHealthUAC(playerid, 100.0);
		SetPlayerArmour(playerid, 0.0);
		return 1;
	}
	if(GetPVarInt(playerid,"Jailed") == 1)
	{
	    SetPlayerInterior(playerid, 6);
		oSetPlayerPos(playerid,264.6288,77.5742,1001.0391);
		SendClientMessage(playerid, COLOR_INFO, "Вы не досидели свой тюремный срок");
		if(GetPVarInt(playerid,"Sex") == 1) SetPlayerSkinEx(playerid, 268);
		Pobegtime[playerid] = 1;
		return 1;
	}
	else if(GetPVarInt(playerid,"Jailed") == 2)
	{
	    Pobegtime[playerid] = 1;
	    SetPlayerInterior(playerid, 0);
	    oSetPlayerPos(playerid, 2144.056152,1615.458618,993.688171);
	    SetPlayerSkinEx(playerid, 268);
	    SetPlayerVirtualWorld(playerid, 10);
		SetPlayerInterior(playerid,1);
		if(GetPVarInt(playerid,"Sex") == 1) SetPlayerSkinEx(playerid, 268);
		return 1;
	}

	new house = GetPVarInt(playerid,"House");
	if(house != -1)
 	{
	    if(SpawnChange[playerid]) //If 1, then you get to your house, else spawn somewhere else
	    {
			SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,HouseInfo[house][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
			SetPVarInt(playerid, "Local", house+1000);
			oSetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]); // Warp the player
			return 1;
		}
	}
	SetPVarInt(playerid, "Local", 0);
	switch(GetPVarInt(playerid,"Team"))
	{
	    case 0:
	    {
			SetPlayerToTeamColor(playerid);
			switch(GetPVarInt(playerid, "Level"))
			{
			    case 0..3:
			    {
				    oSetPlayerPos(playerid, 2227.122558, -1149.893066, 1025.796875);
					SetPlayerFacingAngle(playerid, 79.814514);
					SetPlayerInterior(playerid,15);
					SetPlayerVirtualWorld(playerid,2);
					SetCameraBehindPlayer(playerid);
			    }
				default:
				{
				    switch(GetPVarInt(playerid, "Origin"))
				    {
				        case 1: // Ls
				        {
						    oSetPlayerPos(playerid,2270.122070,1633.289062,1084.234375);
							SetPlayerFacingAngle(playerid, 71.676399);
							SetPlayerInterior(playerid,1);
							SetPlayerVirtualWorld(playerid,0);
				        }
				        default: // LV
				        {
    				    	oSetPlayerPos(playerid,2853.919677, 1288.321044, 11.390625);
							SetPlayerFacingAngle(playerid, 45.765708);
							SetPlayerInterior(playerid,0);
							SetPlayerVirtualWorld(playerid,0);
							SetCameraBehindPlayer(playerid);
				        }
					}
				}
			}
			return 1;
		}
		case 1://cops
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    oSetPlayerPos(playerid, 1530.8369,-1664.8872,6.2188);
		    SetPlayerVirtualWorld(playerid,0);
		    return 1;
		}
		case 2://FBI
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    oSetPlayerPos(playerid, 268.4599,184.8910,1008.1719);
		    SetPlayerFacingAngle(playerid, 356.4901);
		    SetPlayerVirtualWorld(playerid,4);
		    return 1;
		}
		case 3://National Guard spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    oSetPlayerPos(playerid, 2731.2148,-2450.8735,17.5937);
		    SetPlayerVirtualWorld(playerid,0);
		    return 1;
		}
		case 4://Fire/Ambulance spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    oSetPlayerPos(playerid, 350.6010,162.2602,1019.9912);
		    SetPlayerFacingAngle(playerid, 353.1666);
		    SetPlayerVirtualWorld(playerid,1);
		    return 1;
		}
	    case 7://Mayor spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    oSetPlayerPos(playerid, 356.9962,173.5719,1008.3820);
		    SetPlayerFacingAngle(playerid, 273.6339);
		    SetPlayerVirtualWorld(playerid,7);
		    return 1;
		}
		case 8: //Hitman spawn
	    {
	        SetPlayerToTeamColor(playerid);
			oSetPlayerPos(playerid, 1211.545166,-13.171037,1000.921875);
			SetPlayerInterior(playerid,2);
			SetPlayerVirtualWorld(playerid,1);
	        return 1;
	    }
	    case 9: //News spawn
	    {
	        SetPlayerToTeamColor(playerid);
			oSetPlayerPos(playerid,1778.6183,-1296.9016,114.8125);
			SetPlayerFacingAngle(playerid, 206.0502);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
	        return 1;
	    }
	    case 11: //Driving/Flying School spawn
	    {
			if(SchoolSpawn[playerid] == 0)
			{
		        SetPlayerToTeamColor(playerid);
				oSetPlayerPos(playerid, -2033.693847,-116.054214,1035.171875);
				SetPlayerFacingAngle(playerid, 270.195220);
				SetPlayerInterior(playerid,3);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(SchoolSpawn[playerid] == 1)
			{
				SetPlayerToTeamColor(playerid);
				oSetPlayerPos(playerid, 413.5810,2533.2366,19.1484);
				SetPlayerFacingAngle(playerid, 77.0974);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
	        return 1;
	    }
	    case 5, 6, 10, 12..18:
		{
		    new factionid = ReturnFractionID(playerid);

		    oSetPlayerPos(playerid,  GangSpawn[factionid][gSpawnX],
				 					 GangSpawn[factionid][gSpawnY],
									 GangSpawn[factionid][gSpawnZ]);

			SetPlayerFacingAngle(playerid,  GangSpawn[factionid][gSpawnA]);
			SetPlayerInterior(playerid,     GangSpawn[factionid][gInterior]);
			SetPlayerVirtualWorld(playerid, GangSpawn[factionid][gVirtWorld]);
			SetPlayerToTeamColor(playerid);
		}
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
	
	if(GetPVarInt(playerid, "CheckKillsTime") > gettime())
	{
	    GivePVarInt(playerid, "FloodKills", 1);
		if(GetPVarInt(playerid, "FloodKills") > 3)
		{
			Ban(playerid);
			return 1;
		}
	}
	else
	{
	    DeletePVar(playerid, "FloodKills");
	    SetPVarInt(playerid, "CheckKillsTime", gettime()+4);
	}

	printf("%d убил %d с %d", killerid, playerid, reason);
	new name[MAX_PLAYER_NAME];
	new string[256];
	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);

	if(CheckCJRunTimer[playerid])
	{
		KillTimer(CheckCJRunTimer[playerid]);
		CheckCJRunTimer[playerid] = 0;
		DeletePVar(playerid, "StopTimerCjRun");
	}
	if(GetPVarInt(playerid, "InClothShop") == 1)
	{
		ReplaceSkin(playerid);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, 1);
		DeletePVar(playerid, "Scroll_Skin");
		DeletePVar(playerid, "Scroll_Skin2");
		
	/*	new Menu:myMenu = GetPlayerMenu(playerid);
    	HideMenuForPlayer(myMenu, playerid);*/
    	
    	DeletePVar(playerid, "InClothShop");
		DeletePVar(playerid, "SelectType_Skin");
	}
 	if(GetPVarInt(playerid, "On_RobHouse") != 0)
  	{
		DeletePVar(playerid, "On_RobHouse");
		DeletePVar(playerid, "Rob_Car");
		DeletePVar(playerid, "Rob_Garage");
		DisablePlayerCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerid);
  		gPlayerCheckpointStatus[playerid] = 0;
  		RemovePlayerAttachedObject(playerid, 2);
    	if(IsPlayerAttachedObjectSlotUsed(playerid, 1))
     	{
      		RemovePlayerAttachedObject(playerid, 1);
       	}
	}
	if(GetPVarInt(playerid, "OnAHTest") == 1)
	{
 		if(PlayerSchoolCar[playerid] != 0) DestroyVehicle(PlayerSchoolCar[playerid]);
 		PlayerSchoolCar[playerid] = 0;

		SetPlayerVirtualWorld(playerid, 0);

		for(new i; i < 20; i ++) SendClientMessage(playerid, COLOR_WHITE, " ");

       	SendClientMessage(playerid, COLOR_GREY, "Вы провалили экзамен!");
       	SendClientMessage(playerid, COLOR_GREY, "Попробуйте сдать тест еще раз");

	    DeletePVar(playerid, "VHeal");
	    DeletePVar(playerid, "CHAutoSchool");
	    DeletePVar(playerid, "FinishAHTest");
	    DeletePVar(playerid, "OnAHTest");

		gPlayerCheckpointStatus[playerid] = 0;
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "On_Duel") == 1)
	{
		new id = GetPVarInt(playerid, "Duel_Play");

		if(GetPVarInt(id, "On_Duel") == 1)
		{
			GivePlayerPCash(id, GetPVarInt(id, "Duel_Money") * 2, "Viigral duel");

			new str[64];
			format(str, sizeof(str), "~g~+$%d", GetPVarInt(id, "Duel_Money") * 2);
			GameTextForPlayer(id, str, 5000, 6);

			SendClientMessage(playerid, COLOR_GREEN, "Вы проиграли дуэль!");
			SendClientMessage(id, COLOR_GREEN, "Вы выиграли дуэль!");

            GiveAchievement(id, 2, 1);
			ClearPVars_Duel(playerid);
			ClearPVars_Duel(id);
			
		    SetPlayerToTeamColor(id);
		    SetPlayerToTeamColor(playerid);
		    

			SetPVarInt(playerid, "Return_To_Hole", 1);
			SetTimerEx("ReturnToHole_Duel", 4000, 0, "d", id);
		}
	}

	if(GetPVarInt(playerid, "On_Quest") == 1)
	{
	    DeletePVar(playerid, "On_Quest");
		gPlayerCheckpointStatus[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		DisablePlayerRaceCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_INFO, "Задание провалено");
        RemovePlayerMapIcon(playerid, ICON_QUEST);
        
        SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
        
		for(new i; i < sizeof(QuestCars[]); i++)
		{
			if(QuestCars[playerid][i] != 0)
			{
				DestroyVehicle(QuestCars[playerid][i]);
				QuestCars[playerid][i] = 0;
			}
		}
		for(new i; i < 10; i++)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, i))
			{
				RemovePlayerAttachedObject(playerid, i);
			}
		}
		if(GetPVarInt(playerid, "Quest_Object_1") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_1")), DeletePVar(playerid, "Quest_Object_1");
		if(GetPVarInt(playerid, "Quest_Object_2") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_2")), DeletePVar(playerid, "Quest_Object_2");
		if(GetPVarInt(playerid, "Quest_Object_3") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_3")), DeletePVar(playerid, "Quest_Object_3");
		if(GetPVarInt(playerid, "Quest_Object_4") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_4")), DeletePVar(playerid, "Quest_Object_4");
		if(GetPVarInt(playerid, "Quest_Object_5") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_5")), DeletePVar(playerid, "Quest_Object_5");
		if(GetPVarInt(playerid, "Quest_Object_6") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_6")), DeletePVar(playerid, "Quest_Object_6");
	}
	if(IsACopCar(GetPlayerVehicleID(killerid)) && !IsACop(killerid))
	{
	    KickCheater(killerid, CHEATCARGUN);
		return 1;
	}
	new Float:px,Float:py,Float:pz;
	GetPlayerName(playerid, name, sizeof(name));
	DeletePVar(playerid, "Local");
	GetPlayerPos(playerid, px, py, pz);
 	SetPVarInt(playerid, "HealthDelay", 1);
	TextDrawHideForPlayer(playerid, CarSystem[playerid]);
	TextDrawHideForPlayer(playerid,txtTimeDisp);
	TextDrawHideForPlayer(playerid,sait);
	ShowPlayerZones(playerid, 0);
    if((ThisGangCanWar(playerid) && ThisGangCanWar(killerid)) && (GetPVarInt(playerid,"Team") != GetPVarInt(killerid,"Team"))) // оба игрока могут воевать
	{
		if((PlayerInGangZone(playerid) != -1 && PlayerInGangZone(killerid) != -1) &&
		   (PlayerInGangZone(killerid) == PlayerInGangZone(playerid))) // оба находятся в одной территории
		{
			StartAttack(GetPVarInt(playerid,"Team"), GetPVarInt(killerid,"Team"), PlayerInGangZone(playerid), killerid, 0, playerid);
		}
	}
	if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_PRITON)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		DeletePVar(playerid, "DrugsDelivery");
	}
	if(killerid != 255)
	{
		if(GetPlayerState(killerid) == 2 && GetPVarInt(killerid,"AdminLevel") < 2)
		{
			if(ProxDetectorS(25.0, playerid, killerid))
			{
				new kickname[MAX_PLAYER_NAME];
				GetPlayerName(killerid, kickname, sizeof(kickname));
				SendClientMessage(killerid, COLOR_RED, "Убийство с помощью транспорта запрещено, Вы можете быть забанены!");
				format(string, 256, "AdmCmd: %s[ID: %d] совершил ДБ (жертва: %s[%d]) ",kickname,killerid,name,playerid);
				ABroadCast(string);
				
				if(IsAPlane(GetPlayerVehicleID(killerid)))
				{
					if(GetPVarInt(killerid, "CheckKillsTimeDB") > gettime())
					{
		    			GivePVarInt(killerid, "DBKillls", 1);
						if(GetPVarInt(killerid, "DBKillls") >= 3) Kick_(killerid);
					}
					else
					{
		    			DeletePVar(killerid, "DBKillls");
		    			SetPVarInt(killerid, "CheckKillsTimeDB", gettime()+20);
					}
				}
			}
		}
	}

	ClearCrime(playerid);
	if(PlayerPaintballing[playerid] != 0)
	{
	    PlayerPaintballKills[killerid] ++;
	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
	    {
	        new killer[MAX_PLAYER_NAME];
	        PaintballWinner = killerid;
	        PaintballWinnerKills = PlayerPaintballKills[killerid];
	        GetPlayerName(killerid, killer, sizeof(killer));
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	            {
	                if(PlayerPaintballing[i] != 0)
	                {
	                    format(string, sizeof(string),"Лидер матча по пейнтболу %s(%d убийств) убит",killer,PaintballWinnerKills);
						SendClientMessage(i, COLOR_INFO, string);
	                }
	            }
	        }
	    }
	}
	
	if(IsACop(killerid))
	{
		if(WantedLevel[playerid] > 0 && GetPVarInt(playerid,"Jailed") == 0)
		{
		    new price = WantedLevel[playerid] * 50;
			GivePlayerPCash(playerid, - price, "Sel v tyrmy");
			SetPVarInt(playerid,"Jailed",1);
			SetPVarInt(playerid,"JailTime", WantedLevel[playerid]*300);
    		format(string, sizeof(string), "Вы сели в тюрьму на %d секунд и заплатили штраф в размере $%d", GetPVarInt(playerid,"JailTime"), price);
    		SendClientMessage(playerid, COLOR_GREY, string);
			SetPlayerInterior(playerid, 6);
			oSetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
			WantedPoints[playerid] = 0;
			WantedLevel[playerid] = 0;
			SetPlayerWantedLevel(playerid, 0);
			SetTimerEx("pobegTimer", 10000, false, "i", playerid);
		}
	}
	if(WantedLevel[playerid] >= 1)
	{
 		new killprice = WantedLevel[playerid] * 20;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
		 		if(IsACop(i) && ProxDetectorS(30.0, playerid, i))
	    		{
					format(string, sizeof(string), "~w~Running Suspect~r~Killed~n~Bonus~g~$%d", killprice);
					GameTextForPlayer(i, string, 5000, 1);
					GivePlayerPCash(i, killprice, "Running suspect");
					PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
				}
			}
		}
	}
	if(GetPVarInt(playerid,"HeadValue") > 0)
	{
	    if(GetPVarInt(killerid,"Team") == 8)
	    {
			new killer[MAX_PLAYER_NAME];
			GetPlayerName(killerid, killer, sizeof(killer));
			GivePlayerPCash(killerid, GetPVarInt(playerid,"HeadValue"), "Kontrakt");
				
			format(string,128,"[F] %s[%d] выполнил контракт на %s[%d] и заработал $%d",killer, killerid, name, playerid, GetPVarInt(playerid,"HeadValue"));
			SendFamilyMessage(8, COLOR_BLUE, string);
				
			format(string,sizeof(string), "Вы были убиты киллером по заказу");
			SendClientMessage(playerid, COLOR_INFO, string);
				
			SetPVarInt(playerid,"HeadValue",0);
			MySQL_UpdateInt(playerid,"HeadValue");
		}
	}
	if(!IsACop(killerid) && GetPVarInt(killerid, "RegOnPaint") != 1)
	{
	    WantedPoints[killerid]++;
	    PlayerPlaySound(killerid, 1083, 0.0, 0.0, 0.0);
	}
	GivePVarInt(killerid,"Kills",1);
	GivePVarInt(playerid,"Deaths",1);

	if(GetPVarInt(playerid, "RegOnPaint") == 1 && GetPVarInt(killerid, "RegOnPaint") == 1)
	{
	    GiveAchievement(killerid, 1, 1);
		PaintList[GetPVarInt(playerid, "OnPaint")][DeathsPoint] ++;
		PaintList[GetPVarInt(killerid, "OnPaint")][KillsPoint] ++;
	}

	if(GetPVarInt(playerid, "RegOnTDM") == 1 && OpenTDM == true)
	{
		DeletePVar(playerid, "RegOnTDM");

	 	TDM_Players --;
		TDM_Money -= 700;
		
		GivePlayerPCash(playerid, 700, "Vi snyati s tdm");
	 	SendClientMessage(playerid, COLOR_WHITE, "Вы были сняты с участия в ТДМ");
	}
	if(GetPVarInt(killerid, "RegOnTDM") == 1 && OpenTDM == false)
	{
		TDM_Team_Kills[GetPVarInt(killerid, "TDM_Team")] ++;
	  	TDM_Info[GetPVarInt(killerid, "TDM_Slot")][GetPVarInt(killerid, "TDM_Team")][TDM_Kills] ++;
	  	
		if(TDM_Team_Kills[0] > TDM_Team_Kills[1]) format(string, sizeof(string), "~b~Blue:~w~%d~n~~r~Red:~w~%d", TDM_Team_Kills[0], TDM_Team_Kills[1]);
		else format(string, sizeof(string), "~r~Red:~w~%d~n~~b~Blue:~w~%d", TDM_Team_Kills[1], TDM_Team_Kills[0]);
		TextDrawSetString(TDM_Count, string);
	}

	SetPlayerColor(playerid, COLOR_GRAD2);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerSpawn(%d);", GetName(playerid), playerid);

	if(IsPlayerNPC(playerid)) //Если игрок - NPC.
	{
		new npcname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, npcname, sizeof(npcname)); //Получаем имя NPC
		if(!strcmp(npcname, "[BOT]Bobbi", true))
		{
		    SetPlayerColor(playerid, COLOR_RED);
			PutPlayerInVehicleEx(playerid, MyBotVehicle, 0);
			SetPlayerSkinEx(playerid, 14);
			return 1;
		}
		if(!strcmp(npcname, "[BOT]Train", true))
		{
		    SetPlayerColor(playerid, COLOR_RED);
			PutPlayerInVehicleEx(playerid, TrainNPCVehicle, 0);
			SetPlayerSkinEx(playerid, 15);
			return 1;
		}
		if(!strcmp(npcname, "[BOT]Tram", true))
		{
		    SetPlayerColor(playerid, COLOR_RED);
			PutPlayerInVehicleEx(playerid, TramVehicle, 0);
			SetPlayerSkinEx(playerid, 94);
			return 1;
		}
  		//return 1;
 	}
 	if(CheckFCalls(playerid, 0)) return 1;
 	
 	
 	new hour, minute;
 	TextDrawShowForPlayer(playerid,txtTimeDisp);
 	TextDrawShowForPlayer(playerid,sait);
	gettime(hour, minute);
	SetPlayerTime(playerid,hour,minute);
	STDPlayer[playerid] = 0;
	AntiDB[playerid] = 2;
 	SpecJail[playerid] = 0;
 	SpecDem[playerid] = 5;
	if(GetPVarInt(playerid,"Logged") == 0)
	{
    	SendClientMessage(playerid, COLOR_RED, "Для игры на этом сервере требуется регистрация аккаунта");
        Kick_(playerid);
        return 1;
 	}
 	SetPVarInt(playerid, "DelayWeapon", gettime()+3);
 	SetPVarInt(playerid, "DelayAmmo", gettime()+6);
 	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
 	
 	ReplaceSkin(playerid);
	SetPlayerWeapons(playerid);
	SetPlayerToTeamColor(playerid);
	SetPlayerSpawn(playerid);
	PlayerFixRadio(playerid);
	ShowPlayerZones(playerid, 1);
	
	
	if(GetPVarInt(playerid, "Level") > 3)
	{
		if(CheckCJRunTimer[playerid])
		{
			KillTimer(CheckCJRunTimer[playerid]);
			CheckCJRunTimer[playerid] = 0;
			DeletePVar(playerid, "StopTimerCjRun");
		}
		CheckCJRunTimer[playerid] = SetTimerEx("CheckCJRun", 700, 1, "d", playerid);
	}
	return 1;
}

stock UnbanLog(string[])
{
    new query[256];
    format(query,sizeof(query), "INSERT INTO `"UnbanTable"` (`Log`, `DateTime`) VALUES ('%s', NOW())", string);
    mysql_query(query);
	return 1;
}

stock MakeAdminLog(string[])
{
	new count = GetTickCount();
	new query[256];
    format(query,sizeof(query), "INSERT INTO `"MakeAdminTable"` (`Log`, `DateTime`) VALUES ('%s', NOW())", string);
    mysql_query(query);
	printf("MySQL Makeadmin log: %d", GetTickCount() - count);
}

public OnPlayerEnterCheckpoint(playerid)
{
    if(CheckFCalls(playerid, 1)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerEnterCheckpoint(%d); (%d)", GetName(playerid), playerid, gPlayerCheckpointStatus[playerid]);
	new string[128];

	switch (gPlayerCheckpointStatus[playerid])
	{
			case CHECKPOINT_LOADFUEL:
			{
				if(GetPVarInt(playerid, "FuelTrucker") != 1)
				{
				    DisablePlayerCheckpoint(playerid);
			        gPlayerCheckpointStatus[playerid] = 0;
				    DeletePVar(playerid, "FuelTrucker");
				    return 1;
				}

				new car = GetPlayerVehicleID(playerid);

				if(IsFuelTruck(car))
				{
				    new trailer = GetTrail(GetVehicleTrailer(car));
					if(trailer == -1) return SendClientMessage(playerid, COLOR_GREEN, "Нужна цистерна для развоза топлива");

					format(string, sizeof(string), RGB_WHITE"Сколько топлива хотите заправить?\nСтоимость топлива: $%d / литр", SBizzInfo[3][sbEntranceCost]);
			        ShowPlayerDialog(playerid, 162, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка топлива",  string, "Готово", "Отмена");

					SetVehicleVelocity(car, 0.0, 0.0, 0.0);
		        	SetVehicleVelocity(GetVehicleTrailer(car), 0.0, 0.0, 0.0);
				}

				return 1;
			}
		    case CHECKPOINT_GPS:
			{
				DisablePlayerCheckpoint(playerid);
			 	gPlayerCheckpointStatus[playerid] = 0;
			  	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				return 1;
			}
			case CHECKPOINT_QUEST_1_GET:
			{
   				if(GetPVarInt(playerid, "On_Quest") != 1) return 1;
			    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Выйдите из машины");
			        return 1;
				}
			    SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.27, 0.1, 0.0, 0.0, -90.0, 0.0 , 1.0, 1.0, 1.0);

				SetPlayerCheckpoint(playerid, 822.446533,-1341.517822,13.518373, 2.0);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_1;

				SendClientMessage(playerid, COLOR_GREY, "Отвези кейс к станции в Los Santos");
				
				DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_1"));
				DeletePVar(playerid, "Quest_Object_1");
			
				return 1;
			}
			case CHECKPOINT_QUEST_1:
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Выйдите из машины");
			        return 1;
				}
   				SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
			     
			    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			    
			    gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			    GameTextForPlayer(playerid, "mission passed!~n~~w~$100", 3000, 0);
				GivePlayerPCash(playerid, 100, "CHECKPOINT_QUEST_1");

				if(QuestCars[playerid][0] != 0)
				{
					DestroyVehicle(QuestCars[playerid][0]);
					QuestCars[playerid][0] = 0;
				}

				SetPlayerVirtualWorld(playerid, 0);
				RemovePlayerAttachedObject(playerid, 0);
				
				DeletePVar(playerid, "On_Quest");
				return 1;
			}
			case CHECKPOINT_QUEST_2_LV_1:
			{
			    SetPlayerAttachedObject(playerid, 0, 1550, 1,  0.0 , -0.200000 ,  0.0 ,  0.0 , 90.0 ,180.0, 1.0, 1.0, 1.0);
			    SendClientMessage(playerid, COLOR_GREY, "Отнеси мешок");
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_2_LV_2;
			    SetPlayerCheckpoint(playerid, 2362.127929,2383.298828,10.820312, 3.0);
			    return 1;
			}
			case CHECKPOINT_QUEST_2_LV_2:
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Выйди из машины");
			        return 1;
				}
			    RemovePlayerAttachedObject(playerid, 0);
			    SendClientMessage(playerid, COLOR_GREY, "Отлично. Отправляйся к следующему банку");
			
			    SetPlayerCheckpoint(playerid, -1595.384399,910.967346,7.010983, 3.0);
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_2_SF_1;
			    return 1;
			}
			case CHECKPOINT_QUEST_2_SF_1:
			{
			    SetPlayerAttachedObject(playerid, 0, 1550, 1,  0.0 , -0.200000 ,  0.0 ,  0.0 , 90.0 ,180.0, 1.0, 1.0, 1.0);
			    SendClientMessage(playerid, COLOR_GREY, "Отнеси мешок");
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_2_SF_2;
			    SetPlayerCheckpoint(playerid, -1583.262939,906.880065,7.695312, 3.0);
			    return 1;
			}
			case CHECKPOINT_QUEST_2_SF_2:
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Выйди из машины");
			        return 1;
				}
			    RemovePlayerAttachedObject(playerid, 0);
			    SendClientMessage(playerid, COLOR_GREY, "Отлично. Отправляйся к следующему банку");

			    SetPlayerCheckpoint(playerid, 1465.160034,-1029.271972,23.136081, 3.0);
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_2_LS_1;
			    return 1;
			}
			case CHECKPOINT_QUEST_2_LS_1:
			{
			    SetPlayerAttachedObject(playerid, 0, 1550, 1,  0.0 , -0.200000 ,  0.0 ,  0.0 , 90.0 ,180.0, 1.0, 1.0, 1.0);
			    SendClientMessage(playerid, COLOR_GREY, "Отнеси мешок");
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_2_LS_2;
			    SetPlayerCheckpoint(playerid, 1462.875854,-1015.243896,26.273424, 3.0);
			}
			case CHECKPOINT_QUEST_2_LS_2:
			{
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "Выйди из машины");
			        return 1;
				}
				SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
				
			    gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			    GameTextForPlayer(playerid, "mission passed!~n~~w~$200", 3000, 0);
				GivePlayerPCash(playerid, 200, "CHECKPOINT_QUEST_2_LS_2");

				if(QuestCars[playerid][0] != 0)
				{
					DestroyVehicle(QuestCars[playerid][0]);
					QuestCars[playerid][0] = 0;
				}

				SetPlayerVirtualWorld(playerid, 0);
				RemovePlayerAttachedObject(playerid, 0);

				DeletePVar(playerid, "On_Quest");
			    return 1;
			}

			case CHECKPOINT_QUEST_3_GOTO:
			{
			    RemovePlayerFromVehicle(playerid);
			    SendClientMessage(playerid, COLOR_GREY, "Собери весь мусор в машину");

				SetPlayerCheckpoint(playerid, -2628.30004883,1370.09997559,5.90000010, 2.0);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_OBJECT;
				DeletePVar(playerid, "Total_Objects_Quest_3");
			    return 1;
			}
			case CHECKPOINT_QUEST_3_OBJECT:
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
			    switch(GetPVarInt(playerid, "Total_Objects_Quest_3"))
			    {
			        case 0: SetPlayerAttachedObject(playerid, 0, 1327, 1, 0.2, 0.5, 0.0, 0.0, 0.0, 0.0, 0.3, 0.3, 0.3),   DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_1")), DeletePVar(playerid, "Quest_Object_1");
			        case 1: SetPlayerAttachedObject(playerid, 0, 1338, 1, 0.4, 0.5, 0.0, 0.0, 0.0, 0.0, 0.6, 0.6, 0.6),   DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_2")), DeletePVar(playerid, "Quest_Object_2");
			        case 2: SetPlayerAttachedObject(playerid, 0, 1355, 1, 0.25, 0.5, 0.0, 0.0, 90.0, 0.0, 1.0, 1.0, 1.0), DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_3")), DeletePVar(playerid, "Quest_Object_3");
			        case 3: SetPlayerAttachedObject(playerid, 0, 1442, 1, 0.33, 0.5, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0),  DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_4")), DeletePVar(playerid, "Quest_Object_4");
			        case 4: SetPlayerAttachedObject(playerid, 0, 1220, 1, 0.4, 0.55, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0),  DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_5")), DeletePVar(playerid, "Quest_Object_5");
			        case 5: SetPlayerAttachedObject(playerid, 0, 1450, 1, 0.4, 0.55, 0.0, 0.0, 90.0, 0.0, 0.6, 0.6, 0.6), DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_6")), DeletePVar(playerid, "Quest_Object_6");
				}
				SendClientMessage(playerid, COLOR_GREY, "Отнеси мусор в машину");
				
				ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1,1);
				SetTimerEx("animliftup", 1000, false, "i", playerid);
				new Float: pos[4];
	  			GetVehiclePos   ( QuestCars[playerid][0], pos[0], pos[1], pos[2] );
	    		GetVehicleZAngle( QuestCars[playerid][0], pos[3] );

				SetPlayerCheckpoint(playerid,
  					pos[0] + 5.0 * floatcos(pos[3]-90.0, degrees),
     				pos[1] + 5.0 * floatsin(pos[3]-90.0, degrees),
       				pos[2] + 0.3,
       				1.0);
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_TO_CAR;
			    return 1;
			}
			case CHECKPOINT_QUEST_3_TO_CAR:
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
			    ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,0,0,0,1000,1);
			    RemovePlayerAttachedObject(playerid, 0);
			    GivePVarInt(playerid, "Total_Objects_Quest_3", 1);
				switch(GetPVarInt(playerid, "Total_Objects_Quest_3"))
				{
				    case 1: SetPlayerCheckpoint(playerid, -2639.50000000,1359.69995117,6.90000010, 2.0), gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_OBJECT;
				    case 2: SetPlayerCheckpoint(playerid, -2633.89990234,1351.50000000,6.30000019, 2.0), gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_OBJECT;
				    case 3: SetPlayerCheckpoint(playerid, -2620.00000000,1354.30004883,6.69999981, 2.0), gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_OBJECT;
				    case 4: SetPlayerCheckpoint(playerid, -2627.39990234,1354.90002441,6.40000010, 2.0), gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_OBJECT;
				    case 5: SetPlayerCheckpoint(playerid, -2621.00000000,1346.69995117,6.80000019, 2.0), gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_OBJECT;
				    case 6:
				    {
				        gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_END;
				        SendClientMessage(playerid, COLOR_GREY, "Отвези машину к гаражу");
				        SetPlayerCheckpoint(playerid, -1865.432861,-176.322296,8.654641, 4.0);
				    }
				}
			    return 1;
			}
			case CHECKPOINT_QUEST_3_END:
			{
				SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
				
			    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			    gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			    GameTextForPlayer(playerid, "mission passed!~n~~w~$400", 3000, 0);
				GivePlayerPCash(playerid, 400, "CHECKPOINT_QUEST_3_END");

				if(QuestCars[playerid][0] != 0)
				{
					DestroyVehicle(QuestCars[playerid][0]);
					QuestCars[playerid][0] = 0;
				}

				SetPlayerVirtualWorld(playerid, 0);
				RemovePlayerAttachedObject(playerid, 0);

				DeletePVar(playerid, "On_Quest");
			}
			case CHECKPOINT_QUEST_4_START:
			{
			    DisablePlayerCheckpoint(playerid);
			    Quest_4_Count(playerid, 0);
				SetVehicleZAngle(GetPlayerVehicleID(playerid), 360.0);
			    return 1;
			}
			case CHECKPOINT_QUEST_4_GARAGE:
			{
			    SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
			    
			    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			    gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerCheckpoint(playerid);


				if(GetPVarInt(playerid, "Quest_4_Money") == 1)
				{
				    DeletePVar(playerid, "Quest_4_Money");
				    GameTextForPlayer(playerid, "mission passed!~n~~w~$200", 3000, 0);
				    GivePlayerPCash(playerid, 200, "CHECKPOINT_QUEST_4_GARAGE");
				}
				else
				{
				    GameTextForPlayer(playerid, "mission passed!~n~~w~$600", 3000, 0);
				    GivePlayerPCash(playerid, 600, "CHECKPOINT_QUEST_4_GARAGE");
				}
				if(QuestCars[playerid][0] != 0)
				{
					DestroyVehicle(QuestCars[playerid][0]);
					QuestCars[playerid][0] = 0;
				}

				SetPlayerVirtualWorld(playerid, 0);

				DeletePVar(playerid, "On_Quest");
			    return 1;
			}
			case CHECKPOINT_QUEST_5_DUMP:
			{
			    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			    SendClientMessage(playerid, COLOR_GREY, "Возьмите погрузчик и закиньте все ящики в грузовик");
				SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
				RemovePlayerFromVehicle(playerid);
				
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_GETBOX;
				SetPlayerCheckpoint(playerid, -1911.09997559,-1714.59997559,21.39999962, 3.0);
			    return 1;
			}
			case CHECKPOINT_QUEST_5_GETBOX:
			{
			    new vid = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(vid) != 530) return SendClientMessage(playerid, COLOR_GREY, "Возьмите погрузчик");

				switch(GetPVarInt(playerid, "Quest_5_TotalB"))
				{
					case 0: AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "Quest_Object_1"), vid, 0.0, 0.7, 0.55, 0.0, 0.0, 0.0);
					case 1: AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "Quest_Object_2"), vid, 0.0, 0.7, 0.55, 0.0, 0.0, 0.0);
					case 2: AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "Quest_Object_3"), vid, 0.0, 0.7, 0.55, 0.0, 0.0, 0.0);
					case 3: AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "Quest_Object_4"), vid, 0.0, 0.7, 0.55, 0.0, 0.0, 0.0);
					case 4: AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "Quest_Object_5"), vid, 0.0, 0.7, 0.55, 0.0, 0.0, 0.0);
				}
				new Float: pos[4];
	  			GetVehiclePos   ( QuestCars[playerid][0], pos[0], pos[1], pos[2] );
	    		GetVehicleZAngle( QuestCars[playerid][0], pos[3] );

				SetPlayerCheckpoint(playerid,
  					pos[0] + 5.0 * floatcos(pos[3]-90.0, degrees),
     				pos[1] + 5.0 * floatsin(pos[3]-90.0, degrees),
       				pos[2] + 0.3,
       				3.0);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_TOCAR;
			    return 1;
			}
			case CHECKPOINT_QUEST_5_TOCAR:
			{
				switch(GetPVarInt(playerid, "Quest_5_TotalB"))
				{
				    case 0:
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_GETBOX;
						DestroyPlayerObject(playerid,GetPVarInt(playerid, "Quest_Object_1"));
						DeletePVar(playerid, "Quest_Object_1");
						SetPlayerCheckpoint(playerid, -1908.69995117,-1712.40002441,21.39999962, 3.0);
						SetPVarInt(playerid, "Quest_5_TotalB", 1);
					}
					case 1:
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_GETBOX;
						DestroyPlayerObject(playerid,GetPVarInt(playerid, "Quest_Object_2"));
						DeletePVar(playerid, "Quest_Object_2");
						SetPlayerCheckpoint(playerid, -1905.59997559,-1712.19995117,21.39999962, 3.0);
						SetPVarInt(playerid, "Quest_5_TotalB", 2);
					}
	    			case 2:
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_GETBOX;
						DestroyPlayerObject(playerid,GetPVarInt(playerid, "Quest_Object_3"));
						DeletePVar(playerid, "Quest_Object_3");
						SetPlayerCheckpoint(playerid, -1902.69995117,-1712.19995117,21.39999962, 3.0);
						SetPVarInt(playerid, "Quest_5_TotalB", 3);
					}
	    			case 3:
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_GETBOX;
						DestroyPlayerObject(playerid,GetPVarInt(playerid, "Quest_Object_4"));
						DeletePVar(playerid, "Quest_Object_4");
						SetPlayerCheckpoint(playerid, -1901.50000000,-1715.00000000,21.39999962, 3.0);
						SetPVarInt(playerid, "Quest_5_TotalB", 4);
					}
					case 4:
					{
						DestroyPlayerObject(playerid,GetPVarInt(playerid, "Quest_Object_5"));
						DeletePVar(playerid, "Quest_Object_5");
						DeletePVar(playerid, "Quest_5_TotalB");
						SetPlayerCheckpoint(playerid, -2123.284423,-27.136749,34.716266, 3.0);
						gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_END;
						
						SendClientMessage(playerid, COLOR_GREEN, "Пригоните грузовик в указанное место");
					}
				}
			    return 1;
			}
			case CHECKPOINT_QUEST_5_END:
			{
			    if(GetPlayerVehicleID(playerid) != QuestCars[playerid][0])
			    {
					return SendClientMessage(playerid, COLOR_GREY, "Вы должны пригнать грузовик с оружием");
				}
				SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
				
			    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			    gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
			    GameTextForPlayer(playerid, "mission passed!~n~~w~$700", 3000, 0);
				GivePlayerPCash(playerid, 700, "CHECKPOINT_QUEST_5_END");

				if(QuestCars[playerid][0] != 0)
				{
					DestroyVehicle(QuestCars[playerid][0]);
					QuestCars[playerid][0] = 0;
				}
				if(QuestCars[playerid][1] != 0)
				{
					DestroyVehicle(QuestCars[playerid][1]);
					QuestCars[playerid][1] = 0;
				}
				SetPlayerVirtualWorld(playerid, 0);

				DeletePVar(playerid, "On_Quest");
			    return 1;
			}
			case CHECKPOINT_QUEST_6_AREA:
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_6_FLYING;
				DisablePlayerCheckpoint(playerid);
			    SetPlayerRaceCheckpoint(playerid, 3, 26.903715, -111.331924, 10.849057, 36.464241, -38.356845, 26.678499, 6.0);
			    TakingLesson[playerid] = 1;
			
			    return 1;
			}
			case CHECKPOINT_ROBCAR:
			{
			    if(GetPVarInt(playerid, "On_RobHouse") == 1 && GetPVarInt(playerid, "Have_RobObject") == 1)
				{
				    new rc = GetRobCar(GetPVarInt(playerid, "Rob_Car"));
				    RobCarInfo[rc][cTotalp] ++;
				    DeletePVar(playerid, "Have_RobObject");
				    
				    RemovePlayerAttachedObject(playerid, 1);
					ApplyAnimation(playerid,"CARRY","putdwn",5.1,0,1,1,0,1000,1);
				}
				return 1;
			}
			case RACESF_CHECKPOINT: // Метка: [Гонка] тут добавить проверку на текущую трассу
			{
			    switch(RaceTrack)
			    {
			        case 0: // СФ аэро
			        {
						switch(GetPVarInt(playerid, "CPoint"))
						{
		    				case 1: SetPlayerCheckpoint(playerid, -1653.567016,-306.630737,13.819743,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 2);
							case 2: SetPlayerCheckpoint(playerid, -1501.792846,-186.069320,13.824184,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 3);
							case 3: SetPlayerCheckpoint(playerid, -1386.042480,-170.941909,13.824179,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 4);
							case 4: SetPlayerCheckpoint(playerid, -1274.100830,-333.914459,13.824230,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 5);
							case 5: SetPlayerCheckpoint(playerid, -1316.920410,-509.623168,13.820979,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 6);
							case 6: SetPlayerCheckpoint(playerid, -1522.192138,-576.826599,13.911038,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 7);
							case 7: SetPlayerCheckpoint(playerid, -1603.115844,-500.595062,21.766389,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 8);
							case 8: SetPlayerCheckpoint(playerid, -1653.567016,-306.630737,13.819743,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 9);
							case 9: SetPlayerCheckpoint(playerid, -1501.792846,-186.069320,13.824184,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 10);
							case 10: SetPlayerCheckpoint(playerid, -1386.042480,-170.941909,13.824179,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 11);
							case 11: SetPlayerCheckpoint(playerid, -1274.100830,-333.914459,13.824230,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 12);
							case 12: SetPlayerCheckpoint(playerid, -1316.920410,-509.623168,13.820979,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 13);
							case 13: SetPlayerCheckpoint(playerid, -1522.192138,-576.826599,13.911038,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 14);
							case 14: SetPlayerCheckpoint(playerid, -1603.115844,-500.595062,21.766389,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 15);
							case 15: SetPlayerCheckpoint(playerid, -1653.567016,-306.630737,13.819743,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 16);
							case 16: SetPlayerCheckpoint(playerid, -1501.792846,-186.069320,13.824184,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 17);
							case 17: SetPlayerCheckpoint(playerid, -1386.042480,-170.941909,13.824179,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 18);
							case 18: SetPlayerCheckpoint(playerid,  -1274.100830,-333.914459,13.824230,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 19);
							case 19: SetPlayerCheckpoint(playerid,  -1316.920410,-509.623168,13.820979,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 20);
							case 20: SetPlayerCheckpoint(playerid,  -1522.192138,-576.826599,13.911038,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 21);
							case 21: FinishRace(playerid);
						}
					}
					case 1: // ЛВ вокруг города
					{
						switch(GetPVarInt(playerid, "CPoint"))
						{
		    				case 1: SetPlayerCheckpoint(playerid, 1800.629394,843.198913,10.632812,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 2);
							case 2: SetPlayerCheckpoint(playerid, 1608.325805,843.052978,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 3);
							case 3: SetPlayerCheckpoint(playerid, 1342.730224,858.422180,6.773437,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 4);
							case 4: SetPlayerCheckpoint(playerid, 1217.441650,1140.487548,6.781250,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 5);
							case 5: SetPlayerCheckpoint(playerid, 1217.595825,1447.615478,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 6);
							case 6: SetPlayerCheckpoint(playerid, 1217.533081,1981.592651,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 7);
							case 7: SetPlayerCheckpoint(playerid, 1332.115356,2444.188964,6.695312,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 8);
							case 8: SetPlayerCheckpoint(playerid, 1945.030517,2533.236083,6.764108,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 9);
							case 9: SetPlayerCheckpoint(playerid, 2507.372558,2597.256103,4.828125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 10);
							case 10: SetPlayerCheckpoint(playerid, 2717.476562,2153.277587,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 11);
							case 11: SetPlayerCheckpoint(playerid, 2717.636230,1348.225219,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 12);
							case 12: SetPlayerCheckpoint(playerid, 2653.795410,946.348144,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 13);
							case 13: SetPlayerCheckpoint(playerid, 2182.171875,843.361633,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 14);
							case 14: SetPlayerCheckpoint(playerid, 1800.629394,843.198913,10.632812,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 15);
							case 15: SetPlayerCheckpoint(playerid, 1608.325805,843.052978,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 16);
							case 16: SetPlayerCheckpoint(playerid, 1342.730224,858.422180,6.773437,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 17);
							case 17: SetPlayerCheckpoint(playerid, 1217.441650,1140.487548,6.781250,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 18);
							case 18: SetPlayerCheckpoint(playerid, 1217.595825,1447.615478,6.70312,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 19);
							case 19: SetPlayerCheckpoint(playerid, 1217.533081,1981.592651,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 20);
							case 20: SetPlayerCheckpoint(playerid, 1332.115356,2444.188964,6.695312,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 21);
							case 21: SetPlayerCheckpoint(playerid, 1945.030517,2533.236083,6.764108,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 22);
							case 22: SetPlayerCheckpoint(playerid, 2507.372558,2597.256103,4.828125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 23);
							case 23: SetPlayerCheckpoint(playerid, 2717.476562,2153.277587,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 24);
							case 24: SetPlayerCheckpoint(playerid, 2717.636230,1348.225219,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 25);
							case 25: SetPlayerCheckpoint(playerid, 2653.795410,946.348144,6.703125,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 26);
							case 26: SetPlayerCheckpoint(playerid, 1803.079833,842.877502,10.632812,20.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 27);
							case 27: FinishRace(playerid);
						}
					}
					case 2: // Пустыня у ЛВ
					{
						switch(GetPVarInt(playerid, "CPoint"))
						{
		    				case 1: SetPlayerCheckpoint(playerid, 830.758483,1227.801391,26.985132,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 2);
							case 2: SetPlayerCheckpoint(playerid, 838.766235,1689.600463,6.163324,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 3);
							case 3: SetPlayerCheckpoint(playerid, 818.619323,2009.676879,9.580155,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 4);
							case 4: SetPlayerCheckpoint(playerid, 762.861938,2447.587646,22.557329,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 5);
							case 5: SetPlayerCheckpoint(playerid, 706.567810,2707.570312,55.074840,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 6);
							case 6: SetPlayerCheckpoint(playerid, 251.680007,2742.919189,59.570835,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 7);
							case 7: SetPlayerCheckpoint(playerid, -206.881393,2634.783935,62.752811,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 8);
							case 8: SetPlayerCheckpoint(playerid, -638.485229,2751.208251,60.549079,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 9);
							case 9: SetPlayerCheckpoint(playerid, -1065.320434,2704.549560,45.594306,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 10);
							case 10: SetPlayerCheckpoint(playerid, -1404.265869,2546.182128,60.495414,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 11);
							case 11: SetPlayerCheckpoint(playerid, -1341.182128,2054.498291,52.682392,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 12);
							case 12: SetPlayerCheckpoint(playerid, -1152.653808,1782.078857,39.152626,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 13);
							case 13: SetPlayerCheckpoint(playerid, -844.649719,1556.240722,23.689661,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 14);
							case 14: SetPlayerCheckpoint(playerid, -722.345825,1234.539672,13.082777,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 15);
							case 15: SetPlayerCheckpoint(playerid, -479.406066,1055.267578,10.758330,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 16);
							case 16: SetPlayerCheckpoint(playerid, -280.432342,795.648620,14.969433,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 17);
							case 17: SetPlayerCheckpoint(playerid, 121.013809,888.304931,21.313713,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 18);
							case 18: SetPlayerCheckpoint(playerid,  399.175201,1020.810913,28.114093,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 19);
							case 19: SetPlayerCheckpoint(playerid,  629.962585,1081.923461,28.104816,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 20);
							case 20: FinishRace(playerid);
						}
					}
					case 3: // Вокруг штата
					{
						switch(GetPVarInt(playerid, "CPoint"))
						{
		    				case 1: SetPlayerCheckpoint(playerid, 2907.065185,-1340.356079,10.602052,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 2);
							case 2: SetPlayerCheckpoint(playerid, 2879.266357,-1036.205932,10.602182,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 3);
							case 3: SetPlayerCheckpoint(playerid, 2703.811035,-301.983123,28.210899,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 4);
							case 4: SetPlayerCheckpoint(playerid, 2766.953857,140.078170,20.922443,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 5);
							case 5: SetPlayerCheckpoint(playerid, 2187.240234,317.815795,32.625606,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 6);
							case 6: SetPlayerCheckpoint(playerid, 1737.057006,290.527801,17.787313,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 7);
							case 7: SetPlayerCheckpoint(playerid, 1783.208129,676.294555,16.547657,10.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 8);
							case 8: SetPlayerCheckpoint(playerid, 1797.384399,1038.488281,6.432106,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 9);
							case 9: SetPlayerCheckpoint(playerid, 1797.665527,1878.149536,6.438455,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 10);
							case 10: SetPlayerCheckpoint(playerid, 1623.706909,2511.942138,8.114388,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 11);
							case 11: SetPlayerCheckpoint(playerid, 1226.815917,2477.067871,8.437911,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 12);
							case 12: SetPlayerCheckpoint(playerid, 715.885803,2659.212402,20.068607,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 13);
							case 13: SetPlayerCheckpoint(playerid, 295.049102,2730.315917,59.570842,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 14);
							case 14: SetPlayerCheckpoint(playerid, -228.250656,2634.892089,62.505588,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 15);
							case 15: SetPlayerCheckpoint(playerid, -1080.492309,2702.697509,45.594310,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 16);
							case 16: SetPlayerCheckpoint(playerid, -1370.592407,2673.006591,52.015537,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 17);
							case 17: SetPlayerCheckpoint(playerid, -1836.469238,2687.417968,54.777694,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 18);
							case 18: SetPlayerCheckpoint(playerid,  -2483.583007,2667.936523,63.720306,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 19);
							case 19: SetPlayerCheckpoint(playerid,  -2689.358398,2148.233886,55.156768,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 20);
							case 20: SetPlayerCheckpoint(playerid,  -2689.545166,1772.491455,67.834945,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 21);
							case 21: SetPlayerCheckpoint(playerid,  -2681.769775,1292.618041,55.275966,30.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 22);
							case 22: FinishRace(playerid);
						}
					}
					case 4: // Дамба
					{
						switch(GetPVarInt(playerid, "CPoint"))
						{
							case 1: SetPlayerCheckpoint(playerid, -371.716552,2172.857910,42.405578,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 2);
							case 2: SetPlayerCheckpoint(playerid, -423.478332,2291.400878,43.492919,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 3);
							case 3: SetPlayerCheckpoint(playerid, -631.721984,2430.907958,102.062522,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 4);
							case 4: SetPlayerCheckpoint(playerid, -715.206420,2378.979980,128.144149,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 5);
							case 5: SetPlayerCheckpoint(playerid, -774.625366,2557.703613,86.826362,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 6);
							case 6: SetPlayerCheckpoint(playerid, -730.581848,2602.050048,69.184051,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 7);
							case 7: SetPlayerCheckpoint(playerid, -799.167968,2729.696289,45.708732,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 8);
							case 8: SetPlayerCheckpoint(playerid, -1211.567016,2645.972412,48.581249,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 9);
							case 9: SetPlayerCheckpoint(playerid, -1094.238159,2312.806640,86.759803,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 10);
							case 10: SetPlayerCheckpoint(playerid, -1168.043579,2095.814697,84.183563,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 11);
							case 11: SetPlayerCheckpoint(playerid, -1196.281982,1843.582763,41.780170,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 12);
							case 12: SetPlayerCheckpoint(playerid, -1112.925415,1735.565185,35.229248,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 13);
							case 13: SetPlayerCheckpoint(playerid, -1018.896423,1603.825439,34.431385,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 14);
							case 14: SetPlayerCheckpoint(playerid, -1018.895385,1603.830322,34.431007,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 15);
							case 15: SetPlayerCheckpoint(playerid, -1034.759033,1465.931396,38.157218,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 16);
							case 16: SetPlayerCheckpoint(playerid, -987.634948,1448.372314,38.147216,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 17);
							case 17: SetPlayerCheckpoint(playerid, -920.495239,1428.086791,30.156248,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 18);
							case 18: SetPlayerCheckpoint(playerid, -892.685058,1546.774902,26.206420,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 19);
							case 19: SetPlayerCheckpoint(playerid, -720.478271,1617.110229,27.469808,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 20);
							case 20: FinishRace(playerid);
						}
					}
					case 5: // На мотоциклах ЛС ЛС СФ
					{
						switch(GetPVarInt(playerid, "CPoint"))
						{
							case 1: SetPlayerCheckpoint(playerid, 1043.549926,1697.702026,10.383502,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 2);
							case 2: SetPlayerCheckpoint(playerid, 1026.607543,1517.931030,5.385787,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 3);
							case 3: SetPlayerCheckpoint(playerid, 1015.014282,1310.187500,10.378005,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 4);
							case 4: SetPlayerCheckpoint(playerid, 1169.768920,1192.977539,11.119038,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 5);
							case 5: SetPlayerCheckpoint(playerid, 1586.914916,1132.926879,10.235116,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 6);
							case 6: SetPlayerCheckpoint(playerid, 1806.367187,1132.955444,13.283540,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 7);
							case 7: SetPlayerCheckpoint(playerid, 1887.723266,1092.224609,10.412513,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 8);
							case 8: SetPlayerCheckpoint(playerid, 2048.259277,1077.418334,10.230467,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 9);
							case 9: SetPlayerCheckpoint(playerid, 2024.315673,852.757141,6.299904,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 10);
							case 10: SetPlayerCheckpoint(playerid, 1789.194091,823.043579,10.246987,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 11);
							case 11: SetPlayerCheckpoint(playerid, 1623.110595,177.922683,33.478466,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 12);
							case 12: SetPlayerCheckpoint(playerid, 1694.304931,-484.727020,33.024837,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 13);
							case 13: SetPlayerCheckpoint(playerid, 1629.126464,-851.014404,57.660888,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 14);
							case 14: SetPlayerCheckpoint(playerid, 1211.906372,-937.052001,42.262702,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 15);
							case 15: SetPlayerCheckpoint(playerid, 747.977905,-1070.297607,22.936019,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 16);
							case 16: SetPlayerCheckpoint(playerid, 631.721191,-1273.769531,16.135534,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 17);
							case 17: SetPlayerCheckpoint(playerid, 630.288757,-1608.911865,15.414999,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 18);
							case 18: SetPlayerCheckpoint(playerid, 530.959716,-1715.433715,12.243338,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 19);
							case 19: SetPlayerCheckpoint(playerid, -46.076934,-1512.106201,1.386695,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 20);
							case 20: SetPlayerCheckpoint(playerid, -87.031600,-1104.914916,2.336089,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 21);
							case 21: SetPlayerCheckpoint(playerid, -180.529876,-939.953369,32.517314,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 22);
							case 22: SetPlayerCheckpoint(playerid, -898.184448,-1108.520507,98.311592,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 23);
							case 23: SetPlayerCheckpoint(playerid, -1249.615722,-734.995788,63.057624,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 24);
							case 24: SetPlayerCheckpoint(playerid, -1390.301391,-602.415649,13.713925,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 25);
							case 25: SetPlayerCheckpoint(playerid, -1694.038574,-567.532470,12.875225,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 26);
							case 26: SetPlayerCheckpoint(playerid, -2163.825439,-480.917877,44.068351,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 27);
							case 27: SetPlayerCheckpoint(playerid, -2252.777832,183.661697,34.737335,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 28);
							case 28: SetPlayerCheckpoint(playerid, -2252.290283,319.552795,34.731006,15.0), PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0),  SetPVarInt(playerid, "CPoint", 29);
							case 29: FinishRace(playerid);
						}
					}
				}
			}
			case CHECKPOINT_CHASE:
			{
			    gPlayerCheckpointStatus[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
			    PlayerChase[playerid] = -1;
				return 1;
			}
	  		case COLLECTORSJOB_CHECKPOINT:
			{
			    DisablePlayerCheckpoint(playerid);
			    SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0); // остановил тачку
			    RemovePlayerFromVehicle(playerid);
			    SendClientMessage(playerid, COLOR_GREEN, "Заберите мешок с деньгами");
			    SetPlayerCheckpointMoney(playerid);
			    return 1;
			}
			case COLLECTORSJOBLOAD_CHECKPOINT:
			{
				DisablePlayerCheckpoint(playerid);
				SetPlayerAttachedObject(playerid, 2, 1550, 1,  0.0 , -0.200000 ,  0.0 ,  0.0 , 90.0 ,180.0, 1.0, 1.0, 1.0);
			    SendClientMessage(playerid, COLOR_GREEN, "Отнесите мешок в машину");

			    new Float: pos[4];
				new  pcar = GetPVarInt(playerid, "PickupToCar");
	  			GetVehiclePos   ( pcar, pos[0], pos[1], pos[2] );
	    		GetVehicleZAngle( pcar, pos[3] );

				SetPlayerCheckpoint(playerid,
  					pos[0] + 4.0 * floatcos(pos[3]-90.0, degrees),
     				pos[1] + 4.0 * floatsin(pos[3]-90.0, degrees),
       				pos[2] + 0.3,
       				1.0);
	            gPlayerCheckpointStatus[playerid] = COLLECTORTOCAR_CHECKPOINT;
			    return 1;
			}
			case COLLECTORTOCAR_CHECKPOINT:
			{
			    gPlayerCheckpointStatus[playerid] = 0;
			    DisablePlayerCheckpoint(playerid);
				SendClientMessage(playerid, COLOR_GREEN, "Садитесь в машину и отправляйтесь к следующей точке");
				GivePVarInt(playerid, "CollRoute", 1);
				RemovePlayerAttachedObject(playerid,2);
				return 1;
			}
			case COLLECTORENDJOB_CHECKPOINT:
			{
			    if(GetPVarInt(playerid, "CheckInkass") > gettime())
			    {
			        KickCheater(playerid, INKASCHECK);
			        return 1;
				}
				if(GetPVarInt(playerid, "CollRoute") != 7)
				{
				    DisablePlayerCheckpoint(playerid);
			    	gPlayerCheckpointStatus[playerid] = 0;
			    	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				 	DeletePVar(playerid, "IDroute");
					DeletePVar(playerid, "PickupToCar");
					DeletePVar(playerid, "CollRoute");
					DeletePVar(playerid, "GetMoneyCP");
				    return 1;
				}
			    DisablePlayerCheckpoint(playerid);
			    gPlayerCheckpointStatus[playerid] = 0;

			    new payj = 3500 + random(500);

			    GivePlayerPCash(playerid, payj, "COLLECTORENDJOB_CHECKPOINT");

			    format(string, sizeof(string), "Вы получили %d$ за работу", payj);
			    SendClientMessage(playerid, COLOR_GREEN, string);

			    format(string, 128, "~g~%d$", payj);
			    GameTextForPlayer(playerid, string, 3500, 1);

			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));

			    DeletePVar(playerid, "IDroute");
				DeletePVar(playerid, "PickupToCar");
				DeletePVar(playerid, "CollRoute");
				DeletePVar(playerid, "GetMoneyCP");

			    return 1;
			}
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				return 1;
		    }
		    case CHECKPOINT_WORKER2:
		    {
  				if(GetPVarInt(playerid, "JobProgress") < 40)
 	 			{
		    		if(GetPVarInt(playerid, "CheckCheakJob") > gettime())
				    {
						KickCheater(playerid, GRUZCIKCHEAT);
						return 1;
					}
					
 	 			    SetPVarInt(playerid, "CheckCheakJob", gettime() + 15);
		      	 	ClearAnimations(playerid);
		    		SetPVarInt(playerid, "GetPack", 1);
					SetPlayerAttachedObject(playerid, 4, 2060, 1, 0.100000, 0.500000, 0.000000, 90.000000, 90.000000, 90.000000, 1.000000, 1.000000, 1.000000); //Skin 2
					ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1,1);
					SetTimerEx("animliftup", 1000, false, "i", playerid);
					SetPlayerCheckpoint(playerid, -1505.138427,130.463378,17.328125, 1.5);
					gPlayerCheckpointStatus[playerid] = CHECKPOINT_WORKER;
					
					TotalPlayerRun[playerid] = 0;

				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN, "Вы достаточно на сегодня поработали. Идите за своей выручкой");
				}
				return 1;
			}
		    case CHECKPOINT_WORKER:
		    {
				if(GetPVarInt(playerid, "JobProgress") && GetPVarInt(playerid, "GetPack") && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
				{
					if(IsPlayerInRangeOfPoint(playerid,5.0, -1505.138427,130.463378,17.328125))
					{
			    		if(GetPVarInt(playerid, "CheckCheakJob") > gettime())
					    {
							KickCheater(playerid, GRUZCIKCHEAT);
							return 1;
						}
	 	 			    SetPVarInt(playerid, "CheckCheakJob", gettime() + 11);
 	 			    
 	 			        if(TotalPlayerRun[playerid] < 3)
 	 			        {
							KickCheater(playerid, GRUZCIKCHEAT2);
							return 1;
 	 			        }
 	 			    
						SetPVarInt(playerid,"JobProgress",  GetPVarInt(playerid, "JobProgress") + 1);
						if(GetPVarInt(playerid, "JobProgress") > 40) SendClientMessage(playerid, COLOR_GREEN, "Вы достаточно на сегодня поработали. Идите за своей выручкой");
						else SendClientMessage(playerid, COLOR_GREEN, "Возьмите еще мешок или заберите деньги");

						RemovePlayerAttachedObject(playerid, 4);
						ApplyAnimation(playerid,"CARRY","putdwn",5.1,0,1,1,0,1000,1);
					    DeletePVar(playerid, "GetPack");
						GiveAchievement(playerid, 16, 1);
						
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_WORKER2;
					    SetPlayerCheckpoint(playerid, -1547.518432,111.565849,3.554687, 1.5);
					}
				}
				return 1;
		    }
		    case CHECKPOINT_PRITON:
		    {
		        if(DrugsPritonAmmount >= 5000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Притон полный");
					DisablePlayerCheckpoint(playerid);
					gPlayerCheckpointStatus[playerid] = 0;
					DeletePVar(playerid, "DrugsDelivery");
					return 1;
				}
				new cashmade;
				new tmpcar = GetPlayerVehicleID(playerid);
				if(!IsPlayerInAnyVehicle(playerid) || IsAHarvester(tmpcar)) return 1;
				new deliverCar = GetFactionCarId(9,tmpcar);
				cashmade = DrugsLoad[deliverCar]*4;
				DrugsPritonAmmount += DrugsLoad[deliverCar];
				GivePlayerPCash(playerid, cashmade, "CHECKPOINT_PRITON");
				DrugsLoad[deliverCar] = 0;
				format(string, sizeof(string), "Прибыль: $%d", cashmade);
				SendClientMessage(playerid, COLOR_WHITE, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				MatsTime[playerid] = gettime() + 120;
				SaveOther();
		        PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		        DisablePlayerCheckpoint(playerid);
		        gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		        DeletePVar(playerid, "DrugsDelivery");
		        return 1;
		    }
		    case CHECKPOINT_MINER:
			{
				if(GetPVarInt(playerid, "Miner_Job") != 1) return 1;
				if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;

				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;

				ApplyAnimation(playerid, "SWORD", "sword_4", 4.0, 1, 0, 0, 0, 0);

				new Float:pos[3];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				SetTimerEx("MinerGetCount", 10000, 0, "dfff", playerid, pos[0], pos[1], pos[2]);

				return 1;
			}
		    
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
    if(CheckFCalls(playerid, 2)) return 1;
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
    if(CheckFCalls(playerid, 3)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerEnterRaceCheckpoint(%d); (%d)", GetName(playerid), playerid, gPlayerCheckpointStatus[playerid]);
    
    switch(gPlayerCheckpointStatus[playerid])
    {
        case CHECKPOINT_PIZZA:
        {
			new newcar = GetPlayerVehicleID(playerid);
 			for(new i; i < sizeof(PizzaBoy); i ++)
			{
				if(newcar == PizzaBoy[i])
				{
				    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		            new nowcp = GetPVarInt(playerid, "CoursePizza");
		            GivePVarInt(playerid, "CoursePizza", 1);
		            if(nowcp == 18)
		            {
		                SetPlayerRaceCheckpoint(playerid, 1, -2310.559570,-131.600677,34.920303, -2310.559570,-131.600677,34.920303, 10.0);
		                SendClientMessage(playerid, COLOR_GREEN, "Отвезите скутер к закусочной");
		            }
		            else if(nowcp == 19)
		            {
		                SendClientMessage(playerid, COLOR_GREEN, "Встаньте на иконку начала работы и заберите деньги");
		               	DisablePlayerRaceCheckpoint(playerid);
		                RemovePlayerFromVehicle(playerid);
		                SetPVarInt(playerid, "GetMoney", 1);
		            }
		            else
		            {
						switch(GetPVarInt(playerid, "Marshrut"))
						{
						    case 1: SetPlayerRaceCheckpoint(playerid, 0, PizzaCourse[nowcp][0], PizzaCourse[nowcp][1], PizzaCourse[nowcp][2], PizzaCourse[nowcp+1][0], PizzaCourse[nowcp+1][1], PizzaCourse[nowcp+1][2], 6.0);
						    case 2: SetPlayerRaceCheckpoint(playerid, 0, PizzaCourse2[nowcp][0], PizzaCourse2[nowcp][1], PizzaCourse2[nowcp][2], PizzaCourse2[nowcp+1][0], PizzaCourse2[nowcp+1][1], PizzaCourse2[nowcp+1][2], 6.0);
						    case 3: SetPlayerRaceCheckpoint(playerid, 0, PizzaCourse3[nowcp][0], PizzaCourse3[nowcp][1], PizzaCourse3[nowcp][2], PizzaCourse3[nowcp+1][0], PizzaCourse3[nowcp+1][1], PizzaCourse3[nowcp+1][2], 6.0);
						}
					}
				}
			}
			return 1;
		}
		case CHECKPOINT_FISHER:
		{
			if(IsFishingBoat(GetPlayerVehicleID(playerid)))
			{
			    if(GetPVarInt(playerid, "Fisher") == 1 && GetPVarInt(playerid, "PayedForBoat") != 0)
			    {
			        gPlayerCheckpointStatus[playerid] = 0;
			        DisablePlayerRaceCheckpoint(playerid);
			        SendClientMessage(playerid, COLOR_GREEN, "Встаньте на борта лодки и закиньте удочку, нажав Правую кнопку мыши");
			        SetPVarInt(playerid, "CanStartFishing", 1);
				}
			}
			return 1;
		}
		case CHECKPOINT_BUSJOB:
		{
		    GivePVarInt(playerid, "TotalCPs", 1);
		    GivePVarInt(playerid, "TotalCPbus", 1);
			if(GetPVarInt(playerid, "BusStation") == 0)
			{
			    SetPlayerBusCP(playerid);
			}
			else
			{
			    StationTimer[playerid] = SetTimerEx("GoToNextCP", 15000, 0, "d", playerid);
			    switch(GetPVarInt(playerid, "BusCourse"))
			    {
			        case 0: ProxDetector(30.0, playerid, "Автобус \"Внутригородской LS #1\" отправляется через 15 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
			        case 1: ProxDetector(30.0, playerid, "Автобус \"Внутригородской LS #2\" отправляется через 15 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
			        case 2: ProxDetector(30.0, playerid, "Автобус \"Междугородний LS — SF\" отправляется через 15 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
			        case 3: ProxDetector(30.0, playerid, "Автобус \"Внутригородской SF\" отправляется через 15 секунд", COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN,COLOR_GREEN);
				}
				DeletePVar(playerid, "BusStation");
				DisablePlayerRaceCheckpoint(playerid);
			}
			return 1;
		}
		case CHECKPOINT_AUTOSCHOOL:
		{
			if(GetPVarInt(playerid, "FinishAHTest") == 0)
			{
				GivePVarInt(playerid, "CHAutoSchool", 1);
				new CP = GetPVarInt(playerid, "CHAutoSchool");

				if(ASCheckpoints[CP][3] != 1.0)
				{
			 		SetPlayerRaceCheckpoint(playerid, 0, ASCheckpoints[CP][0], ASCheckpoints[CP][1], ASCheckpoints[CP][2], ASCheckpoints[CP+1][0], ASCheckpoints[CP+1][1], ASCheckpoints[CP+1][2], 5.0);
				}
				else
				{
				    DeletePVar(playerid, "CHAutoSchool");
				    SetPlayerRaceCheckpoint(playerid, 1, ASCheckpoints[CP][0], ASCheckpoints[CP][1], ASCheckpoints[CP][2], 0.0, 0.0, 0.0, 5.0);
				    SetPVarInt(playerid, "FinishAHTest", 1);

				    new Float:vhp;
				    GetVehicleHealth(GetPlayerVehicleID(playerid), vhp);
				    SetPVarFloat(playerid, "VHeal", vhp);
				}
			}
			else
			{
			    DestroyVehicle(PlayerSchoolCar[playerid]);
			    PlayerSchoolCar[playerid] = 0;
			    
			    SetPlayerVirtualWorld(playerid, 0);

			    for(new i; i < 20; i ++) SendClientMessage(playerid, COLOR_WHITE, " ");

				if(GetPVarFloat(playerid, "VHeal") > 950.0)
				{
			    	SendClientMessage(playerid, COLOR_INFO4, "Вы успешно сдали все тесты и получили водительские права!");
			    	SendClientMessage(playerid, COLOR_INFO4, "Советуем после 1 лвл устроиться на гос. работу, а после 2 лвл вступить в организацию");
			    	SendClientMessage(playerid, COLOR_INFO4, "Попутно Вы можете выполнять предложенные квесты, получая за них деньги");
			    	SendClientMessage(playerid, COLOR_INFO4, "Все нужные Вам места Вы найдете в /gps. Удачной Вам игры!");

			    	GivePlayerPCash(playerid, -150, "Test v AH");
			    	GameTextForPlayer(playerid, "~r~-$150", 3000, 1);

			    	SetPVarInt(playerid, "CarLic", 1);
			    	MySQL_UpdateInt(playerid, "CarLic");
			    	
					SetPVarInt(playerid, "Next_Quest", 1);
					
					if(GetPVarInt(playerid, "RegNowLic") == 1)
					{
						GetLicens++;
						DeletePVar(playerid, "RegNowLic");
					}
			    }
			    else
			    {
		            SendClientMessage(playerid, COLOR_GREY, "Вы провалили экзамен! Повреждения на машине были слишком сильные");
		            SendClientMessage(playerid, COLOR_GREY, "Попробуйте сдать тест еще раз");
			    }
			    DeletePVar(playerid, "VHeal");
			    DeletePVar(playerid, "CHAutoSchool");
			    DeletePVar(playerid, "FinishAHTest");
			    DeletePVar(playerid, "OnAHTest");
			    
                gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
			}
			return 1;
		}
		case CHECKPOINT_OILJOB:
		{
		    if(GetPVarInt(playerid, "OnOilJob") != 1) return 1;

			new pOilCar = GetLoaderCar(GetPlayerVehicleID(playerid));
			if(pOilCar != -1)
			{
		        if(GetPVarInt(playerid, "AntiCheatJob") > gettime())
		        {
		            KickCheater(playerid, OILCHEAT);
		            return 1;
				}
				SetPVarInt(playerid, "AntiCheatJob", gettime()+7);


			    switch(GetPVarInt(playerid, "OilSkill"))
			    {
			        case 0..29:
					{
					    if(LoadCar[pOilCar][gBarrel1] != 0) DestroyObject(LoadCar[pOilCar][gBarrel1]);
					    LoadCar[pOilCar][gBarrel1] = CreateObject(2062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
						AttachObjectToVehicle(LoadCar[pOilCar][gBarrel1], LoadCar[pOilCar][gMaincar], 0.0, 0.5, 0.3, 90.0, 90.0, 0.0);
					}
			        case 30..59:
			        {
					    if(LoadCar[pOilCar][gBarrel1] != 0) DestroyObject(LoadCar[pOilCar][gBarrel1]);
					    LoadCar[pOilCar][gBarrel1] = CreateObject(2062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
						AttachObjectToVehicle(LoadCar[pOilCar][gBarrel1], LoadCar[pOilCar][gMaincar], 0.0, 0.5, 0.3, 90.0, 90.0, 0.0);


					    if(LoadCar[pOilCar][gBarrel2] != 0) DestroyObject(LoadCar[pOilCar][gBarrel2]);
					    LoadCar[pOilCar][gBarrel2] = CreateObject(2062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
						AttachObjectToVehicle(LoadCar[pOilCar][gBarrel2], LoadCar[pOilCar][gMaincar], 0.0, 0.35, 1.0, 90.0, 90.0, 0);
			        }
			        default:
			        {
					    if(LoadCar[pOilCar][gBarrel1] != 0) DestroyObject(LoadCar[pOilCar][gBarrel1]);
					    LoadCar[pOilCar][gBarrel1] = CreateObject(2062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
						AttachObjectToVehicle(LoadCar[pOilCar][gBarrel1], LoadCar[pOilCar][gMaincar], 0.0, 0.5, 0.3, 90.0, 90.0, 0.0);


					    if(LoadCar[pOilCar][gBarrel2] != 0) DestroyObject(LoadCar[pOilCar][gBarrel2]);
					    LoadCar[pOilCar][gBarrel2] = CreateObject(2062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
						AttachObjectToVehicle(LoadCar[pOilCar][gBarrel2], LoadCar[pOilCar][gMaincar], 0.0, 0.35, 1.0, 90.0, 90.0, 0);

						if(LoadCar[pOilCar][gBarrel3] != 0) DestroyObject(LoadCar[pOilCar][gBarrel3]);
					    LoadCar[pOilCar][gBarrel3] = CreateObject(2062, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
						AttachObjectToVehicle(LoadCar[pOilCar][gBarrel3], LoadCar[pOilCar][gMaincar], 0.0, 0.3, 1.7, 90.0, 90.0, 0.0);
			        }
				}

				gPlayerCheckpointStatus[playerid] = CHECKPOINT_OILJOBTOFACTORY;

				switch(random(4))
				{
				    case 0: SetPlayerRaceCheckpoint(playerid, 1, 257.726898,1361.199340,10.353157, 0.0, 0.0, 0.0, 8.0);
				    case 1: SetPlayerRaceCheckpoint(playerid, 1, 257.991424,1386.507080,10.348115, 0.0, 0.0, 0.0, 8.0);
				    case 2: SetPlayerRaceCheckpoint(playerid, 1, 258.283355,1411.012451,10.281488, 0.0, 0.0, 0.0, 8.0);
				    default: SetPlayerRaceCheckpoint(playerid, 1, 258.163574,1435.719238,10.349130, 0.0, 0.0, 0.0, 8.0);
				}
			}
			return 1;
		}
		case CHECKPOINT_OILJOBTOFACTORY:
		{
		    if(GetPVarInt(playerid, "OnOilJob") != 1) return 1;

		    new pOilCar = GetLoaderCar(GetPlayerVehicleID(playerid));
		    if(pOilCar != -1)
		    {
		        if(GetPVarInt(playerid, "AntiCheatJob") > gettime())
		        {
		            KickCheater(playerid, OILCHEAT);
		            return 1;
				}
				SetPVarInt(playerid, "AntiCheatJob", gettime()+7);

				if(SBizzInfo[OIL_COMPANY][sbProducts] >= SBizzInfo[OIL_COMPANY][sbMaxProducts])
				{
				    return SendClientMessage(playerid, COLOR_GREEN, "Завод не может вместить больше нефти");
				}
		        switch(GetPVarInt(playerid, "OilSkill"))
		        {
		            case 0..29: 	GivePVarInt(playerid, "OnOilCount", 1), SBizzInfo[OIL_COMPANY][sbProducts] += 10;
		            case 30..59:  	GivePVarInt(playerid, "OnOilCount", 2), SBizzInfo[OIL_COMPANY][sbProducts] += 20;
					default:  		GivePVarInt(playerid, "OnOilCount", 3), SBizzInfo[OIL_COMPANY][sbProducts] += 30;
				}

				if(LoadCar[pOilCar][gBarrel1] != 0) DestroyObject(LoadCar[pOilCar][gBarrel1]), LoadCar[pOilCar][gBarrel1] = 0;
				if(LoadCar[pOilCar][gBarrel2] != 0) DestroyObject(LoadCar[pOilCar][gBarrel2]), LoadCar[pOilCar][gBarrel2] = 0;
				if(LoadCar[pOilCar][gBarrel3] != 0) DestroyObject(LoadCar[pOilCar][gBarrel3]), LoadCar[pOilCar][gBarrel3] = 0;

				new string[128];
				format(string, sizeof(string), "~w~amount ~g~%d", GetPVarInt(playerid, "OnOilCount"));
				GameTextForPlayer(playerid, string, 3000, 1);

				if(GetPVarInt(playerid, "OilSkill") < 70) GivePVarInt(playerid, "OilSkill", 1);

                gPlayerCheckpointStatus[playerid] = CHECKPOINT_OILJOB;


                new rand = random(5)+1;
				SetPVarInt(playerid, "RandCpOil", rand);
				SetCheckpointLoadOil(playerid, rand);
    			
		        format(string, sizeof(string), "[Закупка нефти]\n\nЗакупка нефти: $%d\nПродажа нефти: $%d\nНефть в цистернах: %d\nБензозавод: %d / %d", SBizzInfo[OIL_COMPANY][sbEntranceCost], SBizzInfo[3][sbPriceProd], SBizzInfo[OIL_COMPANY][sbProducts], SBizzInfo[3][sbProducts], SBizzInfo[3][sbMaxProducts]);
				Update3DTextLabelText(buyoil, 0xFFFF00FF, string);


				switch(GetPVarInt(playerid, "OilSkill"))
				{
				    case 10: SendClientMessage(playerid, COLOR_GREEN, "Ваш навык возрос, умение грузчика теперь 10"), MySQL_UpdateInt(playerid, "OilSkill");
				    case 20: SendClientMessage(playerid, COLOR_GREEN, "Ваш навык возрос, умение грузчика теперь 20"), MySQL_UpdateInt(playerid, "OilSkill");
				    case 30: SendClientMessage(playerid, COLOR_GREEN, "Ваш навык возрос, умение грузчика теперь 30, Вы теперь можете перевозить 2 бочки за раз"), MySQL_UpdateInt(playerid, "OilSkill");
					case 40: SendClientMessage(playerid, COLOR_GREEN, "Ваш навык возрос, умение грузчика теперь 40"), MySQL_UpdateInt(playerid, "OilSkill");
					case 50: SendClientMessage(playerid, COLOR_GREEN, "Ваш навык возрос, умение грузчика теперь 50"), MySQL_UpdateInt(playerid, "OilSkill");
					case 60: SendClientMessage(playerid, COLOR_GREEN, "Ваш навык возрос, умение грузчика теперь 60 [MAX], Вы теперь можете перевозить 3 бочки за раз"), MySQL_UpdateInt(playerid, "OilSkill");
		    	}
			}
		    return 1;
		}
		case CHECKPOINT_SELLOIL:
		{
			if(GetPVarInt(playerid, "SellOilAH") > gettime())
			{
			    KickCheater(playerid, OILCHEAT2);
			    return 1;
			}
			SetPVarInt(playerid, "BuyOilAH", gettime()+60);

			new car = GetPlayerVehicleID(playerid);

			if(IsOilTruck(car))
			{
				if(GetVehicleTank(car) != -1)
				{
				    new st[128];
				    format(st, sizeof(st), "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите продать. (стоимость $%d за 1 баррель)", SBizzInfo[3][sbPriceProd]);
		      		ShowPlayerDialog(playerid, 212, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа нефти", st, "Продать", "Отмена");
					SetVehicleVelocity(car, 0.0, 0.0, 0.0);
					SetVehicleVelocity(GetVehicleTrailer(car), 0.0, 0.0, 0.0);
				}
				else
				{
				    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"У Вашего грузовика нет прицепа, возьмите его на заводе!", "Ok", "");
				}
			}
			else
			{
				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Вам нужен танкер с прицепом для перевозки нефти!", "Ok", "");
			}
			return 1;
		}
		case CHECKPOINT_CLEANER:
		{
			GivePVarInt(playerid, "TotalGetTrash", 1);

			new string[30];
			format(string, sizeof(string), "~w~amount ~g~%d", GetPVarInt(playerid, "TotalGetTrash"));
			GameTextForPlayer(playerid, string, 3000, 1);
			
            GiveAchievement(playerid, 10, 1);
			for(new i; i < sizeof(PlayerCleaner); i++)
			{
			    if(!IsPlayerConnected(PlayerCleaner[i])) continue;
			    if(GetPVarInt(PlayerCleaner[i], "OnCleanerJob") != 1) continue;
			    if(PlayerCleaner[i] == playerid) continue;
				if(GetPVarInt(playerid, "Cleaner_Course") != GetPVarInt(PlayerCleaner[i], "Cleaner_Course")) continue;
				
			    GivePVarInt(PlayerCleaner[i], "Clear_Point", 1);
			    SetPlayerTrashPoint(PlayerCleaner[i]);
			}
			GivePVarInt(playerid, "Clear_Point", 1);
			SetPlayerTrashPoint(playerid);
			return 1;
		}
  		case CHECKPOINT_FINDONDUMP:
		{
		    new dot = GetPVarInt(playerid, "DumpDot");

		    SetPlayerPos(playerid, DumpDots[dot][0], DumpDots[dot][1], DumpDots[dot][2]);
		    SetPlayerFacingAngle(playerid, DumpDots[dot][3]);
		    
		    DeletePVar(playerid, "DumpDot");
		    
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop", 4.0,1,0,0,0,0);
			SetTimerEx("FindTrashDump", 9000, 0, "d", playerid);
   			gPlayerCheckpointStatus[playerid] = 0;
	    	DisablePlayerRaceCheckpoint(playerid);
		    return 1;
		}
		case CHECKPOINT_DUMPLOAD:
		{
		    if(GetPVarInt(playerid, "AntiCheatDump") > gettime())
		    {
		        KickCheater(playerid, DUMPCHEAT);
		        return 1;
		    }
		    if(TotalPlayerRun[playerid] < 2)
		    {
		        KickCheater(playerid, DUMPCHEAT2);
		        return 1;
		    }
		    
			SetPlayerAttachedObject(playerid, 4, 18635, 6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
			GivePVarInt(playerid, "DumpAmmount", 1);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_FINDONDUMP;
   			SetRandomDumpCP(playerid);

			new string[128];
			format(string, sizeof(string), "~w~amount ~g~%d", GetPVarInt(playerid, "DumpAmmount"));
			GameTextForPlayer(playerid, string, 3000, 1);

			DumpLoad += (25-random(3));

			format(string, sizeof(string), "Склад свалки:\n %d кг. железа", DumpLoad);
			Update3DTextLabelText(Dump3dText, COLOR_YELLOW, string);

			format(string, sizeof(string), "Склад свалки:\n %d кг. железа\n\nЗакупка металла: /buym\nПродажа: /sellm\nМатериалы: /buymats", DumpLoad);
			Update3DTextLabelText(LoadDump, COLOR_YELLOW, string);
			ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,0,0,0,1000,1);

			return 1;
		}
		case CHECKPOINT_QUEST_4_RACE:
		{
			static Float:Quest_4_Race[][3] = {
				{-1900.025268,-1000.174194,39.865383},
				{-1899.254760,-478.550689,38.130241},
				{-1892.196655,2.622791,38.138114},
				{-1600.011962,606.844055,41.483062},
				{-1265.374633,961.006164,44.865188},
				{-970.172790,1116.009643,29.45203},
				{-888.381103,841.459655,19.349464},
				{-607.628417,635.524902,16.538848},
				{-135.476837,571.037841,15.771886},
				{321.492492,757.089782,6.033474},
				{687.511108,658.346801,8.853813},
				{1091.458007,796.428161,10.620767},
				{1500.223632,831.493041,6.715991},
				{1785.022949,815.103271,10.729353},
				{1747.779296,586.333007,23.727178},
				{1625.082031,240.550048,30.102735},
				{1654.673461,278.122131,20.981748},
				{2058.125488,302.742828,34.587505},
				{2463.534423,303.648254,31.539167},
				{2758.484619,23.486396,30.934143},
				{2756.904541,-404.058898,23.664564},
				{2873.787109,-769.010375,10.731794},
				{2868.468505,-1019.931213,10.771004}
			};
			
			new CP = GetPVarInt(playerid, "Quest_4_Cp");
			GivePVarInt(playerid, "Quest_4_Cp", 1);
			if(CP+1 < sizeof(Quest_4_Race))
			{
                SetPlayerRaceCheckpoint(playerid, 0, Quest_4_Race[CP][0], Quest_4_Race[CP][1], Quest_4_Race[CP][2], Quest_4_Race[CP+1][0], Quest_4_Race[CP+1][1], Quest_4_Race[CP+1][2], 5.0);
			}
			else
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_4_FINISH;
				SetPlayerRaceCheckpoint(playerid, 1, Quest_4_Race[CP][0], Quest_4_Race[CP][1], Quest_4_Race[CP][2], Quest_4_Race[0][0], Quest_4_Race[0][1], Quest_4_Race[0][2], 5.0);
			}
			
			return 1;
		}
		case CHECKPOINT_QUEST_4_FINISH:
		{
		    SetPVarInt(playerid, "Quest_4_StopTimer", 1);
		    DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid, "Quest_4_Cp");
		    SendClientMessage(playerid, COLOR_YELLOW, "SMS: Теперь отвези машину в гараж, там же заберешь деньги");
			PlayerPlaySound(playerid, 23000, 0.0, 0.0, 0.0);
			
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_4_GARAGE;
			SetPlayerCheckpoint(playerid, -2458.928955,-122.584518,25.796709, 5.0);
		    return 1;
		}
		case CHECKPOINT_QUEST_6_FLYING:
		{
			static Float:Quest_6_Fly[][3] = {
				{36.464241,-38.356845,26.678499},
				{2.007418,108.721466,35.986614},
				{-78.874839,127.979347,49.107887},
				{-171.522293,107.680480,45.037876},
				{-206.007064,-35.890209,46.897632},
				{-121.242919,-106.100723,40.842250},
				{12.024369,-25.777320,31.253198},
				{-164.135345,-1132.109619,48.035243},
				{-178.468841,-1215.213134,47.378814},
				{-192.517623,-1283.091308,44.704959},
				{-211.968780,-1381.585693,29.860918},
				{-310.740356,-1474.310546,36.390888},
				{-297.893249,-1413.277587,34.975948},
				{-348.575866,-1320.801757,41.885902},
				{-398.182586,-1329.564819,54.632122},
				{-514.376770,-1364.512207,48.307792},
				{-1045.054077,-1116.196166,173.231445},
				{-1108.419921,-1027.677124,173.564407},
				{-1127.612792,-946.509277,182.756042},
				{-1369.469848,-478.374084,14.456803}
			};
			
			new CP = GetPVarInt(playerid, "Quest_6_Cp");
			if(CP == 0)
			{
				SetPVarInt(playerid, "Quest_Object_1", CreatePlayerObject(playerid, 18707, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 50.0));
				AttachPlayerObjectToVehicle(playerid, GetPVarInt(playerid, "Quest_Object_1"), QuestCars[playerid][1], 0.0, 0.0, -2.0, 0.0, 0.0, 0.0);
			}
			
			GivePVarInt(playerid, "Quest_6_Cp", 1);
			if(CP+1 < sizeof(Quest_6_Fly))
			{
                SetPlayerRaceCheckpoint(playerid, 3, Quest_6_Fly[CP][0], Quest_6_Fly[CP][1], Quest_6_Fly[CP][2], Quest_6_Fly[CP+1][0], Quest_6_Fly[CP+1][1], Quest_6_Fly[CP+1][2], 6.0);
			}
			else
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_6_FINISH;
				SetPlayerRaceCheckpoint(playerid, 1, Quest_6_Fly[CP][0], Quest_6_Fly[CP][1], Quest_6_Fly[CP][2], Quest_6_Fly[0][0], Quest_6_Fly[0][1], Quest_6_Fly[0][2], 5.0);
			}
		    return 1;
		}
		case CHECKPOINT_QUEST_6_FINISH:
		{
		    SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
		    
			GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			gPlayerCheckpointStatus[playerid] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			GameTextForPlayer(playerid, "mission passed!~n~~w~$1000", 3000, 0);
			GivePlayerPCash(playerid, 1000, "CHECKPOINT_QUEST_6_FINISH");

			if(QuestCars[playerid][0] != 0)
			{
				DestroyVehicle(QuestCars[playerid][0]);
				QuestCars[playerid][0] = 0;
			}
			if(QuestCars[playerid][1] != 0)
			{
				DestroyVehicle(QuestCars[playerid][1]);
				QuestCars[playerid][1] = 0;
			}
			DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_1"));
			DeletePVar(playerid, "Quest_Object_1");
			SetPlayerVirtualWorld(playerid, 0);

			DeletePVar(playerid, "On_Quest");
			DeletePVar(playerid, "Quest_6_Cp");
			TakingLesson[playerid] = 0;
			
			return 1;
		}
		case CHECKPOINT_ROBGARAGE:
		{
			new vi = GetPlayerVehicleID(playerid);
			new car = GetRobCar(vi);
			if(car != -1)
			{
   				new mo = RobCarInfo[car][cTotalp] * 500 + random(1000);
				GivePlayerPCash(playerid, mo, "CHECKPOINT_ROBGARAGE");

				new string[50];
				format(string, sizeof(string), "~g~+$%d", mo);
				GameTextForPlayer(playerid, string, 3000, 1);

				RobCarInfo[car][cTotalp] = 0;

				for(new i; i < MAX_PLAYERS; i++)
    			{
					if(!IsPlayerConnected(i)) continue;
					if(GetPlayerVehicleID(i) == vi)
					{
	    				GetPlayerPos(i, Dop_CheckPos[i][0], Dop_CheckPos[i][1], Dop_CheckPos[i][2]);
					    if(GetPVarInt(i, "On_RobHouse") != 0)
					    {
							DeletePVar(i, "On_RobHouse");
							DeletePVar(i, "Rob_Car");
							DeletePVar(i, "Rob_Garage");
       						DisablePlayerCheckpoint(i);
							DisablePlayerRaceCheckpoint(i);
					        gPlayerCheckpointStatus[i] = 0;
					        RemovePlayerAttachedObject(i, 2);
					        if(IsPlayerAttachedObjectSlotUsed(i, 1))
					        {
					            RemovePlayerAttachedObject(i, 1);
					        }
			    		}
					}
				}
				SetVehicleToRespawn(vi);
			}
			return 1;
		}
		case CHECKPOINT_PVP_RACE:
		{
			if(GetPVarInt(playerid, "Race_Pvp_On") != 1)
			{
   				DisablePlayerCheckpoint(playerid);
			    DisablePlayerRaceCheckpoint(playerid);
			    gPlayerCheckpointStatus[playerid] = 0;
			}
			else
			{
			    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
   				Race_Pvp_Next_CP(playerid);
			}
			return 1;
		}
// ----------------------
	}
    return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
    if(CheckFCalls(playerid, 4)) return 1;
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(CheckFCalls(playerid, 5)) return 1;
	return 1;
}


public OnRconLoginAttempt(ip[], password[], success)
{
    if(!success) //If the password was incorrect
    {
        new pip[16];
        for(new i=0; i<MAX_PLAYERS; i++) //Loop through all players
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true)) //If a player's IP is the IP that failed the login
            {
                GivePVarInt(i, "RconAttempt", 1);
				if(GetPVarInt(i, "RconAttempt") == 3) SendClientMessage(i, COLOR_RED, "Вы забанены на 30 дней за подбор RCON пароля!"), MySQL_Banip(i, 720, "Подбор RCON пароля");
            }
        }
    }
    return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
    if(CheckFCalls(playerid, 6)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerObjectMoved(%d, %d);", GetName(playerid), playerid, objectid);

	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(CheckFCalls(playerid, 7)) return 1;
    if(GetPVarInt(playerid, "Not_Spawned") == 1) return 1;
    if(GetPVarInt(playerid, "Logged") == 0) return 1;
    if(GetPVarInt(playerid, "On_Quest") == 1) return 1;
    if(GetPVarInt(playerid, "On_Duel") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время дуэли");
    if(GetPVarInt(playerid, "Race_Pvp_On") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время гонки");
    
	if(pickupid < 0 || pickupid >= MAX_PICKUPS) return 1;
	if(!IsPlayerInRangeOfPoint(playerid, 20.0, Pickup_Pos[pickupid][0], Pickup_Pos[pickupid][1], Pickup_Pos[pickupid][2])) return 1;
	if(!IsPlayerInRangeOfPoint(playerid, 40.0, SpeedPos[playerid][0], SpeedPos[playerid][1], SpeedPos[playerid][2])) return 1;

    new newcar = GetPlayerVehicleID(playerid);

	if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerPickUpPickup(%d, %d);", GetName(playerid), playerid, pickupid);

	
    if(pickupid == yakuzapickup1)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 1298.9174,-794.9288,1084.0078);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == yakuzapickup2)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 728.4601,-1276.5067,13.6484);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == yakuzapickup3)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 1262.3529,-785.5483,1091.9063);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == yakuzapickup4)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 688.7056,-1275.7406,13.5586);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == reporters1)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1777.3506,-1302.5133,131.7332);
		return 1;
	}
	else if(pickupid == reporters2)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1816.1145,-1298.3153,114.7723);
		return 1;
	}
	else if(pickupid == EnterGlassShop)
	{
		oSetPlayerPos(playerid, 203.752014,-46.824295,1001.804687);
		SetPlayerFacingAngle(playerid, 359.135192);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == ExitGlassShop)
	{
		switch(GetPlayerVirtualWorld(playerid))
		{
			case 1: oSetPlayerPos(playerid, -2244.220703,142.146423,35.320312);
			default: oSetPlayerPos(playerid, -2244.874267,120.741523,35.320312);
		}
		SetPlayerFacingAngle(playerid, 152.959793);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == GlassPickup)
	{
	    oSetPlayerPos(playerid, 209.328552,-33.998050,1001.929687);
	    SetPlayerFacingAngle(playerid, 141.221420);

	    SetPlayerCameraPos(playerid, 209.258367, -35.489369, 1003.2);
	    SetPlayerCameraLookAt(playerid, 209.328552, -33.998050, 1002.5);

	    ShowMenuForPlayer(GlassMenu, playerid);
	    SetPlayerVirtualWorld(playerid, playerid+1000);
	    
	    TogglePlayerControllable(playerid, 0);

	    for(new i; i < 20; i++) SendClientMessage(playerid, -1, " ");
	    SendClientMessage(playerid, COLOR_WHITE, "Используйте иконки для настройки положения очков на персонаже");
	    SendClientMessage(playerid, COLOR_WHITE, "Для отключения поворота головы используйте /headmove");
	    return 1;
	}
	else if(pickupid == EnterCapsShop)
	{
		oSetPlayerPos(playerid, 203.752014,-46.824295,1001.804687);
		SetPlayerFacingAngle(playerid, 359.135192);
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == CapsPickup)
	{
	    oSetPlayerPos(playerid, 209.328552,-33.998050,1001.929687);
	    SetPlayerFacingAngle(playerid, 141.221420);

	    SetPlayerCameraPos(playerid, 209.258367, -35.489369, 1003.2);
	    SetPlayerCameraLookAt(playerid, 209.328552, -33.998050, 1002.5);

	    ShowMenuForPlayer(CapsMenu, playerid);
	    SetPlayerVirtualWorld(playerid, playerid+1000);

	    TogglePlayerControllable(playerid, 0);

	    for(new i; i < 20; i++) SendClientMessage(playerid, -1, " ");
	    SendClientMessage(playerid, COLOR_WHITE, "Используйте иконки для настройки положения шапок на персонаже");
	    SendClientMessage(playerid, COLOR_WHITE, "Для отключения поворота головы используйте /headmove");
	    return 1;
	}
	
	else if(pickupid == PickupEnterDuel)
 	{
		SetPlayerInterior(playerid, 6);
		oSetPlayerPos(playerid, 316.174041,-166.961959,999.593750);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerFacingAngle(playerid, 15.421329);
	    return 1;
 	}
 	else if(pickupid == PickupExitDuel)
 	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, -2222.606201,103.701896,35.320312);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerFacingAngle(playerid, 66.984275);
	    return 1;
 	}
 	else if(pickupid == PickupCreateDuel)
 	{
  		if(order[playerid] == 0)
	    {
			if(GetPVarInt(playerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Создавать дуэли могут только игроки 3 уровня и выше");
			SetPVarFloat(playerid, "Duel_HP", 100.0);
			SetPVarInt(playerid, "Duel_Play", -1);
			SetPVarInt(playerid, "Duel_Create", 1);
	        order[playerid] = 1;
	        ShowPlayerDuelInfo(playerid);
		}
		return 1;
 	}
	else if(pickupid == Victim_EnterLS)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 223.813766,-8.401629,1002.210937);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == Victim_EnterSF)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 223.813766,-8.401629,1002.210937);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == Victim_EnterLV)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 223.813766,-8.401629,1002.210937);
		SetPlayerFacingAngle(playerid, 90.0);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == Victim_Exit)
	{
	    SetPlayerInterior(playerid, 0);
		switch(GetPlayerVirtualWorld(playerid))
		{
		    case 1:
			{
                oSetPlayerPos(playerid, 456.481018, -1501.543823, 31.040538);
                SetPlayerFacingAngle(playerid, 98.323272);
			}
		    case 2:
			{
                oSetPlayerPos(playerid, -1697.443847,948.059753,24.890625);
                SetPlayerFacingAngle(playerid, 133.447036);
			}
		    case 3:
			{
                oSetPlayerPos(playerid, 2801.259033,2427.583740,11.062500);
                SetPlayerFacingAngle(playerid, 135.498367);
			}
		}
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == Victim_Mans)
	{
		SetPVarInt(playerid, "InClothShop", 1);
		new Fact = GetPVarInt(playerid, "Team")-1;
		if(Fact == -1) // Цивилиан!
		{
            ShowMenuForPlayer(Civilian_Man[0], playerid);
		 	new str[40];
		 	format(str, sizeof(str), "~g~$%d", NormalPedsMan[0][1]);
		  	GameTextForPlayer(playerid, str, 990000, 6);
			SetPlayerSkinEx(playerid, NormalPedsMan[0][0]);
		}
		else
		{
		    ShowMenuForPlayer(Victim_Menu_Man[Fact], playerid);
		    SetPVarInt(playerid, "SelectType_Skin", 1);
		}
		TogglePlayerControllable(playerid, 0);
		oSetPlayerPos(playerid, 210.343521,-8.949360,1005.210937);
		SetPlayerFacingAngle(playerid, 358.135437);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)+playerid+1000);
		
		new Float:pos[6];
		GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
		GetPlayerCameraLookAt(playerid, pos[3], pos[4], pos[5]);
		
		InterpolateCameraPos(playerid, pos[0], pos[1], pos[2],
		210.186248,-5.979834,1005.210937, 1000, CAMERA_MOVE);

		InterpolateCameraLookAt(playerid, pos[3], pos[4], pos[5],
		210.343521,-8.949360,1005.3, 1000);
	    return 1;
	}
	else if(pickupid == Victim_Womans)
	{
	    SetPVarInt(playerid, "InClothShop", 1);
		new Fact = GetPVarInt(playerid, "Team")-1;
		if(Fact == -1) // Цивилиан!
		{
            ShowMenuForPlayer(Civilian_Woman[0], playerid);
		 	new str[40];
		 	format(str, sizeof(str), "~g~$%d", NormalPedsWoman[0][1]);
		  	GameTextForPlayer(playerid, str, 990000, 6);
			SetPlayerSkinEx(playerid, NormalPedsWoman[0][0]);
		}
		else
		{
		    ShowMenuForPlayer(Victim_Menu_Woman[Fact], playerid);
		}
		TogglePlayerControllable(playerid, 0);
		oSetPlayerPos(playerid, 210.343521,-8.949360,1005.210937);
		SetPlayerFacingAngle(playerid, 358.135437);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)+playerid+1000);

		new Float:pos[6];
		GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
		GetPlayerCameraLookAt(playerid, pos[3], pos[4], pos[5]);

		InterpolateCameraPos(playerid, pos[0], pos[1], pos[2],
		210.186248,-5.979834,1005.210937, 1000, CAMERA_MOVE);

		InterpolateCameraLookAt(playerid, pos[3], pos[4], pos[5],
		210.343521,-8.949360,1005.3, 1000);
	    return 1;
	}
 	else if(pickupid == Materials_Get)
	{
	    if(GetPVarInt(playerid, "Check_Cheat_mats_2") > gettime())
	    {
	        KickCheater(playerid, MATSCHEAT2);
	        return 1;
	    }
	    if (GetPVarInt(playerid,"Job") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не торговец оружием");

	    if(order[playerid] == 0)
	    {
	        order[playerid] = 1;
			if(MatsHolding[playerid] > 0)
	  		{
	    		ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка","{ffffff}У Вас сейчас есть неизрасходованные заготовки", "Ok", "");
	      	}
	      	else
	      	{
	    		ShowPlayerDialog(playerid, 309, DIALOG_STYLE_LIST, RGB_SERVER"Сколько купить заготовок",
	     		"1 ($50)\n2 ($100)\n3 ($150)\n4 ($200)\n5 ($250)\n6 ($300)\n7 ($350)\n8 ($400)\n9 ($450)\n10 ($500)",
	      		"Купить", "Отмена");
      		}
		}
		return 1;
	}
	else if(pickupid == Materials_Deliver)
	{
	    if(GetPVarInt(playerid, "Check_Cheat_mats_1") > gettime())
	    {
	        KickCheater(playerid, MATSCHEAT1);
	        return 1;
	    }
	    if (GetPVarInt(playerid,"Job") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не торговец оружием");

	    if (MatsHolding[playerid] <= 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет заготовок");
		new mats = MatsHolding[playerid]*50;

		if (MatsAmmount < mats) return SendClientMessage(playerid, COLOR_GREY, "На складе не хватает материалов");

		new string[120];
  		format(string, sizeof(string), "Вы получили %d материалов из ваших %d заготовок", mats, MatsHolding[playerid]);
    	SendClientMessage(playerid, COLOR_WHITE, string);

    	MatsAmmount -= mats;
    	MatsHolding[playerid] = 0;
    	GivePVarInt(playerid, "Materials", mats);

    	SetPVarInt(playerid, "Check_Cheat_mats_2", gettime()+20);

	    return 1;
	}
	
	else if(pickupid == Pickup_Job_Miner)
	{
		if(order[playerid] == 1) return 1;
		order[playerid] = 1;

		switch(GetPVarInt(playerid, "Miner_Job"))
		{
		    case 0: ShowPlayerDialog(playerid, 341, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на карьере", "\
						"RGB_WHITE"Хотите переодеться и начать работу в карьере?", "Начать", "Отмена");

		    default: ShowPlayerDialog(playerid, 342, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на карьере", "\
						"RGB_WHITE"Хотите закончить работу и получить зарплату?", "Закончить", "Отмена");
		}
		return 1;
	}
	else if(pickupid == Pickup_Miner_Info)
	{
		if(order[playerid] == 1) return 1;
		order[playerid] = 1;

		ShowPlayerDialog(playerid, 267, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на карьере",
		RGB_WHITE"Работа на карьере заключается в добыче полезных ископаемых.\n\
		Начните работу, спуститесь в глубь карьера и начинайте добывать руду.\n\n\
		После того, как руда будет добыта, отнесите её на склад. Ваша зарплата\n\
		будет зависеть от количества добытой руды.", "Ok", "");

		MovePlayerCameraTo(playerid, 2500, 816.624206, 856.665161, 25.789062, 600.383483, 918.815246, -42.069892);

		return 1;
	}
	#if defined LOCALHOST
	else if(pickupid == pickupautosalon)
	{
	    if(order[playerid] == 0)
	    {
	        order[playerid] = 1;
			new str[700];
			new form[130];
			for(new i; i < sizeof(ACarsInfo); i ++)
			{
			    format(form, sizeof(form), "%d) %s[%d] — $%d\n", i+1, ACarsInfo[i][ACarName], ACarsInfo[i][ACarID], ACarsInfo[i][ACarPrice]);

				strcat(str, form);
			}
			return ShowPlayerDialog(playerid, 205, DIALOG_STYLE_LIST, RGB_SERVER"Покупка автомобиля", str, "Далее","Отмена");
		}
		return 1;
	}
	#endif

	else if(pickupid == pickupcleaner[0] || pickupid == pickupcleaner[1])
	{
	    if(order[playerid] == 0)
	    {
	        order[playerid] = 1;

	        switch(GetPVarInt(playerid, "OnCleanerJob"))
	        {
	            case 0: ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, RGB_SERVER"Уборщик улиц", "\
						"RGB_WHITE"Хотите устроиться на работу уборщиком улиц?", "Начать", "Отмена");

	            case 1: ShowPlayerDialog(playerid, 229, DIALOG_STYLE_MSGBOX, RGB_SERVER"Уборщик улиц", "\
						"RGB_WHITE"Желаете закончить работу и получить зарплату?", "Закончить", "Отмена");
			}
	    }
		return 1;
	}
	else if(pickupid == FishingPickup[0] || pickupid == FishingPickup[1])
	{
		if(order[playerid] == 0)
		{
		    order[playerid] = 1;
		    new st[600];
		    strcat(st, "{bbbbbb}Здесь Вы можете взять в аренду рыбаловные снасти\n");
		    strcat(st, "и лодку, после чего отправиться на рыбалку. Поймав рыбу,\n");
		    strcat(st, "Вы сможете продать её в любую из столовых 'Бургершотов'.\n\n");
		    strcat(st, "Выручка будет зависить от количества и веса пойманой рыбы.\n");
		    strcat(st, "Чтобы взять удочку, арендовать лодку и приступить к ловле\n");
		    strcat(st, "рыбы, нажмите 'Начать' и сядьте в любую свободную лодку,\n");
		    strcat(st, "после чего отправляйтесь в море за рыбой. Чтобы завершить\n");
		    strcat(st, "рыбалку, встаньте на эту иконку и нажмите 'Завершить'.\n\n");
		    
		    new form[100];
		    format(form, 100, "- Стоимость аренды лодки и удочки: $%d", SBizzInfo[30][sbEntranceCost]);
		    strcat(st, form);
		    ShowPlayerDialog(playerid, 168, DIALOG_STYLE_MSGBOX, RGB_SERVER"Рыбалка", st, "Начать","Завершить");
	 	}
		return 1;
	}
	else if(pickupid == SellFishPickup)
	{
		if(order[playerid] == 0)
		{
		    new string[128];
		    format(string, sizeof(string), "{000000}|\t{bbbbbb}Здесь Вы можете продать пойманую рыбу, $%d за 1кг. рыбы\t{000000}|", SBizzInfo[13][sbPriceProd]);
		    ShowPlayerDialog(playerid, 169, DIALOG_STYLE_MSGBOX, RGB_SERVER"Бургершот", string, "Продать","Отмена");
            order[playerid] = 1;
	 	}
		return 1;
	}
	else if(pickupid == FuelTruckerPickup)
	{
		if(order[playerid] == 0)
		{
		    new st[600];
		    order[playerid] = 1;
		    strcat(st, RGB_WHITE"Здесь Вы можете устроиться водителем грузовика.\n");
		    strcat(st, "Закупайте и развозите топливо по заправочным станциям:\n");
		    strcat(st, "Купить топливо можно на нефтяном заводе San Fierro,\n");
		    strcat(st, "После чего его можно будет продать на любую заправку,\n");
		    strcat(st, "На каждой заправочной станции свои цены на топливо.");
		    if(GetPVarInt(playerid, "FuelTrucker") == 1) ShowPlayerDialog(playerid, 161, DIALOG_STYLE_MSGBOX, RGB_SERVER"Развозка топлива", st, "Завершить", "Отмена");
		    else ShowPlayerDialog(playerid, 161, DIALOG_STYLE_MSGBOX, RGB_SERVER"Развозка топлива", st, "Начать", "Отмена");
		}
		return 1;
	}
	else if(pickupid == pickupoiljob)
	{
		if(order[playerid] == 0)
	 	{
	  		order[playerid] = 1;
	    	switch(GetPVarInt(playerid, "OnOilJob"))
	    	{
	     		case 0:
	      		{
					new string[128];
	      		    format(string, sizeof(string), RGB_WHITE"Хотите переодеться и начать работу на погрузчике? "RGB_GREY"(Зарплата: $%d / бочка)", SBizzInfo[OIL_COMPANY][sbPriceProd]);
					ShowPlayerDialog(playerid, 207, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", string, "Начать", "Отмена");
				}
	   			case 1:
	      		{
					ShowPlayerDialog(playerid, 208, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Хотите закончить работу и получить зарплату?", "Закончить", "Отмена");
	    		}
	      		case 2:
	        	{
					ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Вы уже работаете в доставке нефти. Сначала завершите смену.", "Ок", "");
	    		}
			}
	  	}
		return 1;
	}
	else if(pickupid == pickupdrivertruck)
	{
		if(order[playerid] == 0)
	 	{
	  		order[playerid] = 1;
	    	switch(GetPVarInt(playerid, "OnOilJob"))
	    	{
	     		case 0:
	      		{
					ShowPlayerDialog(playerid, 209, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Хотите переодеться и начать работу по развозке нефти?", "Начать", "Отмена");
				}
	      		case 1:
	        	{
					ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Вы уже работаете грузчиком. Сначала завершите смену.", "Ок", "");
	    		}
	   			case 2:
	      		{
					ShowPlayerDialog(playerid, 210, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Хотите закончить работу и получить зарплату?", "Закончить", "Отмена");
	    		}
			}
	  	}
		return 1;
	}
	else if(pickupid == pickupinfooil)
	{
		if(order[playerid] == 0)
		{
	 		order[playerid] = 1;
	   		new st[600];
		    strcat(st, RGB_WHITE"Данный завод занимается добычей и доставкой\n");
		    strcat(st, "нефти для нефтеперерабатывающего завода.\n\n");

			strcat(st, "Вы можете устроиться рабочим и подвозить уже добытую\n");
			strcat(st, "нефть на склады нефтяного завода. От количества\n");
			strcat(st, "перевезенной нефти будет зависеть Ваша зарплата.\n\n");

			strcat(st, "Так же Вы можете устроиться водителем, чтобы отвозить\n");
			strcat(st, "нефть в грузовике на нефтеперерабатывающий завод.\n");
			strcat(st, "Для этого Вам предстоит для начала закупить нефть на\n");
			strcat(st, "нефтяном заводе, а затем продать на перерабатывающий.");

	   		ShowPlayerDialog(playerid, 267, DIALOG_STYLE_MSGBOX, RGB_SERVER"Завод по добыче нефти", st , "Ok", "");
	   		MovePlayerCameraTo(playerid, 2500, 334.488281,1514.119995,68.314315, 247.170425,1411.791381,23.370285);
		}
	 	return 1;
	}
	else if(pickupid == pickupbuyoil)
	{
		new car = GetPlayerVehicleID(playerid);

		if(IsOilTruck(car))
		{
			if(GetVehicleTank(car) != -1)
			{
			    new string[128];
			    format(string, sizeof(string), "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите закупить. (стоимость $%d за 1 баррель)", SBizzInfo[OIL_COMPANY][sbEntranceCost]);
 				ShowPlayerDialog(playerid, 213, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", string, "Купить", "Отмена");
				SetVehicleVelocity(car, 0.0, 0.0, 0.0);
				SetVehicleVelocity(GetVehicleTrailer(car), 0.0, 0.0, 0.0);
			}
			else
			{
   				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"У Вашего грузовика нет прицепа, возьмите его на заводе!", "Ok", "");
			}
		}
		else
		{
			ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Вам нужен танкер с прицепом для перевозки нефти!", "Ok", "");
		}
		return 1;
	}
	else if(pickupid == PickupJobDump)
	{
		if(order[playerid] == 0)
		{
		    order[playerid] = 1;
			switch(GetPVarInt(playerid, "OnDumpJob"))
			{
			    case 0: ShowPlayerDialog(playerid, 231, DIALOG_STYLE_MSGBOX, RGB_SERVER"Свалка", "\
							"RGB_WHITE"Хотите устроиться рабочим на свалку?", "Далее", "Отмена");

			    case 1: ShowPlayerDialog(playerid, 232, DIALOG_STYLE_MSGBOX, RGB_SERVER"Свалка", "\
							"RGB_WHITE"Хотите завершить работу и получить деньги?", "Далее", "Отмена");

			    case 2: ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Свалка", "\
							"RGB_WHITE"Вы уже работаете водителем на свалке. Сначала завершите смену.", "Ок", "");
			}
		}
		return 1;
	}
	else if(pickupid == PickupDriverDump)
	{
		if(order[playerid] == 0)
		{
		    order[playerid] = 1;
			switch(GetPVarInt(playerid, "OnDumpJob"))
			{
			    case 0: ShowPlayerDialog(playerid, 233, DIALOG_STYLE_MSGBOX, RGB_SERVER"Свалка", "\
							"RGB_WHITE"Хотите устроиться водителем на свалку?", "Далее", "Отмена");

			    case 1: ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Свалка", "\
							"RGB_WHITE"Вы уже работаете грузчиком на свалке. Сначала завершите смену.", "Ок", "");

			    case 2: ShowPlayerDialog(playerid, 234, DIALOG_STYLE_MSGBOX, RGB_SERVER"Свалка", "\
							"RGB_WHITE"Хотите завершить работу и получить деньги?", "Далее", "Отмена");

			}
		}
		return 1;
	}
	else if(pickupid == PickupDumpInfo)
	{
		if(order[playerid] == 0)
		{
			order[playerid] = 1;
			new st[600];
  		 	strcat(st, RGB_WHITE"На свалке находится большое количество металла,\n");
			strcat(st, "которое может быть использовано в производстве\n");
			strcat(st, "оружия и материалов.\n\n");

			strcat(st, "Вы можете устроиться на добычу железа и доставку\n");
			strcat(st, "его на склад. От количества добытого Вами железа\n");
			strcat(st, "будет зависить Ваша зарплата.\n\n");

			strcat(st, "Так же Вы можете устроиться водителем и доставлять\n");
			strcat(st, "металл в оружейные магазины. Для этого закупите\n");
			strcat(st, "необходимое количество металла на складе свалки и\n");
			strcat(st, "продайте его в любой оружейный магазин.");

			ShowPlayerDialog(playerid, 267, DIALOG_STYLE_MSGBOX, RGB_SERVER"Городская свалка", st , "Ok", "");
			MovePlayerCameraTo(playerid, 2500, 2201.571289,-1978.512817,49.023826, 2160.460693,-1981.489013,31.029161);
		}
		return 1;
	}
	else if(pickupid == PDDpickup)
	{
		if(order[playerid] == 0)
		{
		    order[playerid] = 1;
	    	ShowPlayerDialog(playerid, 187, DIALOG_STYLE_MSGBOX, RGB_SERVER"ПДД", RGB_WHITE"Желаете просмотреть правила дорожного движения?", "Далее", "Отмена");
		}
		return 1;
	}
	else if(pickupid == autoschoolpickup)
	{
		if(GetPVarInt(playerid, "Level") > 1)
  		{
    		return SendClientMessage(playerid, COLOR_GREY, "Доступно только для игроков 1 лвл");
    	}
	    if(GetPVarInt(playerid,"CarLic") != 0)
	    {
     		return SendClientMessage(playerid, COLOR_GREY, "У Вас есть права");
	    }
		if(order[playerid] == 0)
		{
		    order[playerid] = 1;
	    	ShowPlayerDialog(playerid, 189, DIALOG_STYLE_MSGBOX, RGB_SERVER"Получение прав", RGB_WHITE"Желаете сдать тест на получение водительских прав?\nТест состоит только из практической части - вождения.\n\nСтоимость экзамена: $150", "Далее", "Отмена");
		}
		return 1;
	}
	else if(pickupid == Reg_TDM)
	{
		if (GetPVarInt(playerid,"Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Для регистрации необходим 3 уровень");
		if (GetPVarInt(playerid,"RegOnTDM") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже записаны на ТДМ");
		if (OpenTDM == false) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта");
		if(order[playerid] == 0)
		{
			order[playerid] = 1;
			ShowPlayerDialog(playerid, 317, DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на ТДМ","{ffffff}Вы желаете зарегистрироваться на ТДМ?\n\nСтоимость регистрации составляет:{ffcc00}\n-\t700$","Далее","Отмена");
		}
		return 1;
	}
	else if(pickupid == Enter_TDM)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 830.645507,7.429725,1004.179687);
		SetPlayerFacingAngle(playerid, 114.081291);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
		SetPVarInt(playerid, "Exit_Type", 1);
		return 1;
	}
	else if(pickupid == pickupEnterFact)
	{
		oSetPlayerPos(playerid, -2160.041992,-229.622558,36.515625);
		SetPlayerFacingAngle(playerid, 219.962036);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == pickupExitFact)
	{
		oSetPlayerPos(playerid, -2159.127441,-224.403625,35.320312);
		SetPlayerFacingAngle(playerid, 268.528869);
		SetPlayerVirtualWorld(playerid, 0);
		if(GetPVarInt(playerid, "HaveGoodProd") == 1)
		{
		    DeletePVar(playerid, "HaveGoodProd");
		    RemovePlayerAttachedObject(playerid, 6);
		}
		if(GetPVarInt(playerid, "HaveMat") == 1)
		{
		    DeletePVar(playerid, "HaveMat");
		    RemovePlayerAttachedObject(playerid, 6);
		}
		return 1;
	}
	else if(pickupid == pickupJOBrazvoz)
	{
	    if(order[playerid] == 0)
	    {
	        order[playerid] = 1;
	        switch(GetPVarInt(playerid, "OnFacJob"))
	        {
	            case 0:
	        	{
					ShowPlayerDialog(playerid, 179, DIALOG_STYLE_MSGBOX, RGB_SERVER"Развоз продуктов", "\
					"RGB_WHITE"Хотите переодеться и начать работу по развозу продуктов?", "Начать", "Отмена");
				}
	            case 1:
		        {
					ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Развоз продуктов", "\
					"RGB_WHITE"Вы уже работаете в производственном цеху. Сначала завершите смену.", "Ок", "");
		        }
		        case 2:
		        {
					ShowPlayerDialog(playerid, 180, DIALOG_STYLE_MSGBOX, RGB_SERVER"Развоз продуктов", "\
					"RGB_WHITE"Хотите переодеться и завершить работу?", "Завершить", "Отмена");
		        }
			}
	    }
		return 1;
	}
	else if(pickupid == pickupJOBzavod)
	{
	    if(order[playerid] == 0)
	    {
	        order[playerid] = 1;
	        switch(GetPVarInt(playerid, "OnFacJob"))
	        {
	            case 0:
	        	{
					ShowPlayerDialog(playerid, 177, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Хотите переодеться и начать работу в цеху?", "Начать", "Отмена");
				}
	            case 1:
		        {
					ShowPlayerDialog(playerid, 178, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Хотите закончить работу и получить зарплату?", "Закончить", "Отмена");
		        }
		        case 2:
		        {
					ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа на заводе", "\
					"RGB_WHITE"Вы уже работаете в доставке продуктов. Сначала завершите смену.", "Ок", "");
		        }
			}
	    }
		return 1;
	}
	else if(pickupid == pickupzavodINFO)
	{
		if(order[playerid] == 0)
		{
		    order[playerid] = 1;
		    new st[600];
		    strcat(st, RGB_WHITE"Данный завод занимается производством и\n");
		    strcat(st, "доставкой продуктов для различных предприятий,\n");
		    strcat(st, "магазинов и бизнесов.\n\n");

		    strcat(st, "Вы можете устроиться рабочим в производственный цех\n");
		    strcat(st, "и изготавливать продукты для бизнесов. Зарплата будет\n");
		    strcat(st, "зависеть от того, сколько продуктов Вы изготовите.\n\n");

			strcat(st, "Если у Вас есть права, можете взять грузовик для развозки\n");
			strcat(st, "продуктов и доставлять продукты к бизнесам. За их продажу\n");
			strcat(st, "бизнесам Вы так же будете получать деньги.");
		    ShowPlayerDialog(playerid, 267, DIALOG_STYLE_MSGBOX, RGB_SERVER"Завод по производству продуктов", st , "Ok", "");
		    MovePlayerCameraTo(playerid, 2500, -2116.681884,-160.140197,71.153976, -2155.257568,-220.229064,39.335037);
		}
	    return 1;
	}
	else if(pickupid == pickupzagotovki[0] || pickupid == pickupzagotovki[1] || pickupid == pickupzagotovki[2])
	{
		if(GetPVarInt(playerid, "OnFacJob") != 1 || GetPVarInt(playerid, "HaveMat") == 1 || GetPVarInt(playerid, "HaveGoodProd") == 1 || GetPVarInt(playerid, "FactoryObject") != 0) return 1;

		if(GetPVarInt(playerid, "FactorySkill") < 65) SendClientMessage(playerid, COLOR_GREEN, "Вы взяли заготовку, отнесите её на стол");
		
	    SetPlayerAttachedObject(playerid, 6, 1575, 1, 0.000000, 0.400000, 0.000000, 90.000000, 90.000000, 90.000000, 1.200000, 1.200000, 1.200000); //Skin 79

		SetPVarInt(playerid, "HaveMat", 1);

		ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1,1);
		SetTimerEx("animliftup", 1000, false, "i", playerid);

		return 1;
	}
	else if(pickupid == sdatzagotovku)
	{
		if(order[playerid] == 0)
		{
			order[playerid] = 1;
            SetTimerEx("SetOrder", 3000, 0, "d", playerid);

		    if(GetPVarInt(playerid, "OnFacJob") != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");
			if(GetPVarInt(playerid, "HaveGoodProd") != 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет готового продукта");

			if(TotalPlayerRun[playerid] < 2)
			{
			    KickCheater(playerid, FACTORYWORKER);
			    return 1;
			}
			TotalPlayerRun[playerid] = 0;
			
			
			DeletePVar(playerid, "HaveGoodProd");
			GivePVarInt(playerid, "CountProds", 1);

			new string[128];
			format(string, sizeof(string), "~w~amount ~g~%d", GetPVarInt(playerid, "CountProds"));
			GameTextForPlayer(playerid, string, 3000, 1);
			GiveAchievement(playerid, 15, 1);

			RemovePlayerAttachedObject(playerid, 6);
			ApplyAnimation(playerid,"CARRY","putdwn",4.1,0,0,0,0,1000,1);

			totalprods += 1;

			format(string, sizeof(string), "На складе завода:\n%d кг. продуктов", totalprods);
			Update3DTextLabelText(prods3d, COLOR_YELLOW, string);

			format(string, sizeof(string), "Продуктов на складе: %d\nЗакупка: /buyprods\nПродажа: /sellprods", totalprods);
			Update3DTextLabelText(buyprod, COLOR_YELLOW, string);
		}
		return 1;

	}

	else if(pickupid == PickupPhoneQuest[0] || pickupid == PickupPhoneQuest[1])
	{
		if(order[playerid] == 0)
		{
		    if(GetPVarInt(playerid, "Start_Quest") != 1) return SendClientMessage(playerid, COLOR_GREY, "Нет новых заданий");
		    order[playerid] = 1;
			StartQuest(playerid, GetPVarInt(playerid, "Total_Quests"));
		}
		return 1;
	}
	
	else if(pickupid == PizzaEatPickup[0] || pickupid == PizzaEatPickup[1])
	{
		if(order[playerid] == 0)
		{
			if(GetPVarInt(playerid, "HavePizza") == 1) return 1;
			order[playerid] = 1;
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
			if(GetPVarInt(playerid, "Level") > 1)
			{
				if(GetPlayerPCash(playerid) < 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");

				GivePlayerPCash(playerid, -100, "Kypil pizza");
				GameTextForPlayer(playerid, "~r~-$100", 5000, 1);
			}
			SetPlayerAttachedObject(playerid, 6, 1582, 1, 0.000000, 0.500000, 0.000000, 0.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000);
			ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1,1);

			SetPVarInt(playerid, "HavePizza", 1);

			SendClientMessage(playerid, COLOR_WHITE, "Нажмите "RGB_BLUE"Alt (Ходьба)"RGB_WHITE", чтобы съесть пиццу");

		}
		return 1;
	}
	
	else if(pickupid == PizzaBoyPickup)
	{
		if(order[playerid] == 0)
		{
		    if(GetPVarInt(playerid, "OnFacJob") != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы уже работаете на заводе");
		    if(!GetPVarInt(playerid, "GetMoney"))
		    {
				ShowPlayerDialog(playerid, 152, DIALOG_STYLE_MSGBOX, RGB_SERVER"Развоз пиццы", "\
				Здесь Вы можете подзаработать денег развозя\n\
				пиццу по городу (Всего около 20 точек).\n\n\
				Начните работу, сядьте на свободный скутер и\n\
			 	следуйте по указанным на радаре точкам, как только\n\
			    развезете все заказы, возвращайтесь сюда, \n\
				переоденьтесь и заберите свои деньги.", "Начать", "Закончить");
			}
			else
			{
			    DeletePVar(playerid, "GetMoney");
			    DeletePVar(playerid, "OnPizzaDuty");
				DeletePVar(playerid, "CoursePizza");
				DeletePVar(playerid, "Marshrut");
				new givemon = 300+random(100);
				new string[24];
				GivePlayerPCash(playerid, givemon, "PizzaBoyPickup");
				format(string, 24, "~g~+%d$", givemon);
				GameTextForPlayer(playerid, string, 3500, 1);
				ReplaceSkin(playerid);
				SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			}
		    order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == EnterPaint)
	{
		SetPlayerInterior(playerid, 1);
		oSetPlayerPos(playerid, -2170.369140,639.321899,1052.375000);
		SetPlayerFacingAngle(playerid, 1.481737);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == ExitPaint)
	{
	    if(GetPVarInt(playerid, "RegOnPaint") == 1)
	    {
	        DeletePVar(playerid, "RegOnPaint");
			strmid(PaintList[GetPVarInt(playerid, "OnPaint")][Killername], "Нет", 0, strlen("Нет"), 255);
			PaintList[GetPVarInt(playerid, "OnPaint")][KillsPoint] = 0;
			PaintList[GetPVarInt(playerid, "OnPaint")][DeathsPoint] = 0;
			PaintList[GetPVarInt(playerid, "OnPaint")][PlayerID] = -1;
			PaintList[GetPVarInt(playerid, "OnPaint")][Sortirovan] = 0;
			PaintList[GetPVarInt(playerid, "OnPaint")][DamagePoint] = 0;
	        DeletePVar(playerid, "OnPaint");
	        GivePlayerPCash(playerid, 700, "ExitPaint");
	        PeintMoney -= 700;
	        SendClientMessage(playerid, COLOR_WHITE, "Вы сняты с участия в пейнтболле");
	        
			if(PaintOpenReg == false) ResetPlayerWeaponsUAC(playerid);
		}
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 384.021270,-1897.944091,7.835937);
		SetPlayerFacingAngle(playerid,  95.042831);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == RegPaint)
	{
	    if (GetPVarInt(playerid,"Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Для регистрации необходим 3 уровень");
	    if (GetPVarInt(playerid, "RegOnPaint")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже записаны на пейнтбол");
	    if (PaintOpenReg == false) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта");
		if(order[playerid] == 0)
		{
			order[playerid] = 1;
	 		ShowPlayerDialog(playerid, 153, DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на пейнтболл","{ffffff}Вы желаете зарегистрироваться на пейнтбол?\n\nСтоимость регистрации составляет:{ffcc00}\n-\t700$","Далее","Отмена");
		}
		return 1;
	}
	else if(pickupid == pickupHallJobs)
	{
	    if(order[playerid] == 0)
		{
		    order[playerid] = 1;
			ShowJobsHall(playerid);
		}
		return 1;
	}
	else if(pickupid == EnterRaceReg)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 830.645507,7.429725,1004.179687);
		SetPlayerFacingAngle(playerid, 114.081291);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		DeletePVar(playerid, "Exit_Type");
		return 1;
	}
	else if(pickupid == ExitRaceReg)
	{
	    if(GetPVarInt(playerid, "Exit_Type") == 1)
	    {
			if(GetPVarInt(playerid, "RegOnTDM") == 1)
			{
				DeletePVar(playerid, "RegOnTDM");

			  	TDM_Players --;
			  	TDM_Money -= 700;
			  	SendClientMessage(playerid, COLOR_WHITE, "Вы были сняты с участия в ТДМ");
			}
		    SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			oSetPlayerPos(playerid, 2590.294677,2789.694824,10.820312);
			SetPlayerFacingAngle(playerid, 96.469680);
			SetCameraBehindPlayer(playerid);
		}
		else
		{
			if(GetPVarInt(playerid, "OnRace"))
	  		{
				DeletePVar(playerid, "OnRace");
				DeletePVar(playerid, "CPoint");
				DeletePVar(playerid, "WaitRace");
				GivePlayerPCash(playerid, 500, "ExitRaceReg");

				RacePrize -= 500;
				RacersReg --;

				SendClientMessage(playerid, COLOR_WHITE, "Вы были сняты с участия в гонке");
	   		}
		    SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			oSetPlayerPos(playerid, -1547.958496,-441.173309,6.000000);
			SetPlayerFacingAngle(playerid, 107.793640);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	else if(pickupid == RegPickupRace)
	{
 		if(order[playerid] == 0)
		{
	 		order[playerid] = 1;
	    	if(GetPVarInt(playerid, "WaitRace")) { SetTimerEx("SetOrder", 2000, 0, "d", playerid); return SendClientMessage(playerid, COLOR_GREY, "Вы уже записаны на гонку"); }
			ShowPlayerDialog(playerid,95,DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на гонку", RGB_WHITE"Вы желаете зарегистрироваться на гонку?\n\nСтоимость регистрации составляет:{ffcc00}\n-\t500$","Далее","Отмена");
		}
		return 1;
	}
 	else if(pickupid == Reg_Race_Pvp)
 	{
  		if(order[playerid] == 0)
	    {
			if(GetPVarInt(playerid, "Level") < 5) return SendClientMessage(playerid, COLOR_GREY, "Создать гонку может только игрок 5 уровня и выше");
			SetPVarInt(playerid, "Race_Pvp_Play", -1);
			SetPVarInt(playerid, "Race_Pvp_Create", 1);
	        order[playerid] = 1;
	        ShowPlayerRacePvpInfo(playerid);
		}
		return 1;
 	}
	else if(pickupid == CarColorPickup)
	{
	  	if(GetPlayerVehicleID(playerid) != CarInfo[playerid][cMaincar])
  		{
		    SetVehicleVelocity(GetPlayerVehicleID(playerid), 0.0, 0.0, 0.0);
			return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Вы не являетесь владельцем данного автомобиля","Ok","");
		}

		ShowMenuForPlayer(ColorMenu1_1,playerid);
	 	TogglePlayerControllable(playerid, 0);

	 	SetPVarInt(playerid, "SelectCarColor1", CarInfo[playerid][cColor1]);
	 	SetPVarInt(playerid, "SelectCarColor2", CarInfo[playerid][cColor2]);
	 	return 1;
	}
	else if(pickupid == WhoreReg)
	{
	    if(order[playerid] == 0)
		{
			ShowPlayerDialog(playerid,19,DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа: Проститутка", RGB_WHITE"Здесь Вы можете устроиться на работу проституткой\n\nРабота доступна для: граждан, членов банд,\nмафий, медиков, хитманов, репортеров,\nчленов мэрии, лицензиаров, фермеров","Устроиться","Отмена");
			SetPVarInt(playerid,"GettingJob", 3);
			order[playerid] = 1;
        }
		return 1;
	}
	else if(pickupid == DrugDealerReg)
	{
	    if(order[playerid] == 0)
		{
			ShowPlayerDialog(playerid,19,DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа: Наркодилер", RGB_WHITE"Здесь Вы можете устроиться на работу наркодилером\n\nРабота доступна для: членов банд, мафий","Устроиться","Отмена");
			SetPVarInt(playerid,"GettingJob", 4);
			order[playerid] = 1;
        }
		return 1;
	}
	else if(pickupid == ArmsDealerReg)
	{
	    if(order[playerid] == 0)
		{
			ShowPlayerDialog(playerid,19,DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа: Продавец оружия", RGB_WHITE"Здесь Вы можете устроиться на работу продавцом оружия\n\nРабота доступна для: членов банд, мафий","Устроиться","Отмена");
			SetPVarInt(playerid,"GettingJob", 9);
			order[playerid] = 1;
        }
		return 1;
	}
	else if(pickupid == PaperBoyReg)
	{
	    if(order[playerid] == 0)
		{
			ShowPlayerDialog(playerid,19,DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа: Разносчик газет", RGB_WHITE"Здесь Вы можете устроиться на работу разносчиком газет\n\nРабота доступна для: граждан, членов банд,\nмафий, медиков, хитманов, репортеров,\nчленов мэрии, лицензиаров, фермеров","Устроиться","Отмена");
			SetPVarInt(playerid,"GettingJob", 15);
			order[playerid] = 1;
        }
		return 1;
	}
	else if(pickupid == ForemanReg)
	{
	    if(order[playerid] == 0)
		{
			if(GetPVarInt(playerid, "JobProgress")) // уже работает
			{
				new string[256];
				format(string, 128, RGB_WHITE"Вы отнесли %d мешков, хотите закончить работу? ", GetPVarInt(playerid, "JobProgress")-1);
				ShowPlayerDialog(playerid, 62, DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа грузчика", string, "Закончить", "Отмена");
			}
			else // не заступил на работу
			{
				ShowPlayerDialog(playerid,63,DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа грузчика", RGB_WHITE"Желаете переодеться и приступить к работе?", "Начать", "Отмена");
			}
        } 
        order[playerid] = 1;
		return 1;
	}

	else if(pickupid == entermotel)
	{
		SetPlayerInterior(playerid, 15);
		oSetPlayerPos(playerid, 2218.012695,-1150.461791,1025.796875);
		SetPlayerFacingAngle(playerid, 270.731109);
		SetPlayerVirtualWorld(playerid, 1);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == entermotel2)
	{
		SetPlayerInterior(playerid, 15);
		oSetPlayerPos(playerid, 2218.012695,-1150.461791,1025.796875);
		SetPlayerFacingAngle(playerid, 270.731109);
		SetPlayerVirtualWorld(playerid, 2);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == exitmotel)
	{
		if(GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerInterior(playerid, 0);
			oSetPlayerPos(playerid, 2228.565917,-1159.801879,25.791399);
			SetPlayerFacingAngle(playerid, 90.292442);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}
		if(GetPlayerVirtualWorld(playerid) == 2)
		{
			SetPlayerInterior(playerid, 0);
			oSetPlayerPos(playerid, -2048.025634,462.857849,35.171875);
			SetPlayerFacingAngle(playerid, 311.871276);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}
		return 1;
	}
	else if(pickupid == HelpGamePickup || pickupid == HelpGamePickup2)
	{
	    if(order[playerid] == 1) return 1;
		new listitems[300];
		strcat(listitems, RGB_WHITE"\
		Здравствуйте. Здесь Вы можете узнать как играть на этом сервере —\n\
		Как пользоваться командами и чатом; управлять персонажем; вступать\n\
		в организации; зарабатывать деньги; зарегистрироваться на форуме\n\
		и многое другое.");
		ShowPlayerDialog(playerid,76,DIALOG_STYLE_MSGBOX, RGB_SERVER"Полезная информация", listitems , "Читать", "Отмена");
		order[playerid] = 1;
		return 1;
	}
	else if(pickupid == entergroove)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 2496.056152,-1695.110595,1014.742187);
		SetPlayerFacingAngle(playerid, 181.900924);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == exitgroove)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 2495.231689,-1687.703491,13.515769);
		SetPlayerFacingAngle(playerid, 4.679154);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == enterpriton)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 319.169433,1119.894042,1083.882812);
		SetPlayerFacingAngle(playerid, 320.080993);
		return 1;
	}
	else if(pickupid == exitpriton)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 2169.960205,-1675.166870,15.085937);
		SetPlayerFacingAngle(playerid, 225.731124);
		return 1;
	}
	else if(pickupid == entergum)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 771.977661,-1.684590,1000.727722);
		SetPlayerFacingAngle(playerid, 19.301523);
		return 1;
	}
	else if(pickupid == exitgum)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 2226.296386,-1723.264282,13.552938);
		SetPlayerFacingAngle(playerid, 111.264617);
		return 1;
	}
	else if(pickupid == enterlspd)
	{
		SetPlayerInterior(playerid, 6);
		oSetPlayerPos(playerid, 246.708709,66.473960,1003.640625);
		SetPlayerFacingAngle(playerid, 1.608445);
		return 1;
	}
	else if(pickupid == exitlspd)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1549.012817,-1675.440795,14.776530);
		SetPlayerFacingAngle(playerid, 87.660400);
		return 1;
	}
	else if(pickupid == entermeria)
	{
	    SetPlayerVirtualWorld(playerid, 7);
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 384.977050,173.890930,1008.382812);
		SetPlayerFacingAngle(playerid, 89.712356);
		return 1;
	}
	else if(pickupid == exitmeria)
	{
	    SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1480.369750,-1766.092407,18.795755);
		SetPlayerFacingAngle(playerid, 357.737731);
		return 1;
	}
	else if(pickupid == exitmeriya2)
	{
	    if(GetPVarInt(playerid, "Team") != 7) return SendClientMessage(playerid, COLOR_GREY, "Только для работников мэрии");
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1485.858154,-1829.032958,13.546875);
		SetPlayerFacingAngle(playerid, 183.056411);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == entermeriya2)
	{
	    SetPlayerVirtualWorld(playerid, 7);
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 366.089019,161.929672,1008.382812);
		SetPlayerFacingAngle(playerid, 2.501550);
		return 1;
	}
	else if(pickupid == enterpigpen)
	{
		SetPlayerInterior(playerid, 2);
		oSetPlayerPos(playerid, 1208.356445,-11.727129,1000.921875);
		SetPlayerFacingAngle(playerid, 306.043457);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == exitpigpen)
	{
	    switch(GetPlayerVirtualWorld(playerid))
	    {
	        case 0:
		    {
				oSetPlayerPos(playerid, 2421.520019,-1225.512573,25.139430);
				SetPlayerFacingAngle(playerid, 179.999984);
			}
			case 1:
		    {
				oSetPlayerPos(playerid, 1051.6563,-343.0298,73.9922);
				SetPlayerFacingAngle(playerid, 350.7052);
				SetPlayerVirtualWorld(playerid, 0);
			}
		}
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	else if(pickupid == enterhitbar)
	{
		SetPlayerInterior(playerid, 2);
		oSetPlayerPos(playerid, 1208.356445,-11.727129,1000.921875);
		SetPlayerFacingAngle(playerid, 306.043457);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == enterah1)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, -2029.562377,-105.604125,1035.171875);
		SetPlayerFacingAngle(playerid, 178.079147);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == exitah1)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, -2026.8447,-99.0243,35.1641);
		SetPlayerFacingAngle(playerid, 355.0672);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == enterah2)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, -2029.734985,-117.288627,1035.171875);
		SetPlayerFacingAngle(playerid, 356.929290);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == exitah2)
	{
	    if(!IsAnInstructor(playerid) && TakingLesson[playerid] != 1)  return SendClientMessage(playerid, COLOR_GREY, "Экзамен не начат");
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, -2030.1786,-123.9386,35.2098);
		SetPlayerFacingAngle(playerid, 176.4889);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == enterotel)
	{
 		SetPlayerInterior(playerid, 1);
 		oSetPlayerPos(playerid, 2268.700683,1647.457641,1084.234375);
 		SetPlayerFacingAngle(playerid, 282.238281);
		return 1;
	}
	else if(pickupid == exitotel)
	{
		SetPlayerInterior(playerid, 0);
 		oSetPlayerPos(playerid, 487.670349,-1643.285278,23.703125);
 		SetPlayerFacingAngle(playerid, 179.735580);
		return 1;
	}
	else if(pickupid == enterkrisha)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 469.638732,-1637.780151,58.593750);
 		SetPlayerFacingAngle(playerid, 2.222602);
		return 1;
	}
	else if(pickupid == exitkrisha)
	{
 		SetPlayerInterior(playerid, 1);
 		oSetPlayerPos(playerid, 2267.463867,1619.171630,1090.445312);
 		SetPlayerFacingAngle(playerid, 278.870330);
		return 1;
	}
	else if(pickupid == entermayak)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 154.542388,-1949.360473,47.875000);
		SetPlayerFacingAngle(playerid, 0.530300);
		return 1;
	}
	else if(pickupid == exitmayak)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 154.075607,-1943.128784,3.773437);
		SetPlayerFacingAngle(playerid, 357.752075);
		return 1;
	}
	else if(pickupid == entermarket1)
	{
		SetPlayerInterior(playerid, 17);
		oSetPlayerPos(playerid, -25.8362,-186.1210,1003.5469);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == entermarket2)
	{
		SetPlayerInterior(playerid, 17);
		oSetPlayerPos(playerid, -25.6023,-185.3334,1003.5469);
		SetPlayerFacingAngle(playerid, 0.5182);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == entermarket3)
	{
		SetPlayerInterior(playerid, 17);
		oSetPlayerPos(playerid, -25.8362,-186.1210,1003.5469);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == entermarket4)
	{
		SetPlayerInterior(playerid, 17);
		oSetPlayerPos(playerid, -25.8362,-186.1210,1003.5469);
		SetPlayerVirtualWorld(playerid, 4);
		return 1;
	}
	else if(pickupid == exitmarket)
	{
	    new world = GetPlayerVirtualWorld(playerid);
	    switch(world)
	    {
			case 1: oSetPlayerPos(playerid, 1315.3784,-900.3674,39.5781);
			case 2: oSetPlayerPos(playerid, 1351.9525,-1755.9355,13.3520);
			case 3: oSetPlayerPos(playerid, 1831.9370,-1842.7699,13.5781);
			case 4: oSetPlayerPos(playerid, -1561.1632,-2734.3105,48.7435);
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == enterburger1)
	{
		SetPlayerInterior(playerid, 10);
		oSetPlayerPos(playerid, 364.5626,-73.8497,1001.5078);
		SetPlayerFacingAngle(playerid, 296.5399);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == enterburger2)
	{
		SetPlayerInterior(playerid, 10);
		oSetPlayerPos(playerid, 364.5626,-73.8497,1001.5078);
		SetPlayerFacingAngle(playerid, 296.5399);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == enterburger3)
	{
		SetPlayerInterior(playerid, 10);
		oSetPlayerPos(playerid, 364.5626,-73.8497,1001.5078);
		SetPlayerFacingAngle(playerid, 296.5399);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == enterburger4)
	{
		SetPlayerInterior(playerid, 10);
		oSetPlayerPos(playerid, 364.5626,-73.8497,1001.5078);
		SetPlayerFacingAngle(playerid, 296.5399);
		SetPlayerVirtualWorld(playerid, 4);
		return 1;
	}
	else if(pickupid == enterburger5)
	{
		SetPlayerInterior(playerid, 10);
		oSetPlayerPos(playerid, 364.5626,-73.8497,1001.5078);
		SetPlayerFacingAngle(playerid, 296.5399);
		SetPlayerVirtualWorld(playerid, 5);
		return 1;
	}
	else if(pickupid == exitburger)
	{
	    new world = GetPlayerVirtualWorld(playerid);
	    switch(world)
	    {
			case 1: oSetPlayerPos(playerid, 813.2159,-1616.2759,13.5547);
			case 2: oSetPlayerPos(playerid, 1199.5167,-921.4451,43.0249);
			case 3: oSetPlayerPos(playerid, -2333.8787,-167.1742,35.5547);
			case 4: oSetPlayerPos(playerid, -1910.5367,830.2333,35.1719);
			case 5: oSetPlayerPos(playerid, -2358.9634,1007.4727,50.6953);
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == enterclucken1)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == enterclucken2)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == enterclucken3)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == enterclucken4)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 4);
		return 1;
	}
	else if(pickupid == enterclucken5)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 5);
		return 1;
	}
	else if(pickupid == enterclucken6)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 6);
		return 1;
	}
	else if(pickupid == enterclucken7)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 7);
		return 1;
	}
	else if(pickupid == enterclucken8)
	{
		SetPlayerInterior(playerid, 9);
		oSetPlayerPos(playerid, 365.2202,-9.5841,1001.8516);
		SetPlayerFacingAngle(playerid, 344.8599);
		SetPlayerVirtualWorld(playerid, 8);
		return 1;
	}
	else if(pickupid == exitclucken)
	{
	    new world = GetPlayerVirtualWorld(playerid);
	    switch(world)
	    {
			case 1: oSetPlayerPos(playerid, 2422.4153,-1509.1593,23.9922);
			case 2: oSetPlayerPos(playerid, 2397.9824,-1896.7866,13.3828);
			case 3: oSetPlayerPos(playerid, 924.2731,-1352.5093,13.3764);
			case 4: oSetPlayerPos(playerid, -2152.8511,-2461.9536,30.8438);
			case 5: oSetPlayerPos(playerid, -1816.4037,615.2582,35.1719);
			case 6: oSetPlayerPos(playerid, -2671.8162,263.0681,4.6328);
			case 7: oSetPlayerPos(playerid, 170.7208,1174.5067,14.7578);
			case 8: oSetPlayerPos(playerid, -1210.8787,1832.7618,41.9297);
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(pickupid == enterpizza1)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 372.1066,-131.2687,1001.4922);
		SetPlayerFacingAngle(playerid, 0.4839);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == enterpizza2)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 372.1066,-131.2687,1001.4922);
		SetPlayerFacingAngle(playerid, 0.4839);
		SetPlayerVirtualWorld(playerid, 2);
		return 1;
	}
	else if(pickupid == enterpizza3)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 372.1066,-131.2687,1001.4922);
		SetPlayerFacingAngle(playerid, 0.4839);
		SetPlayerVirtualWorld(playerid, 3);
		return 1;
	}
	else if(pickupid == enterpizza4)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 372.1066,-131.2687,1001.4922);
		SetPlayerFacingAngle(playerid, 0.4839);
		SetPlayerVirtualWorld(playerid, 4);
		return 1;
	}
	else if(pickupid == enterpizza5)
	{
		SetPlayerInterior(playerid, 5);
		oSetPlayerPos(playerid, 372.1066,-131.2687,1001.4922);
		SetPlayerFacingAngle(playerid, 0.4839);
		SetPlayerVirtualWorld(playerid, 5);
		return 1;
	}
	else if(pickupid == exitpizza)
	{
	    new world = GetPlayerVirtualWorld(playerid);
	    switch(world)
	    {
			case 1: oSetPlayerPos(playerid, 2103.2766,-1806.2067,13.5547);
			case 2: oSetPlayerPos(playerid, 203.6907,-205.4409,1.5781);
			case 3: oSetPlayerPos(playerid, 2335.3796,74.8425,26.4827);
			case 4: oSetPlayerPos(playerid, -1806.4751,944.0081,24.8906);
			case 5: oSetPlayerPos(playerid, -1724.0098,1359.1772,7.1875);
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
 	else if(pickupid == cluckenmenupickup)
	{
		if(order[playerid] == 0)
		{
			TogglePlayerControllable(playerid,false);
			ShowMenuForPlayer(CluckMenu,playerid);
			order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == burgermenupickup)
	{
		if(order[playerid] == 0)
		{
			TogglePlayerControllable(playerid,false);
			ShowMenuForPlayer(BurgerMenu,playerid);
			order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == pizzamenupickup)
	{
		if(order[playerid] == 0)
		{
			TogglePlayerControllable(playerid,false);
			ShowMenuForPlayer(PizzaMenu,playerid);
			order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == RMenter)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 964.1337,-53.0600,1001.1246);
		SetPlayerFacingAngle(playerid, 92.0011);
		return 1;
	}
	else if(pickupid == FChotelEnter)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 973.0466,-8.8003,1001.1484);
		SetPlayerFacingAngle(playerid, 85.2275);
		return 1;
	}
	else if(pickupid == FChotelExit)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, -88.8747,1227.2782,19.7422);
		SetPlayerFacingAngle(playerid, 180.4211);
		return 1;
	}
	else if(pickupid == FCchurchEnter)
	{
		oSetPlayerPos(playerid, -213.3744,1149.1917,8.0340);
		return 1;
	}
	else if(pickupid == FCchurchExit)
	{
		oSetPlayerPos(playerid, -205.9082,1119.0275,20.0441);
		return 1;
	}
	else if(pickupid == RMexit)
	{
		oSetPlayerPos(playerid, -2721.0293,-318.1025,7.8438);
		SetPlayerFacingAngle(playerid, 45.9641);
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	else if(pickupid == LCNenter)
	{
		SetPlayerInterior(playerid, 2);
		oSetPlayerPos(playerid, 2534.5142,-1285.9791,1054.6406);
		SetPlayerFacingAngle(playerid, 272.0037);
		return 1;
	}
	else if(pickupid == LCNexit)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1125.0507,-2037.4240,69.8822);
		SetPlayerFacingAngle(playerid, 268.6873);
		return 1;
	}
	else if(pickupid == BikersEnter)
	{
		SetPlayerInterior(playerid, 18);
		oSetPlayerPos(playerid, -227.5296,1401.1278,27.7656);
		SetPlayerFacingAngle(playerid, 269.7428);
		return 1;
	}
	else if(pickupid == KolhozEnter)
	{
		SetPlayerInterior(playerid, 18);
		oSetPlayerPos(playerid, -227.5296,1401.1278,27.7656);
		SetPlayerFacingAngle(playerid, 269.7428);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == BikersExit)
	{
	    switch(GetPlayerVirtualWorld(playerid))
	    {
			case 0: { oSetPlayerPos(playerid, 681.6144,-476.4320,16.3359); SetPlayerFacingAngle(playerid, 174.6610); }
			case 1: { oSetPlayerPos(playerid, -1058.7855,-1205.2173,129.2188); SetPlayerFacingAngle(playerid, 269.7920); }
		}
		SetPlayerInterior(playerid, 0);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == fbienter)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 288.8647,169.4210,1007.1719);
		SetPlayerFacingAngle(playerid, 354.8042);
		SetPlayerVirtualWorld(playerid, 4);
		return 1;
	}
	else if(pickupid == fbiexit)
	{
	    if(GetPVarInt(playerid, "Team") != 2) return SendClientMessage(playerid, COLOR_GREY, "Только для сотрудников ФБР");
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 2281.620849,2427.941162,3.273437);
		SetPlayerFacingAngle(playerid, 0.980585);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == fbienter2)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 238.934249,144.759613,1003.023437);
		SetPlayerFacingAngle(playerid, 0.331022);
		SetPlayerVirtualWorld(playerid, 4);
		return 1;
	}
	else if(pickupid == fbiexit2)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 2287.301757,2428.331054,10.820312);
		SetPlayerFacingAngle(playerid, 180.812545);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == MedicEnter)
	{
		SetPlayerInterior(playerid, 3);
		oSetPlayerPos(playerid, 365.2393,162.0382,1019.9844);
		SetPlayerFacingAngle(playerid, 88.3974);
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	else if(pickupid == MedicExit)
	{
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, 1177.209472,-1323.380371,14.059406);
		SetPlayerFacingAngle(playerid, 269.089996);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}
	else if(pickupid == MedicRoomEnter)
	{
		oSetPlayerPos(playerid, 340.5154,165.4533,1019.9912);
		SetPlayerFacingAngle(playerid, 178.3248);
		return 1;
	}
	else if(pickupid == MedicRoomExit)
	{
		oSetPlayerPos(playerid, 340.2085,170.8272,1019.9912);
		SetPlayerFacingAngle(playerid, 354.7332);
		return 1;
	}
	else if(pickupid == FBIammo || pickupid == NGammo)
	{
		if(!IsACop(playerid)) return 1;
		if(order[playerid] == 0)
		{
			ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST, RGB_SERVER"Комплекты оружия", "Комплект оружия 1\nКомплект оружия 2\nКомплект оружия 3\nКомплект оружия 4\nКомплект оружия 5","Выбрать","Отмена");
			order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == FBIhealth)
	{
		SetPlayerHealthUAC(playerid, 100);
		return 1;
	}
	else if(pickupid == FBIarmour)
	{
		SetPlayerArmour(playerid, 100);
		return 1;
	}
	else if(pickupid == LSparashut)
	{
		GivePlayerWeaponUAC(playerid, 46, 1);
		return 1;
	}
	else if(pickupid == BuyGunPickupLS1 || pickupid == BuyGunPickupLS2 || pickupid == BuyGunPickupSF)
	{

		if(order[playerid] == 0) OnPlayerCommandText(playerid, "/buygun");
		return 1;
	}
	else if(pickupid == ShopPickup)
	{
		if(order[playerid] == 0)
		{
			Show247Menu(playerid);
			order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == DildoPickup)
	{
	    if(order[playerid] == 0) OnPlayerCommandText(playerid, "/buydildo");
		return 1;
	}
	else if(pickupid == HitOrderPickup)
	{
		if(OrderReady[playerid] > 0)
	 	{
    		switch (OrderReady[playerid])
    		{
        		case 1:
        		{
        		    if(GetPlayerPCash(playerid) < 200) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
            		GivePlayerWeaponUAC(playerid, 24, 100);
					GivePlayerWeaponUAC(playerid, 29, 500);
					GivePlayerWeaponUAC(playerid, 25, 100);
					GivePlayerWeaponUAC(playerid, 4, 1);
            		GivePlayerPCash(playerid, - 200, "HitOrderPickup");
            		SendClientMessage(playerid, COLOR_WHITE, "Вы взяли набор оружия #1");
        		}
        		case 2:
        		{
        		    if(GetPlayerPCash(playerid) < 400) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
           		 	GivePlayerWeaponUAC(playerid, 24, 100);
					GivePlayerWeaponUAC(playerid, 29, 500);
					GivePlayerWeaponUAC(playerid, 25, 100);
					GivePlayerWeaponUAC(playerid, 31, 500);
					GivePlayerWeaponUAC(playerid, 4, 1);
            		GivePlayerPCash(playerid, - 400, "HitOrderPickup");
            		SendClientMessage(playerid, COLOR_WHITE, "Вы взяли набор оружия #2");
        		}
        		case 3:
        		{
        		    if(GetPlayerPCash(playerid) < 600) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					GivePlayerWeaponUAC(playerid, 24, 100);
					GivePlayerWeaponUAC(playerid, 29, 500);
					GivePlayerWeaponUAC(playerid, 25, 100);
					GivePlayerWeaponUAC(playerid, 30, 500);
					GivePlayerWeaponUAC(playerid, 4, 1);
            		GivePlayerPCash(playerid, - 600, "HitOrderPickup");
            		SendClientMessage(playerid, COLOR_WHITE, "Вы взяли набор оружия #3");
        		}
        		case 4:
        		{
        		    if(GetPlayerPCash(playerid) < 900) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
            		GivePlayerWeaponUAC(playerid, 24, 100);
					GivePlayerWeaponUAC(playerid, 29, 500);
					GivePlayerWeaponUAC(playerid, 25, 100);
					GivePlayerWeaponUAC(playerid, 31, 500);
					GivePlayerWeaponUAC(playerid, 4, 1);
					GivePlayerWeaponUAC(playerid, 34, 20);
            		GivePlayerPCash(playerid, - 900, "HitOrderPickup");
           	 		SendClientMessage(playerid, COLOR_WHITE, "Вы взяли набор оружия #4");
        		}
        		case 5:
        		{
        		    if(GetPlayerPCash(playerid) < 1000) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
            		GivePlayerWeaponUAC(playerid, 24, 100);
					GivePlayerWeaponUAC(playerid, 29, 500);
					GivePlayerWeaponUAC(playerid, 25, 100);
					GivePlayerWeaponUAC(playerid, 30, 500);
					GivePlayerWeaponUAC(playerid, 4, 1);
					GivePlayerWeaponUAC(playerid, 34, 20);
            		GivePlayerPCash(playerid, - 1000, "HitOrderPickup");
            		SendClientMessage(playerid, COLOR_WHITE, "Вы взяли набор оружия #5");
        		}
    		}
    		OrderReady[playerid] = 0;
    		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		}
		return 1;
	}
	else if(pickupid == FixCarPickup[0] || pickupid == FixCarPickup[1] || pickupid == FixCarPickup[2] )
	{
	    if(GetPVarInt(playerid,"CarKey") == -1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет личного автомобиля");
		if(order[playerid] == 0)
		{
		    new string[128];
		    format(string, sizeof(string), "Отбуксировать автомобиль\t"RGB_SERVER"[$%d]"RGB_WHITE"\nСнять тюнинг\t\t\t"RGB_SERVER"[$%d]", SBizzInfo[8][sbEntranceCost], SBizzInfo[8][sbEntranceCost]);
		    ShowPlayerDialog(playerid,48,DIALOG_STYLE_LIST, RGB_GREEN"Fix Car Service", string, "Выбрать", "Отмена");
			order[playerid] = 1;
		}
		return 1;
	}
	else if(pickupid == FCchurchPickup)
	{
		if(order[playerid] == 0)
		{
		    ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
			order[playerid] = 1;
		}
		return 1;
	}
	
	
	
	for(new i; i < 6; i ++)
	{
		if(pickupid == pickupstoliL[i] || pickupid == pickupstoliR[i])
		{
			if(GetPVarInt(playerid, "HaveGoodProd") == 1) return 1;
	    	if(GetPVarInt(playerid, "OnFacJob") != 1) return 1;
			if(GetPVarInt(playerid, "HaveMat") != 1) return SendClientMessage(playerid, COLOR_GREY, "Для начала возьмите заготовку на желтом маркере");

			if(GetPVarInt(playerid, "FactoryObject") != 0) DestroyObject(GetPVarInt(playerid, "FactoryObject")), DeletePVar(playerid, "FactoryObject");
			DeletePVar(playerid, "HaveMat");
			
			new objid;
			switch(random(6))
			{
			    case 0: objid = 2149;
			    case 1: objid = 1782;
			    case 2: objid = 2028;
			    case 3: objid = 2103;
			    case 4: objid = 2226;
				default: objid = 1356;
			}

			if(pickupid == pickupstoliL[0])
			{
				SetPlayerFacingAngle(playerid, 360.0);
				SetPlayerPos(playerid, -2174.182128,-248.983276,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2174.15,-248.135049, 36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2174.15,-248.135049, 36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliL[1])
			{
				SetPlayerFacingAngle(playerid, 360.0);
				SetPlayerPos(playerid, -2170.450927,-248.983276,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2170.414794, -248.135049, 36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2170.414794, -248.135049,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliL[2])
			{
				SetPlayerFacingAngle(playerid, 360.0);
				SetPlayerPos(playerid, -2166.947509,-248.983276,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2167.013916,-248.135049,36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2167.013916,-248.135049,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliL[3])
			{
				SetPlayerFacingAngle(playerid, 360.0);
				SetPlayerPos(playerid, -2163.318847,-248.983276,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2163.273193, -248.135049, 36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2163.273193, -248.135049,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliL[4])
			{
				SetPlayerFacingAngle(playerid, 360.0);
				SetPlayerPos(playerid, -2159.955810,-248.983276,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2159.953613,-248.135049,36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2159.953613,-248.135049,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliL[5])
			{
				SetPlayerFacingAngle(playerid, 360.0);
				SetPlayerPos(playerid, -2156.528808,-248.983276,36.515625);

				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2156.6000,-248.135049,36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2156.60000,-248.135049,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliR[0])
			{
				SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerPos(playerid, -2158.022460,-247.075942,36.515625);

				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2157.995361, -247.952819, 36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2157.995361, -247.952819,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliR[1])
			{
				SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerPos(playerid, -2161.536376,-247.075942,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2161.600585, -247.939865, 36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2161.600585, -247.939865,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliR[2])
			{
				SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerPos(playerid, -2164.691894,-247.075942,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2164.6000,-247.992749, 36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2164.6000,-247.992749,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliR[3])
			{
				SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerPos(playerid, -2168.442382,-247.075942,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2168.445556,-248.048080,36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2168.445556,-248.048080,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliR[4])
			{
				SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerPos(playerid, -2172.122802,-247.075942,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2172.05,-248.037567,36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2172.05,-248.037567,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
			else if(pickupid == pickupstoliR[5])
			{
				SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerPos(playerid, -2175.643554,-247.075942,36.515625);
				if(objid == 2149 || objid == 1356) SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2175.626220,-247.973571,36.6,0.00000000,0.00000000,90.00000000, 30.0));//stol11
				else SetPVarInt(playerid, "FactoryObject", CreateObject(objid, -2175.626220,-247.973571,36.5,0.00000000,0.00000000,90.00000000, 30.0));//stol11
			}
		 	ApplyAnimation(playerid,"OTB","betslp_loop",4.1,1,1,1,1,12000);
		  	SetTimerEx("GetPackFactory", 12000, 0, "d", playerid);

			SetPlayerAttachedObject(playerid, 6, 18635, 5, 0.029999, 0.050000, 0.000000, 0.000000, 180.000000, 180.000000, 1.000000, 1.000000, 1.000000); //    Молоток
			SetPlayerAttachedObject(playerid, 7, 18644, 6, 0.079999, 0.029999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //    Отвертка

			return 1;
		}
	}
	
	for(new i; i < sizeof(Pickup_Miner_Ware); i ++)
	{
		if(pickupid == Pickup_Miner_Ware[i])
		{
			if(GetPVarInt(playerid, "Taked_Mine") != 1) return 1;

			DeletePVar(playerid, "Taked_Mine");

			GivePVarInt(playerid, "Miner_Count", 1);

			new string[120];
	        format(string, sizeof(string), "~w~amount ~g~%d", GetPVarInt(playerid, "Miner_Count"));
	        GameTextForPlayer(playerid, string, 1400, 1);

            ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);

			RemovePlayerAttachedObject(playerid, 2);
			SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);

			DumpLoad += (25-random(3));

			format(string, sizeof(string), "Склад свалки:\n %d кг. железа", DumpLoad);
			Update3DTextLabelText(Dump3dText, COLOR_YELLOW, string);

			format(string, sizeof(string), "Склад свалки:\n %d кг. железа\n\nЗакупка металла: /buym\nПродажа: /sellm\nМатериалы: /buymats", DumpLoad);
			Update3DTextLabelText(LoadDump, COLOR_YELLOW, string);
			
			SetPlayerMineCp(playerid);

		    return 1;
		}
	}

	for(new i; i < sizeof(Heart_Pickup); i++)
	{
		if(pickupid == Heart_Pickup[i])
		{
		    if(GetPVarInt(playerid, "Level") == 1)
			{
				SetPlayerHealthUAC(playerid, 100.0);
				return 1;
			}
		}
	}
	
	new deliverCar;
	for(new i; i < sizeof(CannabisPickup); i++)
	{
		if(pickupid == CannabisPickup[i])
		{
		    if(IsAHarvester(newcar) && IsAFarmer(playerid))
		    {
		        deliverCar = GetFactionCarId(9,newcar);
				if(DrugsLoad[deliverCar] < 100)
				{
					DrugsLoad[deliverCar] += 2;
					DestroyCannabisPickup(i);
					DestroyCannabisObject(i);
					CannabisDeleted[i] = 1;
					new string[128];
					format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~g~Cannabis:~y~ %d / 100", DrugsLoad[deliverCar]);
					GameTextForPlayer(playerid, string, 5000, 3);
					return 1;
				}
			    else
				{
					DestroyCannabisPickup(i);
					DestroyCannabisObject(i);
					CreateCannabisPickup(i+1);
					CreateCannabisObject(i+1);
					continue;
				}
			}
			else
			{
				DestroyCannabisPickup(i);
				DestroyCannabisObject(i);
				CreateCannabisPickup(i+1);
				CreateCannabisObject(i+1);
				continue;
			}
	 	}
	}


	for(new c = 0; c < 18; c++)
	{
	    if(pickupid == GangNewsPickup[c])
		{
	 		if(GetPVarInt(playerid,"Team") != c+1) break;
			if(order[playerid] == 1) break;
			order[playerid] = 1;
			return ShowFactionPickup(playerid);
		}
	}
	if(order[playerid] == 0)
	{
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(pickupid == HouseInfo[h][hPickup])
			{
			    order[playerid] = 1;
			    globalstr = "";
				new str[60];
				
			    strcat(globalstr, RGB_WHITE"_________________________________________________\n\n");
			    if(!HouseInfo[h][hOwned])
				{
					format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Стоимость:\t$%d\n", globalstr, HouseInfo[h][hPrice]);
					if(HouseInfo[h][hDonatePrice]) format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Донат цена:\t%d\n", globalstr, HouseInfo[h][hDonatePrice]);

				}
				else
				{
					new Connect_Status[30] = RGB_RED"Offline"RGB_WHITE;
					
					for(new i; i < MAX_PLAYERS; i++)
					{
					    if(!IsPlayerConnected(i)) continue;
					    if(strcmp(HouseInfo[h][hOwner], GetName(i), false) == 0)
					    {
					        Connect_Status = "{5bf454}Online"RGB_WHITE;
					        break;
						}
					}
					
					format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Владелец:\t%s [%s]\n", globalstr, HouseInfo[h][hOwner], Connect_Status);
					if(HouseInfo[h][hRentabil]) format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Аренда:\t$%d\n", globalstr, HouseInfo[h][hRent]);

				}
				format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Уровень:\t%d\n\n", globalstr, HouseInfo[h][hLevel]);

			    if(!HouseInfo[h][hOwned]) 		 strcat(globalstr, RGB_BLUE"      • /buyhouse"RGB_WHITE" - купить этот дом\n\n");
			    else if(HouseInfo[h][hRentabil]) strcat(globalstr, RGB_BLUE"     • /rentroom"RGB_WHITE" - арендовать комнату\n\n");

			    strcat(globalstr, "_________________________________________________");


				format(str, sizeof(str), "Дом №"RGB_BLUE" %d", h);
				if(HouseInfo[h][hRobbed] > gettime())
				{
					ShowPlayerDialog(playerid, 135, DIALOG_STYLE_MSGBOX, str, globalstr, "Войти","Отмена");
					SetPVarInt(playerid, "HEnter", h);
				}
				else
				{
					if(GetPVarInt(playerid,"House") == h || HouseInfo[h][hLock] == 0 || HouseInfo[h][hOwned] == 0)
					{
						ShowPlayerDialog(playerid, 135, DIALOG_STYLE_MSGBOX, str, globalstr, "Войти","Отмена");
						SetPVarInt(playerid, "HEnter", h);
					}
					else if(HouseInfo[h][hLock] == 1)
					{
						if(HouseInfo[h][hRobTry] < 4 && HouseInfo[h][hOwned] != 0 && HouseInfo[h][hRobbed] == 0 && GetPVarInt(playerid, "On_RobHouse") == 1)
						{
						    ShowPlayerDialog(playerid, 284, DIALOG_STYLE_MSGBOX, str, globalstr, "Взлом","Отмена");
						    SetPVarInt(playerid, "HEnter", h);
						}
						else
						{
							ShowPlayerDialog(playerid, 136, DIALOG_STYLE_MSGBOX, str, globalstr, "Закрыто","");
						}
					}
				}
				globalstr = "";
			    return 1;
			}
		}
		for(new h; h < sizeof(BizzInfo); h++)
		{
		    if(pickupid == BizzInfo[h][bPickup])
		    {
		        globalstr = "";
		        order[playerid] = 1;

		        strcat(globalstr, RGB_WHITE"_________________________________________________\n\n");
		        format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Название:\t %s\n", globalstr, BizzInfo[h][bDiscription]);

		        if(!BizzInfo[h][bOwned])
		        {
		            format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Цена:\t\t $%d\n", globalstr, BizzInfo[h][bPrice]);
					if(BizzInfo[h][bDonatePrice]) format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Донат цена:\t %d\n", globalstr, BizzInfo[h][bDonatePrice]);
		            format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Уровень:\t %d\n", globalstr, BizzInfo[h][bLevel]);
				}
				else
				{
					new Connect_Status[30] = RGB_RED"Offline"RGB_WHITE;
					for(new i; i < MAX_PLAYERS; i++)
					{
					    if(!IsPlayerConnected(i)) continue;
					    if(strcmp(BizzInfo[h][bOwner], GetName(i), false) == 0)
					    {
					        Connect_Status = "{5bf454}Online"RGB_WHITE;
					        break;
						}
					}
					format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Владелец:\t %s [%s]\n", globalstr, BizzInfo[h][bOwner], Connect_Status);
					format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Контроль:\t %s\n", globalstr, ReturnBSWName(BizzInfo[h][bExtortion]));
				}
				format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Вход:\t\t $%d\n", globalstr, BizzInfo[h][bEntranceCost]);
                format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Продукты:\t %d$ [%d/%d]\n", globalstr, BizzInfo[h][bPriceProd], BizzInfo[h][bProducts],BizzInfo[h][bMaxProducts]);
                format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Номер:\t %d\n\n", globalstr, h);

                if(!BizzInfo[h][bOwned]) strcat(globalstr, RGB_BLUE"\t• /buybiz"RGB_WHITE" - покупка бизнеса\n\n");

                strcat(globalstr, "_________________________________________________");
				if(GetPVarInt(playerid,"Bizz") == h || BizzInfo[h][bLocked] == 0)
				{
					ShowPlayerDialog(playerid, 137, DIALOG_STYLE_MSGBOX, RGB_SERVER"Инфо о бизнесе", globalstr, "Войти","Отмена");
					SetPVarInt(playerid, "BEnter", h);
				}
				else if(BizzInfo[h][bLocked] == 1)  ShowPlayerDialog(playerid, 136, DIALOG_STYLE_MSGBOX, RGB_SERVER"Инфо о бизнесе", globalstr, "Закрыто","");

				globalstr = "";
		        return 1;
		    }
		}
		for(new h; h < sizeof(SBizzInfo); h++)
		{
		    if(pickupid == SBizzInfo[h][sbPickup])
		    {
		        order[playerid] = 1;

		        globalstr = "";

		        strcat(globalstr, RGB_WHITE"_________________________________________________\n\n");

		        format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Название:\t %s\n", globalstr, SBizzInfo[h][sbDiscription]);

		        if(!SBizzInfo[h][sbOwned])
		        {
		            format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Цена:\t\t $%d\n", globalstr, SBizzInfo[h][sbPrice]);
		            if(SBizzInfo[h][sbDonatePrice]) format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Донат цена:\t %d\n", globalstr, SBizzInfo[h][sbDonatePrice]);
		            format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Уровень:\t %d\n", globalstr, SBizzInfo[h][sbLevel]);
				}
				else
				{
					new Connect_Status[30] = RGB_RED"Offline"RGB_WHITE;
					for(new i; i < MAX_PLAYERS; i++)
					{
					    if(!IsPlayerConnected(i)) continue;
					    if(strcmp(SBizzInfo[h][sbOwner], GetName(i), false) == 0)
					    {
					        Connect_Status = "{5bf454}Online"RGB_WHITE;
					        break;
						}
					}
					format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Владелец:\t %s [%s]\n", globalstr, SBizzInfo[h][sbOwner], Connect_Status);
					format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Контроль:\t %s\n", globalstr, ReturnBSWName(SBizzInfo[h][sbExtortion]));
				}
				format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Вход:\t\t $%d\n", globalstr, SBizzInfo[h][sbEntranceCost]);
                format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Продукты:\t $%d [%d/%d]\n", globalstr, SBizzInfo[h][sbPriceProd], SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts]);
                format(globalstr, sizeof(globalstr), "%s\t"RGB_BLUE"• "RGB_WHITE"Номер:\t %d\n\n", globalstr, h);

                if(!SBizzInfo[h][sbOwned]) strcat(globalstr, RGB_BLUE"\t• /buybiz"RGB_WHITE" - покупка бизнеса\n\n");

                strcat(globalstr, "_________________________________________________");
                if(h == 10 || h == 11)
                {
					if(GetPVarInt(playerid,"Bizz") == h || SBizzInfo[h][sbLocked] == 0)
					{
						ShowPlayerDialog(playerid, 138, DIALOG_STYLE_MSGBOX, RGB_SERVER"Инфо о бизнесе", globalstr, "Войти","Отмена");
						SetPVarInt(playerid, "sBEnter", h);
					}
					else if(SBizzInfo[h][sbLocked] == 1)  ShowPlayerDialog(playerid, 136, DIALOG_STYLE_MSGBOX, RGB_SERVER"Инфо о бизнесе", globalstr, "Закрыто","");
				}
				else
				{
				    ShowPlayerDialog(playerid, 136, DIALOG_STYLE_MSGBOX, RGB_SERVER"Инфо о бизнесе", globalstr, "Ок","");
				}

				globalstr = "";
		        return 1;
		    }
		}
		for(new h; h < sizeof(BizzInfo); h++)
		{
		    if(pickupid == BizzInfo[h][bExitPickup])
		    {
		        order[playerid] = 1;
		        ShowPlayerDialog(playerid, 139, DIALOG_STYLE_MSGBOX, RGB_SERVER"Выход", RGB_WHITE"\tХотите выйти на улицу?", "Выйти", "Отмена");
		    }
		}
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(CheckFCalls(playerid, 8)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnDialogResponse(%d, %d, %d, %d, %s);", GetName(playerid), playerid, dialogid, response, listitem, inputtext);
	new sendername[MAX_PLAYER_NAME];
    new string[256];
    new loginmsg[256+1];
	for(new i; i < strlen(inputtext); i ++) if(inputtext[i] == '%') inputtext[i] = '#';
	switch(dialogid)
	{
		case 1:
		{
		    if(response)
		    {
		        for(new i; i < strlen(inputtext); i ++)
		        {
		            switch(inputtext[i])
		            {
		                case 'a'..'z', 'A'..'Z', '0'..'9': {}
		                default: return ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка","\
						{ff0000}Пароль должен содержать только символы латинского алфавита (a-z) и цифры (0-9)","Ок","");
					}
				}

				if(strlen(inputtext) < 4 || strlen(inputtext) > 16)
				{
					return ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка","{ff0000}\
					Длина пароля должна быть от 4 до 16 символов","Ок","");
				}
				
				GetPlayerName(playerid, sendername, 24);
				if(MySQL_Exist_Name(sendername))
				{
				    SendClientMessage(playerid, COLOR_RED, "Аккаунт с таким же ником уже существует");
					Kick_(playerid);
					return 1;
				}
				
				SetPVarInt(playerid, "DelayWeapon", gettime()+300);
				SetPVarInt(playerid, "Not_Spawned", 1);

				ResetPlayerWeaponsUAC(playerid);
				SetPlayerArmedWeapon(playerid, 0);
				
				SetPlayerVirtualWorld(playerid, 1000);
				
				MySQL_Register(playerid, inputtext);

				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_MSGBOX, "   ", RGB_WHITE"Выберите пол для Вашего персонажа:", "Мужчина", "Женщина");
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "Введите в чат команду '/q' для выхода с сервера");
				Kick_(playerid);
			}
			return 1;
		}

		case 2:
		{
		    if(response)
		    {
		        SetPVarInt(playerid,"Sex",1);
				SetPVarInt(playerid,"Skin", 79);
				SetPlayerSkinEx(playerid, 79);
		    }
		    else
		    {
		        SetPVarInt(playerid,"Sex",2);
				SetPVarInt(playerid,"Skin", 211);
				SetPlayerSkinEx(playerid, 211);
		    }

			MySQL_UpdateInt(playerid, "Sex");
			MySQL_UpdateInt(playerid, "Skin");

            globalstr = "";

			strcat(globalstr, "{eedc82}Ники игроков:"RGB_WHITE"\n\n");
			strcat(globalstr, "- Ники игроков должны состоять из Имени_Фамилии с заглавных букв*.\n");
			strcat(globalstr, "- Ник не должен быть похож на ник кого-либо из других игроков.\n");
			strcat(globalstr, "- Ник не должен содержать нецензурных и ругательственных слов.\n\n\n");

			strcat(globalstr, "{eedc82}Правила чатов:"RGB_WHITE"\n\n");
			strcat(globalstr, "- Запрещена любая реклама, некасающаяся ресурса Crime Streets.\n");
			strcat(globalstr, "- Запрещен флуд, мат, оскорбления, засорение публичных чатов.\n");
			strcat(globalstr, "- Запрещено писать в чаты полностью верхним регистром (Капс).\n\n\n");

			strcat(globalstr, "{eedc82}Игровой процесс:"RGB_WHITE"\n\n");
			strcat(globalstr, "- Запрещено использовать любые читы, трейнеры, дающие преимущество над другими.\n");
			strcat(globalstr, "- Запрещен SpawnKill (спавнкилл) - убийство игроков на месте их возраждения.\n");
			strcat(globalstr, "- Запрещено использовать любые баги и недоработки игрового сервера.\n");
			strcat(globalstr, "- Запрещено подстрекать других игроков на нарушение правил сервера.\n");
			strcat(globalstr, "- Запрещен DriveBy (ДБ) - убийство игроков с помощью транспорта.\n");
			strcat(globalstr, "- Запрещены любые продажи игровых благ за реальные деньги.\n\n\n");

			strcat(globalstr, "{eedc82}Игровой аккаунт (важно):"RGB_WHITE"\n\n");
			strcat(globalstr, "- Запрещено передавать или продавать свой аккаунт вторым лицам.\n");
			strcat(globalstr, "{ff2400}- Ни при каких условиях не давайте свой пароль от аккаунта другим игрокам!\n");
			strcat(globalstr, "- Администрация никогда не просит паролей от Ваших аккаунтов!\n");
			strcat(globalstr, RGB_WHITE"- Советуем использовать сложные пароли во избежании взлома аккаунта.\n");
			strcat(globalstr, "- При утрате пароля от аккаунта, его можно будет восстановить по введеному Вами E-mail.");

			ShowPlayerDialog(playerid, 4, DIALOG_STYLE_MSGBOX, RGB_SERVER"Правила сервера Crime Streets RPG",globalstr,"В игру","");
			
			globalstr = "";
		    return 1;
		}
		case 3:
		{
			ShowDialogRegistration(playerid);
			return 1;
		}
		case 4:
		{
  			Dop_CheckPos[playerid][3] = 1958.33;
			Dop_CheckPos[playerid][4] = 1343.12;
			Dop_CheckPos[playerid][5] = 15.36;
			
 			SetSpawnInfo(playerid, GetPVarInt(playerid,"Team"), GetPVarInt(playerid,"Skin"), 1958.33, 1343.12, 15.36, 0,0,0,0,0,0,0);
 			
 			SetPVarInt(playerid, "DelayWeapon", gettime()+3);
 			SetPVarInt(playerid, "Not_Spawned", 0);
 			
 			ResetPlayerWeapons(playerid);
			SpawnPlayer(playerid);

			for(new i; i < 20; i ++) SendClientMessage(playerid, COLOR_WHITE, " ");

			SendClientMessage(playerid, COLOR_WHITE, "Вам понадобятся водительские права "RGB_BLUE"(/gps » Основные места » Автошкола)");
			SendClientMessage(playerid, COLOR_WHITE, "По игровым вопросам обращайтесь в "RGB_BLUE"/ask [текст]");
			SendClientMessage(playerid, COLOR_WHITE, "Для безопасности советуем указать Ваш E-Mail, подробности: "RGB_BLUE"/menu - Безопасность");
			SendClientMessage(playerid, COLOR_WHITE, "Настоятельно рекумендуем прочесть "RGB_BLUE"Помощь новичкам по игре на сервере"RGB_WHITE". Удачной Вам игры!");

            ShowPlayerDialog(playerid, 286, DIALOG_STYLE_INPUT, "  ",  RGB_WHITE"Укажите ник игрока, который привел Вас на сервер.\n       Если такого игрока нет, пропустите этот шаг.", "Готово", "Пропуск");

			return 1;
		}
		case 5:
		{
		    if(response)
		    {
				if(strlen(inputtext) < 1)
				{
					ShowLoginDialog(playerid);
					return 1;
				}

				if(strfind(inputtext, "'", true) != -1 ||
				   strfind(inputtext, "\"", true) != -1 ||
				   strfind(inputtext, "\\", true) != -1 ||
				   strfind(inputtext, ";", true) != -1 ||
				   strfind(inputtext, "`", true) != -1 ||
				   strfind(inputtext, "=", true) != -1 ||
				   strfind(inputtext, "%", true) != -1)
	   			{
				    ShowLoginDialog(playerid);
       				return SendClientMessage(playerid, COLOR_RED, "Введены запрещенные символы, если Вам не удается войти в свой аккаунт, сообщите администрации на форум");
				}


				OnPlayerLogin(playerid, inputtext);
			}
			else
			{
			    ShowMailDialog(playerid);
			}
			return 1;
		}
		case 6:
		{
		    if(response)
		    {
			    new getMail[64];
			    new getPass[20];
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(loginmsg,sizeof(loginmsg), "SELECT * FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", sendername);
				mysql_query(loginmsg);

				mysql_store_result();
				if(mysql_num_rows() != 0)
				{
			  		mysql_fetch_field("Mail", getMail);
			  		mysql_fetch_field("Password", getPass);
		  		}
				mysql_free_result();

				if(strcmp(getMail, "no", true ) == 0 )
				{
				    ShowLoginDialog(playerid);
				    return SendClientMessage(playerid, COLOR_RED, "На этом аккаунте не был указан E-Mail");
				}
				else
				{
			        for(new i; i < strlen(inputtext); i ++)
			        {
			            switch(inputtext[i])
			            {
			                case 'a'..'z', 'A'..'Z', '0'..'9', '.', ',', '@', '-', '_': {}
			                default:
							{
								ShowMailDialog(playerid);
								return SendClientMessage(playerid, COLOR_RED, "Были введены запрещенные символы, используйте: 'A-Z'  '0-9'  '.'  '@'  '-'");
							}
						}
					}

				    if(strcmp(getMail, inputtext, true ) != 0 || strlen(inputtext) < 5 || strlen(inputtext) > 40)
				    {
						GivePVarInt(playerid, "WrongMail", 1);
						if(GetPVarInt(playerid, "WrongMail") == 3)
						{
		                    MySQL_Banip(playerid, 1, "Неверный mail");
							return 1;
						}
						ShowMailDialog(playerid);
						return SendClientMessage(playerid, COLOR_RED, "E-Mail указан неверно! После 3-х неудачных попыток Вы будете забанены");
				    }
				    else
				    {
				    	format(loginmsg, 1024,"С Вашего игрового аккаунта был отправлен запрос на восстановление пароля:\n\nАккаунт:  '%s'\nПароль:  '%s'\n\nПри необходимости, смените пароль в игре командой /menu - Безопасность. Если же запрос делали не вы, советуем убедиться в сложности пароля от почтового ящика, или же просто проигнорировать письмо (если кому-то известен Ваш @mail). ",sendername, getPass);
					    SendMail( getMail, "CrimeStreets", "CrimeStreets", "Game account", loginmsg );
					    SendClientMessage(playerid, COLOR_WHITE, "На указанный Вами E-Mail был выслан пароль. Проверьте почту");
					    ShowLoginDialog(playerid);
					}
				}
		    }
		    else
		    {
		        ShowLoginDialog(playerid);
		    }
		    return 1;
		}
		case 7:
		{
		    order[playerid] = 0;
		    return 1;
		}
		case 8:
		{
			if(response)
			{
			    SetPlayerVirtualWorld(playerid, 0);
				switch(listitem)
			    {
					case 0://отель
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 478.604339,-1653.289306,23.772188);
						}
						else oSetPlayerPos(playerid, 478.604339,-1653.289306,23.772188);
			    		SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к отелю LS");
			    		SetPlayerInterior(playerid, 0);

					}
					case 1://тюрьма
					{
	    				if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 266.006256,81.803436,1004.682983);
						}
						else oSetPlayerPos(playerid, 266.006256,81.803436,1004.682983);
			    		SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались в тюрьму");
						SetPlayerInterior(playerid, 6);
					}
					case 2://присон
					{
					    SetPlayerVirtualWorld(playerid, 10);
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 2138.605468,1615.048461,993.688171);
						}
						else oSetPlayerPos(playerid, 2138.605468,1615.048461,993.688171);
						SetPlayerInterior(playerid, 1);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались в присон");
					}
					case 3://Школа
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), -2042.973144,-77.836845,35.171875);
						}
						else oSetPlayerPos(playerid, -2042.973144,-77.836845,35.171875);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к автошколе");
					}
					case 4://Банк LS
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 1464.887329,-1042.213989,23.828125);
						}
						else oSetPlayerPos(playerid, 1464.887329,-1042.213989,23.828125);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к банку");
					}
					case 5://Банк sF
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), -1591.821533,910.898925,7.539062);
						}
						else oSetPlayerPos(playerid, -1591.821533,910.898925,7.539062);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к банку");
					}
					case 6://Банк LV
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 2359.880126,2382.995117,10.820312);
						}
						else oSetPlayerPos(playerid, 2359.880126,2382.995117,10.820312);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к банку");
					}
					case 7://Аэро СФ
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), -1686.741821,-163.188003,17.070312);
						}
						else oSetPlayerPos(playerid, -1686.741821,-163.188003,17.070312);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались в аэропорт SF");
					}
					case 8://Аэро ЛС
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 1903.729736,-2424.576904,13.539117);
						}
						else oSetPlayerPos(playerid, 1903.729736,-2424.576904,13.539117);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались в аэропорт LS");
					}
					case 9: // Отель СФ
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), -2045.321411,458.223114,35.171875);
						}
						else oSetPlayerPos(playerid, -2045.321411,458.223114,35.171875);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к отелю SF");
					}
					case 10:
					{
					    if (GetPlayerState(playerid) == 2)
						{
						    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
							SetVehiclePos(GetPlayerVehicleID(playerid), 2828.380126,1306.332763,10.769917);
						}
						else oSetPlayerPos(playerid, 2828.380126,1306.332763,10.769917);
						SetPlayerInterior(playerid, 0);
						SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались к спавну LV");
					}
				}
			}
		}
		case 11..18: if(response) return ShowHelpDialogp(playerid);
		case 19:
		{
			if(response)
			{
			    switch(GetPVarInt(playerid,"GettingJob"))
			    {
			        case 1:
			        {
				        if(IsACop(playerid) || IsAGungMember(playerid) || GetPVarInt(playerid,"Team") == 0 || IsAMafiaMember(playerid) || IsAFractionMember(playerid) || IsAnInstructor(playerid) || GetPVarInt(playerid,"Team") == 18)
				        {
					        SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
					        SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
    						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
							SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						DeletePVar(playerid,"GettingJob");
					}
					case 4,9:
			        {
				        if(IsAMafiaMember(playerid) || IsAGungMember(playerid))
				        {
					        SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
					       	SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
    						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
							SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						DeletePVar(playerid,"GettingJob");
					}
					case 2:
					{
     					if(GetPVarInt(playerid, "Team") == 7 && GetPVarInt(playerid,"Rank") >= 7)
				        {
					        SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
					        SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
    						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
							SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						DeletePVar(playerid,"GettingJob");
					
					}
     				case 3,8,10,12,15:
			        {
				        if(GetPVarInt(playerid,"Team")==4 || IsAGungMember(playerid) || GetPVarInt(playerid,"Team")== 0 || IsAMafiaMember(playerid) || IsAFractionMember(playerid) || IsAnInstructor(playerid) || GetPVarInt(playerid,"Team") == 18)
				        {

					        SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
							SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
    						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
							SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						DeletePVar(playerid,"GettingJob");
					}
					case 5,7,14,16,17,18,19:
			        {
				        if(IsAGungMember(playerid) || GetPVarInt(playerid,"Team")== 0 || IsAMafiaMember(playerid) || IsAFractionMember(playerid) || IsAnInstructor(playerid) || GetPVarInt(playerid,"Team") == 18)
				        {

					        SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
					        SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
    						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
							SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						DeletePVar(playerid,"GettingJob");
					}
					case 20,21:
			        {
				        if(GetPVarInt(playerid,"Team")== 0)
				        {

					        SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
					        SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
    						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
							SetTimerEx("SetOrder", 2000, false, "i", playerid);
						}
						DeletePVar(playerid,"GettingJob");
					}
					case 22:
			        {

						if(GetPVarInt(playerid,"Team") > 3)
						{
						    SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта работа");
						}
						else
						{
							SetPVarInt(playerid,"Job",GetPVarInt(playerid,"GettingJob"));
      						SendClientMessage(playerid, COLOR_WHITE, "Введите "RGB_BLUE"/jobhelp"RGB_WHITE" для просмотра списка новых команд");
						}
						SetTimerEx("SetOrder", 2000, false, "i", playerid);
						DeletePVar(playerid,"GettingJob");
					}
				}
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
		}
		case 20:
		{
			if(response)
			{
			    new string2[256];
			    
				if(17 < strlen(inputtext) || strlen(inputtext) < 5)
				{
				    ChangeRPNameDialog(playerid);
				    return SendClientMessage(playerid, COLOR_RED, "Ник должен содержать от 5 до 17 символов");
				}
				if(CheckRPname(inputtext) != 1)
				{
				    ChangeRPNameDialog(playerid);
				    return SendClientMessage(playerid, COLOR_RED, "Ник должен быть формата 'Имя_Фамилия'");
				}
				if(MySQL_Exist_Name(inputtext))
				{
				    GivePVarInt(playerid, "FloodNameExist", 1);
				    if(GetPVarInt(playerid, "FloodNameExist") > 11)
				    {
				        SendClientMessage(playerid, COLOR_WHITE, RGB_RED"Флуд");
				        Kick_(playerid);
				        return 1;
					}
					ChangeRPNameDialog(playerid);
					return SendClientMessage(playerid, COLOR_RED, "Такой ник уже занят, придумайте другой");
				}
				new othname[24];
				
    			for(new i; i < MAX_PLAYERS; i++)
			    {
       				if(!IsPlayerConnected(i)) continue;
       				
				    GetPlayerName(i, othname, sizeof(othname));
				    
				    if(strcmp(othname, inputtext, true) == 0)
				    {
						ChangeRPNameDialog(playerid);
						return SendClientMessage(playerid, COLOR_RED, "На сервере есть игрок с похожим ником, придумайте другой");
					}
				}
				DeletePVar(playerid, "FloodNameExist");
				
				
				new oldname[24];
				GetPlayerName(playerid, oldname, sizeof(oldname));
				
				SetPlayerName(playerid, inputtext);
				MySQL_Update_Name(playerid);
				
				new realname[24];
				GetPlayerName(playerid, realname, sizeof(realname));
				
				// Обновление домов
 				new key = GetPVarInt(playerid,"House");
				if (key != -1 && strcmp(oldname, HouseInfo[key][hOwner], false) == 0)
				{
					strmid(HouseInfo[key][hOwner], realname, 0, strlen(realname), 255);
					SaveHouse(key);
				}
				
				
				// Обновление тачек
				UpdatePlayerVehicleText(playerid);
				
				
				// Обновление бизов
				new bkey = GetPVarInt(playerid,"Bizz");
				if (bkey != 255)
				{
					if (bkey > 99 && bkey < 999  && strcmp(oldname, SBizzInfo[bkey-100][sbOwner], true) == 0)
					{
						strmid(SBizzInfo[bkey-100][sbOwner], realname, 0, strlen(realname), 255);
						SaveSBizz(bkey-100);
					}
					if (bkey < 100 && strcmp(oldname, BizzInfo[bkey][bOwner], true) == 0)
					{
						strmid(BizzInfo[bkey][bOwner], realname, 0, strlen(realname), 255);
						SaveBizz(bkey);
					}
				}
				// Обновление бизов (совладелец)
			/*	for(new i = 0; i < sizeof(SBizzInfo); i++)
				{
					if (strcmp(oldname, SBizzInfo[i][sbExtortion], true) == 0)
					{
						strmid(SBizzInfo[i][sbExtortion], realname, 0, strlen(realname), 255);
						SaveSBizz(i);
					}
				} */
			/*	for(new i = 0; i < sizeof(BizzInfo); i++)
				{
					if (strcmp(oldname, BizzInfo[i][bExtortion],   true) == 0)
					{
						strmid(BizzInfo[i][bExtortion],  realname, 0, strlen(realname), 255);
						SaveBizz(i);
					}
				}*/

				for(new i ; i < 20; i ++) SendClientMessage(playerid, COLOR_WHITE, " ");
				
				format(string2, sizeof(string2), "Ваш новый ник %s, Сделайте скриншот с этим сообщением клавишей F8", realname);
				SendClientMessage(playerid, COLOR_YELLOW, string2);
				SendClientMessage(playerid, COLOR_YELLOW, "Под старым ником Вы больше не сможете войти!");
				
				
				TogglePlayerControllable(playerid, 1);
				
				DeletePVar(playerid, "CantUseCommand");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "Вы отказались менять свой ник, Вы кикнуты");
		 		Kick_(playerid);
		 	}
			return 1;
		}
		case 21:
		{
  			KillTimer(TimeShowTimer[playerid]);
	    	TimeShowTimer[playerid] = -1;
			return 1;
		}
		case 22:
		{
			SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 23:
		{
		    if(GetPVarInt(playerid, "Level") < 4) return SendClientMessage(playerid, COLOR_GREY, "Смена респавна будет доступна после 3 уровня");
			if(response)
			{
			    switch(listitem)
			    {
				    case 0:
					{
						SetPVarInt(playerid,"Origin",1);
						SendClientMessage(playerid, COLOR_WHITE, "Место респавна изменено на "RGB_BLUE"Los Santos");
					}
					case 1:
					{
						SetPVarInt(playerid,"Origin",2);
      					SendClientMessage(playerid, COLOR_WHITE, "Место респавна изменено на "RGB_BLUE"Las Venturas");
					}
				}
			}
			return 1;
		}
		case 24:
		{
		    if(!response)
			{
			    format(loginmsg,256,"{ffffff}Этот аккаунт уже зарегистрирован!\nВведите свой пароль ниже в окне и нажмите 'LOGIN'\n{ffa500}(пароль вводится без команды /login)");
				ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT, RGB_SERVER"Вход в игровой аккаунт",loginmsg,"LOGIN","OTHER");
				return 1;
			}
			else
			{
			    switch(listitem)
			    {
			    	case 0: Kick_(playerid);
			    	case 1:
			    	{
			    	    GetPlayerName(playerid, sendername, sizeof(sendername));
						format(loginmsg,sizeof(loginmsg), "SELECT Mail FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", sendername);
						mysql_query(loginmsg);
						mysql_store_result();
					    new getMail[64];
					    mysql_fetch_field("Mail", getMail);
						mysql_free_result();
						
				        if(strcmp(getMail,"no", true ) == 0 )
				        {
					        SendClientMessage(playerid, COLOR_RED, "На этом аккаунте не указан E-Mail");
					        ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST, RGB_SERVER"Выберите нужное действие", "Выйти с сервера\nВосстановить пароль\nВернуться назад","Далее","Назад");
					        return 1;
						}
						else
						{
				    	    SetPVarInt(playerid, "mailTries", 3);
	    					format(loginmsg,256,"{ffffff}Введите @mail, записанный на этот аккаунт и нажмите 'Далее'.\nУ Вас есть 3 попытки на ввод.\nПри неверном вводе ваш IP адрес будет забанен на час\n\nОсталось попыток: %d",GetPVarInt(playerid, "mailTries"));
							ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT, RGB_SERVER"Восстановление пароля",loginmsg,"Далее","Назад");
						}
					}
					case 2:
					{
						ShowPlayerDialog(playerid,1,DIALOG_STYLE_INPUT, RGB_SERVER"Авторизация","{ffffff}Этот аккаунт уже зарегистрирован!\nВведите свой пароль ниже в окне и нажмите 'LOGIN'\n{ffa500}(пароль вводится без команды /login)\n\nКнопка 'OTHER':\n-Восстановить пароль\n-Выйти с сервера","LOGIN","OTHER");
						return 1;
					}
				}
			}
            return 1;
		}
	    case 25://gunpickup
		{
			if(response)
			{
				switch(listitem)
				{
					case 0:// 1 комплект
					{
						ShowPlayerDialog(playerid,26,DIALOG_STYLE_MSGBOX, RGB_SERVER"GUN", "Цена комплекта: 50$\nДигл - 100 патронов\nСпрей - 1500\nДубинка\nБроня","Купить","Назад");
					}
					case 1:// 2 комплект
					{
						ShowPlayerDialog(playerid,27,DIALOG_STYLE_MSGBOX, RGB_SERVER"GUN", "Цена комплекта: 100$\nДигл - 150 патронов\nМП5 - 500 патронов\nСпрей - 1500\nДубинка\nБроня","Купить","Назад");
					}
					case 2:// 3 комплект
		 			{
						ShowPlayerDialog(playerid,28,DIALOG_STYLE_MSGBOX, RGB_SERVER"GUN", "Цена комплекта: 150$\nДигл - 150 патронов\nМП5 - 700 патронов\nШотган - 100 патронов\nСпрей - 1500\nДубинка\nБроня","Купить","Назад");
					}
					case 3:// 4 комплект
		 			{
				 		ShowPlayerDialog(playerid,29,DIALOG_STYLE_MSGBOX, RGB_SERVER"GUN", "Цена комплекта: 250$\nДигл - 150 патронов\nМП5 - 700 патронов\nШотган - 100 патронов\nМ4 - 300 патронов\nСпрей - 1500\nДубинка\nБроня","Купить","Назад");
					}
					case 4:// 5 комплект
		 			{
						ShowPlayerDialog(playerid,30,DIALOG_STYLE_MSGBOX, RGB_SERVER"GUN", "Цена комплекта: 300$\nДигл - 200 патронов\nМП5 - 1000 патронов\nШотган - 150 патронов\nМ4 - 500 патронов\nСпрей - 2000\nДубинка\nБроня","Купить","Назад");
					}
				}
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
		}
		case 26:
		{
			if(response)
			{
			    if(GetPlayerPCash(playerid) < 50) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
	  			GivePlayerPCash(playerid, - 50, "Komplekt or");
	        	GivePlayerWeaponUAC(playerid, 24, 100);
	        	GivePlayerWeaponUAC(playerid, 41, 1500);
	        	GivePlayerWeaponUAC(playerid, 3, 5);
	        	SetPlayerArmour(playerid, 100);

				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 ||
				skinid == 284 ||
				skinid == 287) SetPlayerAttachedObject(playerid, 4,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);

	    		SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели комплект оружия #1 за $50");
	    		SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST, RGB_SERVER"GUN", "Комплект оружия 1\nКомплект оружия 2\nКомплект оружия 3\nКомплект оружия 4\nКомплект оружия 5","Выбрать","Отмена");
			}
		}
		case 27:
		{
			if(response)
			{
			    if(GetPlayerPCash(playerid) < 100) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		 		GivePlayerPCash(playerid, - 100, "Komplekt or");
	        	GivePlayerWeaponUAC(playerid, 24, 150);
	       		GivePlayerWeaponUAC(playerid, 29, 500);
	       		GivePlayerWeaponUAC(playerid, 41, 1500);
	       		GivePlayerWeaponUAC(playerid, 3, 5);
	       		SetPlayerArmour(playerid, 100);

				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 ||
				skinid == 284 ||
				skinid == 287) SetPlayerAttachedObject(playerid, 4,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);

                SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели комплект оружия #2 за $100");
	       		SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST, RGB_SERVER"GUN", "Комплект оружия 1\nКомплект оружия 2\nКомплект оружия 3\nКомплект оружия 4\nКомплект оружия 5","Выбрать","Отмена");
			}
		}
		case 28:
		{
			if(response)
			{
			    if(GetPlayerPCash(playerid) < 150) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		 		GivePlayerPCash(playerid, - 150, "Komplekt or");
				GivePlayerWeaponUAC(playerid, 24, 150);
				GivePlayerWeaponUAC(playerid, 29, 700);
	       		GivePlayerWeaponUAC(playerid, 25, 100);
	       		GivePlayerWeaponUAC(playerid, 41, 1500);
	       		GivePlayerWeaponUAC(playerid, 3, 5);
	       		SetPlayerArmour(playerid, 100);

				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 ||
				skinid == 284 ||
				skinid == 287) SetPlayerAttachedObject(playerid, 4,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);

	       		SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели комплект оружия #3 за $150");
	       		SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST, RGB_SERVER"GUN", "Комплект оружия 1\nКомплект оружия 2\nКомплект оружия 3\nКомплект оружия 4\nКомплект оружия 5","Выбрать","Отмена");
			}
		}
		case 29:
		{
			if(response)
			{
			    if(GetPlayerPCash(playerid) < 250) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		 		GivePlayerPCash(playerid, - 250, "Komplekt or");
				GivePlayerWeaponUAC(playerid, 24, 200);
				GivePlayerWeaponUAC(playerid, 29, 700);
	       		GivePlayerWeaponUAC(playerid, 25, 150);
	       		GivePlayerWeaponUAC(playerid, 41, 2000);
	       		GivePlayerWeaponUAC(playerid, 31, 300);
	       		GivePlayerWeaponUAC(playerid, 3, 5);
	       		SetPlayerArmour(playerid, 100);

				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 ||
				skinid == 284 ||
				skinid == 287) SetPlayerAttachedObject(playerid, 4,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);

	       		SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели комплект оружия #4 за $250");
	       		SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST, RGB_SERVER"GUN", "Комплект оружия 1\nКомплект оружия 2\nКомплект оружия 3\nКомплект оружия 4\nКомплект оружия 5","Выбрать","Отмена");
			}
		}
		case 30:
		{
			if(response)
			{
			    if(GetPlayerPCash(playerid) < 300) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		 		GivePlayerPCash(playerid, - 300, "Komplekt or");
				GivePlayerWeaponUAC(playerid, 24, 250);
				GivePlayerWeaponUAC(playerid, 29, 1000);
	       		GivePlayerWeaponUAC(playerid, 25, 200);
	       		GivePlayerWeaponUAC(playerid, 41, 2500);
	       		GivePlayerWeaponUAC(playerid, 3, 5);
	       		GivePlayerWeaponUAC(playerid, 31, 500);
	       		SetPlayerArmour(playerid, 100);

				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 ||
				skinid == 284 ||
				skinid == 287) SetPlayerAttachedObject(playerid, 4,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);

	       		SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели комплект оружия #5 за $300");
	       		SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			else
			{
				ShowPlayerDialog(playerid,25,DIALOG_STYLE_LIST, RGB_SERVER"GUN", "Комплект оружия 1\nКомплект оружия 2\nКомплект оружия 3\nКомплект оружия 4\nКомплект оружия 5","Выбрать","Отмена");
			}
		}
 		case 34:
		{
		    if(response)
		    {
				new plcar = GetPlayerVehicleID(playerid);
				if(IsACollectorcar(plcar))
				{
					SendClientMessage(playerid, COLOR_GREEN, "Следуйте к точкам, которые отмечены у Вас на карте");
					SetPVarInt(playerid, "IDroute", random(4));
					SetPVarInt(playerid, "PickupToCar", plcar); // для создания пикапа около машины
					SetPlayerCollectorRoute(playerid);
					SetPVarInt(playerid, "CheckInkass", gettime()+250);
				}
		    }
			else removePlayerFromVehicle(playerid);
			return 1;
		}
		case 39:
  		{
      		if(GetPVarInt(playerid, "NoShowDialog") != 0) return ShowPlayerDialog(playerid,39,DIALOG_STYLE_MSGBOX,"  ", RGB_WHITE"Окошко скроется автоматически через 5 секунд","Ок","");
   			else return 1;
  		}

		case 45:
		{
	        if(!response)
	            return 0;
	        if(FloorRequestedBy[listitem] != INVALID_PLAYER_ID || IsFloorInQueue(listitem))
	            GameTextForPlayer(playerid, "~r~The floor is already in the queue", 3500, 4);
			else if(DidPlayerRequestElevator(playerid))
			    GameTextForPlayer(playerid, "~r~You already requested the elevator", 3500, 4);
			else
		        CallElevator(playerid, listitem);
			return 1;
		}
		case 46:
		{
	  		if(response)
			{
				switch(listitem)
				{
				    case 0:
				    {
						ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_WHITE"Введите имя вашего свидетеля и нажмите" RGB_GREEN"'Далее'","Далее","Назад");
						SetPVarInt(playerid, "MarriageCeremoney", 1);
					}
					case 1:
				    {
						ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_WHITE"Введите имя вашей второй половинки и нажмите" RGB_GREEN"'Далее'","Далее","Назад");
						SetPVarInt(playerid, "MarriageCeremoney", 3);
					}
					case 2:
				    {
						ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_WHITE"Введите имя человека, которому вы желаете отправить документы на развод\nи нажмите" RGB_GREEN"'Далее'","Далее","Назад");
						SetPVarInt(playerid, "MarriageCeremoney", 5);
					}
				}
			    return 1;
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
		}
		case 47:
		{
			switch(GetPVarInt(playerid, "MarriageCeremoney"))
			{
			    case 1:
			    {
			        if(response) // Назначение свидетеля
					{
						if(!strlen(inputtext)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание", RGB_WHITE "Введите имя вашего свидетеля и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
						new giveplayerid = ReturnUser(inputtext);
					    if(!IsPlayerConnected(giveplayerid)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Игрок не найден!\n\n" RGB_WHITE "Введите имя вашего свидетеля и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
				  		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Игрок должен находиться рядом с вами!\n\n" RGB_WHITE "Введите имя вашего свидетеля и нажмите " RGB_GREEN "'Далее'","Далее","Назад");
					    if(giveplayerid == playerid) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание", RGB_RED "Вы не можете назначить свидетелем самого себя!\n\n" RGB_WHITE "Введите имя вашего свидетеля и нажмите "RGB_GREEN "'Далее'","Далее","Назад");
						new giveplayer[24];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						
						format(string, sizeof(string), "Вы попросили %s быть свидетелем на вашем бракосочетании", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						
						SetPVarInt(giveplayerid, "WitnessOffer",playerid);
						SetPVarInt(playerid,"MarryWitness",giveplayerid);
						SetPVarInt(giveplayerid, "MarriageCeremoney",2);
						format(string, sizeof(string), RGB_BLUE"• %s " RGB_WHITE"просит вас быть свидетелем на его бракосочетании", sendername);
						ShowPlayerDialog(giveplayerid,47,DIALOG_STYLE_MSGBOX,RGB_SERVER"Бракосочетание",string,"Принять","Отказаться");
						ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
					}
					else ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
					DeletePVar(playerid, "MarriageCeremoney");
				}
				case 2:// Ответ свидетеля
			    {
			        new giveplayer[24];
					new WitnessOffer = GetPVarInt(playerid, "WitnessOffer");
			    	GetPlayerName(WitnessOffer, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
			        if(response)
					{
						format(string, sizeof(string), "Вы приняли предложение от %s стать свидетелем на его бракосочетании", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						
						format(string, sizeof(string), "%s принял предложение стать свидетелем на вашем бракосочетании", sendername);
						SendClientMessage(WitnessOffer, COLOR_WHITE, string);
					}
					else
					{
					    format(string, sizeof(string), "Вы отклонили предложение от %s стать свидетелем на его бракосочетании", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						
					    format(string, sizeof(string), "%s отклонил предложение стать свидетелем на вашем бракосочетании", sendername);
						SendClientMessage(WitnessOffer, COLOR_WHITE, string);
						
						SetPVarInt(WitnessOffer,"MarryWitness",-1);
					}
					DeletePVar(playerid,"MarriageCeremoney");
					SetTimerEx("SetOrder", 2000, false, "i", playerid);
				}
				case 3:// Начало церемонии
		    	{
					if(response)
					{
					    new giveplayer[24];
				    	//GetPlayerName(WitnessOffer, giveplayer, sizeof(giveplayer));
						//GetPlayerName(playerid, sendername, sizeof(sendername));
			    	    if(GetPlayerPCash(playerid) < 5000) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Вам нужно $5000 чтобы оплатить это!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
				        if(GetPVarInt(playerid,"Married")) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Вы уже женаты!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
				        if(GetPVarInt(playerid,"House") == -1) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "У вас нет дома!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
				        if(!strlen(inputtext)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание", RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
						new giveplayerid = ReturnUser(inputtext);
						if(GetPVarInt(giveplayerid,"House") != -1) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "У партнера уже есть дом, ему нужно продать его!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
					    if(!IsPlayerConnected(giveplayerid)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Игрок не найден!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
				        if(GetPVarInt(giveplayerid,"Married")) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Этот игрок уже женат!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
				        if (!ProxDetectorS(8.0, playerid, giveplayerid)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Игрок должен находиться рядом с Вами!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
					    if(giveplayerid == playerid) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "Вы не можете сделать предложение самому себе!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
					    if(GetPVarInt(giveplayerid,"MarryWitness") == -1) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT,RGB_SERVER"Бракосочетание",RGB_RED "У вашей половинки нет свидетеля!\n\n" RGB_WHITE "Введите имя вашей второй половинки и нажмите " RGB_GREEN"'Далее'","Далее","Назад");
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						
						format(string, sizeof(string), "Вы сделали предложение %s", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						
						SetPVarInt(giveplayerid, "ProposeOffer",playerid);
						//SetPVarInt(playerid,"ProposedTo",giveplayerid);
						SetPVarInt(giveplayerid, "MarriageCeremoney",4);
						format(string, sizeof(string), RGB_BLUE"%s " RGB_WHITE"сделал Вам предложение", sendername);
						ShowPlayerDialog(giveplayerid,47,DIALOG_STYLE_MSGBOX, RGB_SERVER"Бракосочетание",string,"Принять","Отказаться");
						ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
					}
					else ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
					DeletePVar(playerid, "MarriageCeremoney");
				}
				case 4:// Ответ партнера Propose
		    	{
		    	    new giveplayer[24];
					new ProposeOffer = GetPVarInt(playerid, "ProposeOffer");
			    	GetPlayerName(ProposeOffer, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
			        if(response)
					{
						format(string, sizeof(string), "Вы приняли предложение от %s о бракосочетании", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s принял Ваше предложение о бракосочетании", sendername);
						SendClientMessage(ProposeOffer, COLOR_WHITE, string);
						
						SetPVarString(ProposeOffer, "MarriedTo", sendername);
						SetPVarString(playerid, "MarriedTo", giveplayer);
						MySQL_UpdateString(ProposeOffer,"MarriedTo");
						MySQL_UpdateString(playerid,"MarriedTo");
						GivePlayerPCash(ProposeOffer, - 2000, "Pozenilis");
						SetPVarInt(playerid,"Married",1);
						SetPVarInt(ProposeOffer,"Married",1);
	    				SetPVarInt(playerid,"House", GetPVarInt(ProposeOffer, "House"));
	    				
	    				format(string, sizeof(string), RGB_ORANGE"• " RGB_WHITE"Священник: " RGB_ORANGE"%s " RGB_WHITE"и " RGB_ORANGE"%s, " RGB_WHITE"я объявляю Вас мужем и женой!", giveplayer, sendername);
						ProxDetector(30.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
						
						format(string, sizeof(string), RGB_ORANGE"Crime Streets News: " RGB_WHITE"Поздравляем! У нас новая семейная пара: " RGB_ORANGE"%s " RGB_WHITE "и " RGB_ORANGE"%s.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else
					{
					    format(string, sizeof(string), "Вы отклонили предложение от %s о бракосочетании", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
					    format(string, sizeof(string), "%s отклонил Ваше предложение о бракосочетании", sendername);
						SendClientMessage(ProposeOffer, COLOR_WHITE, string);
					}
					DeletePVar(playerid,"MarriageCeremoney");
					SetTimerEx("SetOrder", 2000, false, "i", playerid);
					DeletePVar(playerid, "ProposeOffer");
				}
				case 5:// Divorce
		    	{
					if(response)
					{
					    new giveplayer[24];
				        if(!strlen(inputtext)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_MSGBOX, RGB_SERVER"Бракосочетание",RGB_WHITE"Введите имя человека, которому вы желаете отправить документы на развод\nи нажмите" RGB_GREEN"'Далее'","Далее","Назад");
						new giveplayerid = ReturnUser(inputtext);
					    if(!IsPlayerConnected(giveplayerid)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_RED "Игрок не найден!\n\n" RGB_WHITE "Введите имя человека, которому вы желаете отправить документы на развод\nи нажмите" RGB_GREEN"'Далее'","Далее","Назад");
				        if (!ProxDetectorS(8.0, playerid, giveplayerid)) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_RED "Игрок должен находиться рядом с Вами!\n\n" RGB_WHITE "Введите имя человека, которому вы желаете отправить документы на развод\nи нажмите" RGB_GREEN"'Далее'","Далее","Назад");
					    if(giveplayerid == playerid) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_RED "Вы не можете отправить документы на развод самому себе!\n\n" RGB_WHITE "Введите имя человека, которому вы желаете отправить документы на развод\nи нажмите" RGB_GREEN"'Далее'","Далее","Назад");
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new wstring[24];
						GetPVarString(playerid, "MarriedTo", wstring, 24);
						if(strcmp(giveplayer ,wstring, true ) != 0) return ShowPlayerDialog(playerid,47,DIALOG_STYLE_INPUT, RGB_SERVER"Бракосочетание",RGB_RED "Вы не можете отправить документы на развод этому человеку!\n\n" RGB_WHITE "Введите имя человека, которому вы желаете отправить документы на развод\nи нажмите" RGB_GREEN"'Далее'","Далее","Назад");
						format(string, sizeof(string), "Вы отправили документы на развод %s", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SetPVarInt(giveplayerid, "ProposeOffer",playerid);
						//SetPVarInt(playerid,"ProposedTo",giveplayerid);
						SetPVarInt(giveplayerid, "MarriageCeremoney",6);
						format(string, sizeof(string), RGB_BLUE"• %s " RGB_WHITE"отправил Вам документы на развод.", sendername);
						ShowPlayerDialog(giveplayerid,47,DIALOG_STYLE_MSGBOX, RGB_SERVER"Бракосочетание",string,"Принять","Отказаться");
						ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
					}
					else ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST, RGB_SERVER"Бракосочетание","Назначить свидетеля\nНачать церемонию\nПодать на развод","Выбрать","Отмена");
					DeletePVar(playerid, "MarriageCeremoney");
				}
				case 6:// Ответ партнера Divorce
		    	{
		    	    new giveplayer[24];
					new ProposeOffer = GetPVarInt(playerid, "ProposeOffer");
			    	GetPlayerName(ProposeOffer, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
			        if(response)
					{
						format(string, sizeof(string), "Вы приняли предложение от %s о разводе", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "%s принял Ваше предложение о разводе", sendername);
						SendClientMessage(ProposeOffer, COLOR_WHITE, string);
				        ClearMarriage(playerid);
						ClearMarriage(ProposeOffer);
						
						MySQL_UpdateString(ProposeOffer, "MarriedTo");
						MySQL_UpdateInt(ProposeOffer, "Married");

						MySQL_UpdateString(playerid, "MarriedTo");
						MySQL_UpdateInt(playerid, "Married");
					}
					else
					{
					    format(string, sizeof(string), "Вы отклонили предложение от %s о бракосочетании", giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
					    format(string, sizeof(string), "%s отклонил Ваше предложение о бракосочетании", sendername);
						SendClientMessage(ProposeOffer, COLOR_WHITE, string);
					}
					DeletePVar(playerid, "ProposeOffer");
					DeletePVar(playerid,"MarriageCeremoney");
					SetTimerEx("SetOrder", 2000, false, "i", playerid);
				}

			}
		    return 1;
		}
		case 48:
		{
		    SetTimerEx("SetOrder", 2000, false, "i", playerid);
		    if(response)
			{
			    new money = SBizzInfo[8][sbEntranceCost];
			    if(SBizzInfo[8][sbProducts] <= 0) return SendClientMessage(playerid, COLOR_GREY, "Бизнес пустой");
	    		if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				if(GetPVarInt(playerid, "CarKey") <= 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет автомобиля");

			    switch(listitem)
			    {
			        case 0:
			        {
			            for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(GetPlayerVehicleID(i) == CarInfo[playerid][cMaincar])
					        {
					            return SendClientMessage(playerid, COLOR_GREY, "Автомобиль в данный момент занят");
							}
					    }
						if(IsPlayerInRangeOfPoint(playerid, 20.0, 2498.423583,-1463.295410,24.027610)) // ЛС
						{
					    	SetVehiclePos(CarInfo[playerid][cMaincar], 2526.1108,-1465.8655, 25.50000);
					    	SetVehicleHealth(CarInfo[playerid][cMaincar], 999.0);
							RepairVehicleEx(CarInfo[playerid][cMaincar]);
						}
						else if(IsPlayerInRangeOfPoint(playerid, 20.0, -1823.196533,1282.240966,16.139249)) // СФ
						{
					    	SetVehiclePos(CarInfo[playerid][cMaincar], -1835.336669,1273.914672,19.981748);
					    	SetVehicleHealth(CarInfo[playerid][cMaincar], 999.0);
							RepairVehicleEx(CarInfo[playerid][cMaincar]);
						}
						else // ЛВ
						{
					    	SetVehiclePos(CarInfo[playerid][cMaincar], 2785.388671,1443.996826,10.328817);
					    	SetVehicleHealth(CarInfo[playerid][cMaincar], 999.0);
							RepairVehicleEx(CarInfo[playerid][cMaincar]);
						}
					}
			        case 1:
			        {
			            CarInfo[playerid][cSpoiler] 		= 0;
				  		CarInfo[playerid][cHood] 			= 0;
				        CarInfo[playerid][cSideskirt] 		= 0;
				        CarInfo[playerid][cNitro] 			= 0;
				        CarInfo[playerid][cLamps] 			= 0;
				        CarInfo[playerid][cExhaust] 		= 0;
				        CarInfo[playerid][cWheels] 			= 0;
				        CarInfo[playerid][cRoof] 			= 0;
				        CarInfo[playerid][cStereo]		 	= 0;
				        CarInfo[playerid][cHydraulics] 		= 0;
				        CarInfo[playerid][cBullbar] 		= 0;
				        CarInfo[playerid][cRearBullbars] 	= 0;
				        CarInfo[playerid][cFrontSign] 		= 0;
				        CarInfo[playerid][cFrontBullbars] 	= 0;
				        CarInfo[playerid][cFrontBumper] 	= 0;
				        CarInfo[playerid][cRearBumper] 		= 0;
				        CarInfo[playerid][cVents] 			= 0;
				        CarInfo[playerid][cPaintJob] 		= -1;
				        RespawnPlayerCar(playerid);
					}
				}
				GameTextForPlayer(playerid, "~w~Fix car service", 5000, 1);
				GivePlayerPCash(playerid, -money, "Fixcar");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GiveSBizMoney(8, money);
				SBizzInfo[8][sbProducts]--;
			}
			return 1;
		}
		case 53:
		{
			if(GetPVarInt(playerid, "WaitRace")) ShowPlayerDialog(playerid, 53 ,DIALOG_STYLE_MSGBOX, RGB_SERVER"Дождитесь начала гонки!"," ","Ок","");
			return 1;
		}
		case 62: // хотите закончить работу?
		{
			SetTimerEx("SetOrder", 2000, false, "i", playerid);
   			if(response)
			{

				GivePlayerPCash(playerid, (GetPVarInt(playerid, "JobProgress") - 1) * 40, "JobProgress");
				ReplaceSkin(playerid);

				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = 0;

				format(string, 32, "~r~ +%d", (GetPVarInt(playerid, "JobProgress") - 1) * 40);
				GameTextForPlayer(playerid, string, 5000, 1);

				DeletePVar(playerid, "JobProgress");
				DeletePVar(playerid, "GetPack");
				DeletePVar(playerid, "CheckCheakJob");
				
				RemovePlayerAttachedObject(playerid, 4);
			}
			return 1;
		}
		case 63:  /// желаете приступить к работе?
		{
		    if(response)
			{
				switch(random(3))
				{
				    case 0: SetPlayerSkinEx(playerid, 144);
				    case 1: SetPlayerSkinEx(playerid, 2);
				    case 2: SetPlayerSkinEx(playerid, 16);
				    case 3: SetPlayerSkinEx(playerid, 27);
				}
				SetPVarInt(playerid, "JobProgress", 1); // кол-во отнесенных мешков -1
			    SetTimerEx("SetOrder", 2000, false, "i", playerid);
			    SendClientMessage(playerid, COLOR_GREEN, "Закончить работу можно в любое время, просто встаньте на этот пикап");
			    SendClientMessage(playerid, COLOR_GREEN, "Возьмите мешок");
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_WORKER2;
			    SetPlayerCheckpoint(playerid, -1547.518432,111.565849,3.554687, 1.5);
			}
			else
			{
				SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			return 1;
		}
		case 64:
		{
		    if(response)
			{
			    globalstr = "";
			    switch(listitem)
			    {
					case 0: // Аккаунт
					{
						strcat(globalstr, RGB_GREEN"Команды игрового аккаунта\n");
						strcat(globalstr, RGB_WHITE"_________________________________________________________________\n\n");

						strcat(globalstr, "/stats - Посмотреть статистику Вашего игрока\n");
						strcat(globalstr, "/skill - Посмотреть навыки Вашего игрока\n");
						strcat(globalstr, "/licenses - Список Ваших лицензий\n");
						strcat(globalstr, "/setage - Сменить свой возраст\n");
						strcat(globalstr, "/setsex - Сменить свой пол\n");
						strcat(globalstr, "/buylevel - Купить следующий уровень\n");
						strcat(globalstr, "/quitjob -Уволиться с работы\n");
						strcat(globalstr, "/dd - Выбросить наркотики\n");
						strcat(globalstr, "/dm - Выбрость материалы\n");
						strcat(globalstr, "/usedrugs - Использовать наркотики\n");
						strcat(globalstr, "/piss- Справить нужду\n");
						strcat(globalstr, "/iznas - Изнасиловать игрока\n");
						strcat(globalstr, "/sexon - Заняться сексом\n");
						strcat(globalstr, "/me - Действие от Вашего лица\n");
						strcat(globalstr, "/spawnchange - Сменить спавн Вашего игрока\n");
						strcat(globalstr, "/drink - Выпить в баре\n");
						strcat(globalstr, "/drinksprunk - Выпить Sprunk\n");
						strcat(globalstr, "/smoke - Закурить сигарету\n");
						strcat(globalstr, "/drinkbeer - Выпить пиво\n");
						strcat(globalstr, "/drinkwine - Выпить вино\n");
						strcat(globalstr, "/music - Включить плеер\n");
						strcat(globalstr, "/rmho - Удалить прицепленный к Вам объект\n");
						strcat(globalstr, "/menu - Меню игрового аккаунта\n");
						strcat(globalstr, "/sellexp - Продать респекты\n");
						strcat(globalstr, "_________________________________________________________________");
					}
					case 1: // серв
					{
						strcat(globalstr, RGB_GREEN"Интерактивные команды\n");
						strcat(globalstr, RGB_WHITE"_________________________________________________________________\n\n");

						strcat(globalstr, "/report - Подать жалобу; Заявку о смене ника\n");
						strcat(globalstr, "/gps - GPS система помощи\n");
						strcat(globalstr, "/licenzers - Список лицензиаров on-line\n");
						strcat(globalstr, "/showlicenses - Показать игроку список Ваших лицензий\n");
						strcat(globalstr, "/pass - Показать игроку Ваш паспорт\n");
						strcat(globalstr, "/pay - Передать деньги игроку\n");
						strcat(globalstr, "/id - Узнать id игрока по имени\n");
						strcat(globalstr, "/time - Узнать время(или срок в тюрьме;присоне)\n");
						strcat(globalstr, "/enter - Войти в Дом/Бизнес\n");
						strcat(globalstr, "/service - Воспользоваться услугами сервиса\n");
						strcat(globalstr, "/get (fuel/drugs) - Купить (наркотики/бензин)\n");
						strcat(globalstr, "/fill - Заправить Ваше авто (Только на заправке)\n");
						strcat(globalstr, "/fillcar - дозаправить Ваше авто с канистры\n");
						strcat(globalstr, "/lock - Закрыть Ваш автомобиль\n");
						strcat(globalstr, "/dice - Бросить кости\n");
						strcat(globalstr, "/rentcar - Арендовать авто\n");
						strcat(globalstr, "/unrentcar - Остановить аренду авто\n");
						strcat(globalstr, "/givekey - Дать ключ от авто игроку\n");
						strcat(globalstr, "/oldcar - Узнать id Вашего предыдущего автомобиля\n");
						strcat(globalstr, "/callcar - Вызвать оформленное на Вас авто\n");
						strcat(globalstr, "/eject - Выбросить игрока с авто (Только с места водителя)\n");
						strcat(globalstr, "/contract - Заказать игрока хитману\n");
						strcat(globalstr, "/ask - Задать вопрос хелперам\n");
						strcat(globalstr, "/helpers - Список хелперов on-line\n");
						strcat(globalstr, "/donate - Donate услуги\n");
						strcat(globalstr, "/colorhelp - Помощь по цветам на сервере\n");
						strcat(globalstr, "/online - Список адвокатов/лицензеров/лидеров/хелперов\n");
						strcat(globalstr, "/ad - Подать объявление\n");
						strcat(globalstr, "/capture - Начать захват территории(Только для банд/мафий)\n");
						strcat(globalstr, "_________________________________________________________________");
					}
					case 2: // Дом
					{
						strcat(globalstr, RGB_GREEN"Команды дома\n\n");
						strcat(globalstr, RGB_WHITE"_________________________________________________________________\n\n");

						strcat(globalstr, "/buyhouse - Купить дом\n");
						strcat(globalstr, "/sellhouse -Продать дом\n");
						strcat(globalstr, "/changehouse - Обменять дом на другой\n");
						strcat(globalstr, "/enter - Войти в дом\n");
						strcat(globalstr, "/exit - Выйти из дома\n");
						strcat(globalstr, "/evict - Выселить игрока с дома\n");
						strcat(globalstr, "/tv(/recon) - Заспавниться дома/респауне(Должен быть куплен апгрейд)\n");
						strcat(globalstr, "/heal - Вылечить себя(Должен быть куплен апгрейд)\n");
						strcat(globalstr, "/hpanel - Помощь по дому\n");
						strcat(globalstr, "_________________________________________________________________");
					}
					case 3: // прочее
					{
						strcat(globalstr, RGB_GREEN"Прочее\n");
						strcat(globalstr, RGB_WHITE"_________________________________________________________________\n\n");
						strcat(globalstr, RGB_GREEN"Банк\n"RGB_WHITE);
						strcat(globalstr, "/withdraw - Снять деньги со своего счета\n");
						strcat(globalstr, "/bank(/deposit) - Положить деньги себе на счет\n");
						strcat(globalstr, "/transfer - Перевести деньги на счет игроку\n\n");

						strcat(globalstr, RGB_GREEN"Телефон\n"RGB_WHITE);
						strcat(globalstr, "/call - Позвонить игроку\n");
						strcat(globalstr, "/sms - Написать SMS\n");
						strcat(globalstr, "/number - Узнать номер игрока\n");
						strcat(globalstr, "/p - Принять звонок\n");
						strcat(globalstr, "/h - Завершить звонок\n\n");

						strcat(globalstr, RGB_GREEN"Лидер\n"RGB_WHITE);
						strcat(globalstr, "/members - Список подчиненных on-line\n");
						strcat(globalstr, "/invite - Принять игрока в свою организацию\n");
						strcat(globalstr, "/uninvite - Выгнать игрока\n");
						strcat(globalstr, "/giverank - Повысить ранг игрока\n");
						strcat(globalstr, "/fmute - Дать молчанку игроку(Только /f)\n");
						strcat(globalstr, "/fwarn - Выдать один выговор игроку\n");
						strcat(globalstr, "/funwarn - Снять один выговор\n");
						strcat(globalstr, "/editgang - Изменить банду/мафию\n");
						strcat(globalstr, "/editrank - Изменить названия рангов\n");
						strcat(globalstr, "/writenews - Написать новости организации\n\n");

						strcat(globalstr, RGB_GREEN"Автомобиль\n"RGB_WHITE);
						strcat(globalstr, "/sellmycar - Продать авто\n");
						strcat(globalstr, "/buymycar - Купить автомобиль\n");
						strcat(globalstr, "/changemycar - Обменять автомобиль\n");
						strcat(globalstr, "/park - Вернуть автомобиль на место парковки\n");
						strcat(globalstr, "_________________________________________________________________");
					
					}
				}
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, " ", globalstr, "Ок", "");
				globalstr = "";
			}
			else
			{
			    SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
		    return 1;
		}

		case 73:
		{
		    if(response) return ShowNoobsHelpDialog(playerid);
		    else GivePVarInt(playerid, "PageHelp", 1);
		    ShowNoobsHelp(playerid);
			return 1;
		}
		case 74:
		{
		    if(response) GivePVarInt(playerid, "PageHelp", -1);
		    else return ShowNoobsHelpDialog(playerid);
		    ShowNoobsHelp(playerid);
		    return 1;
		}
		case 75:
		{
			if(response)
			{
			    SetPVarInt(playerid, "PageHelp", listitem+2);
				ShowNoobsHelp(playerid);
				return 1;
			}
		    SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 76:
		{
		    if(response) return ShowNoobsHelpDialog(playerid);
		    DeletePVar(playerid, "PageHelp");
		    SetTimerEx("SetOrder", 2000, false, "i", playerid);
		    return 1;
		}


  		case 80:
		{
		    if(response)
		    {
		        switch(strval(inputtext))
				{
					case 1: ShowDonateDialog(playerid, 1);
					case 2: ShowDonateDialog(playerid, 2);
					case 3: ShowDonateDialog(playerid, 7);
					case 4: ShowDonateDialog(playerid, 14);//для дома
					default: ShowDonateDialog(playerid, 0);
				}
			}
		}
		case 81:
		{
		    if(response)
		    {
		     /*   new Query[128];
			    if(strlen(inputtext) < 9) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"{ffffff}Crime Streets: {34c924}Donate",RGB_RED"\tКод указан неверно!","Ок","");
				for(new i; i < strlen(inputtext); i ++)
				{
				    switch(inputtext[i])
				    {
				        case '0', '1'..'9': {}
				        default:  return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"{ffffff}Crime Streets: {34c924}Donate",RGB_RED"\tКод указан неверно! Используйте только цифры","Ок","");
					}
				}
				format( Query, sizeof( Query ), "SELECT Code, Value FROM `"DonateTable"` WHERE `Code` = '%s' LIMIT 1", inputtext);
			    mysql_query(Query);
			    mysql_store_result();
			    if(mysql_num_rows())
				{
				   	new row[64], DataString[16];
					mysql_fetch_row(row, "|");
		   			mysql_fetch_field("Value", DataString);
		   			new cash;
		   			switch(strval(DataString))
		   			{
						case 100..199: cash = 100;
						case 200..499: cash = 200;
						case 500..999: cash = 525;
						case 1000..1999: cash = 1050;
						case 2000..3000: cash = 2100;
						default: cash = 0;
					}
			        format(string, sizeof(string), RGB_WHITE"\tВы успешно пополнили свой счет на " RGB_GREEN"%d " RGB_WHITE"DonateMoney!", cash);
					ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"{ffffff}Crime Streets: {34c924}Donate",string,"Ок","");
					GivePVarInt(playerid, "DonateMoney", cash);
					MySQL_UpdateInt(playerid,"DonateMoney");
					mysql_free_result();
					format( Query, sizeof( Query ), "DELETE FROM `"DonateTable"` WHERE `Code` = '%s' LIMIT 1", inputtext);
			    	mysql_query(Query);
				}
			    else
				{
					mysql_free_result();
					ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"{ffffff}Crime Streets: {34c924}Donate",RGB_RED"\tКод указан неверно!","Ок","");
				}*/
    			if(strlen(inputtext) < 9) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"\tКод указан неверно!","Ок","");
				for(new i; i < strlen(inputtext); i ++)
				{
				    switch(inputtext[i])
				    {
				        case '0', '1'..'9': {}
				        default:  return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"\tКод указан неверно! Используйте только цифры","Ок","");
					}
				}
				new str[256];
				format(str, sizeof(str), "zadrot.cc/donate_samp.php?Code=%d&checkpass=Zdsf3cb1kd0", strval(inputtext));
				HTTP(playerid, 1, str, "", "ResponseDonate");
				
				SetPVarInt(playerid, "Temp_Code", strval(inputtext));
			}
			else
			{
				ShowDonateDialog(playerid, 0);
			}
			return 1;
		}
		case 82:
		{
		    if(response)
		    {
		        switch(strval(inputtext))
				{
					case 1: ShowDonateDialog(playerid, 3);//Вип покупка
					case 2: ShowDonateDialog(playerid, 4);//Вип продление
					case 3: ShowDonateDialog(playerid, 5);//Покупка респектов
					case 4: ShowDonateDialog(playerid, 6);//Покупка skill'а
					case 5: ShowDonateDialog(playerid, 20);//Покупка скина
					default: ShowDonateDialog(playerid, 0);
				}
		    }
		    else ShowDonateDialog(playerid, 0);
		}
		case 83:
		{
		    if(response)
		    {
		        switch(strval(inputtext))
				{
					case 1:
					{
					    if(GetPVarInt(playerid,"VipLevel") == 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть VIP аккаунт этого уровня");
					        ShowDonateDialog(playerid, 3);
					        return 1;
						}
						if(GetPVarInt(playerid,"VipLevel"))
						{
					    	ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы уверены, что хотите приобрести  VIP аккаунт 1 уровня?\n\n\
							Стоимость услуги: {34c924}100 Donate Money","Оплатить","Назад");
						}
						else
						{
						    ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы уверены, что хотите приобрести  VIP аккаунт 1 уровня\n\
							и автоматически продлить его на 30 дней?\n\n\
							Стоимость услуги: {34c924}100 Donate Money","Оплатить","Назад");

						}
						SetPVarInt(playerid, "D_VipLevelGet", 1);
					}
					case 2:
					{
					    if(GetPVarInt(playerid,"VipLevel") == 2)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть VIP аккаунт этого уровня");
					        ShowDonateDialog(playerid, 3);
					        return 1;
						}
						if(GetPVarInt(playerid,"VipLevel"))
						{
					    	ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы уверены, что хотите приобрести  VIP аккаунт 2 уровня?\n\n\
							Стоимость услуги: {34c924}150 Donate Money","Оплатить","Назад");
						}
						else
						{
						    ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы уверены, что хотите приобрести  VIP аккаунт 2 уровня\n\
							и автоматически продлить его на 30 дней?\n\n\
							Стоимость услуги: {34c924}150 Donate Money","Оплатить","Назад");

						}
						SetPVarInt(playerid, "D_VipLevelGet", 2);

					}
					case 3:
					{
					    if(GetPVarInt(playerid,"VipLevel") == 3)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть VIP аккаунт этого уровня");
					        ShowDonateDialog(playerid, 3);
					        return 1;
						}
						if(GetPVarInt(playerid,"VipLevel"))
						{
					    	ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы уверены, что хотите приобрести  VIP аккаунт 3 уровня?\n\n\
							Стоимость услуги: {34c924}200 Donate Money","Оплатить","Назад");
						}
						else
						{
						    ShowPlayerDialog(playerid,84,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы уверены, что хотите приобрести  VIP аккаунт 3 уровня\n\
							и автоматически продлить его на 30 дней?\n\n\
							Стоимость услуги: {34c924}200 Donate Money","Оплатить","Назад");

						}
						SetPVarInt(playerid, "D_VipLevelGet", 3);

					}
					default: ShowDonateDialog(playerid, 3);
				}
		    }
		    else ShowDonateDialog(playerid, 2);
		}
		case 84:
		{
		 	if(response)
		    {
		        switch(GetPVarInt(playerid, "D_VipLevelGet"))
				{
			        case 1:
					{
					    if(GetPVarInt(playerid, "DonateMoney") < 100)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 100 Donate Money для покупки этого VIP аккаунта");
					        ShowDonateDialog(playerid, 3);
					        return 1;
						}
					    if(GetPVarInt(playerid,"VipLevel") != 0)
						{
					    	ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы успешно приобрели VIP аккаунт {34c924}1 уровня {ffffff} за {34c924}100 {ffffff}Donate Money !","Ок","");
							UpdatePlayerVip(playerid, 1);
						}
						else
						{
						    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы успешно приобрели VIP аккаунт {34c924}1 уровня {ffffff} за {34c924}100 {ffffff}Donate Money !\n\
							VIP аккаунт автоматически продлен на {34c924}30 {ffffff}дней.","Ок","");
							GivePlayerVip(playerid, 1, 30);
						}
						GivePVarInt(playerid, "DonateMoney", -100);
						MySQL_UpdateInt(playerid,"DonateMoney");
						
					}
					case 2:
					{
					    if(GetPVarInt(playerid, "DonateMoney") < 150)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 150 Donate Money для покупки этого VIP аккаунта");
					        ShowDonateDialog(playerid, 3);
					        return 1;
						}
						if(GetPVarInt(playerid,"VipLevel") != 0)
						{
					    	ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы успешно приобрели VIP аккаунт {34c924}2 уровня {ffffff} за {34c924}150 {ffffff}Donate Money !","Ок","");
							UpdatePlayerVip(playerid, 2);
						}
						else
						{
						    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы успешно приобрели VIP аккаунт {34c924}2 уровня {ffffff} за {34c924}150 {ffffff}Donate Money !\n\
							VIP аккаунт автоматически продлен на {34c924}30 {ffffff}дней.","Ок","");
							GivePlayerVip(playerid, 2, 30);
						}
						GivePVarInt(playerid, "DonateMoney", -150);
						MySQL_UpdateInt(playerid,"DonateMoney");
						
					}
					case 3:
					{
					    if(GetPVarInt(playerid, "DonateMoney") < 200)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 200 Donate Money для покупки этого VIP аккаунта");
					        ShowDonateDialog(playerid, 3);
					        return 1;
						}
						if(GetPVarInt(playerid,"VipLevel") != 0)
						{
					    	ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы успешно приобрели VIP аккаунт {34c924}3 уровня {ffffff} за {34c924}200 {ffffff}Donate Money !","Ок","");
							UpdatePlayerVip(playerid, 3);
						}
						else
						{
						    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
							{ffffff}Вы успешно приобрели VIP аккаунт {34c924}3 уровня {ffffff} за {34c924}200 {ffffff}Donate Money !\n\
							VIP аккаунт автоматически продлен на {34c924}30 {ffffff}дней.","Ок","");
							GivePlayerVip(playerid, 3, 30);
						}
						GivePVarInt(playerid, "DonateMoney", -200);
						MySQL_UpdateInt(playerid,"DonateMoney");
						
					}
					default: ShowDonateDialog(playerid, 3);
				}
			}
			else ShowDonateDialog(playerid, 3);
		}
		case 85:
		{
		    if(response)
		    {
		        new days = strval(inputtext);
				if(days < 1 || days > 300)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Количество дней должно быть от 1 до 300");
			        ShowDonateDialog(playerid, 4);
			        return 1;
				}
				new cash;
				new vlevel = GetPVarInt(playerid, "VipLevel");
				switch(vlevel)
				{
				    case 1: cash = 3*days;
				    case 2: cash = 5*days;
				    case 3: cash = 7*days;
				    default: cash = 7*days;
				}
			 	//new string[256];
		        format(string, sizeof(string),
				"{ffffff}Вы уверены, что хотите продлить свой VIP аккаунт %d уровня на %d дней?\n\n\
				Стоимость услуги: {34c924}%d Donate Money", vlevel, days, cash);
				ShowPlayerDialog(playerid,86,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
				SetPVarInt(playerid, "D_VipDays",days);
				SetPVarInt(playerid, "D_VipCost",cash);
			}
			else ShowDonateDialog(playerid, 2);
		}
		case 86:
		{
		    if(response)
		    {
		        //new string[256];
		        new vcost = GetPVarInt(playerid, "D_VipCost");
		        new vdays = GetPVarInt(playerid, "D_VipDays");
		        if(GetPVarInt(playerid, "DonateMoney") < vcost)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно Donate Money для продления VIP аккаунта");
			        ShowDonateDialog(playerid, 4);
			        return 1;
				}
		        format(string, sizeof(string),
				"{ffffff}Вы успешно продлили свой VIP аккаунт {34c924}%d уровня {ffffff} на %d дней !\n\
				Стоимость услуги: {34c924}%d Donate Money.", GetPVarInt(playerid, "VipLevel"), vdays, vcost);
		        ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Ок","");
				GivePVarInt(playerid, "DonateMoney", -vcost);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ExtendPlayerVip(playerid, vdays);
				DeletePVar(playerid,"D_VipDays");
				DeletePVar(playerid,"D_VipCost");
				
			}
			else ShowDonateDialog(playerid, 4);
		}
		case 87:
		{
		    if(response)
		    {
		        new respects = strval(inputtext);
				if(respects < 1 || respects > 300)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Количество респектов должно быть от 1 до 500");
			        ShowDonateDialog(playerid, 5);
			        return 1;
				}
				new cash = respects*8;
			 	//new string[256];
		        format(string, sizeof(string),
				"{ffffff}Вы уверены, что хотите приобрести {34c924}%d {ffffff}респектов?\n\
				Стоимость услуги: {34c924}%d Donate Money {ffffff}.", respects, cash);
				ShowPlayerDialog(playerid,88,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
				SetPVarInt(playerid, "D_VipDays",respects);
				SetPVarInt(playerid, "D_VipCost",cash);
			}
			else ShowDonateDialog(playerid, 2);
		}
		case 88:
		{
		    if(response)
		    {
		        //new string[256];
		        new vcost = GetPVarInt(playerid, "D_VipCost");
		        new respects = GetPVarInt(playerid, "D_VipDays");
		        if(GetPVarInt(playerid, "DonateMoney") < vcost)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно Donate Money");
			        ShowDonateDialog(playerid, 5);
			        return 1;
				}
		        format(string, sizeof(string),
				"{ffffff}Вы успешно приобрели {34c924}%d респектов {ffffff} за {34c924}%d Donate Money {ffffff}!", respects, vcost);
		        ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Ок","");
				GivePVarInt(playerid, "DonateMoney", -vcost);
				MySQL_UpdateInt(playerid,"DonateMoney");
				GivePVarInt(playerid,"Respect",respects);
				DeletePVar(playerid,"D_VipDays");
				DeletePVar(playerid,"D_VipCost");
				
			}
			else ShowDonateDialog(playerid, 5);
		}
  		case 89:
		{
		    if(response)
		    {
			    new jobskilltext[20];
	            switch(strval(inputtext))
				{
					case 1: jobskilltext = "Детектив";
					case 2: jobskilltext = "Адвокат";
					case 3: jobskilltext = "Проститутка";
					case 4: jobskilltext = "Наркодилер";
					case 5: jobskilltext = "Автоугонщик";
					case 6: jobskilltext = "Репортер";
					case 7: jobskilltext = "Механик";
					case 8: jobskilltext = "Автодилер";
					case 9: jobskilltext = "Тренер";
					default: return ShowDonateDialog(playerid, 6);
				}
				//new string[300];
		        format(string, sizeof(string), "{ffffff}Вы действительно хотите повысить skill\n\
				профессии %s на 1 уровень?", jobskilltext);
				ShowPlayerDialog(playerid,90,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");

				SetPVarInt(playerid, "D_JobSkill", strval(inputtext));
			}
			else ShowDonateDialog(playerid, 2);
		}
		case 90:
		{
			if(response)
		    {
			    if(GetPVarInt(playerid, "DonateMoney") < 50)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 50 Donate Money");
			        ShowDonateDialog(playerid, 3);
			        return 1;
				}
	            switch(GetPVarInt(playerid, "D_JobSkill"))
				{
				    case 1:
					{
					    switch(GetPVarInt(playerid,"DetSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"DetSkill", 51);
					        case 51..100: SetPVarInt(playerid,"DetSkill", 101);
					        case 101..200: SetPVarInt(playerid,"DetSkill", 201);
					        case 201..400: SetPVarInt(playerid,"DetSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 2:
					{
					    switch(GetPVarInt(playerid,"LawSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"LawSkill", 51);
					        case 51..100: SetPVarInt(playerid,"LawSkill", 101);
					        case 101..200: SetPVarInt(playerid,"LawSkill", 201);
					        case 201..400: SetPVarInt(playerid,"LawSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 3:
					{
					    switch(GetPVarInt(playerid,"SexSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"SexSkill", 51);
					        case 51..100: SetPVarInt(playerid,"SexSkill", 101);
					        case 101..200: SetPVarInt(playerid,"SexSkill", 201);
					        case 201..400: SetPVarInt(playerid,"SexSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 4:
					{
					    switch(GetPVarInt(playerid,"DrugsSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"DrugsSkill", 51);
					        case 51..100: SetPVarInt(playerid,"DrugsSkill", 101);
					        case 101..200: SetPVarInt(playerid,"DrugsSkill", 201);
					        case 201..400: SetPVarInt(playerid,"DrugsSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 5:
					{
					    switch(GetPVarInt(playerid,"JackSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"JackSkill", 51);
					        case 51..100: SetPVarInt(playerid,"JackSkill", 101);
					        case 101..200: SetPVarInt(playerid,"JackSkill", 201);
					        case 201..400: SetPVarInt(playerid,"JackSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 6:
					{
					    switch(GetPVarInt(playerid,"NewsSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"NewsSkill", 51);
					        case 51..100: SetPVarInt(playerid,"NewsSkill", 101);
					        case 101..200: SetPVarInt(playerid,"NewsSkill", 201);
					        case 201..400: SetPVarInt(playerid,"NewsSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 7:
					{
					    switch(GetPVarInt(playerid,"MechSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"MechSkill", 51);
					        case 51..100: SetPVarInt(playerid,"MechSkill", 101);
					        case 101..200: SetPVarInt(playerid,"MechSkill", 201);
					        case 201..400: SetPVarInt(playerid,"MechSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 8:
					{
					    switch(GetPVarInt(playerid,"CarSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"CarSkill", 51);
					        case 51..100: SetPVarInt(playerid,"CarSkill", 101);
					        case 101..200: SetPVarInt(playerid,"CarSkill", 201);
					        case 201..400: SetPVarInt(playerid,"CarSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 9:
					{
					    switch(GetPVarInt(playerid,"TrainerSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"TrainerSkill", 51);
					        case 51..100: SetPVarInt(playerid,"TrainerSkill", 101);
					        case 101..200: SetPVarInt(playerid,"TrainerSkill", 201);
					        case 201..400: SetPVarInt(playerid,"TrainerSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
					case 10:
					{
					    switch(GetPVarInt(playerid,"FishSkill"))
					    {
					        case 0..50: SetPVarInt(playerid,"FishSkill", 51);
					        case 51..100: SetPVarInt(playerid,"FishSkill", 101);
					        case 101..200: SetPVarInt(playerid,"FishSkill", 201);
					        case 201..400: SetPVarInt(playerid,"FishSkill", 401);
							default: return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"У Вас максимальный уровень этой профессии !","Ок","");
						}
					}
				}
				
				DeletePVar(playerid, "D_JobSkill");
				GivePVarInt(playerid, "DonateMoney", -50);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Вы успешно повысили уровень желаемой профессии !","Ок","");
			}
			else ShowDonateDialog(playerid, 6);
		}
		case 95:
		{
		    SetTimerEx("SetOrder", 2000, false, "i", playerid);
	 		if(response)
	   		{
	   		    if(GetPVarInt(playerid,"Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Для регистрации необходим 3 уровень");
	   		    if(GetPlayerPCash(playerid) < 500) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
	   		    if(GetPVarInt(playerid, "WaitRace")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже записаны на гонку");
	   		    if(RaceOpen == false) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта");

				SetPVarInt(playerid, "OnRace", 1);
				SetPVarInt(playerid, "CPoint", 1);
				SetPVarInt(playerid, "WaitRace", 1);

				GivePlayerPCash(playerid, -500, "Zapisalsa na gonku");

				RacePrize += 500; // Сколько денег выделится на призы с гонки
				RacersReg ++; // + 1 участник

				SendClientMessage(playerid, COLOR_GREEN, "Вы были записаны на гонку");
				SendClientMessage(playerid, COLOR_GREEN, "Внимание! Не выходите из здания регистрации до начала гонки, иначе Вы будете сняты");


				if(RacersReg == 24)
				{
				    SendClientMessageToAll(COLOR_INFO, "Гонка началась досрочно");
				    CountRace = 10;
				    StartRaceSF();
				    if(TimerRace != 0)
					{
						KillTimer(TimerRace);
						TimerRace = 0;
					}
				    RaceOpen = false;
				}
			}
			return 1;
		}
		case 96:
		{
			PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
			if(response)
			{
				format(string, sizeof(string), "Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления");
				ShowPlayerDialog(playerid, 100, 2, RGB_SERVER"ATM", string, "Далее", "Отмена");
			}
			else
			{
				ShowPlayerDialog(playerid,97,DIALOG_STYLE_INPUT, RGB_SERVER"ATM","\
				"RGB_GREY"Введите текст объявления\n\n\
				Внимание!\n\
				Объявление не должно:\n\n\
				\tСодержать мат\n\
				\tОскорблять кого-либо\n\
				\tНарушать прочие правила сервера\n\n\
				Стоимость объявления 35$ за символ.\n\
				Объявление будет видно во всех банкоматах","Ввод","Отмена");
			}
			return 1;
		}
		case 97:
		{
		    PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
			if(response)
			{
			    if(GetPVarInt(playerid, "Level") < 4) return SendClientMessage(playerid, COLOR_GREY, "Доступно только игрокам с 4 уровня");
				if(TimeAdv == 1)
				{
					ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM","Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления","Дальше","Отмена");
					return SendClientMessage(playerid, COLOR_GREY, "Подать объявление можно 1 раз в 2 минуты");
				}
			    if(!strlen(inputtext))
			    {
					ShowPlayerDialog(playerid,97,DIALOG_STYLE_INPUT, RGB_SERVER"ATM","\
					"RGB_GREY"Введите текст объявления\n\n\
					Внимание!\n\
					Объявление не должно:\n\n\
					\tСодержать мат\n\
					\tОскорблять кого-либо\n\
					\tНарушать прочие правила сервера\n\n\
					Стоимость объявления 25$ за символ\n\
					Объявление будет видно во всех банкоматах","Ввод","Отмена");
					return SendClientMessage(playerid, COLOR_GREY, "Вы не указали текст объявления");
			    }
			    if(strlen(inputtext) > 70 || strlen(inputtext) < 7)
			    {
					ShowPlayerDialog(playerid,97,DIALOG_STYLE_INPUT, RGB_SERVER"ATM","\
					"RGB_GREY"Введите текст объявления\n\n\
					Внимание!\n\
					Объявление не должно:\n\n\
					\tСодержать мат\n\
					\tОскорблять кого-либо\n\
					\tНарушать прочие правила сервера\n\n\
					Стоимость объявления 25$ за символ\n\
					Объявление будет видно во всех банкоматах","Ввод","Отмена");
					return SendClientMessage(playerid, COLOR_GREY, "Слишком длинный или короткий текст, используйте 7-70 символов");
			    }
		    	if(GetPVarInt(playerid,"MuteTime") > gettime())
				{
				    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
				    SendClientMessage(playerid, COLOR_MUTE, string);
					return 0;
				}
				new namep[24];
			    GetPlayerName(playerid, namep, 24);
				if(containsAnyIP(inputtext))
				{
					format(string, sizeof(string), "WARN(atm): %s[id: %d] %s", namep, playerid, inputtext);
					ABroadCast(string);
					return SendClientMessage(playerid, COLOR_GREY, "Услуга недоступна");
				}
			    new GetMon = strlen(inputtext)*25;
			    if(GetPlayerPCash(playerid) < GetMon) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка","{bbbbbb}Недостаточно денег для подачи объявления","Ok","");

    			for(new i; i < 15; i++)
			    {
			        if(!strcmp(AdvInfo[i][Owner], namep, true)) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка","{bbbbbb}Вы уже давали объявление","Ok","");
				}


				GiveSBizMoney(7, GetMon);

			    format(string, sizeof(string), "Объявление подано! Стоимость: $%d", GetMon);
			    SendClientMessage(playerid, COLOR_WHITE, string);
			    GivePlayerPCash(playerid, -GetMon, "obyavlenie");

                AntiCaps(inputtext);

				if(GetPVarInt(playerid,"PhoneNumber") != 0) format(string, 150, "%s | %s | Тел: %d", namep, inputtext, GetPVarInt(playerid,"PhoneNumber"));
				else format(string, 150, "%s | %s | Тел: Не указан", namep, inputtext);


				for(new i = 14; i > 0; i--)
				{
				    strmid(AdvInfo[i][Textad], AdvInfo[i-1][Textad], 0, strlen(AdvInfo[i-1][Textad]), 255);
				    strmid(AdvInfo[i][Owner], AdvInfo[i-1][Owner], 0, strlen(AdvInfo[i-1][Owner]), 255);
				}
				strmid(AdvInfo[0][Textad], string, 0, strlen(string), 255);
				strmid(AdvInfo[0][Owner], namep, 0, strlen(namep), 255);

                TimeAdv = 1;
                SetTimer("TimeAdOn", 120000, 0);

                ShowPAdvs(playerid);

			}
			else
			{
				format(string, sizeof(string), "Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления");
				ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM",string,"Дальше","Отмена");
			}
			return 1;
		}


	 	case 100:
	    {
	        PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
			if(response)
			{
				/*if(listitem==0)
				{
					format(loginmsg,256,"Введите сумму которую Вы хотите снять с банковского счета\nМаксимум %d $", GetPVarInt(playerid,"BankMoney"));
					ShowPlayerDialog(playerid,101,DIALOG_STYLE_INPUT, RGB_SERVER"ATM",loginmsg,"Снять","Меню");
				}
		  		if(listitem==1)
				{
					format(loginmsg,256,"Введите сумму, которую Вы хотите положить на счет\nМаксимум %d $", GetPlayerPCash(playerid));
					ShowPlayerDialog(playerid,102,DIALOG_STYLE_INPUT, RGB_SERVER"ATM",loginmsg,"Положить","Меню");
				}
				if(listitem==2)
				{
					format(loginmsg,256,"*Банковский чек:\n\nНа Вашем банковском счете %d $\nУ Вас на руках %d $\n\n",GetPVarInt(playerid,"BankMoney"), GetPlayerPCash(playerid));
					ShowPlayerDialog(playerid,103,DIALOG_STYLE_MSGBOX, RGB_SERVER"ATM",loginmsg,"Меню","Выход");
				}*/
   				if(listitem == 3)
				{
				    ShowPAdvs(playerid);
				}

			}
	    }
	    case 101:
	    {
	        PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
	        if(response)
			{
				new cashdeposit = strval(inputtext);
				if (cashdeposit > GetPVarInt(playerid,"BankMoney") || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы указали недопустимую сумму");
				new komissia = cashdeposit/20;
				GivePlayerPCash(playerid, cashdeposit - komissia, "Snyal s banka");
				GivePVarInt(playerid,"BankMoney", -cashdeposit);
				
				From_Tax_Bankomat += komissia;

				format(string, sizeof(string), "Вы сняли $%d с вашего счета (комиссия: $%d). Остаток: $%d", cashdeposit,komissia,GetPVarInt(playerid,"BankMoney"));
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM","Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления","Дальше","Отмена");
	    }
	    case 102:
	    {
	        PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
	        if(response)
			{
				new cashdeposit = strval(inputtext);
				if (cashdeposit > GetPlayerPCash(playerid) || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы указали недопустимую сумму");
				new komissia = cashdeposit/10;
				GivePlayerPCash(playerid, - cashdeposit, "Polozil v bank");
				GivePVarInt(playerid,"BankMoney",cashdeposit - komissia);
				
				format(string, sizeof(string), "Вы положили $%d на свой счет (комиссия: $%d). Новый баланс: $%d", cashdeposit,komissia,GetPVarInt(playerid,"BankMoney"));
				SendClientMessage(playerid, COLOR_WHITE, string);

			}
			ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM","Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления","Дальше","Отмена");
	    }
	    case 103:
	    {
	        PlayerPlaySound(playerid, 4203, 0.0, 0.0, 0.0);
	        if(response)
			{
				ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM","Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления","Дальше","Отмена");
	   		}
		}
		case 113:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid,COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
					case 0: SetPlayerCheckpoint(playerid, BizzInfo[4][bEntranceX], BizzInfo[4][bEntranceY], BizzInfo[4][bEntranceZ], 5.0);
					case 1: SetPlayerCheckpoint(playerid, BizzInfo[12][bEntranceX], BizzInfo[12][bEntranceY], BizzInfo[12][bEntranceZ], 5.0);
					case 2: SetPlayerCheckpoint(playerid, BizzInfo[13][bEntranceX], BizzInfo[13][bEntranceY], BizzInfo[13][bEntranceZ], 5.0);
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 114:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid,COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
					case 0: SetPlayerCheckpoint(playerid, BizzInfo[0][bEntranceX], BizzInfo[0][bEntranceY], BizzInfo[0][bEntranceZ], 5.0);
					case 1: SetPlayerCheckpoint(playerid, BizzInfo[1][bEntranceX], BizzInfo[1][bEntranceY], BizzInfo[1][bEntranceZ], 5.0);
					case 2: SetPlayerCheckpoint(playerid, BizzInfo[7][bEntranceX], BizzInfo[7][bEntranceY], BizzInfo[7][bEntranceZ], 5.0);
					case 3: SetPlayerCheckpoint(playerid, BizzInfo[14][bEntranceX], BizzInfo[14][bEntranceY], BizzInfo[14][bEntranceZ], 5.0);
					case 4: SetPlayerCheckpoint(playerid, BizzInfo[15][bEntranceX], BizzInfo[15][bEntranceY], BizzInfo[15][bEntranceZ], 5.0);
					case 5: SetPlayerCheckpoint(playerid, BizzInfo[16][bEntranceX], BizzInfo[16][bEntranceY], BizzInfo[16][bEntranceZ], 5.0);
					case 6: SetPlayerCheckpoint(playerid, BizzInfo[17][bEntranceX], BizzInfo[17][bEntranceY], BizzInfo[17][bEntranceZ], 5.0);
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 115:
		{
			if(response)
			{
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid,COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
			        case 0: SetPlayerCheckpoint(playerid, 771.962402,-1355.359863,13.533355, 5.0);// Автобус
			        case 1: SetPlayerCheckpoint(playerid, -2196.817626,298.964263,35.123031, 5.0);// Такси
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 116:
		{
		    order[playerid] = 0;
			if(response)
			{
			    switch(listitem)
			    {
					case 0: ShowPlaces(playerid);
					case 1: ShowGPSjobs(playerid);
					case 2:
					{
						SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Поиск автомобиля...");
						if(GetPVarInt(playerid,"CarKey") <= 0)
						{
						    OnPlayerCommandText(playerid, "/gps");
						    return SendClientMessage(playerid, COLOR_GREY, RGB_BLUE"GPS: "RGB_WHITE"Не удается обнаружить автомобиль");
						}
						SetPlayerCheckpoint(playerid,
						  CarInfo[playerid][carX],
						  CarInfo[playerid][carY],
						  CarInfo[playerid][carZ],
						  10.0);
						SendClientMessage(playerid,COLOR_GREY, RGB_BLUE"GPS: "RGB_WHITE"Автомобиль обнаружен, следуйте к красной метке на радаре");
						
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
					}
					case 3: ShowClubsAndBars(playerid);
					case 4: ShowAmmos(playerid);
					case 5: ShowFixs(playerid);
					case 6: ShowBanks(playerid);
					case 7: ShowAboutJob(playerid);
					case 8:
					{
						if(gPlayerCheckpointStatus[playerid] != CHECKPOINT_GPS)
						{
						    ShowGPS(playerid);
						    return SendClientMessage(playerid,COLOR_GREY, RGB_RED"GPS: "RGB_WHITE"Невозможно отключить метку на карте");
						}
						else
						{
						    gPlayerCheckpointStatus[playerid] = 0;
						    DisablePlayerCheckpoint(playerid);
						    SendClientMessage(playerid, COLOR_GREY, RGB_BLUE "GPS: "RGB_WHITE"Радар отключен");
						}
						return 1;
					}// отключить радар
				}
			}
			return 1;
		}
		case 117:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid, COLOR_GREY, RGB_BLUE "GPS: " RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
					case 0: SetPlayerCheckpoint(playerid,2421.302246,-1225.326538,25.140453, 5.0);
					case 1: SetPlayerCheckpoint(playerid,2171.526611,-1675.121215,15.085937, 5.0);
					case 2: SetPlayerCheckpoint(playerid,-1569.982788,128.475372,3.549483, 5.0);
					case 3: SetPlayerCheckpoint(playerid,1786.490966,-1297.664306,13.375000, 5.0);
					case 4: SetPlayerCheckpoint(playerid,1363.541748,-1276.049560,13.546875, 5.0);
					case 5: SetPlayerCheckpoint(playerid,-2072.749511,11.013205,35.320312, 5.0);
					case 6: SetPlayerCheckpoint(playerid,1624.538085,-1548.426513,13.673322, 5.0);
					case 7: SetPlayerCheckpoint(playerid,-1543.001464,112.827629,3.554687, 5.0);
					case 8: SetPlayerCheckpoint(playerid,2199.009033,-1973.465942,13.558123, 5.0);
					case 9: SetPlayerCheckpoint(playerid,-2320.949462,-153.373123,35.554687, 5.0);
					case 10: SetPlayerCheckpoint(playerid,-1022.158569,-676.702758,32.007812, 5.0);
					case 11: SetPlayerCheckpoint(playerid,-378.127655,1165.126342,19.742187, 5.0);
					case 12: SetPlayerCheckpoint(playerid,-1490.292602,1078.690063,7.187500, 5.0);
					case 13: SetPlayerCheckpoint(playerid,-2127.622314,-77.112625,35.171875, 5.0);
					case 14: SetPlayerCheckpoint(playerid,337.029235, 1397.828247, 6.809699, 5.0);
					case 15: SetPlayerCheckpoint(playerid,824.302978, 852.442565, 11.706407, 5.0);
					case 16: SetPlayerCheckpoint(playerid,1481.015625,-1742.012451,13.546875, 5.0);
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 118:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid, COLOR_GREY, RGB_BLUE "GPS: " RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
					case 0: SetPlayerCheckpoint(playerid,1548.916015,-1675.771728,14.735706, 5.0);
					case 1: SetPlayerCheckpoint(playerid, 1480.976196,-1750.911132,15.445312, 5.0);
					case 2: SetPlayerCheckpoint(playerid, -2028.124267,-96.749214,35.164062, 5.0);
					case 3: SetPlayerCheckpoint(playerid, -1547.697631,-436.772644,6.000000, 5.0);
					case 4: SetPlayerCheckpoint(playerid, 1464.280639,-1027.738037,23.828125, 5.0);
					case 5: SetPlayerCheckpoint(playerid, 1351.738403,-1750.341064,13.360789, 5.0);
					case 6: SetPlayerCheckpoint(playerid, 460.408142,-1500.964233,31.057167 , 5.0);
					case 7: SetPlayerCheckpoint(playerid, -1695.602783,950.944274,24.890625 , 5.0);
					case 8: SetPlayerCheckpoint(playerid, 2802.231933,2429.896728,11.062500 , 5.0);
					case 9: SetPlayerCheckpoint(playerid,2225.456054,-1722.581542,13.562500 , 5.0);
					case 10: SetPlayerCheckpoint(playerid, 2174.581787,-1672.763305,15.045642, 5.0);
					case 11: SetPlayerCheckpoint(playerid, -2616.634521,1404.012451,7.120254, 5.0);
					case 12: SetPlayerCheckpoint(playerid,1827.630249,-1684.154785,13.546875 , 5.0);
					case 13: SetPlayerCheckpoint(playerid,2421.538818,-1224.077392,25.249366 , 5.0);
					case 14: SetPlayerCheckpoint(playerid,-2244.724609,142.765319,35.320312 , 5.0); // очки
					case 15: SetPlayerCheckpoint(playerid,-2242.780273,122.895606,35.320312 , 5.0); // шляпы
					case 16: SetPlayerCheckpoint(playerid,384.021270,-1897.944091,7.835937 , 5.0); //пейнтболл
					case 17: SetPlayerCheckpoint(playerid, -2128.079345,-77.200736,35.171875, 5.0); // завод
					case 18: SetPlayerCheckpoint(playerid, -2222.606201,103.701896,35.320312, 5.0);
					case 19: SetPlayerCheckpoint(playerid, -1641.017456,1203.538330,7.242829, 5.0);
					case 20: SetPlayerCheckpoint(playerid, -202.817214,1119.094238,19.742187, 5.0);
					case 21: SetPlayerCheckpoint(playerid, 2594.222900,2790.535888,10.820312, 5.0);
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 119:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid, COLOR_GREY, RGB_BLUE "GPS: " RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
                	case 0: SetPlayerCheckpoint(playerid, BizzInfo[2][bEntranceX], BizzInfo[2][bEntranceY], BizzInfo[2][bEntranceZ], 5.0); /* 1 Ресторан */
					case 1: SetPlayerCheckpoint(playerid, BizzInfo[5][bEntranceX], BizzInfo[5][bEntranceY], BizzInfo[5][bEntranceZ], 5.0); /* 2 Джизи */
					case 2: SetPlayerCheckpoint(playerid, BizzInfo[6][bEntranceX], BizzInfo[6][bEntranceY], BizzInfo[6][bEntranceZ], 5.0); /* 3 Мисти */
					case 3: SetPlayerCheckpoint(playerid, BizzInfo[18][bEntranceX], BizzInfo[18][bEntranceY], BizzInfo[18][bEntranceZ], 5.0); /* 4 4 дракона */
					case 4: SetPlayerCheckpoint(playerid, BizzInfo[19][bEntranceX], BizzInfo[19][bEntranceY], BizzInfo[19][bEntranceZ], 5.0); /* 5 Калигула */
					case 5: SetPlayerCheckpoint(playerid, BizzInfo[20][bEntranceX], BizzInfo[20][bEntranceY], BizzInfo[20][bEntranceZ], 5.0); /* 6 клуб */
					case 6: SetPlayerCheckpoint(playerid, BizzInfo[21][bEntranceX], BizzInfo[21][bEntranceY], BizzInfo[21][bEntranceZ], 5.0); /* 7 Кафэ */
					case 7: SetPlayerCheckpoint(playerid, BizzInfo[22][bEntranceX], BizzInfo[22][bEntranceY], BizzInfo[22][bEntranceZ], 5.0); /* 8 Алхамбра */
					case 8: SetPlayerCheckpoint(playerid, BizzInfo[26][bEntranceX], BizzInfo[26][bEntranceY], BizzInfo[26][bEntranceZ], 5.0); /* 9 10 бутылок */
					case 9: SetPlayerCheckpoint(playerid, BizzInfo[24][bEntranceX], BizzInfo[24][bEntranceY], BizzInfo[24][bEntranceZ], 5.0); /* 10 Джейс */
					case 10: SetPlayerCheckpoint(playerid, BizzInfo[23][bEntranceX], BizzInfo[23][bEntranceY], BizzInfo[23][bEntranceZ], 5.0); /* 11 Бар ФК */
					case 11: SetPlayerCheckpoint(playerid, BizzInfo[23][bEntranceX], BizzInfo[23][bEntranceY], BizzInfo[23][bEntranceZ], 5.0); /* 12 Бар СФ */
					case 12: SetPlayerCheckpoint(playerid, BizzInfo[27][bEntranceX], BizzInfo[27][bEntranceY], BizzInfo[27][bEntranceZ], 5.0); /* 13 Бар АП */
					case 13: SetPlayerCheckpoint(playerid, BizzInfo[28][bEntranceX], BizzInfo[28][bEntranceY], BizzInfo[28][bEntranceZ], 5.0); /* 14 Бар ЛВ */
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
  		case 120:
		{
			if(response)
			{
				switch(strval(inputtext))
				{
					case 1: ShowDonateDialog(playerid, 8);
					case 2: ShowDonateDialog(playerid, 19);
					default: ShowDonateDialog(playerid, 7);
				}
			}
		    else ShowDonateDialog(playerid, 0);
		}
		case 121:
		{
		    if(response)
			{
				switch(strval(inputtext))
				{
					case 1: ShowDonateDialog(playerid, 9);
					case 2: ShowDonateDialog(playerid, 10);
					case 3: ShowDonateDialog(playerid, 11);
					case 4: ShowDonateDialog(playerid, 12);
					case 5: ShowDonateDialog(playerid, 13);
					default: ShowDonateDialog(playerid, 8);
				}
			}
		    else ShowDonateDialog(playerid, 7);
		}
		case 122:
		{
		    if(response)
			{
		        if(GetPVarInt(playerid,"CarKey") != 0)
				{
				    new car = strval(inputtext);
				    if(!IsAValidDonateCarid1(car)) return ShowDonateDialog(playerid, 9);
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите заменить свой личный автомобиль {34c924}%s[%d] {ffffff}на {34c924}%s[%d] {ffffff}?\n\n\
					Стоимость услуги: {34c924}200 Donate Money", VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cModel], VehiclesName[car-400], car);
					ShowPlayerDialog(playerid,123,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
					SetPVarInt(playerid, "D_Carid",car);
				}
				else ShowDonateDialog(playerid, 8), SendClientMessage(playerid, COLOR_GREY, "У Вас нет личного автомобиля");
			}
			else ShowDonateDialog(playerid, 8);
		}
		case 123:
		{
		    if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < 200)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 200 Donate Money для смены личного автомобиля");
			        ShowDonateDialog(playerid, 8);
			        return 1;
				}
				new Float:posx, Float:posy, Float:posz, Float:ang;
				GetVehiclePos(CarInfo[playerid][cMaincar], posx, posy, posz);
				GetVehicleZAngle(CarInfo[playerid][cMaincar], ang);
				CarInfo[playerid][carX] = posx;
				CarInfo[playerid][carY] = posy;
				CarInfo[playerid][carZ] = posz;
				CarInfo[playerid][carA] = ang;

				CarInfo[playerid][cModel] = GetPVarInt(playerid, "D_Carid");
				CarInfo[playerid][cSpoiler]= 0;
		  		CarInfo[playerid][cHood]= 0;
		        CarInfo[playerid][cSideskirt]= 0;
		        CarInfo[playerid][cNitro]= 0;
		        CarInfo[playerid][cLamps]= 0;
		        CarInfo[playerid][cExhaust]= 0;
		        CarInfo[playerid][cWheels]= 0;
		        CarInfo[playerid][cRoof]= 0;
		        CarInfo[playerid][cStereo]= 0;
		        CarInfo[playerid][cHydraulics]= 0;
		        CarInfo[playerid][cBullbar]= 0;
		        CarInfo[playerid][cRearBullbars]= 0;
		        CarInfo[playerid][cFrontSign]= 0;
		        CarInfo[playerid][cFrontBullbars]= 0;
		        CarInfo[playerid][cFrontBumper]= 0;
		        CarInfo[playerid][cRearBumper]= 0;
		        CarInfo[playerid][cVents]= 0;
		        CarInfo[playerid][cPaintJob]= -1;
		        SavePlayerCar(playerid);
		        RespawnPlayerCar(playerid);
		        DeletePVar(playerid, "D_Carid");
				GivePVarInt(playerid, "DonateMoney", -200);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Вы успешно заменили свой личный автомобиль !","Ок","");

			}
			else ShowDonateDialog(playerid, 9);
		}
		case 124:
		{
		    if(response)
			{
		        if(GetPVarInt(playerid,"CarKey") != 0)
				{
				    new car = strval(inputtext);
				    if(!IsAValidDonateCarid1(car)) return ShowDonateDialog(playerid, 10);
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите заменить свой личный автомобиль {34c924}%s[%d] {ffffff}на {34c924}%s[%d] {ffffff}?\n\n\
					Стоимость услуги: {34c924}200 Donate Money", VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cModel], VehiclesName[car-400], car);
					ShowPlayerDialog(playerid,125,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
					SetPVarInt(playerid, "D_Carid",car);
				}
				else ShowDonateDialog(playerid, 8), SendClientMessage(playerid, COLOR_GREY, "У Вас нет личного автомобиля");
			}
			else ShowDonateDialog(playerid, 8);
		}
		case 125:
		{
		    if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < 200)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 200 Donate Money для смены личного автомобиля");
			        ShowDonateDialog(playerid, 8);
			        return 1;
				}
				new Float:posx, Float:posy, Float:posz, Float:ang;
				GetVehiclePos(CarInfo[playerid][cMaincar], posx, posy, posz);
				GetVehicleZAngle(CarInfo[playerid][cMaincar], ang);
				CarInfo[playerid][carX] = posx;
				CarInfo[playerid][carY] = posy;
				CarInfo[playerid][carZ] = posz;
				CarInfo[playerid][carA] = ang;

				CarInfo[playerid][cModel] = GetPVarInt(playerid, "D_Carid");
				CarInfo[playerid][cSpoiler]= 0;
		  		CarInfo[playerid][cHood]= 0;
		        CarInfo[playerid][cSideskirt]= 0;
		        CarInfo[playerid][cNitro]= 0;
		        CarInfo[playerid][cLamps]= 0;
		        CarInfo[playerid][cExhaust]= 0;
		        CarInfo[playerid][cWheels]= 0;
		        CarInfo[playerid][cRoof]= 0;
		        CarInfo[playerid][cStereo]= 0;
		        CarInfo[playerid][cHydraulics]= 0;
		        CarInfo[playerid][cBullbar]= 0;
		        CarInfo[playerid][cRearBullbars]= 0;
		        CarInfo[playerid][cFrontSign]= 0;
		        CarInfo[playerid][cFrontBullbars]= 0;
		        CarInfo[playerid][cFrontBumper]= 0;
		        CarInfo[playerid][cRearBumper]= 0;
		        CarInfo[playerid][cVents]= 0;
		        CarInfo[playerid][cPaintJob]= -1;
		        SavePlayerCar(playerid);
		        RespawnPlayerCar(playerid);
		        DeletePVar(playerid, "D_Carid");
				GivePVarInt(playerid, "DonateMoney", -200);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Вы успешно заменили свой личный автомобиль !","Ок","");

			}
			else ShowDonateDialog(playerid, 10);
		}
		case 126:
		{
		    if(response)
			{
		        if(GetPVarInt(playerid,"CarKey") != 0)
				{
				    new car = strval(inputtext);
				    if(!IsAValidDonateCarid2(car)) return ShowDonateDialog(playerid, 11);
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите заменить свой личный автомобиль {34c924}%s[%d] {ffffff}на {34c924}%s[%d] {ffffff}?\n\n\
					Стоимость услуги: {34c924}300 Donate Money", VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cModel], VehiclesName[car-400], car);
					ShowPlayerDialog(playerid,127,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
					SetPVarInt(playerid, "D_Carid",car);
				}
				else ShowDonateDialog(playerid, 8), SendClientMessage(playerid, COLOR_GREY, "У Вас нет личного автомобиля");
			}
			else ShowDonateDialog(playerid, 8);
		}
		case 127:
		{
		    if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < 300)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 300 Donate Money для смены личного автомобиля");
			        ShowDonateDialog(playerid, 8);
			        return 1;
				}
				new Float:posx, Float:posy, Float:posz, Float:ang;
				GetVehiclePos(CarInfo[playerid][cMaincar], posx, posy, posz);
				GetVehicleZAngle(CarInfo[playerid][cMaincar], ang);
				CarInfo[playerid][carX] = posx;
				CarInfo[playerid][carY] = posy;
				CarInfo[playerid][carZ] = posz;
				CarInfo[playerid][carA] = ang;

				CarInfo[playerid][cModel] = GetPVarInt(playerid, "D_Carid");
				CarInfo[playerid][cSpoiler]= 0;
		  		CarInfo[playerid][cHood]= 0;
		        CarInfo[playerid][cSideskirt]= 0;
		        CarInfo[playerid][cNitro]= 0;
		        CarInfo[playerid][cLamps]= 0;
		        CarInfo[playerid][cExhaust]= 0;
		        CarInfo[playerid][cWheels]= 0;
		        CarInfo[playerid][cRoof]= 0;
		        CarInfo[playerid][cStereo]= 0;
		        CarInfo[playerid][cHydraulics]= 0;
		        CarInfo[playerid][cBullbar]= 0;
		        CarInfo[playerid][cRearBullbars]= 0;
		        CarInfo[playerid][cFrontSign]= 0;
		        CarInfo[playerid][cFrontBullbars]= 0;
		        CarInfo[playerid][cFrontBumper]= 0;
		        CarInfo[playerid][cRearBumper]= 0;
		        CarInfo[playerid][cVents]= 0;
		        CarInfo[playerid][cPaintJob]= -1;
		        SavePlayerCar(playerid);
		        RespawnPlayerCar(playerid);
		        DeletePVar(playerid, "D_Carid");
				GivePVarInt(playerid, "DonateMoney", -300);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Вы успешно заменили свой личный автомобиль !","Ок","");
             
			}
			else ShowDonateDialog(playerid, 11);
		}
		case 128:
		{
		    if(response)
			{
		        if(GetPVarInt(playerid,"CarKey") != 0)
				{
				    new car = strval(inputtext);
				    if(!IsAValidDonateCarid3(car)) return ShowDonateDialog(playerid, 12);
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите заменить свой личный автомобиль {34c924}%s[%d] {ffffff}на {34c924}%s[%d] {ffffff}?\n\n\
					Стоимость услуги: {34c924}400 Donate Money", VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cModel], VehiclesName[car-400], car);
					ShowPlayerDialog(playerid,129,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
					SetPVarInt(playerid, "D_Carid",car);
				}
				else ShowDonateDialog(playerid, 8), SendClientMessage(playerid, COLOR_GREY, "У Вас нет личного автомобиля");
			}
			else ShowDonateDialog(playerid, 8);
		}
		case 129:
		{
		    if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < 400)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 400 Donate Money для смены личного автомобиля");
			        ShowDonateDialog(playerid, 8);
			        return 1;
				}
				new Float:posx, Float:posy, Float:posz, Float:ang;
				GetVehiclePos(CarInfo[playerid][cMaincar], posx, posy, posz);
				GetVehicleZAngle(CarInfo[playerid][cMaincar], ang);
				CarInfo[playerid][carX] = posx;
				CarInfo[playerid][carY] = posy;
				CarInfo[playerid][carZ] = posz;
				CarInfo[playerid][carA] = ang;

				CarInfo[playerid][cModel] = GetPVarInt(playerid, "D_Carid");
				CarInfo[playerid][cSpoiler]= 0;
		  		CarInfo[playerid][cHood]= 0;
		        CarInfo[playerid][cSideskirt]= 0;
		        CarInfo[playerid][cNitro]= 0;
		        CarInfo[playerid][cLamps]= 0;
		        CarInfo[playerid][cExhaust]= 0;
		        CarInfo[playerid][cWheels]= 0;
		        CarInfo[playerid][cRoof]= 0;
		        CarInfo[playerid][cStereo]= 0;
		        CarInfo[playerid][cHydraulics]= 0;
		        CarInfo[playerid][cBullbar]= 0;
		        CarInfo[playerid][cRearBullbars]= 0;
		        CarInfo[playerid][cFrontSign]= 0;
		        CarInfo[playerid][cFrontBullbars]= 0;
		        CarInfo[playerid][cFrontBumper]= 0;
		        CarInfo[playerid][cRearBumper]= 0;
		        CarInfo[playerid][cVents]= 0;
		        CarInfo[playerid][cPaintJob]= -1;
		        SavePlayerCar(playerid);
		        RespawnPlayerCar(playerid);
		        DeletePVar(playerid, "D_Carid");
				GivePVarInt(playerid, "DonateMoney", -400);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Вы успешно заменили свой личный автомобиль !","Ок","");
               
			}
			else ShowDonateDialog(playerid, 12);
		}
  		case 130:
		{
		    if(response)
			{
		        if(GetPVarInt(playerid,"CarKey") != 0)
				{
				    new car = strval(inputtext);
				    if(!IsAValidDonateCarid4(car)) return ShowDonateDialog(playerid, 13);
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите заменить свой личный автомобиль {34c924}%s[%d] {ffffff}на {34c924}%s[%d] {ffffff}?\n\n\
					Стоимость услуги: {34c924}500 Donate Money", VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cModel], VehiclesName[car-400], car);
					ShowPlayerDialog(playerid,131,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
					SetPVarInt(playerid, "D_Carid",car);
				}
				else ShowDonateDialog(playerid, 8), SendClientMessage(playerid, COLOR_GREY, "У Вас нет личного автомобиля");
			}
			else ShowDonateDialog(playerid, 8);
		}
		case 131:
		{
		    if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < 500)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас нет 500 Donate Money для смены личного автомобиля");
			        ShowDonateDialog(playerid, 8);
			        return 1;
				}
				new Float:posx, Float:posy, Float:posz, Float:ang;
				GetVehiclePos(CarInfo[playerid][cMaincar], posx, posy, posz);
				GetVehicleZAngle(CarInfo[playerid][cMaincar], ang);
				CarInfo[playerid][carX] = posx;
				CarInfo[playerid][carY] = posy;
				CarInfo[playerid][carZ] = posz;
				CarInfo[playerid][carA] = ang;

				CarInfo[playerid][cModel] = GetPVarInt(playerid, "D_Carid");
				CarInfo[playerid][cSpoiler]= 0;
		  		CarInfo[playerid][cHood]= 0;
		        CarInfo[playerid][cSideskirt]= 0;
		        CarInfo[playerid][cNitro]= 0;
		        CarInfo[playerid][cLamps]= 0;
		        CarInfo[playerid][cExhaust]= 0;
		        CarInfo[playerid][cWheels]= 0;
		        CarInfo[playerid][cRoof]= 0;
		        CarInfo[playerid][cStereo]= 0;
		        CarInfo[playerid][cHydraulics]= 0;
		        CarInfo[playerid][cBullbar]= 0;
		        CarInfo[playerid][cRearBullbars]= 0;
		        CarInfo[playerid][cFrontSign]= 0;
		        CarInfo[playerid][cFrontBullbars]= 0;
		        CarInfo[playerid][cFrontBumper]= 0;
		        CarInfo[playerid][cRearBumper]= 0;
		        CarInfo[playerid][cVents]= 0;
		        CarInfo[playerid][cPaintJob]= -1;
		        SavePlayerCar(playerid);
		        RespawnPlayerCar(playerid);
		        DeletePVar(playerid, "D_Carid");
				GivePVarInt(playerid, "DonateMoney", -500);
				MySQL_UpdateInt(playerid,"DonateMoney");
				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Вы успешно заменили свой личный автомобиль !","Ок","");
              
			}
			else ShowDonateDialog(playerid, 13);
		}
		case 132:
		{
			if(response)
			{
			    if(GetPlayerInterior(playerid) != 0) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"\t          Вы сейчас находитесь в здании.\nВыйдите из интерьера на улицу и повторите попытку","Ок","");

   				switch(strval(inputtext))
				{
					case 404: SetPVarInt(playerid, "Buy_D_Car", 404), SetPVarInt(playerid, "Price_D_Car", 300);
					case 410: SetPVarInt(playerid, "Buy_D_Car", 410), SetPVarInt(playerid, "Price_D_Car", 300);
					case 467: SetPVarInt(playerid, "Buy_D_Car", 467), SetPVarInt(playerid, "Price_D_Car", 350);
					case 496: SetPVarInt(playerid, "Buy_D_Car", 496), SetPVarInt(playerid, "Price_D_Car", 400);
					default: return ShowDonateDialog(playerid, 19);
				}
				format(string, sizeof(string), "{ffffff}Вы уверены, что хотите купить {34c924}%s[%d] {ffffff}за {34c924}%d DonateMoney?", VehiclesName[GetPVarInt(playerid, "Buy_D_Car")-400], GetPVarInt(playerid, "Buy_D_Car"), GetPVarInt(playerid, "Price_D_Car"));
                ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate", string,"Купить","Отмена");
			}
			else ShowDonateDialog(playerid, 7);
			return 1;
		}
		
		case 133:
		{
			if(response)
			{
			    new carmodel = GetPVarInt(playerid, "Buy_D_Car");
			    new carprice = GetPVarInt(playerid, "Price_D_Car");
			    
			    DeletePVar(playerid, "Buy_D_Car");
			    DeletePVar(playerid, "Price_D_Car");
			    
			    if(GetPVarInt(playerid, "DonateMoney") < carprice) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно DonateMoney для совершения покупки");
			    if(GetPVarInt(playerid, "CarKey") != 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть автомобиль");
			    
			    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_GREEN"Поздравляем с приобретением автомобиля !","Ок","");

				new Float:pos[4];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				GetPlayerFacingAngle(playerid, pos[3]);
				CreatePlayerCar(playerid, carmodel, pos[0], pos[1], pos[2], pos[3]);
				GivePVarInt(playerid, "DonateMoney", -carprice);
				MySQL_UpdateInt(playerid,"DonateMoney");
				
			}
			else
			{
			    DeletePVar(playerid, "Buy_D_Car");
			    DeletePVar(playerid, "Price_D_Car");
			    ShowDonateDialog(playerid, 7);
			    SendClientMessage(playerid, COLOR_GREY, "Вы отменили покупку");
			}
			return 1;
		}
		case 135:
		{
		    if(response)
		    {
				new i = GetPVarInt(playerid, "HEnter");
				
				if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
			    	SetPlayerInterior(playerid,HouseInfo[i][hInt]);
					SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
					oSetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
					GameTextForPlayer(playerid, "~w~Welcome", 3000, 1);
					SetPVarInt(playerid, "Local", i+1000);
				}
		    }
			DeletePVar(playerid, "HEnter");
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
		    return 1;
		}
		case 136:
		{
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
		    return 1;
		}
		case 137:
		{
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
			new i = GetPVarInt(playerid, "BEnter");
   			DeletePVar(playerid, "BEnter");
		    if(response)
		    {

				if(!IsACop(playerid) && i == 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский");

				if(GetPVarInt(playerid,"Bizz") == i || GetPlayerPCash(playerid) >= BizzInfo[i][bEntranceCost])
				{
					if(GetPVarInt(playerid,"Bizz") != i)
					{
						if(BizzInfo[i][bLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Дверь закрыта");
						if(GetPlayerPCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						if(BizzInfo[i][bProducts] == 0) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе закончились товары");
						GivePlayerPCash(playerid,-BizzInfo[i][bEntranceCost], "Voshel v biz");
						format(string, sizeof(string), "~r~-$%d~n~~w~For exit type~n~/exit", BizzInfo[i][bEntranceCost]);
						GiveBizMoney(i, BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bProducts]--;
						SaveBizz(i);
						GameTextForPlayer(playerid, string, 5000, 3);
					}
					SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
					SetPlayerVirtualWorld(playerid,BizzInfo[i][bWorld]);
					oSetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
					SetPVarInt(playerid, "Local", i+99);
				}
				else GameTextForPlayer(playerid, "~r~Too far from a business‚", 5000, 1);
		    }
		    return 1;
		}
		case 138:
		{
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
  			if(response)
		    {
		        new i = GetPVarInt(playerid, "sBEnter");
		        DeletePVar(playerid, "sBEnter");

				if(GetPVarInt(playerid,"Bizz") == i || GetPlayerPCash(playerid) >= SBizzInfo[i][sbEntranceCost])
				{
					if(GetPVarInt(playerid,"Bizz") != i)
					{
						if(SBizzInfo[i][sbLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Дверь закрыта");
						if(GetPlayerPCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						if(SBizzInfo[i][sbProducts] == 0) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе закончились товары");

						if(i == 10)
						{
						    PaintballPlayers ++;
						    PlayerPaintballing[playerid] = 1;
						    new rand = random(sizeof(PaintballSpawns));
							oSetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
						}
						else if(i == 11)
						{
						    SetPVarInt(playerid, "KartingAllowed",1);
						    SendClientMessage(playerid, COLOR_WHITE, "Картинг оплачен");
						}
						else return 1;

						GivePlayerPCash(playerid,-SBizzInfo[i][sbEntranceCost], "Sbizz enter cost");
						gSpentCash[playerid] = GetPlayerPCash(playerid);
						SBizzInfo[i][sbProducts]--;
						GiveSBizMoney(i, SBizzInfo[i][sbEntranceCost]);
						SaveSBizz(i);
					}
				}
				else GameTextForPlayer(playerid, "~r~ Too far from a business", 5000, 1);
			}
			return 1;
		}
		case 139:
		{
  			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
  			if(response)
		    {
		        new world = GetPlayerVirtualWorld(playerid);
				for(new i = 0; i <  sizeof(BizzInfo); i++)
				{
					if (IsPlayerInRangeOfPoint(playerid, 3.0, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && (world == BizzInfo[i][bWorld]))
					{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid, 0);
						oSetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
						DeletePVar(playerid, "Local");
						break;
					}
				}
			}
			return 1;
		}

		case 150:
		{
			if(response)
			{
			    switch(listitem)
			    {
					case 0: OnPlayerCommandText(playerid, "/leaders");
					case 1: OnPlayerCommandText(playerid, "/licenzers");
					case 2: OnPlayerCommandText(playerid, "/lawyers");
					case 3: OnPlayerCommandText(playerid, "/helpers");
					case 4:
					{
					
						SendClientMessage(playerid, COLOR_GREY, "Репортеры онлайн:");
						for(new i; i < MAX_PLAYERS; i++)
						{
		    				if(!IsPlayerConnected(i)) continue;
		    				if(GetPVarInt(i, "Team") != 9) continue;

							GetPlayerName(i, sendername, 24);


							if(AFKText[i] < 4) format(string, sizeof(string), "%s[%d]; Тел: "RGB_GREEN"%d;", sendername, i, GetPVarInt(i, "PhoneNumber"));
							else format(string, sizeof(string), "%s[%d]; "RGB_WHITE"Тел: "RGB_GREEN"%d; {bbbbbb}AFK [%d секунд]", sendername, i, GetPVarInt(i, "PhoneNumber"), AFKText[i]-4);

							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					    return 1;
					}
					case 5: OnPlayerCommandText(playerid, "/members");
				}
			}
			return 1;
		}
		case 151:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid, COLOR_GREY, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
					case 0: SetPlayerCheckpoint(playerid, 2820.218994,   -1469.633300,   16.256765, 5.0);
					case 1: SetPlayerCheckpoint(playerid,-1813.267700,    1287.156494,   15.007045, 5.0);
					case 2: SetPlayerCheckpoint(playerid,1970.760009,    1757.164550,   12.645386, 5.0);
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 152:
		{
	        SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			if(response)
			{
			    if(GetPVarInt(playerid, "Team") != 0) return SendClientMessage(playerid, COLOR_GREY, "Работа доступна только простым гражданам");
				SetPVarInt(playerid, "OnPizzaDuty", 1); // для того чтобы сесть на мопед
				SetPVarInt(playerid, "CoursePizza", 0); // какой щас чекпоинт должен быть
				SetPVarInt(playerid, "Marshrut", random(3)+1); // рандом
				SetPlayerSkinEx(playerid, 155);
				SendClientMessage(playerid, COLOR_GREEN, "Возьмите свободный скутер для развозки пиццы и следуйте по красным маркерам");
			}
			else
			{
				if(GetPVarInt(playerid, "OnPizzaDuty") != 1) return SendClientMessage(playerid, COLOR_GREY, "Рабочий день не начат");
			    DeletePVar(playerid, "GetMoney");
			    DeletePVar(playerid, "OnPizzaDuty");
				DeletePVar(playerid, "CoursePizza");
				DeletePVar(playerid, "Marshrut");
				ReplaceSkin(playerid);
			}
			return 1;
		}
		
		case 153:
		{
			SetTimerEx("SetOrder", 2000, false, "i", playerid);
			if(response)
			{
		   		if (GetPlayerPCash(playerid) < 700) return SendClientMessage(playerid, COLOR_GREY, "Регистрация стоит $700");
                if (PaintOpenReg == false) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта");


				SendClientMessage(playerid, COLOR_GREEN, "Вы были записаны на пейнтболл");
				SendClientMessage(playerid, COLOR_GREEN, "Внимание! Не выходите из здания регистрации до начала пейнтболла, иначе Вы будете сняты");

				GivePlayerPCash(playerid, -700, "Zapis na peint");
				PeintMoney += 700;

				SetPlayerHealthUAC(playerid, 100.0);
				for(new i; i < sizeof(PaintList); i ++)
				{
				    if(PaintList[i][PlayerID] == -1)
				    {
				        SetPVarInt(playerid, "OnPaint", i); // номер ячейки
				        SetPVarInt(playerid, "RegOnPaint", 1); // зареган на пейнт

						new str[100];
						format(str, sizeof(str), "%s зарегистрировался на пейнтболл под номером #%d", GetName(playerid), i+1);
						ProxDetector(20.0, playerid, str, COLOR_PURPLE, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						PaintList[i][PlayerID] = playerid;

						GetPlayerName(playerid, str, 24);
						strmid(PaintList[i][Killername], str, 0, strlen(str), 255);

						if(i == 14)
						{
							StartPeintBall();
							KillTimer(PeintTimer);
							SendClientMessageToAll(COLOR_INFO, "Пейнтболл начался досрочно! Окончание матча через 10 минут");
						}
				        break;
					}
				}

			}
			return 1;
		}
		case 154:
		{
		    if(GetPVarInt(playerid,"Logged") == 0) return 1;
		    if(response)
		    {
		    	new RandPass = 1000+random(8000);
			    SetPVarInt(playerid, "ChangePass", RandPass);

  				new mail[42];
				GetPVarString(playerid, "Mail", mail, sizeof(mail));

			    new str[256];
			    format(str, 256, "Код подтверждения для смены пароля:  %d", RandPass);
			    SendMail(mail, "CrimeStreets", "CrimeStreets", "Game account", str );

			    printf("Pass(change): %d", RandPass);

		        ShowPlayerDialog(playerid, 155, DIALOG_STYLE_INPUT, RGB_SERVER"Смена пароля",  "{bbbbbb}На Ваш E-Mail выслан код подтверждения, введите этот код в окно:\nЧтобы свернуть игру используйте Alt+Tab", "Далее", "Отмена");
			}
		    else
			{
			    ShowMainMenu(playerid);
				DeletePVar(playerid, "WrongPass");
			}
		    return 1;
		}
		case 155:
		{
		    if(GetPVarInt(playerid,"Logged") == 0) return 1;
		    if(response)
		    {
				if(strval(inputtext) != GetPVarInt(playerid, "ChangePass") || (strlen(inputtext) < 1 || strlen(inputtext) > 6))
				{
				    GivePVarInt(playerid, "WrongPass", 1);
				    if(GetPVarInt(playerid, "WrongPass") > 3)
				    {
				        SendClientMessage(playerid, COLOR_RED, "Вы превысили число неудачных попыток ввода");
						Kick_(playerid);
				        return 1;
				    }
					return ShowPlayerDialog(playerid, 155, DIALOG_STYLE_INPUT, RGB_SERVER"Смена пароля",  "{bbbbbb}Вы ввели неверный код. Повторите попытку:", "Далее", "Отмена");
				}

				ShowPlayerDialog(playerid, 156, DIALOG_STYLE_INPUT, RGB_SERVER"Смена пароля",  "{bbbbbb}Введите новый пароль для входа в аккаунт\n\n"RGB_RED"Внимание! Пароль должен содержать только\nцифры (0-9) и буквы латинского алфавита (a-z)\nДлина пароля от 4 до 16 символов", "Далее", "Отмена");
		    }
		    else
		    {
		        ShowMainMenu(playerid);
				DeletePVar(playerid, "ChangePass");
				DeletePVar(playerid, "WrongPass");
		    }
			return 1;
		}
		case 156:
		{
		    if(GetPVarInt(playerid,"Logged") == 0) return 1;
		    DeletePVar(playerid, "WrongPass");
		    if(response)
		    {
		        if(strlen(inputtext) < 4 || strlen(inputtext) > 16)
		        {
		            return ShowPlayerDialog(playerid, 156, DIALOG_STYLE_INPUT, RGB_SERVER"Смена пароля",  "{bbbbbb}Введите новый пароль для входа в аккаунт\n\n"RGB_RED"Внимание! Пароль должен содержать только\nцифры (0-9) и буквы латинского алфавита (a-z)\nДлина пароля от 4 до 16 символов", "Далее", "Отмена");
		        }
				for(new i; i < strlen(inputtext); i++)
				{
				    switch(inputtext[i])
				    {
				        case 'a'..'z', 'A'..'Z', '0'..'9': {}
				        default: return ShowPlayerDialog(playerid, 156, DIALOG_STYLE_INPUT, RGB_SERVER"Смена пароля",  "{bbbbbb}Введите новый пароль для входа в аккаунт\n\n"RGB_RED"Внимание! Пароль должен содержать только\nцифры (0-9) и буквы латинского алфавита (a-z)\nДлина пароля от 4 до 12 символов", "Далее", "Отмена");
			        }
				}
		        SetPVarString(playerid, "Password", inputtext);
		        MySQL_UpdateString(playerid, "Password");

		        format(string, sizeof(string), "Внимание! Ваш новый пароль (%s), под старым паролем Вы больше не сможете войти!", inputtext);
		        SendClientMessage(playerid, COLOR_YELLOW, string);
		        SendClientMessage(playerid, COLOR_WHITE, "Обязательно сделайте скриншот с этим сообщением клавишей F8");
		        SendClientMessage(playerid, COLOR_WHITE, "Информация о смене пароля выслана на Ваш E-Mail");

		        new mail[42];
				GetPVarString(playerid, "Mail", mail, sizeof(mail));

				new name[24];
				GetPlayerName(playerid, name, sizeof(name));

			    new str[256];
			    format(str, 256, "Вы сменили пароль от аккаунта\n\nАккаунт: «%s»\nНовый пароль: «%s»", name, inputtext );

			    SendMail(mail, "CrimeStreets", "CrimeStreets", "Game account", str );
			}
			else
			{
			    ShowMainMenu(playerid);
				DeletePVar(playerid, "ChangeMailPass");
				DeletePVar(playerid, "ChangePass");
				DeletePVar(playerid, "WrongPass");
			}
			return 1;
		}
		case 161:
		{
		    SetTimerEx("SetOrder", 5000, 0, "d", playerid);
			if(response)
			{
			    if(GetPVarInt(playerid, "FuelTrucker") == 0)
			    {
				    SetPlayerSkinEx(playerid, 144);
				    SetPVarInt(playerid, "FuelTrucker", 1);

				    gPlayerCheckpointStatus[playerid] = CHECKPOINT_LOADFUEL;
				    SetPlayerCheckpoint(playerid, -1033.381835,-625.379089,32.007812 , 10.0);

	                SendClientMessage(playerid, COLOR_WHITE, "  ");
				    SendClientMessage(playerid, COLOR_GREEN, "Возьмите грузовик и цистерну для развоза топлива");
				    SendClientMessage(playerid, COLOR_GREEN, "Место покупки топливо показано у Вас на радаре красной меткой");
				    SendClientMessage(playerid, COLOR_GREEN, "Чтобы закончить работу, встаньте снова на пикап и нажмите 'Завершить'");
				    SendClientMessage(playerid, COLOR_WHITE, "  ");
			    }
				else
				{
			        gPlayerCheckpointStatus[playerid] = 0;
				    ReplaceSkin(playerid);
				    DeletePVar(playerid, "FuelTrucker");
				    DisablePlayerCheckpoint(playerid);
				}
			}
			return 1;
		}
		case 162:
		{
			if(response)
			{
			    new litters = strval(inputtext);
			    if(litters < 1)
			    {
                    SendClientMessage(playerid, COLOR_GREEN, "Вы не можете купить менее 1 литра");
					format(string, sizeof(string), RGB_WHITE"Сколько топлива хотите заправить?\nСтоимость топлива: $%d / литр", SBizzInfo[3][sbEntranceCost]);
			        return ShowPlayerDialog(playerid, 162, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка топлива",  string, "Готово", "Отмена");
			    }

			    if(SBizzInfo[3][sbProducts] < litters)
			    {
			        SendClientMessage(playerid, COLOR_GREEN, "На заводе нет столько топлива");
					format(string, sizeof(string), RGB_WHITE"Сколько топлива хотите заправить?\nСтоимость топлива: $%d / литр", SBizzInfo[3][sbEntranceCost]);
			        return ShowPlayerDialog(playerid, 162, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка топлива",  string, "Готово", "Отмена");
			    }
			    
                new fuelprice = litters * SBizzInfo[3][sbEntranceCost];
			    if(fuelprice > GetPlayerPCash(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREEN, "У Вас не хватает денег");
					format(string, sizeof(string), RGB_WHITE"Сколько топлива хотите заправить?\nСтоимость топлива: $%d / литр", SBizzInfo[3][sbEntranceCost]);
			        return ShowPlayerDialog(playerid, 162, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка топлива",  string, "Готово", "Отмена");
			    }

				new car = GetPlayerVehicleID(playerid);

		        if(!IsFuelTruck(car)) return SendClientMessage(playerid, COLOR_GREEN, "Вам нужен грузовик для развозки топлива");

				if(!IsTrailerAttachedToVehicle(car)) return SendClientMessage(playerid, COLOR_GREEN, "У Вас нет цистерны");

				new trailer = GetTrail(GetVehicleTrailer(car));

				if(trailer == -1) return SendClientMessage(playerid, COLOR_GREEN, "Нужна цистерна для развоза топлива");

				if((litters + BenzCar[trailer][Benz]) > 2000)
			    {
			        SendClientMessage(playerid, COLOR_GREEN, "В цистерну не поместится столько топлива");
					format(string, sizeof(string), RGB_WHITE"Сколько топлива хотите заправить?\nСтоимость топлива: $%d / литр", SBizzInfo[3][sbEntranceCost]);
			        return ShowPlayerDialog(playerid, 162, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка топлива",  string, "Готово", "Отмена");
			    }
			    
				BenzCar[trailer][Benz] += litters;
                SBizzInfo[3][sbProducts] -= litters;
                
				GivePlayerPCash(playerid, -fuelprice, "Zakypil benzin");
				GiveSBizMoney(3, fuelprice);


				format(string, sizeof(string), "[Бензин]\n%d / 2000", BenzCar[trailer][Benz]);
				Update3DTextLabelText(BenzCar[trailer][BenfInfo], 0xFFFF00FF, string);

				format(string, 24, "~r~-$%d", fuelprice);
				GameTextForPlayer(playerid, string, 3500, 1);

				SendClientMessage(playerid, COLOR_WHITE, "Чтобы продать топливо, используйте "RGB_BLUE"/sellfuel"RGB_WHITE" на заправке");
			}
			return 1;
		}
		case 163:
		{
			if(response)
			{
				switch(strval(inputtext))
				{
					case 1: ShowDonateDialog(playerid, 15);//бар в дом
					case 2: ShowDonateDialog(playerid, 16);//смена места дома
					case 3: ShowDonateDialog(playerid, 17);//смена интерьера
					default: ShowDonateDialog(playerid, 14);
				}
			}
			else ShowDonateDialog(playerid, 0);
		}
		case 164:
		{
			if(response)
			{
				new playername[24],
					house = GetPVarInt(playerid,"House");
				GetPlayerName(playerid, playername, sizeof(playername));
				if(house != -1 && strcmp(playername, HouseInfo[house][hOwner], false) == 0)
				{
					if(GetPVarInt(playerid, "DonateMoney") < 200)
					{
						SendClientMessage(playerid, COLOR_GREY, "У Вас нет 200 Donate Money");
						ShowDonateDialog(playerid, 14);
						return 1;
					}
					if(HouseInfo[house][hBar]) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"В Вашем доме уже установлен бар","Ок","");
					GivePVarInt(playerid, "DonateMoney", -200);
					MySQL_UpdateInt(playerid,"DonateMoney");
					HouseInfo[house][hBar] = 1;
					SaveHouse(house);
					ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","{ffffff}Вы успешно приобрели бар в дом за {34c924} 200 Donate Money","Ок","");
                 
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "У Вас нет дома");
					ShowDonateDialog(playerid, 14);
					return 1;
				}
			}
			else ShowDonateDialog(playerid, 14);

		}
		case 165:
		{
			if(response)
			{
				new playername[24],
					house = GetPVarInt(playerid,"House");
				GetPlayerName(playerid, playername, sizeof(playername));
				if(house != -1 && strcmp(playername, HouseInfo[house][hOwner], false) == 0)
				{
					if(GetPVarInt(playerid, "DonateMoney") < 500)
					{
						SendClientMessage(playerid, COLOR_GREY, "У Вас нет 500 Donate Money");
						ShowDonateDialog(playerid, 14);
						return 1;
					}
					if(GetPVarInt(playerid,"AllowHouseChange")) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"Вы уже приобрели эту возможность.\nИспользуйте /movehouse чтобы переместить свой дом.","Ок","");
					GivePVarInt(playerid, "DonateMoney", -500);
					SetPVarInt(playerid,"AllowHouseChange",1);
					MySQL_UpdateInt(playerid,"AllowHouseChange");
					MySQL_UpdateInt(playerid,"DonateMoney");
					ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","{ffffff}	Вы успешно приобрели возможность переместить свой дом.\n\n\
					Для перемещения дома:\n\
					- Встаньте на то место, куда вы хотите перенести дом\n\
					- Используйте /movehouse","Ок","");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
					ShowDonateDialog(playerid, 14);
					return 1;
				}
			}
			else ShowDonateDialog(playerid, 14);

		}
		case 166:
		{
		    if(response)
			{
			    new playername[24],
				house = GetPVarInt(playerid,"House");
				GetPlayerName(playerid, playername, sizeof(playername));
                if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на улице");
	 			if(!GetPVarInt(playerid, "AllowHouseChange")) return SendClientMessage(playerid, COLOR_GREY, "Сначала приобретите возможность перемещения своего дома (/donate -> Услуги для дома)");
				if(house != -1 && strcmp(playername, HouseInfo[house][hOwner], false) == 0)
				{
			    	for(new i = 0; i < sizeof(HouseInfo); i++)
					{
						if (IsPlayerInRangeOfPoint(playerid, 7.0, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
						{
						    return SendClientMessage(playerid, COLOR_GREY, "Невозможно перенести дом. Слишком близко к другому дому");
						}
					}
					for(new i = 0; i < sizeof(BizzInfo); i++)
					{
						if (IsPlayerInRangeOfPoint(playerid, 30.0, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
						{
						    return SendClientMessage(playerid, COLOR_GREY, "Невозможно перенести дом. Слишком близко к бизнесу");
						}
					}
					for(new i = 0; i < sizeof(SBizzInfo); i++)
					{
						if (IsPlayerInRangeOfPoint(playerid, 30.0, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
						{
						    return SendClientMessage(playerid, COLOR_GREY, "Невозможно перенести дом. Слишком близко к бизнесу");
						}
					}
					
					new Float: pox, Float:poy, Float:poz;
					GetPlayerPos(playerid, pox, poy, poz);
					HouseInfo[house][hEntrancex] = pox;
					HouseInfo[house][hEntrancey] = poy;
					HouseInfo[house][hEntrancez] = poz;
					UpdateHousePickup(house);
					DeletePVar(playerid,"AllowHouseChange");
					MySQL_UpdateInt(playerid,"AllowHouseChange");
					SaveHouse(house);
					SendClientMessage(playerid, COLOR_WHITE, "Ваш дом успешно перенесен");
				}
			}
		}
		case 167:
		{
		    if(response)
			{
			    new curent = GetPVarInt(playerid, "CurrentChangeInt");
			    new price = InteriorsForChange2[curent][1];
			    if(GetPVarInt(playerid, "DonateMoney") < price)
			    {
			        format(string,sizeof(string), "У Вас нет %d Donate Money", price);
			        SendClientMessage(playerid, COLOR_GREY,  string);
			        
			        ShowMenuForPlayer(changeInteriorMenu[0],playerid);
			        return 1;
				}
			    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
				{ffffff}Вы успешно изменили интерьер в своем доме","Ок","");
				GivePVarInt(playerid, "DonateMoney", -price);
				MySQL_UpdateInt(playerid,"DonateMoney");
				new house = GetPVarInt(playerid, "House");
				HouseInfo[house][hExitx] = InteriorsForChange[curent][0];
				HouseInfo[house][hExity] = InteriorsForChange[curent][1];
				HouseInfo[house][hExitz] = InteriorsForChange[curent][2];
				HouseInfo[house][hInt] = InteriorsForChange2[curent][0];
				SaveHouse(house);
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
				oSetPlayerPos(playerid,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]);
				SetPVarInt(playerid, "Local", house+1000);
				DeletePVar(playerid, "CurrentChangeInt");
				
			}
			else ShowMenuForPlayer(changeInteriorMenu[0],playerid);
		}
		
		case 168:
		{
		    SetTimerEx("SetOrder", 3000, false, "i", playerid);
		    if(response)
		    {
				if(GetPVarInt(playerid, "BoatLic") != 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на вождение лодки");
				if(GetPVarInt(playerid, "FishLic") != 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на ловлю рыбы");
				if(GetPlayerPCash(playerid) < SBizzInfo[30][sbEntranceCost])
				{
				    format(string, sizeof(string), "У Вас недостаточно денег, требуется: $%d", SBizzInfo[30][sbEntranceCost]);
					return SendClientMessage(playerid, COLOR_GREY, string);
				}
				if(SBizzInfo[30][sbProducts] < 1) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе нет продуктов");
				SetPVarInt(playerid, "Fisher", 1); // Рыбак
		        SetPlayerSkinEx(playerid, 135);
		        ApplyAnimation(playerid,"POOL","null",0.0,0,0,0,0 ,0);
			 	ApplyAnimation(playerid,"SWORD","null",0.0,0,0,0,0 ,0);
			 	
			 	format(string, sizeof(string), "Возьмите свободную лодку на пристани, стоимость аренды: $%d", SBizzInfo[30][sbEntranceCost]);
		        SendClientMessage(playerid, COLOR_GREEN, string);
		        
		        SendClientMessage(playerid, COLOR_GREEN, "После того, как Вы закончите рыбалку, встаньте на эту иконку, чтобы завершить работу");
            	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
            	
            	new Float:pos[3];
            	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
            	SetPlayerMapIcon(playerid, ICON_JOB, pos[0], pos[1], pos[2], 51, 0, 1 );
			}
			else
			{
			    if(GetPVarInt(playerid, "KgFish") != 0)
			    {
			        format(string, sizeof(string), "У Вас %d килограммов рыбы, Вы можете продать её в Бургершот", GetPVarInt(playerid, "KgFish"));
					SendClientMessage(playerid, COLOR_GREEN, string);
				}
				gPlayerCheckpointStatus[playerid] = 0;
				DisablePlayerRaceCheckpoint(playerid);
				DeletePVar(playerid, "Fisher");
			    DeletePVar(playerid, "PayedForBoat");
			    ReplaceSkin(playerid);
			    RemovePlayerMapIcon(playerid, ICON_JOB);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
			}
		    return 1;
		}
		case 169:
		{
		    SetTimerEx("SetOrder", 3000, false, "i", playerid);
		    if(response)
		    {
		        if(GetPVarInt(playerid, "KgFish") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет рыбы");
		        
		        new sellprice = GetPVarInt(playerid, "KgFish") * SBizzInfo[13][sbPriceProd];
		        new kgfish = GetPVarInt(playerid, "KgFish");

		        
		        if((SBizzInfo[13][sbProducts] + kgfish*2) > SBizzInfo[13][sbMaxProducts]) return SendClientMessage(playerid, COLOR_GREY, "В столовую не требуются продукты");
				if(SBizzInfo[13][sbMoney] < sellprice) return SendClientMessage(playerid, COLOR_GREY, "В бизнесе недостаточно неденг, для покупки Вашей рыбы");

                DeletePVar(playerid, "KgFish");
                
				format(string, sizeof(string), "Вы продали %d рыбы за $%d", kgfish, sellprice);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        GivePlayerPCash(playerid, sellprice, "Prodal riby");
		        GiveSBizMoney(13, -sellprice);
		        SBizzInfo[13][sbProducts] += kgfish*2;
		        
		    }
		    return 1;
		}
		
		case 171:
		{
			if(response)
			{
			    if(GetPVarInt(playerid, "CantUsePolice") > gettime())
			    {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 6);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Вы уже вызывали полицию{000000}\t|", "Ok", "");
				}
				if(strlen(inputtext) < 1 || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 171, DIALOG_STYLE_INPUT, "Укажите преступника",  "{000000}|\t{000000}Укажите ID или часть имени преступника:\t{000000}|", "Далее", "Отмена");
			    new suspect = ReturnUser(inputtext);
			    if(!IsPlayerConnected(suspect))
			    {
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 6);
				   	return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Такого игрока нет в сети\t{000000}|", "Ok", "");
			    }
	    		if (GetPVarInt(suspect,"Jailed"))
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 6);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Этот игрок уже в тюрьме\t{000000}|", "Ok", "");
				}
				if (IsACop(suspect))
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 6);
		  			return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Нельзя дать розыск законнику\t{000000}|", "Ok", "");
				}
				if (WantedLevel[suspect] > 0)
				{
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 6);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Игрок уже в розыске\t{000000}|", "Ok", "");
				}
				SetPVarInt(playerid, "ReportCrimeID", suspect);

				return ShowPlayerDialog(playerid, 172, DIALOG_STYLE_INPUT, RGB_SERVER"Укажите преступление",  "{000000}|\t{bbbbbb}Какое преступление было совершено?\t{000000}|", "Далее", "Отмена");
			}
			else
			{
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid, 6);
			}
			return 1;
		}

		case 172:
		{
		    if(response)
		    {
		    	if(strlen(inputtext) < 3 || strlen(inputtext) > 20) return ShowPlayerDialog(playerid, 172, DIALOG_STYLE_INPUT, RGB_SERVER"Укажите преступление",  "{000000}|\t{bbbbbb}Какое преступление было совершено? (3-20 символов)\t{000000}|", "Далее", "Отмена");

				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid, 6);
				
				new suspect = GetPVarInt(playerid, "ReportCrimeID");
				DeletePVar(playerid, "ReportCrimeID");

	    		if (GetPVarInt(suspect,"Jailed"))  	return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Этот игрок уже в тюрьме\t{000000}|", "Ok", "");
				if (IsACop(suspect))   				return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Нельзя дать розыск законнику\t{000000}|", "Ok", "");
				if (WantedLevel[suspect] > 0) 		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "{000000}|\t{bbbbbb}Игрок уже в розыске\t{000000}|", "Ok", "");


				SetPlayerCriminal(suspect, playerid, inputtext);
				WantedPoints[suspect]++;

				new namep[24];
				GetPlayerName(playerid, namep, 24);
				new names[24];
				GetPlayerName(suspect, names, 24);
				format(string, sizeof(string), "Внимание: Звонок в полицию от %s[%d], \"%s\", нарушитель: %s[%d]", namep, playerid, inputtext, names, suspect);

				for(new i; i < MAX_PLAYERS; i++)
				{
				    if(!IsPlayerConnected(i) || !IsACop(i)) continue;
				    SendClientMessage(i, COLOR_DBLUE, string);
				}

				
				SetPVarInt(playerid, "CantUsePolice", gettime() + 180);
				return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Полиция", "{000000}|\t{bbbbbb}Полиция была оповещена, спасибо за беспокойствие\t{000000}|", "Ok", "");

			}
		    else
		    {
		        DeletePVar(playerid, "ReportCrimeID");
  				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid, 6);
		    }
		    return 1;
		}
		case 175:
		{
			if(response)
			{
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
			    SendClientMessage(playerid,COLOR_WHITE, RGB_BLUE "GPS: " RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    switch(listitem)
			    {
					case 0: SetPlayerCheckpoint(playerid, 2498.423583,-1463.295410,24.027610, 5.0);
					case 1: SetPlayerCheckpoint(playerid, -1823.196533,1282.240966,16.139249, 5.0);
					case 2: SetPlayerCheckpoint(playerid, 2782.384521,1448.922363,10.780518, 5.0);
				}
			}
			else
			{
			    ShowGPS(playerid);
			}
			return 1;
		}
		case 176:
		{
			if(GetPVarInt(playerid,"Logged") == 0) return 1;
			new Forum[64];
			GetPVarString(playerid, "Forum", Forum, 64);
		    if(strcmp(Forum,"no", true ) != 0 ) return 1;

		    if(response)
		    {
		        new name[24];
		        GetPlayerName(playerid, name, sizeof(name));

				for(new i; i < sizeof(name); i++)
				{
					switch(name[i])
					{
					    case '[', ']', '$': return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка при регистрации", 
							RGB_WHITE"Ваш ник содержит запрещенные символы ([, ], $), обратитесь за помощью в /ask", "Ок", "");
					}
				}

		        new str[512];


		        new pass[30];
		        new mail[60];
		        new ip[30];

		        GetPVarString(playerid, "Password", pass, sizeof(pass));
		        GetPVarString(playerid, "Mail", mail, sizeof(mail));
		        GetPlayerIp(playerid, ip, sizeof(ip));


		        format(str, 512, "crime-streets.ru/forum/reg.php?name=%s&password=%s&mail=%s&ip=%s&checkpass=littledick1321", name, pass, mail, ip);
		        HTTP(playerid, 1, str, "", "ResponseReg");
		        print(str);
			}
			else 
			{
			    ShowMainMenu(playerid);
			}
			return 1;
		}
		case 177: // Начало работы (завод)
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
		    {
    			if(GetPVarInt(playerid, "OnPizzaDuty")) return 1;
				
		        SendClientMessage(playerid, COLOR_GREEN, "Пройдите в цех и возьмите заготовку (( Жёлтый маркер ))");
		        SetPVarInt(playerid, "OnFacJob", 1);
		        SetPlayerSkinEx(playerid, 16); // Поставить нужный

				if(GetPVarInt(playerid, "FactorySkill") < 50) SetPVarInt(playerid, "FactorySkill", 50);
				TotalPlayerRun[playerid] = 10;
		    }
		    return 1;
		}
		case 178: // Конец работы (завод)
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
		    {
				if(GetPVarInt(playerid, "FactoryObject") != 0) DestroyObject(GetPVarInt(playerid, "FactoryObject")), DeletePVar(playerid, "FactoryObject");

		        ReplaceSkin(playerid);

				new money = (GetPVarInt(playerid, "CountProds") * 60) - (GetPVarInt(playerid, "FailFactory") * 7);

                GivePlayerPCash(playerid, money, "Na zavode");

				format(string, sizeof(string), "~g~$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				format(string, sizeof(string), "Рабочий день окончен, Вы заработали: $%d. Штраф за брак: "RGB_RED"$%d", (GetPVarInt(playerid, "CountProds") * 60), (GetPVarInt(playerid, "FailFactory") * 7));
				SendClientMessage(playerid, COLOR_GREEN, string);


				if(IsPlayerAttachedObjectSlotUsed(playerid, 6))
				{
				    RemovePlayerAttachedObject(playerid, 6);
				}
				if(IsPlayerAttachedObjectSlotUsed(playerid, 5))
				{
				    RemovePlayerAttachedObject(playerid, 5);
				}
				
		        DeletePVar(playerid, "OnFacJob");
		        DeletePVar(playerid, "HaveMat");
		        DeletePVar(playerid, "HaveGoodProd");
		        DeletePVar(playerid, "CountProds");
		        DeletePVar(playerid, "FailFactory");
		    }
		    return 1;
		}
		case 179: // Начало работы (развозка)
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
		    {
		        if(GetPVarInt(playerid, "OnPizzaDuty")) return 1;
		        if(GetPVarInt(playerid,"CarLic") < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет водительских прав");
		        SendClientMessage(playerid, COLOR_GREY, "Возьмите грузовик для доставки продуктов");
		        SetPVarInt(playerid, "OnFacJob", 2);
		        SetPlayerSkinEx(playerid, 258); // Поставить нужный
		        SetPlayerAttachedObject(playerid, 4, 18638, 2, 0.159999, 0.025000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.100000, 1.120000); //Skin 258
		    }
		    return 1;
		}
		case 180: // Конец работы (развозка)
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Вы завершили рабочую смену");
		        DeletePVar(playerid, "OnFacJob");
		        ReplaceSkin(playerid);
				RemovePlayerAttachedObject(playerid, 4);
		    }
		    return 1;
		}
		case 181:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0: // механик 2 лвл
					{
					    if(GetPVarInt(playerid, "Level") < 2) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться механиком необходим 2 уровень"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
						SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу механиком");
					    SetPVarInt(playerid, "Job", 7);
					}
					case 1: // Автобус 2 лвл
					{
						if(GetPVarInt(playerid, "Level") < 2) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться водителем автобуса необходим 2 уровень"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
						SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"• "RGB_WHITE"Вы устроились на работу водителем автобуса");
					    SetPVarInt(playerid, "Job", 14);

					}
					case 2: // Такси 1 лвл
					{
						SendClientMessage(playerid, COLOR_WHITE, " ");
					    SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу таксистом");
					    SetPVarInt(playerid, "Job", 17);
					}
					case 3: // Тренер 3 лвл
					{
						if(GetPVarInt(playerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться тренером необходим 3 уровень"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
					    SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу тренером");
					    SetPVarInt(playerid, "Job", 12);
					}
					case 4: // Детектив 3 лвл
					{
						if(GetPVarInt(playerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться детективом необходим 3 уровень"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
					    SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу детективом");
					    SetPVarInt(playerid, "Job", 1);
					}
					case 5: // Продавец машин 4 лвл
					{
						if(GetPVarInt(playerid, "Level") < 4) return SendClientMessage(playerid, COLOR_WHITE, "Чтобы устроиться продавцом машин необходим 4 уровень"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
					    SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу оформителем");
					    SetPVarInt(playerid, "Job", 10);
					}
					case 6: // Инкассатор 5 лвл
					{
						if(GetPVarInt(playerid, "Level") < 5) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться инкассатором необходим 5 уровень"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
					    SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу инкассатором");
					    SetPVarInt(playerid, "Job", 22);
					}
					case 7: // Адвокат (мэрия)
					{
						if(GetPVarInt(playerid, "Team") != 7) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться адвокатом необходимо состоять в мэрии"), ShowJobsHall(playerid);
						if(GetPVarInt(playerid, "Rank") < 7) return SendClientMessage(playerid, COLOR_GREY, "Чтобы устроиться адвокатом необходимо иметь 7 ранг и выше"), ShowJobsHall(playerid);
                        SendClientMessage(playerid, COLOR_WHITE, " ");
					    SendClientMessage(playerid, COLOR_WHITE, "Вы устроились на работу адвокатом");
					    SetPVarInt(playerid, "Job", 2);
					}
					case 8: // Уволиться
					{
						if(GetPVarInt(playerid, "Job") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не работаете"), ShowJobsHall(playerid);
					    SendClientMessage(playerid, COLOR_WHITE, "Вы уволились с работы");
					    SetPVarInt(playerid, "Job", 0);
					    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
					    return 1;
					}
		        }
		        SendClientMessage(playerid, COLOR_WHITE, "Чтобы посмотреть помощь по работе, введите "RGB_BLUE"/jobhelp");
		    }
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
			return 1;
		}
		case 182:
		{
		    if(response)
		    {
				ShowPlayerDialog(playerid, 183, DIALOG_STYLE_LIST, RGB_SERVER"Выберите маршрут Вашей поездки","Внутригородской LS #1\nВнутригородской LS #2\nМеждугородний LS — SF\nВнутригородской SF","Выбрать","Отмена");
			}
			else
			{
			    removePlayerFromVehicle(playerid);
			}
			return 1;
		}
		case 183:
		{
		    if(response)
		    {
				SetPVarInt(playerid, "BusCourse", listitem);

		        ShowPlayerDialog(playerid, 184, DIALOG_STYLE_INPUT, RGB_SERVER"Аренда автобуса",  RGB_WHITE"Укажите стоимость проезда в Вашем автобусе\nОт $1 до $100", "Далее", "Отмена");
		    }
		    else
		    {
		        removePlayerFromVehicle(playerid);
		    }
			return 1;
		}


		case 184:
		{
		    if(response)
		    {
				if(strval(inputtext) < 1 || strval(inputtext) > 100) return ShowPlayerDialog(playerid, 183, DIALOG_STYLE_INPUT, RGB_SERVER"Аренда автобуса",  "Укажите стоимость проезда в Вашем автобусе\nОт $1 до $100", "Далее", "Отмена");
				if(GetPlayerPCash(playerid) < 200)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "У Вас нет $200 для аренды автобуса");
				}
				new vid = GetPlayerVehicleID(playerid);
				new BusId = GetBusID(vid);

				if(BusId == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автобусе");

				BusInfo[BusId][BusPrice] = strval(inputtext);
				SetPVarInt(playerid, "BubPricePas", strval(inputtext));

				SetPVarInt(playerid, "PlayerBus", BusId);
				new str[128];

				switch(GetPVarInt(playerid, "BusCourse"))
				{
				    case 0: format(str, sizeof(str), RGB_YELLOW"Внутригородской LS #1\n"RGB_WHITE"Проезд:"RGB_YELLOW" $%d", strval(inputtext));
				    case 1: format(str, sizeof(str), RGB_BLUE"Внутригородской LS #2\n"RGB_WHITE"Проезд:"RGB_BLUE" $%d", strval(inputtext));
				    case 2: format(str, sizeof(str), RGB_YELLOW"Междугородний LS — SF\n"RGB_WHITE"Проезд:"RGB_YELLOW" $%d", strval(inputtext));
				    case 3: format(str, sizeof(str), RGB_BLUE"Внутригородской SF\n"RGB_WHITE"Проезд:"RGB_BLUE" $%d", strval(inputtext));
				}
				DutyText[playerid] = Create3DTextLabel(str, 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 1);
				Attach3DTextLabelToVehicle(DutyText[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.5);

				gPlayerCheckpointStatus[playerid] = CHECKPOINT_BUSJOB;

				SetPVarInt(playerid, "TotalCPbus", 0);
				SetPVarInt(playerid, "OnBusJob", 1);

				SetPlayerBusCP(playerid);

				GivePlayerPCash(playerid, -200, "Vzyal avtobys");

				BusInfo[BusId][BusDriver] = playerid;
				
				LockForPlayer[GetPlayerVehicleID(playerid)] = playerid;
				LockedCarP[GetPlayerVehicleID(playerid)] = 1;
			}
		    else
		    {
		        removePlayerFromVehicle(playerid);
		    }
		    return 1;
		}
		case 185:
		{
		    if(response)
		    {
		        if(GetPlayerPCash(playerid) < 240)
		        {
		            removePlayerFromVehicle(playerid);
		            return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег для аренды машины");
		        }
		        ShowPlayerDialog(playerid, 186, DIALOG_STYLE_INPUT, RGB_SERVER"Аренда такси",  RGB_WHITE"Введите стоимость проезда в Вашем такси.\nДанная сумма буде вычитаться у пассажира каждые 30 секунд поездки.\nСумма должна быть от $1 до $50", "Далее", "Отмена");
		    }
		    else
		    {
		        removePlayerFromVehicle(playerid);
			}
			return 1;
		}
		case 186:
		{
		    if(response)
		    {
		        if(strval(inputtext) < 1 || strval(inputtext) > 50) return ShowPlayerDialog(playerid, 186, DIALOG_STYLE_INPUT, RGB_SERVER"Аренда такси",  RGB_WHITE"Введите стоимость проезда в Вашем такси.\nДанная сумма буде вычитаться у пассажира каждые 30 секунд поездки.\nСумма должна быть от $1 до $50", "Далее", "Отмена");
				new vid = GetPlayerVehicleID(playerid);
				if(!IsTaxi(vid)) return 1;

				SetPVarInt(playerid, "TaxiPrice", strval(inputtext));
				SetPVarInt(playerid, "OnTaxiJob", 1);

				new str[128];

				format(str, sizeof(str), RGB_YELLOW"[Такси]\nСтоимость проезда: $%d", strval(inputtext));

				DutyText[playerid] = Create3DTextLabel(str, COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0, 0, 1);
				Attach3DTextLabelToVehicle(DutyText[playerid], vid, 0.0, 0.0, 1.2);

				LockedCarP[vid] = 1;
				LockForPlayer[vid] = playerid;
				
				GivePlayerPCash(playerid, -240, "Vzyal taxi");
				GameTextForPlayer(playerid, "~r~-$240", 4000, 1);
		    }
		    else
		    {
		        removePlayerFromVehicle(playerid);
			}
			return 1;
		}
		

		case 187:
		{
			if(response)
			{
		        globalstr = "";
				strcat(globalstr, RGB_SERVER"1) Общее положение:\n"RGB_WHITE);
				strcat(globalstr, "1.1) Все участники дорожного движения обязаны соблюдать ПДД вне зависимости от своего положения [*].\n");
				strcat(globalstr, "1.2) Каждый участник дорожного движения считается ознакомленным с правилами и понесет наказание за их нарушение.\n\n");

				strcat(globalstr, RGB_SERVER"2) Правила парковки:\n"RGB_WHITE);
				strcat(globalstr, "2.1) Запрещается оставлять свой автомобиль на дороге [**].\n");
				strcat(globalstr, "2.2) Запрещена парковка на тротуарах с заездом 4-я колесами.\n");
				strcat(globalstr, "2.3) Разрешается парковка на обочине дороги или с заездом на тротуар 2-я колесами.\n");
				strcat(globalstr, "2.4) Разрешается парковка на специально отведенных для этого площадках.\n");
				strcat(globalstr, "2.5) Запрещается парковка на базах организаций, если Вы там не состоите и не получали разрешения на парковку.\n\n");

				strcat(globalstr, RGB_SERVER"3) Спец. сигналы:\n"RGB_WHITE);
				strcat(globalstr, "3.1) Правило использовать спец. сигналы имеют только полиция, армия, ФБР, МЧС.\n");
				strcat(globalstr, "3.2) Если Вы увидели автомобиль с включенным спец. сигналом, следует прижаться к обочине, в случае, если автомобиль\n");
				strcat(globalstr, "       не идет на обгон. Если автомобиль идет на обгон, запрещено ему преапятствовать.\n\n");

				strcat(globalstr, RGB_SERVER"4) Обгон:\n"RGB_WHITE);
				strcat(globalstr, "4.1) Обгон разрешен только с левой стороны, в случае, если дорога имеет только 2-е полосы движения.\n");
				strcat(globalstr, "4.2) Запрещается обгон в тунелях, на мостах, равнозначных перекрестках и на Ж/Д путях.\n\n");

				strcat(globalstr, RGB_SERVER"5) Порядок движения:\n"RGB_WHITE);
				strcat(globalstr, "5.1) Все светофоры являются нерегулируемыми. Проезд осуществляется при отсутствии помехи справа.\n");
				strcat(globalstr, "5.2) При приближающимся поезде необходимо остановиться в 10 м. от Ж/Д путей.\n\n");

				strcat(globalstr, RGB_BLUE"[*] От правил могут отступить участники ДД с включенным маячком (полиция, МЧС, ФБР, армия).\n");
				strcat(globalstr, "[**] Разрешено, только в случае, если у Вас заглох двигатель и нет возможности довести машину до обочины.");

				ShowPlayerDialog(playerid, 188, DIALOG_STYLE_MSGBOX, RGB_SERVER"ПДД", globalstr, "Далее", "Отмена");
				globalstr = "";
			}
			else
			{
		 		SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			}
			return 1;
		}

		case 188:
		{
			if(response)
			{
		        globalstr = "";
				strcat(globalstr, RGB_SERVER"1) Управление автомобилем:\n"RGB_WHITE);
				strcat(globalstr, "Для того, чтобы открыть меню управления автомобилем, зажмите "RGB_YELLOW"Левый CTRL"RGB_WHITE" и нажмите одновременно:\n");
				strcat(globalstr, RGB_YELLOW"W"RGB_WHITE"\t—  чтобы завести/заглушить мотор\n");
				strcat(globalstr, RGB_YELLOW"S"RGB_WHITE"\t—  чтобы включить/выключить фары\n");
				strcat(globalstr, RGB_YELLOW"D"RGB_WHITE"\t—  чтобы открыть/закрыть капот\n");
				strcat(globalstr, RGB_YELLOW"A"RGB_WHITE"\t—  чтобы открыть/закрыть багажник\n\n");
				strcat(globalstr, "Индикаторы состояния отображены внизу экрана:\n");
				strcat(globalstr, RGB_RED"E "RGB_YELLOW"||||||||"RGB_GREEN"\tF\t"RGB_RED"Engine"RGB_GREEN"\tLights\t Boot\tBonnet\t Sultan (id: 560)\n\n");

				strcat(globalstr, RGB_RED"E "RGB_YELLOW"||||||||"RGB_GREEN"\tF\t"RGB_WHITE"— Состояние топлива\n");
				strcat(globalstr, RGB_RED"Engine"RGB_WHITE"\t\t— Состояние двигателя\n");
				strcat(globalstr, RGB_GREEN"Lights"RGB_WHITE"\t\t— Состояние фар\n");
				strcat(globalstr, RGB_GREEN"Boot"RGB_WHITE"\t\t— Состояние багажника\n");
				strcat(globalstr, RGB_GREEN"Bonnet"RGB_WHITE"\t\t— Состояние капота\n");
				strcat(globalstr, RGB_GREEN"Sultan (id: 560)"RGB_WHITE"\t— Название и ID автомобиля\n\n\n");

				strcat(globalstr, RGB_YELLOW"2) Заправка:\n"RGB_WHITE);
				strcat(globalstr, "Для того, чтобы заправить автомобиль, подъедьте на АЗС и введите команду /fill\n");
				strcat(globalstr, "Для того, чтобы заполнить канистру, введите команду /get fuel на АЗС\n");
				strcat(globalstr, "Чтобы дозаправить авто из канистры, введите /fillcar");
				ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Управление", globalstr, "Готово", "");
				globalstr = "";
			}
			else
			{
		 		SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			}
			return 1;
		}
		case 189:
		{
			if(response)
			{
			    if(GetPlayerPCash(playerid) < 100)
			    {
			        SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			        return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
			    }
      			ShowPlayerDialog(playerid, 190, DIALOG_STYLE_MSGBOX, RGB_SERVER"Получение прав", RGB_WHITE"Вам будет выдан автомобиль для сдачи теста", "Далее", "");

				if(PlayerSchoolCar[playerid] != 0) DestroyVehicle(PlayerSchoolCar[playerid]);

			    PlayerSchoolCar[playerid] = CreateVehicle(421, -2045.465820, -77.140083, 35.1, 317.785369, CAR_COLOR, CAR_COLOR, -1);
			    SetVehicleVirtualWorld(PlayerSchoolCar[playerid], playerid+1000);
			    Gas[PlayerSchoolCar[playerid]] = 100;
			    
			    SetPlayerVirtualWorld(playerid, playerid+1000);
			}
			else
			{
		 		SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			}
			return 1;
		}
		case 190:
		{
      		SetTimerEx("SetOrder", 2000, 0, "d", playerid);

		    SetPVarInt(playerid, "InCar",  PlayerSchoolCar[playerid]);

		    SetPlayerInterior(playerid, 0);

            HealthChanged[PlayerSchoolCar[playerid]] = true;
		    PutPlayerInVehicleEx(playerid, PlayerSchoolCar[playerid], 0);

   			ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Практическая часть", RGB_WHITE"Проедьте весь маршрут, при этом не повредив машину!\nВ случае удачной сдачи, Вы получите водительские права!", "Начать", "");

			SetPVarInt(playerid, "OnAHTest", 1);

			SetPVarInt(playerid, "CHAutoSchool", 0);
   			SetPlayerRaceCheckpoint(playerid, 0, ASCheckpoints[0][0], ASCheckpoints[0][1], ASCheckpoints[0][2], ASCheckpoints[1][0], ASCheckpoints[1][1], ASCheckpoints[1][2], 5.0);
		    gPlayerCheckpointStatus[playerid] = CHECKPOINT_AUTOSCHOOL;
		    return 1;
		}
		
		case 191:
		{
			if(response)
			{
			    if(GetPVarInt(playerid,"Logged") == 0) return 1;
			    new RandPass = 1000+random(8000);

			    SetPVarInt(playerid, "ChangeMailPass", RandPass);

				new mail[42];
				GetPVarString(playerid, "Mail", mail, sizeof(mail));

			    new str[256];
			    format(str, 256, "Код подтверждения для смены E-Mail:  %d", RandPass);
			    SendMail(mail, "CrimeStreets", "CrimeStreets", "Game account", str );
			    printf("MailPass(change): %d", RandPass);

			    ShowPlayerDialog(playerid, 192, DIALOG_STYLE_INPUT, RGB_SERVER"E-Mail",  RGB_WHITE"На Ваш старый E-Mail был отправлен код подтверждения.\nСверните игру, чтобы проверить почту и скопируйте код в это окно:", "Далее", "Отмена");
			}
			else
			{
			    ShowMainMenu(playerid);
			}
			return 1;
		}

		case 192:
		{
			if(response)
			{
				if(strval(inputtext) != GetPVarInt(playerid, "ChangeMailPass") || (strlen(inputtext) < 1 || strlen(inputtext) > 6))
				{
				    GivePVarInt(playerid, "WrongCheckPass", 1);
				    if(GetPVarInt(playerid, "WrongCheckPass") > 3)
				    {
				        DeletePVar(playerid, "WrongCheckPass");
				        DeletePVar(playerid, "ChangeMailPass");

				        SetPVarInt(playerid, "DelayMailChange", gettime()+86400);
				        MySQL_UpdateInt(playerid, "DelayMailChange");
				        return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка",  RGB_WHITE"Вы превысили допустимый лимит ошибок. Повторить попытку Вы сможете через 1 день.", "Ок", "");
				    }
					return ShowPlayerDialog(playerid, 192, DIALOG_STYLE_INPUT, RGB_SERVER"E-Mail",  RGB_WHITE"Вы ввели неверный пароль. Повторите попытку:", "Далее", "Отмена");
				}
				DeletePVar(playerid, "WrongCheckPass");
				DeletePVar(playerid, "ChangeMailPass");

				ShowPlayerDialog(playerid, 193, DIALOG_STYLE_INPUT, RGB_SERVER"E-Mail",  RGB_WHITE"Введите новый E-Mail. На него будет выслан еще один пароль для проверки", "Далее", "Отмена");
			}
			else
			{
				DeletePVar(playerid, "WrongCheckPass");
				DeletePVar(playerid, "ChangeMailPass");
			}
			return 1;
		}

		case 193:
		{
			if(response)
			{
			    if(GetPVarInt(playerid,"Logged") == 0) return 1;
				new validmail = 0;
				for(new i; i < strlen(inputtext); i ++)
				{
					switch(inputtext[i])
					{
						case 'a'..'z', 'A'..'Z', '0'..'9', ',', '-', '_': {}
						case '@', '.': validmail ++;
						default:
						{
							EnterMail(playerid);
							return SendClientMessage(playerid, COLOR_RED, "Были введены запрещенные символы, используйте: 'A-Z'  '0-9'  '.'  ','  '@'  '-'");
						}
					}
				}
				if(strlen(inputtext) > 40 || strlen(inputtext) < 5)
				{
					EnterMail(playerid);
					return SendClientMessage(playerid, COLOR_RED, "Длина E-Mail адреса может составлять от 5 до 40 символов");
				}
				if(validmail < 2)
				{
					EnterMail(playerid);
					return SendClientMessage(playerid, COLOR_RED, "Укажите правильный E-Mail. Данная процедура требуется для безопасности Вашего аккаунта");
				}
				new name[24];
				GetPlayerName(playerid, name, 24);

				new RandPass = 1000+random(8000);
			    SetPVarInt(playerid, "ChangeMailPass", RandPass);
			    SetPVarString(playerid, "TempMail", inputtext);

			    new str[256];
			    format(str, 256, "С вашего аккаунта был отправлен запрос на смену/подтверждение E-Mail\n\nАккаунт:  %s\nКод подтверждения:  %d", name, RandPass);
			    SendMail(inputtext, "CrimeStreets", "CrimeStreets", "Game account", str );

			    printf("MailPass(confirmation): %d", RandPass);

			    ShowPlayerDialog(playerid, 194, DIALOG_STYLE_INPUT, RGB_SERVER"E-Mail",  RGB_WHITE"Введите код, который был выслан на указанный Вами E-Mail:", "Далее", "Отмена");
			}
			else
			{
			    ShowMainMenu(playerid);
			}
			return 1;
		}

		case 194:
		{
			if(response)
			{
			    if(GetPVarInt(playerid,"Logged") == 0) return 1;
				if(strval(inputtext) != GetPVarInt(playerid, "ChangeMailPass"))
				{
				    GivePVarInt(playerid, "WrongCheckPass", 1);
				    if(GetPVarInt(playerid, "WrongCheckPass") > 3)
				    {
				        DeletePVar(playerid, "WrongCheckPass");
				        DeletePVar(playerid, "ChangeMailPass");
				        DeletePVar(playerid, "TempMail");

				        SetPVarInt(playerid, "DelayMailChange", gettime()+86400);
				        MySQL_UpdateInt(playerid, "DelayMailChange");

				        return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка",  RGB_WHITE"Вы превысили допустимый лимит ошибок. Повторить попытку Вы сможете через 1 день.", "Ок", "");
				    }
					return ShowPlayerDialog(playerid, 194, DIALOG_STYLE_INPUT, RGB_SERVER"E-Mail",  RGB_WHITE"Вы ввели неверный пароль. Повторите попытку:", "Далее", "Отмена");
				}

				new mail[42];
				GetPVarString(playerid, "TempMail", mail, sizeof(mail));

				SetPVarString(playerid, "Mail", mail);
				MySQL_UpdateString(playerid, "Mail");

				new str[256];
				format(str, 256, RGB_WHITE"Вы успешно привязали E-Mail: "RGB_GREEN"%s"RGB_WHITE"\nМенять E-Mail можно каждые 2 недели.", mail);
				ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"E-Mail",  str, "Ок", "");

				SetPVarInt(playerid, "DelayMailChange", gettime()+1209600);
				MySQL_UpdateInt(playerid, "DelayMailChange");
			}
			DeletePVar(playerid, "ChangeMailPass");
			DeletePVar(playerid, "WrongCheckPass");
			DeletePVar(playerid, "TempMail");
			return 1;
		}
		
		case 195:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: // Статистика
		            {
		                SetPVarInt(playerid, "StatsBackMain", 1);
		                ShowStats(playerid, playerid); // if(GetPVarInt(playerid, "StatsBackMain") == 1) То диалог 196
		                return 1;
					}
					case 1: // Чаты
					{
                        ShowSettingsChats(playerid);
					}
		            case 2: // Безопасность
		            {
		                return ShowPlayerDialog(playerid, 197, DIALOG_STYLE_LIST, RGB_SERVER"Безопасность", "1) E-Mail\n2) Смена пароля\n3) Информация", "Далее", "Назад");
		            }
		            case 3: // Администрация
		            {
		                return ShowPlayerDialog(playerid, 198, DIALOG_STYLE_INPUT, RGB_SERVER"Администрация",  "{bbbbbb}Введите свое сообщение администрации сервера:\nОбратите внимание, репорт предназначен только для жалоб на игроков.", "Отправить", "Назад");
		            }
		            case 4: // Задать вопрос
		            {
		            	return ShowPlayerDialog(playerid, 199, DIALOG_STYLE_INPUT, RGB_SERVER"Вопросы по игре",  "{bbbbbb}Задайте свой вопрос, касаемый сервера и игрового режима:", "Отправить", "Назад");
		            }
		            case 5: // Смена ника
		            {
						return ShowNameChangeMenu(playerid);
		            }
		            case 6: // Рега на форуме
		            {
					    if(GetPVarInt(playerid, "Level") < 3)
						{
							return ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на форуме", "{bbbbbb}\
							Регистрация на форуме доступна только для игроков 3 уровня и выше.", "Ок", "");
						}
						
						new Forum[64];
						GetPVarString(playerid, "Forum", Forum, 64);
					    if(strcmp(Forum,"no", true ) == 0 )
						{
							new getMail[64];
							GetPVarString(playerid, "Mail", getMail, 64);
					    	if(strcmp(getMail,"no", true ) == 0 ) return ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на форуме", "{bbbbbb}\
							Для регистрации на форуме укажите свой E-Mail. /menu - Безопасность - E-Mail", "Ок", "");

							RegistrationForum(playerid);
						}
						else
						{
							ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на форуме", "{bbbbbb}\
							С данного аккаунта уже проводилась регистрация на форуме", "Ок", "");
						}
		            }
		            case 7:
					{
						ShowAchievements(playerid);
						return 1;
					}
		            case 8: // Донат
		            {
		                ShowDonateDialog(playerid, 0);
		                return 1;
		            }
					case 9:
					{
					    ShowVipMenu(playerid);
					    return 1;
					}

				}
		    }
			return 1;
		}

		case 196:
		{
			return ShowMainMenu(playerid);
		}

		case 197:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: // Емаил
					{
						new getMail[64];
						GetPVarString(playerid, "Mail", getMail, 64);
					    if(strcmp(getMail,"no", true ) == 0 )
						{
							EnterMail(playerid);
						}
						else
						{
							if(gettime() < GetPVarInt(playerid, "DelayMailChange"))
							{
							    return ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка",  "{bbbbbb}На этом аккаунте уже производилась смена E-Mail.", "Назад", "");
							}
							ShowPlayerDialog(playerid, 191, DIALOG_STYLE_MSGBOX, RGB_SERVER"E-Mail","{bbbbbb}Вы действительно хотите сменить E-Mail?\nВнимание! Менять E-Mail можно не чаще 1 раза в 2 недели!", "Далее", "Назад");
						}
					}
		            case 1: // Смена пароля
		            {
						new getMail[64];
						GetPVarString(playerid, "Mail", getMail, 64);
					    if(strcmp(getMail,"no", true ) == 0 )
						{
							ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена пароля",  "{bbbbbb}Для смены пароля необходимо иметь подтвержденный E-Mail", "Назад", "");
						}
						else
						{
							ShowPlayerDialog(playerid, 154, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена пароля",  "{bbbbbb}Чтобы сменить пароль, необходимо подтвердить процедуру через E-Mail", "Далее", "Назад");
						}
		            }
		            case 2: // Инфо о безопасности
		            {
						ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Безопасность",  "{bbbbbb}\
						Для безопасности своего аккаунты и для того, чтобы воспользоваться дополнительными\n\
						функциями, такими как: регистрация на форуме, смена пароля и ника; необходимо указать\n\
						свой настоящий E-Mail. Данная процедура не займет много времени, но значительно повысит\n\
						надежность защиты Вашего аккаунта и откроет новые возможности для полноценной игры.", "Ок", "");
		            }
		        }
		    }
		    else
		    {
		        ShowMainMenu(playerid);
		    }
			return 1;
		}

		case 198:
		{
			if(response)
			{
				if(GetPVarInt(playerid,"MuteTime") > gettime())
				{
				    ShowMainMenu(playerid);
				    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
				    return SendClientMessage(playerid, COLOR_MUTE, string);
				}
				
				if(TaimSuppReport[playerid] > gettime())
			 	{
			 	    ShowMainMenu(playerid);
					SendClientMessage(playerid, COLOR_GREY, "Использовать репорт можно раз в 90 секунд");
					return ShowMainMenu(playerid);
			 	}


				if(GetPVarInt(playerid,"Jailed") == 2) return SendClientMessage(playerid, COLOR_GREY, "Недоступно в присоне");
				if(togreport == 0) return SendClientMessage(playerid, COLOR_GREY, "Команда была отключена администратором");

				new d = strlen(inputtext);

				if(d < 1 || d > 60)
				{
				    return ShowPlayerDialog(playerid, 198, DIALOG_STYLE_INPUT, RGB_SERVER"Администрация",  "{bbbbbb}Введите свое сообщение администрации сервера (1-60 символов):\nОбратите внимание, репорт предназначен только для жалоб на игроков.", "Отправить", "Назад");
				}


			 	GetPlayerName(playerid, sendername, sizeof(sendername));

				format(string, sizeof(string), "Жалоба от %s[%d]: %s", sendername, playerid, inputtext);
				ABroadCast(string);

				TaimSuppReport[playerid] = gettime() + 90;

				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Администрация",  "{bbbbbb}Ваше сообщение отправлено администраторам", "Ок", "");
			}
			else
			{
			    ShowMainMenu(playerid);
			}
			return 1;
		}
		case 199:
		{
			if(response)
			{
				if (GetPVarInt(playerid,"HelpMuteTime") > gettime())
				{
				    ShowMainMenu(playerid);
					format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"HelpMuteTime") - gettime());
		   			return SendClientMessage(playerid, COLOR_MUTE, string);
				}
				if (GetPVarInt(playerid,"HelpMute") > gettime())
				{
				    ShowMainMenu(playerid);
					format(string, 256, "Вы сможете повторно задать вопрос через: %d сек.", GetPVarInt(playerid,"HelpMute") - gettime());
		   			return SendClientMessage(playerid, COLOR_GREY, string);
				}
				if (GetPVarInt(playerid,"Helper") > 0)
				{
				    ShowMainMenu(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Для Вас недоступна эта функция");
				}
                if(GetPVarInt(playerid,"Jailed") == 2)
				{
				    ShowMainMenu(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Недоступно в присоне");
				}
				new d = strlen(inputtext);

				if(d < 1 || d > 60)
				{
				    return ShowPlayerDialog(playerid, 199, DIALOG_STYLE_INPUT, RGB_SERVER"Вопросы по игре",  "{bbbbbb}Задайте свой вопрос, касаемый сервера и игрового режима (1-60 символов):", "Отправить", "Назад");
		      	}


			 	GetPlayerName(playerid, sendername, sizeof(sendername));

				SetPVarInt(playerid, "HelpMute", gettime()+60);
				SetPVarInt(playerid, "WaitAns", 3);

				AntiCaps(inputtext);

				format(string, sizeof(string), "Вопрос от %s[%d]: %s", sendername, playerid, inputtext);
				SendHelpersMessage(COLOR_RED, string);

				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Вопросы по игре",  "{bbbbbb}Ваш вопрос отправлен, ждите ответ.\n\nОбратите внимание, всю необходимую информацию\nВы можете получить на форуме.", "Ок", "");
			}
			else
			{
			    ShowMainMenu(playerid);
			}
			return 1;
		}
		case 200:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid,"Logged") == 0) return 1;
		        
		   		new RandPass = 1000+random(8000);
			    SetPVarInt(playerid, "ChangeNamePass", RandPass);

  				new mail[42];
				GetPVarString(playerid, "Mail", mail, sizeof(mail));
				
			    new str[256];
			    format(str, 256, "Код подтверждения для смены ника:  %d", RandPass);
			    SendMail(mail, "CrimeStreets", "CrimeStreets", "Game account", str );

				printf("NameChange(change): %d", RandPass);

				ShowPlayerDialog(playerid, 201, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}На Ваш E-Mail выслан код подтверждения, введите этот код в окно\nЧтобы свернуть игру используйте Alt+Tab", "Далее", "Отмена");

		    }
		    else
		    {
		        ShowMainMenu(playerid);
		    }
		    return 1;
		}

		case 201:
		{
			if(response)
		    {
				if(strval(inputtext) != GetPVarInt(playerid, "ChangeNamePass") || (strlen(inputtext) < 1 || strlen(inputtext) > 6))
				{
		  			GivePVarInt(playerid, "WrongPassName", 1);
			    	if(GetPVarInt(playerid, "WrongPassName") > 3)
				    {
		      			SendClientMessage(playerid, COLOR_RED, "Вы превысили число неудачных попыток ввода");
						Kick_(playerid);
		    			return 1;
		    		}
					return ShowPlayerDialog(playerid, 201, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}Вы ввели неверный код. Повторите попытку:", "Далее", "Отмена");
				}
				new str[256];
				format(str, sizeof(str), "{bbbbbb}Введите желаемый ник в данное окошко, {ff0000}будьте внимательней при вводе ника!\n{bbbbbb}Вы можете сменить свой ник еще "RGB_GREEN"%d{bbbbbb} раз(а)", GetPVarInt(playerid, "AllowNameChange"));
				ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  str, "Сменить", "Отмена");

		    }
		    else
		    {
		        DeletePVar(playerid, "ChangeNamePass");
		        ShowMainMenu(playerid);
		    }
			return 1;
		}

		case 202:
		{
			if(response)
			{
			    if(GetPVarInt(playerid,"Logged") == 0) return 1;
			    if(strlen(inputtext) > 17 || strlen(inputtext) < 4)
			    {
			        return ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}Ник должен содержать от 4 до 17 символов!\nПовторите ввод:", "Сменить", "Отмена");
			    }
			    if(CheckRPname(inputtext) != 1 && GetPVarInt(playerid, "VipLevel") < 3)
			    {
			    	return ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}Ник должен иметь формат Имя_Фамилия, т.к. Ваш VIP уровень ниже 3 (пример ника: John_Taylor)!\nПовторите ввод:", "Сменить", "Отмена");
			    }
			    for(new i; i < strlen(inputtext); i++)
			    {
			        switch(inputtext[i])
			        {
			            case 'a'..'z', 'A'..'Z', '[', ']', '.', '0'..'1', '_': {}
			            default: return ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}Используйте только символы алфавита, цифры, ], _, [.\nПовторите ввод:", "Сменить", "Отмена");
					}
				}
				if(MySQL_Exist_Name(inputtext))
				{
				    GivePVarInt(playerid, "AntiFloodName", 1);
				    if(GetPVarInt(playerid, "AntiFloodName") > 6)
					{
					    SendClientMessage(playerid, COLOR_RED, "Вы были кикнуты с сервера за флуд");
					    Kick_(playerid);
						return 1;
					}
			    	return ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}Данный ник уже кем-то занят, придумайте новый.\nПовторите ввод:", "Сменить", "Отмена");
				}
				
				new othname[24];

    			for(new i; i < MAX_PLAYERS; i++)
			    {
       				if(!IsPlayerConnected(i)) continue;

				    GetPlayerName(i, othname, sizeof(othname));

				    if(strcmp(othname, inputtext, true) == 0)
				    {
						return ShowPlayerDialog(playerid, 202, DIALOG_STYLE_INPUT, RGB_SERVER"Смена ника",  "{bbbbbb}На сервере уже есть игрок с похожим ником!\nПовторите ввод:", "Сменить", "Отмена");
					}
				}
				
				new oldname[24];
				GetPlayerName(playerid, oldname, sizeof(oldname));
				
				SetPlayerName(playerid, inputtext);
				MySQL_Update_Name(playerid);

				new realname[24];
				GetPlayerName(playerid, realname, 24);

				// Обновление на доме
				new key = GetPVarInt(playerid,"House");
				if (key != -1 && strcmp(oldname, HouseInfo[key][hOwner], false) == 0)
				{
					strmid(HouseInfo[key][hOwner], realname, 0, strlen(realname), 255);
					SaveHouse(key);
				}

				// Обновление на тачке
				UpdatePlayerVehicleText(playerid);

				// Обновление на бизе
				new bkey = GetPVarInt(playerid,"Bizz");
				if (bkey != 255)
				{
					if (bkey > 99 && bkey < 999 && strcmp(oldname, SBizzInfo[bkey-100][sbOwner], true) == 0)
					{
						strmid(SBizzInfo[bkey-100][sbOwner], realname, 0, strlen(realname), 255);
						SaveSBizz(bkey-100);
					}
					if (bkey < sizeof(BizzInfo) && strcmp(oldname, BizzInfo[bkey][bOwner], true) == 0)
					{
						strmid(BizzInfo[bkey][bOwner], realname, 0, strlen(realname), 255);
						SaveBizz(bkey);
					}
				}
		/*		for(new i = 0; i < sizeof(SBizzInfo); i++)
				{
					if (strcmp(oldname, SBizzInfo[i][sbExtortion], true) == 0)
					{
						strmid(SBizzInfo[i][sbExtortion], realname, 0, strlen(realname), 255);
						SaveSBizz(i);
					}
				}
				for(new i = 0; i < sizeof(BizzInfo); i++)
				{
					if (strcmp(oldname, BizzInfo[i][bExtortion],   true) == 0)
					{
						strmid(BizzInfo[i][bExtortion],  realname, 0, strlen(realname), 255);
						SaveBizz(i);
					}
				}
*/
				for(new i; i < 20; i++) SendClientMessage(playerid, COLOR_WHITE, " ");

				new st[128];
				format(st, sizeof(st), "Ваш новый ник (%s), Сделайте скриншот клавишей F8", realname);
				SendClientMessage(playerid, COLOR_YELLOW, st);
				SendClientMessage(playerid, COLOR_WHITE, "Информация о смене ника отправлена на E-Mail");

				GivePVarInt(playerid, "AllowNameChange", -1);
			    MySQL_UpdateInt(playerid, "AllowNameChange");

				new mail[42];
				GetPVarString(playerid, "Mail", mail, sizeof(mail));

		  		new str[256];
		    	format(str, 256, "Ваш новый ник:  %s\nПод старым ником в игру Вы больше не войдете!", realname);
			    SendMail(mail, "CrimeStreets", "CrimeStreets", "Game account", str );

       			format(str, sizeof(str), "Crime Streets: %s теперь известен как %s", oldname, realname);
			    SendClientMessageToAll(COLOR_INFO, str);
			    
			}
			else
			{
			    ShowMainMenu(playerid);
			}
			return 1;
		}
		case 203:
		{
			if(response)
			{
				switch(listitem)
				{
					case 0: // оос
					{
					    if(gOoc[playerid] == 0) gOoc[playerid] = 1;
					    else gOoc[playerid] = 0;
					}
					case 1: // новости
					{
					    if(gNews[playerid] == 0) gNews[playerid] = 1;
					    else gNews[playerid] = 0;
					}
					case 2: // /f
					{
					    if(gFam[playerid] == 0) gFam[playerid] = 1;
					    else gFam[playerid] = 0;
					}
					case 3: // Логин и выход игроков
					{
					    if(DClog[playerid] == 0) DClog[playerid] = 1;
					    else DClog[playerid] = 0;
					}
					case 4: // ПМ
					{
					    if(GetPVarInt(playerid, "VipLevel") < 1 && GetPVarInt(playerid,"AdminLevel") < 1 && GetPVarInt(playerid,"Leader") == 0) return ShowPlayerDialog(playerid, 204, DIALOG_STYLE_MSGBOX, RGB_SERVER"Настройки",  "{bbbbbb}Данная опция доступна только для VIP игроков.", "Назад", "");

						if(GetPVarInt(playerid, "TogWhisper") == 0) SetPVarInt(playerid, "TogWhisper", 1);
					    else DeletePVar(playerid, "TogWhisper");
					}
					case 5: // Телефон
					{
					    if(GetPVarInt(playerid, "VipLevel") < 1 && GetPVarInt(playerid,"AdminLevel") < 1 && GetPVarInt(playerid,"Leader") == 0) return ShowPlayerDialog(playerid, 204, DIALOG_STYLE_MSGBOX, RGB_SERVER"Настройки",  "{bbbbbb}Данная опция доступна только для VIP игроков.", "Назад", "");

						if(GetPVarInt(playerid, "TogPhone") == 0) SetPVarInt(playerid, "TogPhone", 1);
					    else DeletePVar(playerid, "TogPhone");
					}
					case 6:
					{
					    if(GetPVarInt(playerid, "Shoot_Sound") == 1) DeletePVar(playerid, "Shoot_Sound");
					    else SetPVarInt(playerid, "Shoot_Sound", 1);
					}
				}
				ShowSettingsChats(playerid);
		    }
		    else
		    {
		    	ShowMainMenu(playerid);
		    }
		    return 1;
		}
		case 204:
		{
		    return ShowSettingsChats(playerid);
		}
		
		#if defined LOCALHOST
		case 205:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "Level") < 5)
				{
				    SetTimerEx("SetOrder", 2000, 0, "d", playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Покупка автомобилей доступна с 5 уровня");
				}
		        if(listitem < 0 || listitem > sizeof(ACarsInfo))
				{
				    SetTimerEx("SetOrder", 2000, 0, "d", playerid);
					return 1;
				}
		        if(GetPlayerPCash(playerid) < ACarsInfo[listitem][ACarPrice])
		        {
				    SetTimerEx("SetOrder", 2000, 0, "d", playerid);
					return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				}
		        if(GetPVarInt(playerid, "CarKey") != 0)
		        {
				    SetTimerEx("SetOrder", 2000, 0, "d", playerid);
				 	return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть автомобиль");
		        }

				new str[256];
				format(str, sizeof(str), RGB_WHITE"Вы действительно хотите купить "RGB_GREEN"%s[%d]"RGB_WHITE" за "RGB_GREEN"$%d"RGB_WHITE"?", ACarsInfo[listitem][ACarName], ACarsInfo[listitem][ACarID], ACarsInfo[listitem][ACarPrice]);
		        ShowPlayerDialog(playerid, 206, DIALOG_STYLE_MSGBOX, RGB_SERVER"Покупка автомобиля", str, "Купить", "Отмена");

		        SetPVarInt(playerid, "Buyed2ServerCar", listitem);
		    }
		    else SetTimerEx("SetOrder", 2000, 0, "d", playerid);
			return 1;
		}
		case 206:
		{
			new carid = GetPVarInt(playerid, "Buyed2ServerCar");
			DeletePVar(playerid, "Buyed2ServerCar");
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
			if(response)
		    {
		        if(GetPVarInt(playerid, "Level") < 5) return SendClientMessage(playerid, COLOR_GREY, "Покупка автомобилей доступна с 5 уровня");
		        if(carid < 0 || carid > sizeof(ACarsInfo)) return 1;

		        if(GetPlayerPCash(playerid) < ACarsInfo[carid][ACarPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		        if(GetPVarInt(playerid, "CarKey") != 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть автомобиль");

				new str[144];
				format(str, sizeof(str), "~r~-$%d", ACarsInfo[carid][ACarPrice]);
				GameTextForPlayer(playerid, str, 6000, 1);

				GivePlayerPCash(playerid, -ACarsInfo[carid][ACarPrice]);
				CreatePlayerCar(playerid, ACarsInfo[carid][ACarID], 2166.494140, 1390.277099, 10.820312, 88.816581);

				SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с покупкой автомобиля");
				
				MySQL_UpdateInt(playerid, "Money");
		    }
		    return 1;
		}
		#endif
		
		case 207: // Начало работы (нефть)
		{
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		 	if(response)
		  	{
		  	    if(SBizzInfo[OIL_COMPANY][sbMoney] < 50000) return SendClientMessage(playerid, COLOR_GREY, "У завода нет денег, чтобы выдавать зарплату");
				if(SBizzInfo[OIL_COMPANY][sbLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Владелец запретил устройство на работу, попробуйте позже");
				SendClientMessage(playerid, COLOR_GREEN, "Сядьте в погрузчик и отвезите бочки на склад");
		  		SetPVarInt(playerid, "OnOilJob", 1);
		    	SetPlayerSkinEx(playerid, 260); // Поставить нужный
		  	}
		   	return 1;
		}
		case 208: // Конец работы (нефть)
		{
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		 	if(response)
		  	{
		    	ReplaceSkin(playerid);

		    	new JobMoney = GetPVarInt(playerid, "OnOilCount") * SBizzInfo[OIL_COMPANY][sbPriceProd];

                GiveSBizMoney(OIL_COMPANY, -JobMoney);
                
				format(string, sizeof(string), "Вы доставили %d бочек с нефтью и заработали $%d", GetPVarInt(playerid, "OnOilCount"), JobMoney);
				SendClientMessage(playerid, COLOR_GREEN, string);

				GivePlayerPCash(playerid, JobMoney, "Dostavil neft");

				DeletePVar(playerid, "OnOilCount");
				DeletePVar(playerid, "OnOilJob");
				DeletePVar(playerid, "AntiCheatJob");

				DisablePlayerRaceCheckpoint(playerid);
		  		gPlayerCheckpointStatus[playerid] = 0;
		  	}
			return 1;
		}
		case 209: // Начало работы по развозке нефти
		{
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		 	if(response)
		  	{
				SendClientMessage(playerid, COLOR_GREEN, "Возьмите грузовик с цистерной и доставьте нефть на завод");
		  		SetPVarInt(playerid, "OnOilJob", 2);
		  		SetPlayerSkinEx(playerid, 258); // Поставить нужный
		        SetPlayerAttachedObject(playerid, 4, 18638, 2, 0.159999, 0.025000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.100000, 1.120000); //Skin 258
		    	SetPlayerMapIcon(playerid, ICON_JOB, 286.640319,1426.077270, 10.585937, 51, 0, 1 );
		  	}
		   	return 1;
		}
		case 210: // Конец работы
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
			{
			    ReplaceSkin(playerid);
			    DeletePVar(playerid, "OnOilJob");
			    DisablePlayerRaceCheckpoint(playerid);
			  	gPlayerCheckpointStatus[playerid] = 0;
			  	RemovePlayerMapIcon(playerid, ICON_JOB);
				RemovePlayerAttachedObject(playerid, 4);
		  	}
			return 1;
		}
		case 212:
		{
			if(response)
		  	{
				new value = strval(inputtext);
				new id = GetVehicleTank(GetPlayerVehicleID(playerid));


				if (id == -1)  return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Вам нужен тягач с прицепом цистерной!", "Ok", "");

				if (value < 1) return ShowPlayerDialog(playerid, 212, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите продать. (Не менее 1 барреля)", "Продать", "Отмена");

		    	if (OilTank[id][gOil] < value) return ShowPlayerDialog(playerid, 212, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите продать. (У Вас нет столько нефти)", "Продать", "Отмена");

				if ((SBizzInfo[3][sbProducts] + value*15) > SBizzInfo[3][sbMaxProducts]) return ShowPlayerDialog(playerid, 212, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите продать. (На завод не требуется столько нефти)", "Продать", "Отмена");

				if (SBizzInfo[3][sbMoney] < SBizzInfo[3][sbPriceProd]*value) return ShowPlayerDialog(playerid, 212, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите продать. (У завода не хватает денег)", "Продать", "Отмена");
				
				if (SBizzInfo[3][sbLocked] == 1) return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Продажа нефти", "\t"RGB_WHITE"Безнес на данный момент не работает!", "Ok", "");
				
		        SBizzInfo[3][sbProducts] += value*3;
		        GiveSBizMoney(3, -SBizzInfo[3][sbPriceProd]*value);

				GivePlayerPCash(playerid, SBizzInfo[3][sbPriceProd]*value, "Prodal neft");

				format(string, sizeof(string), "~g~$%d", SBizzInfo[3][sbPriceProd]*value);
				GameTextForPlayer(playerid, string, 5000, 1);

				OilTank[id][gOil] -= value;

				format(string, sizeof(string), "[Нефть]\n%d / 1000", OilTank[id][gOil]);
				Update3DTextLabelText(OilTank[id][gOilText], 0xFFFF00FF, string);

				format(string, sizeof(string), "[Закупка нефти]\n\nЗакупка нефти: $%d\nПродажа нефти: $%d\nНефть в цистернах: %d\nБензозавод: %d / %d", SBizzInfo[OIL_COMPANY][sbEntranceCost], SBizzInfo[3][sbPriceProd], SBizzInfo[OIL_COMPANY][sbProducts], SBizzInfo[3][sbProducts], SBizzInfo[3][sbMaxProducts]);
				Update3DTextLabelText(buyoil, 0xFFFF00FF, string);
				
				SendClientMessage(playerid, COLOR_GREEN, "Вернитесь на завод и закончите работу, либо закупите еще нефти");
				SendClientMessage(playerid, COLOR_GREEN, "Завод отмечен иконкой на Вашем радаре");

			}
			return 1;
		}
		case 213:
		{
			if(response)
		  	{
				
	    		if(GetPVarInt(playerid, "OnOilJob") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");

				new newcar = GetPlayerVehicleID(playerid);
			    if(!IsOilTruck(newcar))  return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Вам требуется грузовик с цистерной для перевозки нефти", "Ок", "");

		        new Tid = GetVehicleTank(newcar);
				if(Tid == -1)return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Вам требуется грузовик с цистерной для перевозки нефти", "Ок", "");

                new amount = strval(inputtext);
				if(amount < 1 || amount > 1000) return ShowPlayerDialog(playerid, 213, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите закупить. (От 1 до 1000 баррель)", "Купить", "Отмена");

				if(SBizzInfo[OIL_COMPANY][sbProducts] < amount) return ShowPlayerDialog(playerid, 213, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите закупить. (На заводе нет столько нефти)", "Купить", "Отмена");

				new TotalM = SBizzInfo[OIL_COMPANY][sbEntranceCost] * amount;
				if(GetPlayerPCash(playerid) < TotalM) return ShowPlayerDialog(playerid, 213, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите закупить. (У Вас не хватает денег)", "Купить", "Отмена");

				if((amount + OilTank[Tid][gOil]) > 1000) return ShowPlayerDialog(playerid, 213, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка нефти", "\t"RGB_WHITE"Укажите, сколько нефти Вы хотите закупить. (В цистерну не поместится столько нефти)", "Купить", "Отмена");

				OilTank[Tid][gOil] += amount;
				SBizzInfo[OIL_COMPANY][sbProducts] -= amount;
				
				GivePlayerPCash(playerid, - TotalM, "Kypil neft");
				GiveSBizMoney(OIL_COMPANY, TotalM);

				format(string, sizeof(string), "[Нефть]\n%d / 1000", OilTank[Tid][gOil]);
				Update3DTextLabelText(OilTank[Tid][gOilText], 0xFFFF00FF, string);

				format(string, sizeof(string), "~r~-$%d", TotalM);
				GameTextForPlayer(playerid, string, 5000, 1);

				SendClientMessage(playerid, COLOR_GREEN, "Вы закупили нефть, отвезите её на завод");

				gPlayerCheckpointStatus[playerid] = CHECKPOINT_SELLOIL;
				SetPlayerRaceCheckpoint(playerid, 1, -1033.152954,-625.747985,32.007812, 0.0, 0.0, 0.0, 10.0);

				format(string, sizeof(string), "[Закупка нефти]\n\nЗакупка нефти: $%d\nПродажа нефти: $%d\nНефть в цистернах: %d\nБензозавод: %d / %d", SBizzInfo[OIL_COMPANY][sbEntranceCost], SBizzInfo[3][sbPriceProd], SBizzInfo[OIL_COMPANY][sbProducts], SBizzInfo[3][sbProducts], SBizzInfo[3][sbMaxProducts]);
				Update3DTextLabelText(buyoil, 0xFFFF00FF, string);

				if(GetPVarInt(playerid, "BuyOilAH") > gettime())
				{
				    KickCheater(playerid, OILCHEAT2);
				    return 1;
				}
				SetPVarInt(playerid, "SellOilAH", gettime()+60);
			}
			return 1;
		}
		case 214:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowBOptions(playerid, 0); // Название
		            case 1: ShowBOptions(playerid, 1); // Совладелец
		            case 2: ShowBOptions(playerid, 2); // Стоимость входа
		            case 3: ShowBOptions(playerid, 3); // Баланс
		            case 4: ShowBOptions(playerid, 4); // Открыто или закрыто
		            case 5: ShowBOptions(playerid, 5); // Стоимость продуктов
		            case 6: ShowBOptions(playerid, 8); // Стоимость продуктов
		        }
		    }
			return 1;
		}
		case 215:
		{
		    if(response)
		    {


		        new d = strlen(inputtext);
		        if(d > 30 || d < 1)
		        {
		            ShowBOptions(playerid, 0);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Длина названия должна составлять от 1 до 30 символов");
				}

				new id = GetPVarInt(playerid, "Bizz");
				
				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#1)");

				for(new i; i < d; i ++)
				{
				    switch(inputtext[i])
				    {
				        case 'a'..'z', '0'..'9', 'A'..'Z', 'а'..'я', 'А'..'Я', '[', ']', ' ': {}
				        default: inputtext[i] = '#';
					}
				}

				format(string, sizeof(string), "%s", inputtext);

				switch(id)
				{
				    case 0..99:     strmid(BizzInfo[id][bDiscription], string, 0, sizeof(string), 255), SaveBizz(id);
				    case 100..200:  strmid(SBizzInfo[id-100][sbDiscription], string, 0, sizeof(string), 255), SaveSBizz(id-100);
				}

				format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Название бизнеса теперь: "RGB_GREEN"%s", inputtext);
				SendClientMessage(playerid, COLOR_WHITE, string);
				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 216: // Заместитель
		{
		    if(response)
		    {

				new id = GetPVarInt(playerid, "Bizz");

				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#2)");

				new mid;
				switch(listitem)
				{
				    case 0: mid = 5;
				    case 1: mid = 6;
				    case 2: mid = 12;
				    default: mid = 0; // Никого
				}
				switch(id)
				{
				    case 0..99:     BizzInfo[id][bExtortion] = mid, SaveBizz(id);
				    case 100..200:  SBizzInfo[id-100][sbExtortion] = mid, SaveSBizz(id-100);
				}

				if(mid != 0)
				{
					format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Контролирует бизнес: "RGB_GREEN"%s", ReturnBSWName(mid));
					SendClientMessage(playerid, COLOR_WHITE, string);
				}

				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 217: // Стоимость услуг
		{
		    if(response)
		    {

		        new d = strval(inputtext);
		        new id = GetPVarInt(playerid, "Bizz");

				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#3)");

				switch(id)
				{
					case 115..129:
					{
						if(d < 13 || d > 16)
						{
		            		ShowBOptions(playerid, 2);
		            		return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Установите стоимость от $13 до $16");
						}
					}
					case 103:
					{
						if(d < 1 || d > 8)
						{
		            		ShowBOptions(playerid, 2);
		            		return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Установите стоимость от $1 до $8");
						}
					}
					case OIL_COMPANY+100:
					{
						if(d < 1 || d > 7)
						{
		            		ShowBOptions(playerid, 2);
		            		return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Установите стоимость от $1 до $7");
						}
					}
		   			default:
					{
						if(d < 1 || d > 5000)
						{
		            		ShowBOptions(playerid, 2);
		            		return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Установите стоимость от $1 до $5000");
						}
					}
				}


				switch(id)
				{
				    case 0..99:     BizzInfo[id][bEntranceCost] = d, SaveBizz(id);
				    case 100..200:  SBizzInfo[id-100][sbEntranceCost] = d, SaveSBizz(id-100);
				}

				switch(id)
				{
				    case 103, OIL_COMPANY+100:
					{
						format(string, sizeof(string), "[Закупка нефти]\n\nЗакупка нефти: $%d\nПродажа нефти: $%d\nНефть в цистернах: %d\nБензозавод: %d / %d", SBizzInfo[OIL_COMPANY][sbEntranceCost], SBizzInfo[3][sbPriceProd], SBizzInfo[OIL_COMPANY][sbProducts], SBizzInfo[3][sbProducts], SBizzInfo[3][sbMaxProducts]);
						Update3DTextLabelText(buyoil, 0xFFFF00FF, string);
					}
				}
				format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Стоимость услуг установлена на: "RGB_GREEN"$%d", d);
				SendClientMessage(playerid, COLOR_WHITE, string);
				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 218: // Меню - пополнить баланс или снять со счета
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: ShowBOptions(playerid, 6);
				    case 1: ShowBOptions(playerid, 7);
				}
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 219: // Стоимость закупки продов
		{
		    if(response)
		    {

		        new d = strval(inputtext);


		        new id = GetPVarInt(playerid, "Bizz");

				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#4)");

				
				switch(id)
				{
					case 115..129:
					{
					 	if(d < 9 || d > 12)
						{
						    ShowBOptions(playerid, 5);
						    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Вы установите закупку от $9 до $12");
						}
					}
				    case OIL_COMPANY+100: // НЕфтезавод зарплата рабочи за бочки
				    {
					 	if(d < 40 || d > 100)
						{
						    ShowBOptions(playerid, 5);
						    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Вы установите зарплату от $40 до $100");
						}
				    }
				    case 103: // бензозавод закупка нефти
				    {
				        if(d < 8 || d > 16)
				        {
				            ShowBOptions(playerid, 5);
				   		 	return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Вы установите закупку от $8 до $16");
						}
				    }
				    default:
				    {
	    				if(d < 6 || d > 100)
			        	{
							ShowBOptions(playerid, 5);
			 				return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Установите стоимость от $6 до $100");
			        	}
					}
				}
				
				
				
				switch(id)
				{
				    case 0..99:     BizzInfo[id][bPriceProd] = d, SaveBizz(id);
				    case 100..200:  SBizzInfo[id-100][sbPriceProd] = d, SaveSBizz(id-100);
				}
				switch(id)
				{
				    case 103, OIL_COMPANY+100:
					{
						format(string, sizeof(string), "[Закупка нефти]\n\nЗакупка нефти: $%d\nПродажа нефти: $%d\nНефть в цистернах: %d\nБензозавод: %d / %d", SBizzInfo[OIL_COMPANY][sbEntranceCost], SBizzInfo[3][sbPriceProd], SBizzInfo[OIL_COMPANY][sbProducts], SBizzInfo[3][sbProducts], SBizzInfo[3][sbMaxProducts]);
						Update3DTextLabelText(buyoil, 0xFFFF00FF, string);
					}
				}
				format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Стоимость закупки установлена на: "RGB_GREEN"$%d", d);
				SendClientMessage(playerid, COLOR_WHITE, string);
				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 220: // Снять деньги
		{
		    if(response)
		    {

		        new d = strval(inputtext);

		        if(d < 1)
		        {
					ShowBOptions(playerid, 6);
		 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Вы не можете снять менее $1");
		        }

		        new id = GetPVarInt(playerid, "Bizz");

				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#5)");

				switch(id)
				{
				    case 0..99:
				    {
				        if(BizzInfo[id][bMoney] < d)
				        {
							ShowBOptions(playerid, 6);
				 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"На балансе бизнеса недостаточно денег");
				        }
					}
		  			default:
				    {
				        if(SBizzInfo[id-100][sbMoney] < d)
				        {
							ShowBOptions(playerid, 6);
				 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"На балансе бизнеса недостаточно денег");
				        }
					}
				}

				switch(id)
				{
				    case 0..99: BizzInfo[id][bMoney] -= d, SaveBizz(id);
					case 100..200: SBizzInfo[id-100][sbMoney] -= d, SaveSBizz(id-100);
				}

				GivePlayerPCash(playerid, d, "Snyal s biza");

				format(string, sizeof(string), "~g~$%d", d);
				GameTextForPlayer(playerid, string, 3000, 1);

				format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Вы сняли с баланса бизнеса: "RGB_GREEN"$%d", d);
				SendClientMessage(playerid, COLOR_WHITE, string);
				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 221:
		{
		    if(response)
		    {

		        new d = strval(inputtext);

		        if(d < 1)
		        {
					ShowBOptions(playerid, 7);
		 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Вы не можете положить менее $1");
		        }
				if(d > GetPlayerPCash(playerid))
				{
					ShowBOptions(playerid, 7);
		 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"У Вас на руках нет столько денег");
				}
		        new id = GetPVarInt(playerid, "Bizz");

				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#6)");

				switch(id)
				{
				    case 0..99:
				    {
				        if((BizzInfo[id][bMoney] + d) > 1000000)
				        {
							ShowBOptions(playerid, 7);
				 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Бизнес не может хранить более $1.000.000");
				        }
					}
		  			default:
				    {
				        if((SBizzInfo[id-100][sbMoney] + d) > 1000000)
				        {
							ShowBOptions(playerid, 7);
				 			return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Бизнес не может хранить более $1.000.000");
				        }
					}
				}

				switch(id)
				{
				    case 0..99: BizzInfo[id][bMoney] += d, SaveBizz(id);
					case 100..200: SBizzInfo[id-100][sbMoney] += d, SaveSBizz(id-100);
				}

				GivePlayerPCash(playerid, -d, "Polizil v biz");

				format(string, sizeof(string), "~r~-$%d", d);
				GameTextForPlayer(playerid, string, 3000, 1);

				format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Вы положили на баланс бизнеса: "RGB_GREEN"$%d", d);
				SendClientMessage(playerid, COLOR_WHITE, string);
				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 222:
		{
            if(response)
            {
                if(GetPVarInt(playerid, "FuelTrucker") != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель бензовоза");

				new veh = GetPlayerVehicleID(playerid);
				if(!IsFuelTruck(veh)) return SendClientMessage(playerid, COLOR_GREEN, "Вам нужен бензовоз!");

				new trailer = GetTrail(GetVehicleTrailer(veh));
				if(trailer == -1) return SendClientMessage(playerid, COLOR_GREEN, "Требуется цистерна с топливом");

				if(BenzCar[trailer][Benz] < 1) return SendClientMessage(playerid, COLOR_GREEN, "Цистерна пустая");

				new FuelStation = GetPlayerGasStation(playerid);
				if(FuelStation == 0) return SendClientMessage(playerid, COLOR_GREEN, "Вы не на заправочной станции");
            
                new value = strval(inputtext);
                
				if(value < 1)
				{
				    ShowGSInfo(playerid, FuelStation);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[АЗС] "RGB_WHITE"Вы не можете продать менее 1 литра топлива");
				}
				if(BenzCar[trailer][Benz] < value)
				{
				    ShowGSInfo(playerid, FuelStation);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[АЗС] "RGB_WHITE"В Вашей цистерне нет столько топлива");
				}
				if((SBizzInfo[FuelStation][sbProducts] + value) > SBizzInfo[FuelStation][sbMaxProducts])
				{
				    ShowGSInfo(playerid, FuelStation);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[АЗС] "RGB_WHITE"Заправочная станция не поместит столько топлива");
				}
				
				new bcash = value*SBizzInfo[FuelStation][sbPriceProd];
				
				if(SBizzInfo[FuelStation][sbMoney] < bcash)
				{
				    ShowGSInfo(playerid, FuelStation);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[АЗС] "RGB_WHITE"У заправочной станции нет столько денег для закупки топлива");
				}
				
				GivePlayerPCash(playerid, bcash, "Prodal na AZS");
				GiveSBizMoney(FuelStation, -bcash);
				
				BenzCar[trailer][Benz] -= value;
				SBizzInfo[FuelStation][sbProducts] += value;
				
				format(string, 128, RGB_GREEN"[АЗС] "RGB_WHITE"Вы заработали: "RGB_GREEN"$%d", bcash);
				SendClientMessage(playerid, COLOR_WHITE, string);
				
				format(string, sizeof(string), "%d / 2000", BenzCar[trailer][Benz]);
				Update3DTextLabelText(BenzCar[trailer][BenfInfo], 0xFFFF00FF, string);
            }
			return 1;
		}
		case 223: //продолежение доната: покупка скинов
		{
		    if(response)
		    {
		        switch(strval(inputtext))
				{
					case 1: ShowDonateDialog(playerid, 21);//мужские скины
					case 2: ShowDonateDialog(playerid, 22);//женские скины
					case 3: ShowDonateDialog(playerid, 23);//уникальные скины
					default: ShowDonateDialog(playerid, 20);
				}
			}
			else ShowDonateDialog(playerid, 2);
			return 1;
		}
		case 224:
		{
		    
		    if(response)
			{
			    new donateSkinType = GetPVarInt(playerid,"donateSkinType");
			    new donateSkin = strval(inputtext);

				switch(donateSkinType)
				{
				    case 1: if(!isAValidDonateSkin1(donateSkin)) return ShowDonateDialog(playerid, 21);
				    case 2: if(!isAValidDonateSkin2(donateSkin)) return ShowDonateDialog(playerid, 22);
				    case 3: if(!isAValidDonateSkin3(donateSkin)) return ShowDonateDialog(playerid, 23);
				    default: return 1;
				}
			    
				new str[24], skin[10];

				skin[0] = GetPVarInt(playerid, "Skin1");
				skin[1] = GetPVarInt(playerid, "Skin2");
				skin[2] = GetPVarInt(playerid, "Skin3");
				skin[3] = GetPVarInt(playerid, "Skin4");
				skin[4] = GetPVarInt(playerid, "Skin5");
				skin[5] = GetPVarInt(playerid, "Skin6");
				skin[6] = GetPVarInt(playerid, "Skin7");
				skin[7] = GetPVarInt(playerid, "Skin8");
				skin[8] = GetPVarInt(playerid, "Skin9");
				skin[9] = GetPVarInt(playerid, "Skin10");
				
				for (new i; i < sizeof(skin); i++)
				{
				    if(skin[i]) format(str, sizeof(str), RGB_SERVER"id %d\n",skin[i]);
				    else format(str, sizeof(str), RGB_GREY"Пусто\n");
                    strcat(string, str);
				}
				
				ShowPlayerDialog(playerid,225, DIALOG_STYLE_LIST, RGB_SERVER"Выберите слот для скина",string,"Выбрать","Назад");
				SetPVarInt(playerid, "donateSkin",donateSkin);
			}
			else ShowDonateDialog(playerid, 20);
			return 1;
		}
		case 225:
		{
		    new donateSkinType = GetPVarInt(playerid,"donateSkinType");
		    if(response)
		    {
				new price, currentSkin;
		        switch(listitem)
		        {
		            case 0: currentSkin = GetPVarInt(playerid, "Skin1");
		            case 1: currentSkin = GetPVarInt(playerid, "Skin2");
		            case 2: currentSkin = GetPVarInt(playerid, "Skin3");
		            case 3: currentSkin = GetPVarInt(playerid, "Skin4");
		            case 4: currentSkin = GetPVarInt(playerid, "Skin5");
		            case 5: currentSkin = GetPVarInt(playerid, "Skin6");
		            case 6: currentSkin = GetPVarInt(playerid, "Skin7");
		            case 7: currentSkin = GetPVarInt(playerid, "Skin8");
		            case 8: currentSkin = GetPVarInt(playerid, "Skin9");
		            case 9: currentSkin = GetPVarInt(playerid, "Skin10");
				}
				switch(donateSkinType)
		        {
		             case 1: price = 200;
		             case 2: price = 200;
		             case 3: price = 300;
				}
				if(currentSkin)
				{
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите приобрести скин id{34c924} %d{ffffff}\n\
					и заменить приобретенный ранее скин id{34c924} %d{ffffff}?\n\
					Стоимость услуги: {34c924}%d Donate Money {ffffff}.", GetPVarInt(playerid, "donateSkin"), currentSkin,price);
				}
				else
				{
				    format(string, sizeof(string),
					"{ffffff}Вы уверены, что хотите приобрести скин id{34c924} %d{ffffff}?\n\
					Стоимость услуги: {34c924}%d Donate Money {ffffff}.", GetPVarInt(playerid, "donateSkin"),price);
				}
    			ShowPlayerDialog(playerid,226,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
    			SetPVarInt(playerid, "donateSkinSlot",listitem+1);
	    	}
			else ShowDonateDialog(playerid, 20+donateSkinType);
			return 1;
		}
		case 226:
		{
			new donateSkinType = GetPVarInt(playerid,"donateSkinType");
		    if(response)
		    {
		        new price,skin = GetPVarInt(playerid, "donateSkin");
		        switch(donateSkinType)
		        {
		             case 1: price = 200;
		             case 2: price = 200;
		             case 3: price = 300;
				}
				if(GetPVarInt(playerid, "DonateMoney") < price)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно Donate Money");
			        ShowDonateDialog(playerid, 20+donateSkinType);
			        return 1;
				}
			    format(string, sizeof(string),
   				"{ffffff}Вы успешно приобрели скин id {34c924}%d{ffffff} за {34c924}%d {ffffff}Donate Money!\n\
	   			Используйте {34c924}/skins {ffffff}чтобы посмотреть Ваши скины",skin,price);
   				ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Ок","");
   				
   				GivePVarInt(playerid, "DonateMoney", -price);
				MySQL_UpdateInt(playerid,"DonateMoney");

				switch(GetPVarInt(playerid, "donateSkinSlot"))
		        {
		            case 1: SetPVarInt(playerid, "Skin1",skin),MySQL_UpdateInt(playerid,"Skin1");
		            case 2: SetPVarInt(playerid, "Skin2",skin),MySQL_UpdateInt(playerid,"Skin2");
		            case 3: SetPVarInt(playerid, "Skin3",skin),MySQL_UpdateInt(playerid,"Skin3");
		            case 4: SetPVarInt(playerid, "Skin4",skin),MySQL_UpdateInt(playerid,"Skin4");
		            case 5: SetPVarInt(playerid, "Skin5",skin),MySQL_UpdateInt(playerid,"Skin5");
		            case 6: SetPVarInt(playerid, "Skin6",skin),MySQL_UpdateInt(playerid,"Skin6");
		            case 7: SetPVarInt(playerid, "Skin7",skin),MySQL_UpdateInt(playerid,"Skin7");
		            case 8: SetPVarInt(playerid, "Skin8",skin),MySQL_UpdateInt(playerid,"Skin8");
		            case 9: SetPVarInt(playerid, "Skin9",skin),MySQL_UpdateInt(playerid,"Skin9");
		            case 10: SetPVarInt(playerid, "Skin10",skin),MySQL_UpdateInt(playerid,"Skin10");
				}
				DeletePVar(playerid,"donateSkinSlot");
				DeletePVar(playerid,"donateSkinType");
				DeletePVar(playerid,"donateSkin");
				
            }
			else ShowDonateDialog(playerid, 20+donateSkinType);
			return 1;
		}
		case 227:
		{
		    if(response)
		    {
 	    		new id = GetPVarInt(playerid, "Local");
				if((id < 1000 || id > (sizeof(HouseInfo)+1000)) && !IsPlayerInRangeOfPoint(playerid, 20.0, 227.145080,-8.225682,1002.210937))
				{
					return SendClientMessage(playerid, COLOR_GREY, "Вы можете переодеться только в доме или магазине одежды");
			    }
		        switch(listitem)
		        {
                    case 0: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin")), SetPVarInt(playerid, "CurrentSkin", listitem);
					case 1:
					{
						if(GetPVarInt(playerid, "Skin1")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin1")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
		            case 2:
					{
						if(GetPVarInt(playerid, "Skin2")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin2")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 3:
					{
						if(GetPVarInt(playerid, "Skin3")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin3")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 4:
					{
						if(GetPVarInt(playerid, "Skin4")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin4")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 5:
					{
						if(GetPVarInt(playerid, "Skin5")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin5")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 6:
					{
						if(GetPVarInt(playerid, "Skin6")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin6")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 7:
					{
						if(GetPVarInt(playerid, "Skin7")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin7")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 8:
					{
						if(GetPVarInt(playerid, "Skin8")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin8")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 9:
					{
						if(GetPVarInt(playerid, "Skin9")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin9")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
					case 10:
					{
						if(GetPVarInt(playerid, "Skin10")) SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin10")), SetPVarInt(playerid, "CurrentSkin", listitem);
						else SendClientMessage(playerid, COLOR_GREY, "У Вас нет скина на этом слоте");
					}
				}
				showPlayerSkinsDialog(playerid);
			}
			return 1;
		}
		case 228:
		{
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
		    if(response)
		    {
				for(new i; i < sizeof(PlayerCleaner); i++)
				{
				    if(PlayerCleaner[i] == -1)
				    {
				    	new Float:pos[3];
            			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
            			SetPlayerMapIcon(playerid, ICON_JOB, pos[0], pos[1], pos[2], 51, 0, 1 );
						PlayerCleaner[i] = playerid;
						SetPVarInt(playerid, "Cleaner_Course", -1);
						SetPVarInt(playerid, "OnCleanerJob", 1);
						SendClientMessage(playerid, COLOR_GREEN, "Возьмите свободную машину для уборки улиц");
						return SendClientMessage(playerid, COLOR_GREEN, "После того, как достаточно поработаете, вернитесь на это место за выручкой");
				    }
				}
		  		return SendClientMessage(playerid, COLOR_GREY, "На данный момент все рабочие места заняты, попробуйте позже");
		    }
			return 1;
		}
		case 229:
		{
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
		    if(response)
		    {
				CleanerEndJob(playerid);
		    }
			return 1;
		}
		case 230:
		{
		    if(response)
		    {
		    	if(listitem < 0 || listitem >= sizeof(TrashCoords))
				{
				    ShowCleanPlaces(playerid);
				    return 1;
				}
		    	if(GetTotalTrash(listitem) == 0)
		    	{
		    	    ShowCleanPlaces(playerid);
		    	    return SendClientMessage(playerid, COLOR_GREEN, "Эта улица не нуждается в очистке");
		    	}
				
				
		    	SetPVarInt(playerid, "Cleaner_Course", listitem);
		    	DeletePVar(playerid, "Clear_Point");
		    	SendClientMessage(playerid, COLOR_GREEN, "Отправляйтесь на очистку улицы");

		    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_CLEANER;
		    	SetPlayerTrashPoint(playerid);
		    }
		    return 1;
		}
		case 231:
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
		    {
		        SetPVarInt(playerid, "OnDumpJob", 1);
		        DeletePVar(playerid, "DumpAmmount");
		        SetPlayerSkinEx(playerid, 16);
		        SendClientMessage(playerid, COLOR_GREEN, "Отправляйтесь на поиски железа для переплавки");
		        SendClientMessage(playerid, COLOR_GREEN, "Когда захотите закончить работу, встаньте на эту же иконку");

		        gPlayerCheckpointStatus[playerid] = CHECKPOINT_FINDONDUMP;
          		SetRandomDumpCP(playerid);
		       	SetPlayerAttachedObject(playerid, 4, 18635, 6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);

		    }
		    return 1;
		}
		case 232:
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		    if(response)
		    {
		        DeletePVar(playerid, "OnDumpJob");
		        DeletePVar(playerid, "AntiCheatDump");
		        ReplaceSkin(playerid);

		        gPlayerCheckpointStatus[playerid] = 0;
		        DisablePlayerRaceCheckpoint(playerid);

				new money = GetPVarInt(playerid, "DumpAmmount") * 80;
				DeletePVar(playerid, "DumpAmmount");

				GivePlayerPCash(playerid, money, "DumpAmmount");
				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);
				RemovePlayerAttachedObject(playerid, 4);
		    }
		    return 1;
		}
		case 233:
		{
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		 	if(response)
		 	{
		 	    SetPVarInt(playerid, "OnDumpJob", 2);
		 	    SendClientMessage(playerid, COLOR_GREEN, "Возьмите свободный грузовик для доставки металла");
				SetPlayerSkinEx(playerid, 258); // Поставить нужный
		 		SetPlayerAttachedObject(playerid, 4, 18638, 2, 0.159999, 0.025000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.100000, 1.120000); //Skin 258
			}
			return 1;
		}
		case 234:
		{
			SetTimerEx("SetOrder", 3000, 0, "d", playerid);
		 	if(response)
		 	{
		 	    DeletePVar(playerid, "OnDumpJob");
		 	    DeletePVar(playerid, "SellToBiz");
		 	    SendClientMessage(playerid, COLOR_GREEN, "Вы закончили смену");
		  		ReplaceSkin(playerid);
				RemovePlayerAttachedObject(playerid, 4);
				RemovePlayerMapIcon(playerid, ICON_JOB);
			}
			return 1;
		}
		case 235:
		{
			new i = GetPVarInt(playerid, "SellToBiz");

		    if(response)
		    {
				new value = strval(inputtext);
				new car = GetDumpCar(GetPlayerVehicleID(playerid));
				new money = value * BizzInfo[i][bPriceProd];

				if(value < 1 || value > DumpCar[car][dValue])
				{
					format(string, sizeof(string), RGB_WHITE"Бизнес: %s\nЗакупка товара: $%d\nТовара на складе: %d / %d\n\nУкажите правильное значение! (1 - %d кг)", BizzInfo[i][bDiscription], BizzInfo[i][bPriceProd], BizzInfo[i][bProducts], BizzInfo[i][bMaxProducts], DumpCar[car][dValue]);
					return ShowPlayerDialog(playerid, 235, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа металла", string, "Продать", "Отмена");
				}

				if(BizzInfo[i][bMoney] < money)
				{
					format(string, sizeof(string), RGB_WHITE"Бизнес: %s\nЗакупка товара: $%d\nТовара на складе: %d / %d\n\nУ магазина нет денег, укажите меньшее значение:", BizzInfo[i][bDiscription], BizzInfo[i][bPriceProd], BizzInfo[i][bProducts], BizzInfo[i][bMaxProducts]);
					return ShowPlayerDialog(playerid, 235, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа металла", string, "Продать", "Отмена");
				}

				if((value + BizzInfo[i][bProducts]) > BizzInfo[i][bMaxProducts])
				{
					format(string, sizeof(string), RGB_WHITE"Бизнес: %s\nЗакупка товара: $%d\nТовара на складе: %d / %d\n\nУкажите меньшее значение:", BizzInfo[i][bDiscription], BizzInfo[i][bPriceProd], BizzInfo[i][bProducts], BizzInfo[i][bMaxProducts]);
					return ShowPlayerDialog(playerid, 235, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа металла", string, "Продать", "Отмена");
				}

				DumpCar[car][dValue] -= value;
				BizzInfo[i][bProducts] += value;

				GiveBizMoney(i, -money);
				GivePlayerPCash(playerid, money, "Prodal metall");

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(playerid, string, 5000, 1);

				format(string, sizeof(string), "[Металл]\n%d / 400", DumpCar[car][dValue]);
				Update3DTextLabelText(DumpCar[car][dText], COLOR_YELLOW, string);

				DeletePVar(playerid, "SellToBiz");

		    }
			return 1;
		}
		case 236:
		{
		    switch(GetPVarInt(playerid, "Team"))
			{
				case 5, 6, 10, 12..18: ShowFactionPickup(playerid);
				default: SetTimerEx("SetOrder", 2000, false, "i", playerid);
			}
			return 1;
		}
		case 237:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: ShowPlayerGangNews(playerid);
		            case 1: ShowCommons(playerid, 0);
				}
		    }
		    else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 238:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowCommons(playerid, 1);
			        case 1: ShowCommons(playerid, 2);
			        case 2: ShowCommons(playerid, 3);
			        case 3: ShowCommons(playerid, 4);
			        case 4: ShowCommons(playerid, 5);
			        case 5: ShowCommons(playerid, 6);
			        case 6: ShowCommons(playerid, 7);
			    }
			}
			else ShowFactionPickup(playerid);
			return 1;
		}
		case 239:
		{
		    if(response)
		    {
		        new nark = strval(inputtext);
		        if(nark < 1)
		        {
		            ShowCommons(playerid, 1);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы не можете положить менее 1 гр. наркотиков");
		        }
				if(nark > GetPVarInt(playerid, "Drugs"))
				{
		            ShowCommons(playerid, 1);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"У Вас нет столько наркотиков");
		     	}

				new fid = ReturnFractionID(playerid);
				if(fid == 255) return 1;
				
				if((CommonInfo[fid][Drugs] + nark) > 50000)
				{
		            ShowCommons(playerid, 1);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"В общак поместится только 50.000 наркотиков");
		     	}

				GivePVarInt(playerid, "Drugs", -nark);
				CommonInfo[fid][Drugs] += nark;

				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] положил в общак %d гр. наркотиков", sendername, playerid, nark);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 240:
		{
		    if(response)
		    {
		        new mats = strval(inputtext);
		        if(mats < 1)
		        {
		            ShowCommons(playerid, 2);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы не можете положить менее 1 ед. материалов");
		        }
				if(mats > GetPVarInt(playerid, "Materials"))
				{
		            ShowCommons(playerid, 2);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"У Вас нет столько материалов");
		     	}

				new fid = ReturnFractionID(playerid);
				if(fid == 255) return 1;
				

				if((CommonInfo[fid][Materials] + mats) > 40000)
				{
		            ShowCommons(playerid, 2);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"В общак поместится только 40.000 материалов");
		     	}

				GivePVarInt(playerid, "Materials", -mats);
				CommonInfo[fid][Materials] += mats;

				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] положил в общак %d единиц материалов", sendername, playerid, mats);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 241:
		{
		    if(response)
		    {
		        new money = strval(inputtext);
		        if(money < 1)
		        {
		            ShowCommons(playerid, 3);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы не можете положить менее $1");
		        }
				if(money > GetPlayerPCash(playerid))
				{
		            ShowCommons(playerid, 3);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"У Вас нет столько денег");
		     	}

				new fid = ReturnFractionID(playerid);
				if(fid == 255) return 1;
				
				if((CommonInfo[fid][Cash] + money) > 20000000)
				{
		            ShowCommons(playerid, 3);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"В общак поместится только $20.000.000");
		     	}

				GivePlayerPCash(playerid, -money, "Polozil v obshak");
				CommonInfo[fid][Cash] += money;

				format(string, 24, "~r~-%d$", money);
				GameTextForPlayer(playerid, string, 3500, 1);


				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] положил в общак $%d", sendername, playerid, money);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		// Для лидеров ------------------
		case 242: // нарко
		{
			if(response)
		    {
		        if(GetPVarInt(playerid, "Leader") == 0) return 1;
		        new nark = strval(inputtext);
		        new fid = ReturnFractionID(playerid);
		        if(fid == 255) return 1;

		        if(nark < 1)
		        {
		        	ShowCommons(playerid, 4);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы не можете взять менее 1 гр. наркотиков");
		        }
		        if(CommonInfo[fid][Drugs] < nark)
		        {
		        	ShowCommons(playerid, 4);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"В общаке нет столько наркотиков");
		        }

		        CommonInfo[fid][Drugs] -= nark;
		        GivePVarInt(playerid, "Drugs", nark);

		  		GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] взял из общака %d гр. наркотиков", sendername, playerid, nark);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 243: // маты
		{
			if(response)
		    {
		        if(GetPVarInt(playerid, "Leader") == 0) return 1;
		        new mats = strval(inputtext);
		        new fid = ReturnFractionID(playerid);
		        if(fid == 255) return 1;

		        if(mats < 1)
		        {
		        	ShowCommons(playerid, 5);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы не можете взять менее 1 ед. материалов");
		        }
		        if(CommonInfo[fid][Materials] < mats)
		        {
		        	ShowCommons(playerid, 5);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"В общаке нет столько материалов");
		        }

		        CommonInfo[fid][Materials] -= mats;
		        GivePVarInt(playerid, "Materials", mats);

		  		GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] взял из общака %d ед. материалов", sendername, playerid, mats);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 244: // деньги
		{
			if(response)
		    {
		        if(GetPVarInt(playerid, "Leader") == 0) return 1;
		        new money = strval(inputtext);
		        new fid = ReturnFractionID(playerid);
		        if(fid == 255) return 1;

		        if(money < 1)
		        {
		        	ShowCommons(playerid, 6);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы не можете взять менее $1");
		        }
		        if(CommonInfo[fid][Cash] < money)
		        {
		        	ShowCommons(playerid, 6);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"В общаке нет столько денег");
		        }

		        CommonInfo[fid][Cash] -= money;
				GivePlayerPCash(playerid, money, "Vzual iz obshaka");

				format(string, 24, "~g~+%d$", money);
				GameTextForPlayer(playerid, string, 3500, 1);

		  		GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] взял из общака $%d", sendername, playerid, money);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 245:
		{
			if(response)
			{
			    new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

			    switch(listitem)
			    {
			        case 0: // Дверь
			        {
			            if(HouseInfo[id][hLock] == 1) HouseInfo[id][hLock] = 0;
			            else HouseInfo[id][hLock] = 1;
			            return ShowHPanel(playerid);
			        }
			        case 1: // Аренда
			        {
			            if(HouseInfo[id][hRentabil] == 1)
						{
							HouseInfo[id][hRentabil] = 0;
							return ShowHPanel(playerid);
						}
						else
						{
						    return ShowPlayerDialog(playerid, 246, DIALOG_STYLE_INPUT, RGB_SERVER"Аренда",  RGB_WHITE"Укажите стоимость аренды Вашего дома ($1-$300):", "Готово", "Назад");
						}
			        }
			        case 2: // Аптечка
					{
					    if(HouseInfo[id][hHel] == 1)
					    {
					    	ShowHPanel(playerid);
					    	return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"В Вашем доме уже установлена аптечка");
					    }
					    else
					    {
					        return ShowPlayerDialog(playerid, 247, DIALOG_STYLE_MSGBOX, RGB_SERVER"Аптечка",  RGB_WHITE"Желаете купить аптечку для Вашего дома? "RGB_GREY"Стоимость: $1000", "Купить", "Назад");
					    }

					}
			        case 3: // Бронижилет
					{
					    if(HouseInfo[id][hArm] == 1)
					    {
					    	ShowHPanel(playerid);
					    	return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"В Вашем доме уже установлен бронежилет");
					    }
					    else
					    {
					        return ShowPlayerDialog(playerid, 248, DIALOG_STYLE_MSGBOX, RGB_SERVER"Бронежилет",  RGB_WHITE"Желаете купить бронежилет для Вашего дома? "RGB_GREY"Стоимость: $2000", "Купить", "Назад");
					    }

					}
			        case 4: // Сигнализация
					{
					    if(HouseInfo[id][hSignal] == 1)
					    {
					    	ShowHPanel(playerid);
					    	return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"В Вашем доме уже установлена сигнализация");
					    }
					    else
					    {
					        return ShowPlayerDialog(playerid, 285, DIALOG_STYLE_MSGBOX, RGB_SERVER"Сигнализация",  RGB_WHITE"Желаете купить сигнализацию для Вашего дома? "RGB_GREY"Стоимость: $10000", "Купить", "Назад");
					    }
					}
			        case 5: // Деньги
			        {
			            format(string, sizeof(string), "Взять ($%d)\nПоложить", HouseInfo[id][hMoney]);
			            return ShowPlayerDialog(playerid, 250, DIALOG_STYLE_LIST, RGB_SERVER"Домашний сейф", string, "Выбор", "Назад");
			        }
			        case 6: // Наркотики
			        {
			            format(string, sizeof(string), "Взять (%d)\nПоложить", HouseInfo[id][hNarks]);
			            return ShowPlayerDialog(playerid, 311, DIALOG_STYLE_LIST, RGB_SERVER"Наркотики", string, "Выбор", "Назад");
			        }
					case 7: // Материалы
			        {
			            format(string, sizeof(string), "Взять (%d)\nПоложить", HouseInfo[id][hMats]);
			            return ShowPlayerDialog(playerid, 314, DIALOG_STYLE_LIST, RGB_SERVER"Материалы", string, "Выбор", "Назад");
			        }
			    }
			}
			return 1;
		}

		case 246:
		{
		    if(response)
		    {
			    new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

				new rent = strval(inputtext);

				if(rent < 1 || rent > 300) return ShowPlayerDialog(playerid, 246, DIALOG_STYLE_INPUT, RGB_SERVER"Аренда",  RGB_WHITE"Укажите стоимость аренды Вашего дома ($1-$300):", "Готово", "Назад");

				format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Стоимость аренды Вашего дома: $%d", rent);
				SendClientMessage(playerid, COLOR_WHITE, string);

				HouseInfo[id][hRent] = rent;
				HouseInfo[id][hRentabil] = 1;

				ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
			return 1;
		}

		case 247:
		{
		    if(response)
		    {
			    new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

				if(GetPlayerPCash(playerid) < 1000)
				{
				    ShowHPanel(playerid);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"У Вас недостаточно денег для покупки аптечки");
				}

				GivePlayerPCash(playerid, -1000, "Kupil aptechku");
		        GiveSBizMoney(6, 1000);

		        HouseInfo[id][hHel] = 1;
		        SBizzInfo[6][sbProducts]--;

		        GameTextForPlayer(playerid, "~r~-$1000", 3000, 1);
		        SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"[Дом] "RGB_WHITE"Вы приобрели аптечку для Вашего дома");

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
			return 1;
		}
		case 248:
		{
		    if(response)
		    {
			    new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

				if(GetPlayerPCash(playerid) < 2000)
				{
				    ShowHPanel(playerid);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"У Вас недостаточно денег для покупки бронежилета");
				}

				GivePlayerPCash(playerid, -2000, "Kupil bronezhelet");
		        GiveSBizMoney(6, 2000);

		        HouseInfo[id][hArm] = 1;
		        SBizzInfo[6][sbProducts]--;

		        GameTextForPlayer(playerid, "~r~-$2000", 3000, 1);
		        SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"[Дом] "RGB_WHITE"Вы приобрели бронежилет для Вашего дома");

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
			return 1;
		}

		case 250:
		{
		    if(response)
		    {
		        new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        switch(listitem)
		        {
		            case 0: // Снять
		            {
		                format(string, sizeof(string), RGB_WHITE"Сколько денег хотите взять из домашнего сейфа?\n"RGB_GREY"Не более $%d", HouseInfo[id][hMoney]);
		                return ShowPlayerDialog(playerid, 251, DIALOG_STYLE_INPUT, RGB_SERVER"Домашний сейф", string, "Готово", "Отмена");
		            }
		            case 1: // Положить
		            {
		                format(string, sizeof(string), RGB_WHITE"Сколько денег хотите положить в домашний сейф?\n"RGB_GREY"Не более $%d", 1000000-HouseInfo[id][hMoney]);
		                return ShowPlayerDialog(playerid, 252, DIALOG_STYLE_INPUT, RGB_SERVER"Домашний сейф", string, "Готово", "Отмена");
		            }
		        }
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 251:
		{
		    if(response)
		    {
		    	new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        new money = strval(inputtext);
				if(money < 1 || money > HouseInfo[id][hMoney])
				{
		        	format(string, sizeof(string), RGB_WHITE"Сколько денег хотите взять из домашнего сейфа?\n"RGB_GREY"Не более $%d", HouseInfo[id][hMoney]);
		        	return ShowPlayerDialog(playerid, 251, DIALOG_STYLE_INPUT, RGB_SERVER"Домашний сейф", string, "Готово", "Отмена");
				}

				HouseInfo[id][hMoney] -= money;
				GivePlayerPCash(playerid, money, "Vzyal iz doma");

				format(string, sizeof(string), "~g~+$%d", money);
		        GameTextForPlayer(playerid, string, 3000, 1);

		        format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Вы взяли из домашнего сейфа: $%d", money);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
				ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 252:
		{
		    if(response)
		    {
		    	new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        new money = strval(inputtext);
				if(money < 1 || (money+HouseInfo[id][hMoney]) > 1000000)
				{
					format(string, sizeof(string), RGB_WHITE"Сколько денег хотите положить в домашний сейф?\n"RGB_GREY"Не более $%d", 1000000-HouseInfo[id][hMoney]);
					return ShowPlayerDialog(playerid, 252, DIALOG_STYLE_INPUT, RGB_SERVER"Домашний сейф", string, "Готово", "Отмена");
				}
				if(GetPlayerPCash(playerid) < money)
				{
				    SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"У Вас нет столько денег на руках");
					format(string, sizeof(string), RGB_WHITE"Сколько денег хотите положить в домашний сейф?\n"RGB_GREY"Не более $%d", 1000000-HouseInfo[id][hMoney]);
					return ShowPlayerDialog(playerid, 252, DIALOG_STYLE_INPUT, RGB_SERVER"Домашний сейф", string, "Готово", "Отмена");
				}

				HouseInfo[id][hMoney] += money;
				GivePlayerPCash(playerid, -money, "Polozhil v dom");

				format(string, sizeof(string), "~r~-$%d", money);
		        GameTextForPlayer(playerid, string, 3000, 1);

		        format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Вы положили в домашний сейф: $%d", money);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
				ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 253:
		{
		    if(response)
		    {
  				new name[24];
				sscanf(inputtext, "s[24]s[64]", name, string);
				new id = ReturnUser(name);
				
				DeletePVar(playerid, "AntiFloodSusp");
				if(!IsPlayerConnected(id))
				{
				    ShowWantedList(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Игрок вышел с сервера");
				}
				if(WantedLevel[id] < 1)
				{
				    ShowWantedList(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "У игрока уже нет розыска");
				}
				if(GetPlayerInterior(id) != 0 || GetPlayerVirtualWorld(id) != 0)
				{
				    ShowWantedList(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Не удается обнаружить преступника");
				}
				
				new strname[40];
				format(strname, sizeof(strname), RGB_SERVER"Подозреваемый: %s", name);
				
				format(string, sizeof(string), RGB_WHITE"\
				Подозреваемый: "RGB_SERVER"\t%s"RGB_WHITE"\n\
				Подал в розыск: "RGB_SERVER"\t%s"RGB_WHITE"\n\
				Причина: "RGB_SERVER"\t\t%s"RGB_WHITE"\n\
				Уровень розыска: "RGB_SERVER"\t%d", name, PlayerCrime[id][Cop], PlayerCrime[id][Reason], WantedLevel[id]);
				
				ShowPlayerDialog(playerid, 254, DIALOG_STYLE_MSGBOX, strname , string, "Поиск", "Назад");
				
				SetPVarInt(playerid, "SuspectID", id);
		    }
		    return 1;
		}
		case 254:
		{
		    new id = GetPVarInt(playerid, "SuspectID");
		    DeletePVar(playerid, "SuspectID");
		    if(response)
			{
   				if(!IsPlayerConnected(id))
				{
				    ShowWantedList(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Игрок вышел с сервера");
				}
				if(WantedLevel[id] < 1)
				{
				    ShowWantedList(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "У игрока уже нет розыска");
				}
				if(GetPlayerInterior(id) != 0 || GetPlayerVirtualWorld(id) != 0)
				{
				    ShowWantedList(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Не удается обнаружить преступника");
				}

				format(string, sizeof(string), "%s начал преследование %s", GetName(playerid), GetName(id));
				ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_CHASE;
				PlayerChase[playerid] = id;

				SendClientMessage(playerid, COLOR_GREEN, "Чтобы закончить преследование, нажмите [~k~~TOGGLE_SUBMISSIONS~] в патрульной машине");
			}
			else
			{
			    ShowWantedList(playerid);
			}
		    return 1;
		}
		case 255:
		{
			if(response)
		    {
		        switch(listitem)
		        {
		            case 0: // Карта
		            {
			    		ShowPlayerDialog(playerid, 256, DIALOG_STYLE_LIST, RGB_SERVER"Выбор карты", "Депо\nНебоскреб\nСкала\nПустыня\nКорт", "Выбор","Отмена");
		            }
		            case 1: // Оружие
		            {
		                ShowWeaponSelect(playerid);
		            }
		            case 2: // HP
		            {
		       			ShowPlayerDialog(playerid, 259, DIALOG_STYLE_INPUT, RGB_SERVER"Установка HP",  RGB_WHITE"Укажите, какое количество "RGB_GREEN"HP"RGB_WHITE"\nдолжно выдаться Вам и сопернику: "RGB_GREY"(5-150hp)", "Готово", "Назад");
		            }
		            case 3: // Пригласить игрока
					{
		                globalstr = "";

		               	new name[24];
						new TotalPla;
						new Float:pos[3];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						for(new i; i < MAX_PLAYERS; i ++)
						{
							if(IsPlayerInRangeOfPoint(i, 15.0, pos[0], pos[1], pos[2]))
							{
							    if(i == playerid) continue;
		    					GetPlayerName(i, name, sizeof(name));
								format(globalstr, sizeof(globalstr), "%s%s\n", globalstr, name);
								TotalPla ++;
					 			if(TotalPla == 40)
								{
									break;
								}
							}
						}
						if(TotalPla == 0)
						{
		                    ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Выбор соперника", RGB_WHITE"Нет поблизости игроков, с которыми можно начать дуэль!", "Ok", "");
						}
						else
						{
						    ShowPlayerDialog(playerid, 260, DIALOG_STYLE_LIST, RGB_SERVER"Выбор соперника", globalstr, "Выбрать", "Назад");
						}
						globalstr = "";
					}
					case 4: // Ставка
					{
		       			ShowPlayerDialog(playerid, 262, DIALOG_STYLE_INPUT, RGB_SERVER"Денежная ставка",  RGB_WHITE"Сколько денег хотите поставить на свой выигрыш.\nУчтите, что у второго игрока должно хватать денег,\nчтобы начать дуэль с Вами: "RGB_GREY"($100-$50.000)", "Готово", "Назад");
					}
		            case 5: // Начать
		            {
						if(GetPVarInt(playerid, "Duel_Map") == 0)	return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"Вы не выбрали карту для дуэли", "Ok", "");
						if(GetPVarInt(playerid, "Duel_Gun_1") == 0 && GetPVarInt(playerid, "Duel_Gun_2") == 0 && GetPVarInt(playerid, "Duel_Gun_3") == 0)
						{
						    return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"\tВы не выбрали оружие!\t", "Ok", "");
						}

						new playa = GetPVarInt(playerid, "Duel_Play");

						if(playa == -1) 							return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"Вы не выбрали соперника для проведения дуэли", "Ok", "");
						if(!IsPlayerConnected(playa)) 				return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"Соперник покинул сервер", "Ok", "");
						if(!ProxDetectorS(10.0, playerid, playa)) 	return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"Соперник слишком далеко от Вас", "Ok", "");
						if(GetPVarInt(playerid, "Duel_Money") < 1) 	return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"Вы не сделали ставку", "Ok", "");
						if(GetPVarInt(playa, "Duel_Create") == 1) 	return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало дуэли", RGB_WHITE"Этот игрок сейчас создает дуэль", "Ok", "");

						new map[40];
						switch(GetPVarInt(playerid, "Duel_Map"))
						{
						    case 1: map = "[Депо]";
						    case 2: map = "[Небоскреб]";
						    case 3: map = "[Скала]";
						    case 4: map = "[Пустыня]";
						    case 5: map = "[Корт]";
						}

						new Guns[100];
						new weap = GetPVarInt(playerid, "Duel_Gun_1");
						if(weap != 0) format(Guns, sizeof(Guns), "[%s] ", aWeaponNames[weap]);

						weap = GetPVarInt(playerid, "Duel_Gun_2");
						if(weap != 0) format(Guns, sizeof(Guns), "%s[%s] ",Guns, aWeaponNames[weap]);

						weap = GetPVarInt(playerid, "Duel_Gun_3");
						if(weap != 0) format(Guns, sizeof(Guns), "%s[%s] ",Guns, aWeaponNames[weap]);


						format(string, sizeof(string), RGB_WHITE"\
						%s предлагает Вам дуэль!\n\n\
						Карта:\t\t"RGB_SERVER"%s"RGB_WHITE"\n\
						Оружие:\t"RGB_SERVER"%s"RGB_WHITE"\n\
						Ставка:\t"RGB_SERVER"$%d"RGB_WHITE"\n\
						Спавн HP:\t"RGB_SERVER"%.1f",
						GetName(playerid), map, Guns, GetPVarInt(playerid, "Duel_Money"), GetPVarFloat(playerid, "Duel_HP"));

						ShowPlayerDialog(playa, 263, DIALOG_STYLE_MSGBOX, RGB_SERVER"Вам предлагают дуэль", string, "Принять", "Отказать");

						SetPVarInt(playa, "Duel_Play", playerid);
						
						SendClientMessage(playerid, COLOR_GREEN, "Ожидайте ответа от соперника...");
						
						SetTimerEx("SetOrder", 5000, 0, "d", playerid);
		            }
		        }
		    }
		    else
		    {
		        SetTimerEx("SetOrder", 2000, 0, "d", playerid);
				ClearPVars_Duel(playerid);
			}
		    return 1;
		}
		case 256:
		{
			if(response)
			{
			    SetPVarInt(playerid, "Duel_Map", listitem+1);
			}
			ShowPlayerDuelInfo(playerid);
			return 1;
		}
		case 257:
		{
			if(response)
			{
				SetPVarInt(playerid, "Weapon_Select", listitem+1);
				ShowPlayerDialog(playerid, 258, DIALOG_STYLE_LIST, RGB_SERVER"Выбор оружия", "Бита\n9mm\nDeagle\nShotgun\nMP5\nAK-47\nm4\n"RGB_GREY"Убрать", "Выбор","Назад");
			}
			else
			{
			    ShowPlayerDuelInfo(playerid);
			}
			return 1;
		}
		case 258:
		{
			if(response)
			{
				new str[32];
				format(str, sizeof(str), "Duel_Gun_%d", GetPVarInt(playerid, "Weapon_Select"));
				switch(listitem)
				{
				    case 0: SetPVarInt(playerid, str, 5);
				    case 1: SetPVarInt(playerid, str, 22);
				    case 2: SetPVarInt(playerid, str, 24);
				    case 3: SetPVarInt(playerid, str, 25);
				    case 4: SetPVarInt(playerid, str, 29);
				    case 5: SetPVarInt(playerid, str, 30);
				    case 6: SetPVarInt(playerid, str, 31);
				    case 7: DeletePVar(playerid, str);
				}
				DeletePVar(playerid, "Weapon_Select");
			}
			ShowWeaponSelect(playerid);
			return 1;
		}
		case 259:
		{
			if(response)
			{
				new Float:d_hp = floatstr(inputtext);

				if(d_hp < 5.0 || d_hp > 150.0) return ShowPlayerDialog(playerid, 259, DIALOG_STYLE_INPUT, RGB_SERVER"Установка HP",  RGB_WHITE"Укажите, какое количество "RGB_GREEN"HP"RGB_WHITE"\nдолжно выдаться Вам и сопернику: "RGB_GREY"(5-150hp)", "Готово", "Назад");

				SetPVarFloat(playerid, "Duel_HP", d_hp);

				ShowPlayerDuelInfo(playerid);
			}
			else
			{
			    ShowPlayerDuelInfo(playerid);
			}
			return 1;
		}
		case 260:
		{
			if(response)
			{
			    new id = ReturnUser(inputtext);

			    if(!IsPlayerConnected(playerid))
			    {
		     		return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Этот игрок вышел с сервера", "Ok", "");
			    }
				if(!ProxDetectorS(15.0, playerid, id))
			    {
		     		return ShowPlayerDialog(playerid, 261, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Игрок слишком далеко", "Ok", "");
			    }

				SetPVarInt(playerid, "Duel_Play", id);
				ShowPlayerDuelInfo(playerid);
			}
			else
			{
		        ShowPlayerDuelInfo(playerid);
			}
			return 1;
		}
		case 261:
		{
		    ShowPlayerDuelInfo(playerid);
		    return 1;
		}
		case 262:
		{
			if(response)
			{
			    new money = strval(inputtext);
			    if(money < 100 || money > 50000) return ShowPlayerDialog(playerid, 262, DIALOG_STYLE_INPUT, RGB_SERVER"Денежная ставка",  RGB_WHITE"Сколько денег хотите поставить на свой выигрыш.\nУчтите, что у второго игрока должно хватать денег,\nчтобы начать дуэль с Вами: "RGB_GREY"($100-$50.000)", "Готово", "Назад");
				if(GetPlayerPCash(playerid) < money) return ShowPlayerDialog(playerid, 262, DIALOG_STYLE_INPUT, RGB_SERVER"Денежная ставка",  RGB_WHITE"Сколько денег хотите поставить на свой выигрыш.\nУчтите, что у второго игрока должно хватать денег,\nчтобы начать дуэль с Вами: "RGB_GREY"(У Вас нет столько денег)", "Готово", "Назад");

				SetPVarInt(playerid, "Duel_Money", money);

				ShowPlayerDuelInfo(playerid);
			}
			else
			{
			    ShowPlayerDuelInfo(playerid);
			}
			return 1;
		}
		case 263:
		{
			new id = GetPVarInt(playerid, "Duel_Play");
			if(response)
			{
			    if(GetPVarInt(id, "Duel_Play") != playerid)
			    {
				    ClearPVars_Duel(id);
		            ClearPVars_Duel(playerid);

				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"Нельзя приглашать сразу несколько человек", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"Нельзя приглашать сразу несколько человек", "Ok", "");
			    }
				if(!IsPlayerConnected(id))
				{
				    ClearPVars_Duel(playerid);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"Соперник покинул сервер!", "Ok", "");
				}
				if(!ProxDetectorS(10.0, playerid, id))
				{
				    ClearPVars_Duel(playerid);
				    ClearPVars_Duel(id);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"Соперник слишком далеко от Вас!", "Ok", "");
				}
				if(GetPlayerPCash(id) < GetPVarInt(id, "Duel_Money"))
				{
				    ClearPVars_Duel(id);
		            ClearPVars_Duel(playerid);

				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"У Вас нет денег для ставки", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"У соперника нет денег для ставки", "Ok", "");
				}
				if(GetPlayerPCash(playerid) < GetPVarInt(id, "Duel_Money"))
				{
				    ClearPVars_Duel(id);
				    ClearPVars_Duel(playerid);
				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"У соперника нет денег для ставки", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"У Вас нет денег для ставки", "Ok", "");
				}

				ResetPlayerWeaponsUAC(id);
				ResetPlayerWeaponsUAC(playerid);

				SetPlayerVirtualWorld(id, id+1000);
				SetPlayerVirtualWorld(playerid, id+1000);
				
				SetPlayerInterior(playerid, 0);
				SetPlayerInterior(id, 0);

				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(id);
				
				SetPlayerColor(playerid, COLOR_YELLOW);
				SetPlayerColor(id, COLOR_YELLOW);
				
				
				switch(GetPVarInt(id, "Duel_Map"))
				{
				    case 1:
				    {
				        oSetPlayerPos(playerid, 2261.122070,-2254.868896,13.546875);
				        SetPlayerFacingAngle(playerid, 132.468566);

				        oSetPlayerPos(id, 2224.795654,-2291.263671,13.546875);
				        SetPlayerFacingAngle(id, 315.143554);
				    }
				    case 2:
				    {
				        oSetPlayerPos(playerid, 2049.002441,2427.201171,165.617187);
				        SetPlayerFacingAngle(playerid, 310.733581);

				        oSetPlayerPos(id, 2066.362060,2441.434082,165.617187);
				        SetPlayerFacingAngle(id, 129.938552);
				    }
				    case 3:
				    {
				        oSetPlayerPos(playerid, -266.650177,2205.200439,111.273818);
				        SetPlayerFacingAngle(playerid, 345.177246);

				        oSetPlayerPos(id, -251.950103,2259.146972,108.893966);
				        SetPlayerFacingAngle(id, 162.502136);
				    }
				    case 4:
				    {
				        oSetPlayerPos(playerid, 56.200962,2500.529785,16.484375);
				        SetPlayerFacingAngle(playerid, 270.0);

				        oSetPlayerPos(id, 104.107353,2500.656982,16.484375);
				        SetPlayerFacingAngle(id, 90.0);
				    }
				    case 5:
				    {
				        oSetPlayerPos(playerid, 1852.108886,2843.966308,10.835937);
				        SetPlayerFacingAngle(playerid, 180.0);

				        oSetPlayerPos(id, 1851.879272,2820.570800,10.835937);
				        SetPlayerFacingAngle(id, 0.0);
				    }
				}
				
				SetPlayerHealthUAC(id, GetPVarFloat(id, "Duel_HP"));
				SetPlayerHealthUAC(playerid, GetPVarFloat(id, "Duel_HP"));

                SetPlayerArmour(id, 0.0);
                SetPlayerArmour(playerid, 0.0);
                
				SetPVarInt(playerid, "On_Duel", 1);
				SetPVarInt(id, "On_Duel", 1);

				SetPVarInt(playerid, "Duel_Money", GetPVarInt(id, "Duel_Money"));

				format(string, sizeof(string), "~r~-$%d", GetPVarInt(id, "Duel_Money"));
				GameTextForPlayer(playerid, string, 3000, 1);
				GameTextForPlayer(id, string, 3000, 1);

				GivePlayerPCash(playerid, -GetPVarInt(id, "Duel_Money"), "Zapis na duel");
				GivePlayerPCash(id, -GetPVarInt(id, "Duel_Money"), "Zapis na duel");


				SetTimerEx("Duel_Count", 1000, 0, "dd", playerid, 3);
				SetTimerEx("Duel_Count", 2000, 0, "dd", playerid, 2);
				SetTimerEx("Duel_Count", 3000, 0, "dd", playerid, 1);
				SetTimerEx("Duel_Count", 4000, 0, "dd", playerid, 0);

			}
			else
			{
			    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"\tВаш соперник отказался от дуэли", "Ok", "");
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Дуэль отменена", RGB_WHITE"\tВы отказались от дуэли", "Ok", "");
		     	SetTimerEx("SetOrder", 2000, 0, "d", id);

		        ClearPVars_Duel(id);
		        ClearPVars_Duel(playerid);
			}
			return 1;
		}
		case 264:
		{
		    if(response)
		    {
				SetPVarInt(playerid, "Lic_Type", listitem);
				// 0 авто
				// 1 катер
				// 2 вертолет
				// 3 рыбалка
				// 4 оружие

				globalstr = "";

				new name[24];
				new TotalPla;
				new Float:pos[3];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				for(new i; i < MAX_PLAYERS; i ++)
				{
					if(IsPlayerInRangeOfPoint(i, 15.0, pos[0], pos[1], pos[2]))
					{
	   					GetPlayerName(i, name, sizeof(name));
						format(globalstr, sizeof(globalstr), "%s%s [LVL: %d]\n", globalstr, name, GetPVarInt(i, "Level"));
						TotalPla ++;
		 				if(TotalPla == 40)
						{
							break;
						}
					}
				}
				ShowPlayerDialog(playerid, 265, DIALOG_STYLE_LIST, RGB_SERVER"Кому выдать лицензию", globalstr, "Далее", "Отмена");

				globalstr = "";
			}
			return 1;
		}
		case 265:
		{
		    if(response)
		    {
				new name[24];
				sscanf(inputtext, "s[24]s[64]", name, string);
				new id = ReturnUser(name);

				if(!IsPlayerConnected(id)) 					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок покинул сервер", "Ok", "");
		        if(!ProxDetectorS(16.0, playerid, id)) 		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок слишком далеко от Вас", "Ok", "");

				SetPVarInt(playerid, "Lic_Player", id);


				ShowPlayerDialog(playerid, 266, DIALOG_STYLE_INPUT, RGB_SERVER"Стоимость лицензии",  RGB_WHITE"Укажите стоимость лицензии: "RGB_GREY"($1-$50000)", "Далее", "Отмена");
		    }
		    else DeletePVar(playerid, "Lic_Type");
		    return 1;
		}
		case 266:
		{
		    if(response)
		    {
		        new money = strval(inputtext);
		        if(money < 1 || money > 50000) return ShowPlayerDialog(playerid, 266, DIALOG_STYLE_INPUT, RGB_SERVER"Стоимость лицензии",  RGB_WHITE"Укажите стоимость лицензии: "RGB_GREY"($1-$50000)", "Далее", "Отмена");

		        new id = GetPVarInt(playerid, "Lic_Player");
		        new lictype = GetPVarInt(playerid, "Lic_Type");

		        DeletePVar(playerid, "Lic_Type");
		        DeletePVar(playerid, "Lic_Player");

	  			if(!IsPlayerConnected(id)) 					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок покинул сервер", "Ok", "");
		        if(!ProxDetectorS(10.0, playerid, id)) 		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок слишком далеко от Вас", "Ok", "");

				new ltext[30];
				switch(lictype)
				{
				    case 0: ltext = "водителя";
				    case 1: ltext = "на морской транспорт";
				    case 2: ltext = "на воздушный транспорт";
				    case 3: ltext = "на рыбалку";
				    default: ltext = "на оружие";
				}

				format(string, sizeof(string), "Вы предложили %s лицензию %s за $%d", GetName(id), ltext, money);
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предложил Вам лицензию %s за $%d", GetName(playerid), ltext, money);
				SendClientMessage(id, COLOR_WHITE, string);
				SendClientMessage(id, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

				SetPVarInt(id, "Lic_Lictype", lictype);
				SetPVarInt(id, "Lic_Price", money);
				SetPVarInt(id, "Lic_Player", playerid);
				SetPVarInt(id, "Accept_Type", 13);
			}
		    else
		    {
		        DeletePVar(playerid, "Lic_Type");
		        DeletePVar(playerid, "Lic_Player");
		    }
		    return 1;
		}
		case 267:
		{
		    MovePlayerCameraBack(playerid);
		    SetTimerEx("SetOrder", 5500, false, "i", playerid);
		    return 1;
		}
		case 268:
		{
		    if(response)
		    {

		        new d = strval(inputtext);
		        if(d > 50 || d < 0)
		        {
		            ShowBOptions(playerid, 8);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Бизнес] "RGB_WHITE"Укажите процент от 0 до 50");
				}

				new id = GetPVarInt(playerid, "Bizz");

				if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#1)");


				switch(id)
				{
				    case 0..99:     BizzInfo[id][bProcent] = d, SaveBizz(id);
				    case 100..200:  SBizzInfo[id-100][sbProcent] = d, SaveSBizz(id-100);
				}

				format(string, sizeof(string), RGB_GREEN"[Бизнес] "RGB_WHITE"Процент крыши с прибыли теперь: "RGB_GREEN"%d",  d);
				SendClientMessage(playerid, COLOR_WHITE, string);
				ShowBPanel(playerid);
		    }
		    else ShowBPanel(playerid);
		    return 1;
		}
		case 269:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0:
					{
					    if(GetPVarInt(playerid, "Rank") < 3)
					    {
					        ShowHitmansPanel(playerid, 0);
					        return SendClientMessage(playerid, COLOR_GREY, "Брать заказы можно с 3 ранга");
						}
					    ShowHitmansPanel(playerid, 1);
					}
					case 1:
					{
					    ShowHitmansPanel(playerid, 2);
					}
					case 2:
					{
					    ShowHitmansPanel(playerid, 0);
					    if(PlayerChase[playerid] == -1)
					    {
					        return SendClientMessage(playerid, COLOR_GREY, "У Вас нет текущего заказа");
						}
						PlayerChase[playerid] = -1;
			   			PlayerChase[playerid] = -1;
			  			gPlayerCheckpointStatus[playerid] = 0;
					   	DisablePlayerCheckpoint(playerid);
						SendClientMessage(playerid, COLOR_GREY, "Вы отказались от контракта");
					}
		        }
		    }
			return 1;
		}
		case 270:
		{
			if(response)
			{
				new name[24];
				sscanf(inputtext, "ss", name, string);
				new id = ReturnUser(name);

				if(!IsPlayerConnected(id))
				{
		  			ShowHitmansPanel(playerid, 1);
			    	return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
				}
				if(GetPVarInt(id, "HeadValue") < 1)
				{
		  			ShowHitmansPanel(playerid, 1);
			    	return SendClientMessage(playerid, COLOR_GREY, "Этого игрока никто не заказывал");
				}
				if(GetPlayerInterior(id) != 0 || GetPlayerVirtualWorld(id) != 0)
				{
		  			ShowHitmansPanel(playerid, 1);
			    	return SendClientMessage(playerid, COLOR_GREY, "Не удается обнаружить цель");
				}

				gPlayerCheckpointStatus[playerid] = CHECKPOINT_CHASE;
				PlayerChase[playerid] = id;

				format(string, sizeof(string), "« %s[%d] взял заказ на убийство %s[%d] »", GetName(playerid), playerid, GetName(id), id);
				SendFamilyMessage(8, TEAM_AZTECAS_COLOR, string);

			}
			else
			{
			    ShowHitmansPanel(playerid, 0);
			}
			return 1;
		}
		case 271:
		{
			if(response)
			{
			    new mo;
			    switch(listitem)
			    {
			        case 0: mo = 200;
			        case 1: mo = 400;
			        case 2: mo = 600;
			        case 3: mo = 900;
			        case 4: mo = 1000;
				}
				if(GetPlayerPCash(playerid) < mo)
				{
				    ShowHitmansPanel(playerid, 2);
				    return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
				}
			    OrderReady[playerid] = listitem+1;
			    SendClientMessage(playerid, COLOR_GREY, "Можете забрать оружие на базе");
			    ShowHitmansPanel(playerid, 0);
			}
			else
			{
			    ShowHitmansPanel(playerid, 0);
			}
			return 1;
		}
		
		case 272:
		{
		    if(response)
			{
				if(QuestCars[playerid][0] != 0) DestroyVehicle(QuestCars[playerid][0]);

				if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.657135,-1398.872558,14.389949)) // LS
				{
					QuestCars[playerid][0] = CreateVehicle(411, 335.929351, -1376.764526, 13.638491, 118.115570, 6, 6, -1);
				}
				else // SF
				{
				    QuestCars[playerid][0] = CreateVehicle(411, -1995.200073, 138.025680, 27.005910, 358.468261, 6, 6, -1);
				}
		  		SetVehicleVirtualWorld(QuestCars[playerid][0], playerid+2000);
		  		SetPlayerVirtualWorld(playerid, playerid+2000);

		    	Gas[QuestCars[playerid][0]] = 100;
		    	RemovePlayerMapIcon(playerid, ICON_QUEST);
		    	
		    	SetPVarInt(playerid, "Quest_Object_1", CreatePlayerObject(playerid, 1210,-1554.09997559,-429.29998779,5.30000019,0.00000000,0.00000000,348.00000000)); //object(briefcase) (1)

                SetPlayerCheckpoint(playerid, -1554.09997559,-429.29998779,5.30000019, 2.0);
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_1_GET;
                
			    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			    Забери мой кейс с деньгами, его оставили в аэропорту San Fierro и\n\
			    привези его на железнодорожную станцию. Чтобы добраться до аэропорта\n\
			    можешь взять мою машину.\n\n\
				"RGB_GREY"Чтобы отменить квест, используйте /endquest", "Ок", "");

				GivePVarInt(playerid, "Total_Quests", 1);
				MySQL_UpdateInt(playerid, "Total_Quests");
				DeletePVar(playerid, "Start_Quest");
				SetPVarInt(playerid, "On_Quest", 1); // Сейчас выполняет квест
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 273:
		{
		    if(response)
			{
				if(QuestCars[playerid][0] != 0) DestroyVehicle(QuestCars[playerid][0]);

				if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.657135,-1398.872558,14.389949)) // LS
				{
					QuestCars[playerid][0] = CreateVehicle(428, 335.929351, -1376.764526, 13.638491, 118.115570, 1, 1, -1);
				}
				else // SF
				{
				    QuestCars[playerid][0] = CreateVehicle(428, -1995.200073, 138.025680, 27.005910, 358.468261, 1, 1, -1);
				}
		  		SetVehicleVirtualWorld(QuestCars[playerid][0], playerid+2000);
		  		SetPlayerVirtualWorld(playerid, playerid+2000);

		    	Gas[QuestCars[playerid][0]] = 100;
		    	
		    	SetPlayerCheckpoint(playerid, 2369.384765, 2407.991210, 10.151538, 5.0);
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_2_LV_1;

			    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			    Машина, как всегда, будет ждать тебя на улице. Только поторопись.\n\n\
				"RGB_GREY"Чтобы отменить квест, используйте /endquest", "Ок", "");

				RemovePlayerMapIcon(playerid, ICON_QUEST);
				
				GivePVarInt(playerid, "Total_Quests", 1);
				MySQL_UpdateInt(playerid, "Total_Quests");
				DeletePVar(playerid, "Start_Quest");
				SetPVarInt(playerid, "On_Quest", 1); // Сейчас выполняет квест
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 274:
		{
		    if(response)
			{
				if(QuestCars[playerid][0] != 0) DestroyVehicle(QuestCars[playerid][0]);

				if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.657135,-1398.872558,14.389949)) // LS
				{
					QuestCars[playerid][0] = CreateVehicle(408, 335.929351, -1376.764526, 13.638491, 118.115570, -1, -1, -1);
				}
				else // SF
				{
				    QuestCars[playerid][0] = CreateVehicle(408, -1995.200073, 138.025680, 27.005910, 358.468261, -1, -1, -1);
				}
		  		SetVehicleVirtualWorld(QuestCars[playerid][0], playerid+2000);
		  		SetPlayerVirtualWorld(playerid, playerid+2000);

		    	Gas[QuestCars[playerid][0]] = 100;

				SetPVarInt(playerid, "Quest_Object_1", CreatePlayerObject(playerid, 1327,-2628.30004883,1370.09997559,5.90000010,0.00000000,90.00000000,280.00000000));
				SetPVarInt(playerid, "Quest_Object_2", CreatePlayerObject(playerid, 1338,-2639.50000000,1359.69995117,6.90000010,0.00000000,0.00000000,68.00000000));
				SetPVarInt(playerid, "Quest_Object_3", CreatePlayerObject(playerid, 1355,-2633.89990234,1351.50000000,6.30000019,0.00000000,0.00000000,300.00000000));
				SetPVarInt(playerid, "Quest_Object_4", CreatePlayerObject(playerid, 1442,-2620.00000000,1354.30004883,6.69999981,0.00000000,0.00000000,0.00000000));
				SetPVarInt(playerid, "Quest_Object_5", CreatePlayerObject(playerid, 1220,-2627.39990234,1354.90002441,6.40000010,0.00000000,0.00000000,0.00000000));
				SetPVarInt(playerid, "Quest_Object_6", CreatePlayerObject(playerid, 1450,-2621.00000000,1346.69995117,6.80000019,0.00000000,0.00000000,314.00000000));


		    	SetPlayerCheckpoint(playerid, -2619.965820, 1361.164184, 6.463078, 2.0);
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_3_GOTO;

			    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			    Машина ждет на улице, можешь приступать к работе.\n\n\
				"RGB_GREY"Чтобы отменить квест, используйте /endquest", "Ок", "");

				RemovePlayerMapIcon(playerid, ICON_QUEST);
				
				GivePVarInt(playerid, "Total_Quests", 1);
				MySQL_UpdateInt(playerid, "Total_Quests");
				DeletePVar(playerid, "Start_Quest");
				SetPVarInt(playerid, "On_Quest", 1); // Сейчас выполняет квест
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 275:
		{
		    if(response)
			{
				if(QuestCars[playerid][0] != 0) DestroyVehicle(QuestCars[playerid][0]);

				if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.657135,-1398.872558,14.389949)) // LS
				{
					QuestCars[playerid][0] = CreateVehicle(494, 335.929351, -1376.764526, 13.638491, 118.115570, 3, 6, -1);
				}
				else // SF
				{
				    QuestCars[playerid][0] = CreateVehicle(494, -1995.200073, 138.025680, 27.005910, 358.468261, 3, 6, -1);
				}
		  		SetVehicleVirtualWorld(QuestCars[playerid][0], playerid+2000);
		  		SetPlayerVirtualWorld(playerid, playerid+2000);

		    	Gas[QuestCars[playerid][0]] = 100;


		    	SetPlayerCheckpoint(playerid, -1900.681518,-1310.113891,39.371776, 5.0);
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_4_START;

			    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			    Машина для гонки уже подготовлена, отправляйся на трек.\n\n\
				"RGB_GREY"Чтобы отменить квест, используйте /endquest", "Ок", "");

				RemovePlayerMapIcon(playerid, ICON_QUEST);
				
				GivePVarInt(playerid, "Total_Quests", 1);
				MySQL_UpdateInt(playerid, "Total_Quests");
				DeletePVar(playerid, "Start_Quest");
				SetPVarInt(playerid, "On_Quest", 1); // Сейчас выполняет квест
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 276:
		{
		    if(response)
			{
				if(QuestCars[playerid][0] != 0) DestroyVehicle(QuestCars[playerid][0]);

				if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.657135,-1398.872558,14.389949)) // LS
				{
					QuestCars[playerid][0] = CreateVehicle(456, 335.929351, -1376.764526, 13.638491, 118.115570, -1, -1, -1);
				}
				else // SF
				{
				    QuestCars[playerid][0] = CreateVehicle(456, -1995.200073, 138.025680, 27.005910, 358.468261, -1, -1, -1);
				}
		  		SetVehicleVirtualWorld(QuestCars[playerid][0], playerid+2000);
		  		SetPlayerVirtualWorld(playerid, playerid+2000);
		    	Gas[QuestCars[playerid][0]] = 100;

				
				QuestCars[playerid][1] = CreateVehicle(530,-1915.875244,-1728.128540,21.514404,308.991088, -1, -1, -1);
		  		SetVehicleVirtualWorld(QuestCars[playerid][1], playerid+2000);
		    	Gas[QuestCars[playerid][1]] = 100;
				
				SetPVarInt(playerid, "Quest_Object_1", CreatePlayerObject(playerid, 1224, -1911.09997559,-1714.59997559,21.39999962,0.00000000,0.00000000,0.00000000)); //object(woodenbox) (1)
				SetPVarInt(playerid, "Quest_Object_2", CreatePlayerObject(playerid, 1224, -1908.69995117,-1712.40002441,21.39999962,0.00000000,0.00000000,0.00000000)); //object(woodenbox) (2)
				SetPVarInt(playerid, "Quest_Object_3", CreatePlayerObject(playerid, 1224, -1905.59997559,-1712.19995117,21.39999962,0.00000000,0.00000000,0.00000000)); //object(woodenbox) (3)
				SetPVarInt(playerid, "Quest_Object_4", CreatePlayerObject(playerid, 1224, -1902.69995117,-1712.19995117,21.39999962,0.00000000,0.00000000,0.00000000)); //object(woodenbox) (4)
				SetPVarInt(playerid, "Quest_Object_5", CreatePlayerObject(playerid, 1224, -1901.50000000,-1715.00000000,21.39999962,0.00000000,0.00000000,0.00000000)); //object(woodenbox) (5)


		    	SetPlayerCheckpoint(playerid, -1908.053710,-1735.586547,21.750000, 5.0);
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_5_DUMP;

			    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			    Отправляйся на свалку и подбери там все ящики с оружием.\n\n\
				"RGB_GREY"Чтобы отменить квест, используйте /endquest", "Ок", "");

				RemovePlayerMapIcon(playerid, ICON_QUEST);

				GivePVarInt(playerid, "Total_Quests", 1);
				MySQL_UpdateInt(playerid, "Total_Quests");
				DeletePVar(playerid, "Start_Quest");
				SetPVarInt(playerid, "On_Quest", 1); // Сейчас выполняет квест
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}
		case 277:
		{
		    if(response)
			{
				if(QuestCars[playerid][0] != 0) DestroyVehicle(QuestCars[playerid][0]);

				if(IsPlayerInRangeOfPoint(playerid, 10.0, 339.657135,-1398.872558,14.389949)) // LS
				{
					QuestCars[playerid][0] = CreateVehicle(542, 335.929351, -1376.764526, 13.638491, 118.115570, -1, -1, -1);
				}
				else // SF
				{
				    QuestCars[playerid][0] = CreateVehicle(542, -1995.200073, 138.025680, 27.005910, 358.468261, -1, -1, -1);
				}
		  		SetVehicleVirtualWorld(QuestCars[playerid][0], playerid+2000);
		  		SetPlayerVirtualWorld(playerid, playerid+2000);
		    	Gas[QuestCars[playerid][0]] = 100;


				QuestCars[playerid][1] = CreateVehicle(512,17.051645,-186.171707,1.111462,352.544006, -1, -1, -1);
		  		SetVehicleVirtualWorld(QuestCars[playerid][1], playerid+2000);
		    	Gas[QuestCars[playerid][1]] = 100;


		    	SetPlayerCheckpoint(playerid, 17.051645,-186.171707,1.111462, 6.0);
	            gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_6_AREA;

			    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			    Самолет уже подготовлен, отправляйся на поле и возьми его.\n\n\
				"RGB_GREY"Чтобы отменить квест, используйте /endquest", "Ок", "");

				RemovePlayerMapIcon(playerid, ICON_QUEST);

				GivePVarInt(playerid, "Total_Quests", 1);
				MySQL_UpdateInt(playerid, "Total_Quests");
				DeletePVar(playerid, "Start_Quest");
				SetPVarInt(playerid, "On_Quest", 1); // Сейчас выполняет квест
			}
			else SetTimerEx("SetOrder", 2000, false, "i", playerid);
			return 1;
		}

		
		case 280:
		{
		    if(response)
			{
			    SetPVarInt(playerid, "Next_Quest", rand(gettime()+1500, gettime()+2500));
			    
		    	TakingLesson[playerid] = 0;
			    DeletePVar(playerid, "On_Quest");
				gPlayerCheckpointStatus[playerid] = 0;
				
				DisablePlayerCheckpoint(playerid);
				DisablePlayerRaceCheckpoint(playerid);
				
				SendClientMessage(playerid, COLOR_GREY, "Задание провалено");
				SetPlayerHealth(playerid, 0.0);
		        RemovePlayerMapIcon(playerid, ICON_QUEST);

				for(new i; i < sizeof(QuestCars[]); i++)
				{
					if(QuestCars[playerid][i] != 0)
					{
						DestroyVehicle(QuestCars[playerid][i]);
						QuestCars[playerid][i] = 0;
					}
				}
				for(new i; i < 10; i++)
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, i))
					{
						RemovePlayerAttachedObject(playerid, i);
					}
				}
				if(GetPVarInt(playerid, "Quest_Object_1") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_1")), DeletePVar(playerid, "Quest_Object_1");
				if(GetPVarInt(playerid, "Quest_Object_2") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_2")), DeletePVar(playerid, "Quest_Object_2");
				if(GetPVarInt(playerid, "Quest_Object_3") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_3")), DeletePVar(playerid, "Quest_Object_3");
				if(GetPVarInt(playerid, "Quest_Object_4") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_4")), DeletePVar(playerid, "Quest_Object_4");
				if(GetPVarInt(playerid, "Quest_Object_5") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_5")), DeletePVar(playerid, "Quest_Object_5");
				if(GetPVarInt(playerid, "Quest_Object_6") != 0) DestroyPlayerObject(playerid, GetPVarInt(playerid, "Quest_Object_6")), DeletePVar(playerid, "Quest_Object_6");
			}
			return 1;
		}
		case 281:
		{
		    if(response)
		    {
		        globalstr = "";
		        switch(listitem)
		        {
		            case 0:
		            {
		                for(new i; i < sizeof(BizzInfo); i ++)
		                {
		                    switch(i)
		                    {
			                	case 0, 1, 3, 7, 14, 15, 16, 17:
			                	{
									format(globalstr, sizeof(globalstr), "%s"RGB_GREEN"[Металл]"RGB_WHITE" | %d/%d | $%d | %s\n", globalstr, BizzInfo[i][bProducts], BizzInfo[i][bMaxProducts], BizzInfo[i][bPriceProd], BizzInfo[i][bDiscription]);
								}
			                	default:
			                	{
									format(globalstr, sizeof(globalstr), "%s"RGB_YELLOW"[Прод-ы]"RGB_WHITE" | %d/%d | $%d | %s\n", globalstr, BizzInfo[i][bProducts], BizzInfo[i][bMaxProducts], BizzInfo[i][bPriceProd], BizzInfo[i][bDiscription]);
			                	}
		                	}
		                }
		                ShowPlayerDialog(playerid, 282, DIALOG_STYLE_LIST, RGB_SERVER"[Тип] | Продукты | Закупка | Название", globalstr, "Найти", "Назад");
		            }
		            case 1:
		            {
		                for(new i; i < sizeof(SBizzInfo); i ++)
		                {
		                    switch(i)
		                    {
		                        case 3: 		  format(globalstr, sizeof(globalstr), "%s"RGB_GREEN"[Нефть]"RGB_WHITE" | %d/%d | $%d | %s\n", globalstr, SBizzInfo[i][sbProducts], SBizzInfo[i][sbMaxProducts], SBizzInfo[i][sbPriceProd], SBizzInfo[i][sbDiscription]);
		                        case 15..29:	  format(globalstr, sizeof(globalstr), "%s"RGB_BLUE"[Бензин]"RGB_WHITE" | %d/%d | $%d | %s\n", globalstr, SBizzInfo[i][sbProducts], SBizzInfo[i][sbMaxProducts], SBizzInfo[i][sbPriceProd], SBizzInfo[i][sbDiscription]);
		                        case OIL_COMPANY: format(globalstr, sizeof(globalstr), "%s"RGB_GREY"[----]"RGB_WHITE" | %d/%d | $%d | %s\n", globalstr, SBizzInfo[i][sbProducts], SBizzInfo[i][sbMaxProducts], SBizzInfo[i][sbPriceProd], SBizzInfo[i][sbDiscription]);
		                        default: 		  format(globalstr, sizeof(globalstr), "%s"RGB_YELLOW"[Прод-ы]"RGB_WHITE" | %d/%d | $%d | %s\n", globalstr, SBizzInfo[i][sbProducts], SBizzInfo[i][sbMaxProducts], SBizzInfo[i][sbPriceProd], SBizzInfo[i][sbDiscription]);
		                    }
		                }
		                ShowPlayerDialog(playerid, 283, DIALOG_STYLE_LIST, RGB_SERVER"[Тип] | Продукты | Закупка | Название", globalstr, "Найти", "Назад");
		            }
				}
				globalstr = "";
		    }
			return 1;
		}
		case 282:
		{
		    if(response)
		    {
		        if(listitem < 0 || listitem >= sizeof(BizzInfo)) return 1;
		    	SetPlayerCheckpoint(playerid, BizzInfo[listitem][bEntranceX], BizzInfo[listitem][bEntranceY], BizzInfo[listitem][bEntranceZ], 10.0);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE "GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
		    }
			else
			{
			    ShowPlayerDialog(playerid, 281, DIALOG_STYLE_LIST, RGB_SERVER"Тип бизнеса", "Магазин\nКомпания", "Далее", "Отмена");
			}
			return 1;
		}
		case 283:
		{
		    if(response)
		    {
		        if(listitem < 0 || listitem >= sizeof(SBizzInfo)) return 1;
		    	SetPlayerCheckpoint(playerid, SBizzInfo[listitem][sbEntranceX], SBizzInfo[listitem][sbEntranceY], SBizzInfo[listitem][sbEntranceZ], 10.0);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_GPS;
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE "GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
		    }
			else
			{
			    ShowPlayerDialog(playerid, 281, DIALOG_STYLE_LIST, RGB_SERVER"Тип бизнеса", "Магазин\nКомпания", "Далее", "Отмена");
			}
			return 1;
		}
		case 284:
		{
		    if(response)
		    {
				new d = GetPVarInt(playerid, "HEnter");
				switch(random(3))
				{
				    case 0: 
					{
					    if(HouseInfo[d][hSignal] != 0)
					    {
	   						format(string, sizeof(string), "Диспетчер: Внимание, сработала сигнализация в доме номер %d, грабитель: %s[%d]", d, GetName(playerid), playerid);
							for(new i = 0; i < MAX_PLAYERS; i++)
							{
								if(!IsPlayerConnected(i) || !IsACop(i)) continue;
								SendClientMessage(i, TEAM_BLUE_COLOR, string);
							}
						}
					    HouseInfo[d][hRobbed] = gettime()+60;
					    SendClientMessage(playerid, COLOR_GREEN, "У Вас есть 1 минута, чтобы произвести ограбление");
					    
					    if(WantedLevel[playerid] < 10)
						{
							WantedLevel[playerid] ++;
				    		SetPlayerWantedLevel(playerid, WantedLevel[playerid]); // дали розыск
							WantedPoints[playerid] = WantedLevel[playerid];
						}
					}
					default:
					{
					    HouseInfo[d][hRobTry] ++;
					    if(HouseInfo[d][hRobTry] > 3) SendClientMessage(playerid, COLOR_GREEN, "Вы не можете взломать этот замок");
						else SendClientMessage(playerid, COLOR_GREEN, "Отмычка сломалась");
					}
				}
		    }
		    DeletePVar(playerid, "HEnter");
		    SetTimerEx("SetOrder", 2500, 0, "d", playerid);
		    return 1;
		}
		case 285:
		{
		    if(response)
		    {
			    new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

				if(GetPlayerPCash(playerid) < 10000)
				{
				    ShowHPanel(playerid);
				    return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"У Вас недостаточно денег для покупки сигнализации");
				}

				GivePlayerPCash(playerid, -10000, "Kupil signaliz");
		        GiveSBizMoney(6, 10000);

		        HouseInfo[id][hSignal] = 1;
		        SBizzInfo[6][sbProducts]--;

		        GameTextForPlayer(playerid, "~r~-$10000", 3000, 1);
		        SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"[Дом] "RGB_WHITE"Вы приобрели сигнализацию для Вашего дома");

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
			return 1;
		}
		case 286:
		{
		    if(response)
		    {
		        if(strlen(inputtext) < 1 || strlen(inputtext) > 20)
		        {
		            return ShowPlayerDialog(playerid, 286, DIALOG_STYLE_INPUT, "  ",  RGB_WHITE"Укажите ник игрока, который привел Вас на сервер.\n       Если такого игрока нет, пропустите этот шаг.", "Готово", "Пропуск");
		        }
		        
		        if(strcmp(GetName(playerid), inputtext, true) == 0)
		        {
		            SetPVarInt(playerid, "FriendID", 0);
		            MySQL_UpdateInt(playerid, "FriendID");
		            return 1;
		        }
		        new CheckBadSymbols;
				for(new i; i < strlen(inputtext); i++)
				{
				    switch(inputtext[i])
				    {
				        case 'a'..'z', 'A'..'Z', '0'..'9', '[', ']', '.', '_': {}
				        default: CheckBadSymbols++;
					}
				}
		        if(CheckBadSymbols == 0) // Если норм ник
				{
			        format(loginmsg,sizeof(loginmsg), "SELECT * FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", inputtext);
					mysql_query(loginmsg);
					mysql_store_result();
					if(mysql_num_rows() == 1)
					{
					    new Level[10];
					    mysql_fetch_field("Level", Level);
					    if(strval(Level) > 2)
					    {
	  						new FriendID[12];
					    	mysql_fetch_field("id", FriendID);
					    	SetPVarInt(playerid, "FriendID", strval(FriendID));
				    	}
				    	else
				    	{
				    	    SetPVarInt(playerid, "FriendID", 0);
				    	}
					}
					mysql_free_result();
		        }
		        else
		        {
		            SetPVarInt(playerid, "FriendID", 0);
		        }
		    }
			else
			{
			    SetPVarInt(playerid, "FriendID", 0);
			}
			MySQL_UpdateInt(playerid, "FriendID");
			return 1;
		}
		case 287:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "Team") == 0 || GetPVarInt(playerid, "Team") > sizeof(ClothesMan))
		        {
		            SetPVarInt(playerid, "Skin", 7);
				}
				else
				{
				    if(GetPVarInt(playerid, "Select_Skin") == 0)
				    {
				        SetPVarInt(playerid, "Select_Skin", ClothesMan[GetPVarInt(playerid, "Team")-1][0]);
				    }
					SetPVarInt(playerid, "Skin", GetPVarInt(playerid, "Select_Skin"));
				}
				TogglePlayerControllable(playerid, 1);
		        SetCameraBehindPlayer(playerid);
		        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
		        DeletePVar(playerid, "Select_Skin");
		        DeletePVar(playerid, "InClothShop");
				DeletePVar(playerid, "SelectType_Skin");
		    }
		    else
		    {
		        new t = GetPVarInt(playerid, "Team") - 1;
		        if(t < 0 || t >= TOTAL_FACTIONS) return 1;
		        if(GetPVarInt(playerid, "SelectType_Skin") == 1) ShowMenuForPlayer(Victim_Menu_Man[t], playerid);
		        else ShowMenuForPlayer(Victim_Menu_Woman[t], playerid);
		    }
		    return 1;
		}
		case 288:
		{
		    ShowMenuForPlayer(Civilian_Man[0], playerid);
		    return 1;
		}
		case 289:
		{
		    ShowMenuForPlayer(Civilian_Woman[0], playerid);
		    return 1;
		}
		case 290:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "Team") != 0)
		        {
			        ReplaceSkin(playerid);
					DeletePVar(playerid, "Scroll_Skins");
					DeletePVar(playerid, "Scroll_Skin2");
					TogglePlayerControllable(playerid, 1);
			        SetCameraBehindPlayer(playerid);
			        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
			        DeletePVar(playerid, "InClothShop");
					DeletePVar(playerid, "SelectType_Skin");

				/*	new Menu:myMenu = GetPlayerMenu(playerid);
				   	HideMenuForPlayer(myMenu, playerid);*/
					return 1;
		        }
		        
		        
		        new skin = GetPVarInt(playerid, "Scroll_Skins");
		        if(GetPlayerPCash(playerid) < NormalPedsMan[skin][1])
		        {
		            ShowMenuForPlayer(Civilian_Man[0], playerid);
		            return 1;
		        }
		        SetPVarInt(playerid, "Skin", NormalPedsMan[skin][0]);
		        SetPlayerSkinEx(playerid, NormalPedsMan[skin][0]);
		        GivePlayerPCash(playerid, -NormalPedsMan[skin][1], "Kypil skin");

				From_Skins_Nalog += NormalPedsMan[skin][1];
		        
		        format(string, sizeof(string), "~r~-$%d", NormalPedsMan[skin][1]);
				GameTextForPlayer(playerid, string, 5000, 1);
				DeletePVar(playerid, "Scroll_Skins");

				TogglePlayerControllable(playerid, 1);
		        SetCameraBehindPlayer(playerid);
		        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
		        DeletePVar(playerid, "InClothShop");
		        DeletePVar(playerid, "SelectType_Skin");
		    }
		    else
		    {
		        ShowMenuForPlayer(Civilian_Man[0], playerid);
		    }
		    return 1;
		}
		case 291:
		{
		    if(response)
		    {
		        if(GetPVarInt(playerid, "Team") != 0)
		        {
			        ReplaceSkin(playerid);
					DeletePVar(playerid, "Scroll_Skins");
					DeletePVar(playerid, "Scroll_Skin2");
					TogglePlayerControllable(playerid, 1);
			        SetCameraBehindPlayer(playerid);
			        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
			        DeletePVar(playerid, "InClothShop");
			        DeletePVar(playerid, "SelectType_Skin");

			/*		new Menu:myMenu = GetPlayerMenu(playerid);
				   	HideMenuForPlayer(myMenu, playerid);*/
					return 1;
		        }
		        
		        new skin = GetPVarInt(playerid, "Scroll_Skins2");
		        if(GetPlayerPCash(playerid) < NormalPedsWoman[skin][1])
		        {
		            ShowMenuForPlayer(Civilian_Woman[0], playerid);
		            return 1;
		        }
		        SetPVarInt(playerid, "Skin", NormalPedsWoman[skin][0]);
		        SetPlayerSkinEx(playerid, NormalPedsWoman[skin][0]);
		        GivePlayerPCash(playerid, -NormalPedsWoman[skin][1], "Kypil Skin 2");
		        
		        From_Skins_Nalog += NormalPedsWoman[skin][1];

		        format(string, sizeof(string), "~r~-$%d", NormalPedsWoman[skin][1]);
				GameTextForPlayer(playerid, string, 5000, 1);
				DeletePVar(playerid, "Scroll_Skins2");

				TogglePlayerControllable(playerid, 1);
		        SetCameraBehindPlayer(playerid);
		        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
		        DeletePVar(playerid, "InClothShop");
		        DeletePVar(playerid, "SelectType_Skin");
		    }
		    else
		    {
		        ShowMenuForPlayer(Civilian_Woman[0], playerid);
		    }
		    return 1;
		}
		case 292:
		{
		    if(response)
		    {
				SetPVarInt(playerid, "Med_Type", listitem);

				globalstr = "";

				new name[24];
				new TotalPla;
				new Float:pos[3];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				for(new i; i < MAX_PLAYERS; i ++)
				{
					if(IsPlayerInRangeOfPoint(i, 15.0, pos[0], pos[1], pos[2]))
					{
	   					GetPlayerName(i, name, sizeof(name));
						format(globalstr, sizeof(globalstr), "%s%s\n", globalstr, name);
						TotalPla ++;
		 				if(TotalPla == 40)
						{
							break;
						}
					}
				}
				ShowPlayerDialog(playerid, 293, DIALOG_STYLE_LIST, RGB_SERVER"Кому предоставить услугу", globalstr, "Далее", "Отмена");

				globalstr = "";
			}
			return 1;
		}
		case 293:
		{
		    if(response)
		    {
				new id = ReturnUser(inputtext);

				if(!IsPlayerConnected(id)) 					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок покинул сервер", "Ok", "");
		        if(!ProxDetectorS(16.0, playerid, id)) 		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок слишком далеко от Вас", "Ok", "");
				if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Вы должны быть с игроком в одной машине", "Ok", "");

				SetPVarInt(playerid, "Med_Player", id);


				ShowPlayerDialog(playerid, 294, DIALOG_STYLE_INPUT, RGB_SERVER"Стоимость услуг",  RGB_WHITE"Укажите стоимость услуг: "RGB_GREY"($1-$5000)", "Далее", "Отмена");
		    }
		    else DeletePVar(playerid, "Med_Type");
		    return 1;
		}
		case 294:
		{
		    if(response)
		    {
		        new money = strval(inputtext);
		        if(money < 1 || money > 5000) return ShowPlayerDialog(playerid, 294, DIALOG_STYLE_INPUT, RGB_SERVER"Стоимость услуг",  RGB_WHITE"Укажите стоимость услуг: "RGB_GREY"($1-$5000)", "Далее", "Отмена");

		        new id = GetPVarInt(playerid, "Med_Player");
		        new medtype = GetPVarInt(playerid, "Med_Type");

		        DeletePVar(playerid, "Med_Type");
		        DeletePVar(playerid, "Med_Player");

	  			if(!IsPlayerConnected(id)) 					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок покинул сервер", "Ok", "");
		        if(!ProxDetectorS(10.0, playerid, id)) 		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"Этот игрок слишком далеко от Вас", "Ok", "");

				new mtext[50];
				switch(medtype)
				{
				    case 0: mtext = "лечение";
				    default: mtext = "лечение наркозависимости";
				}

				format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s[%d]"RGB_WHITE" %s за $%d", GetName(id), id, mtext, money);
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), RGB_GREEN"%s[%d]"RGB_WHITE" Предложил Вам %s за $%d", GetName(playerid), playerid, mtext, money);
				SendClientMessage(id, COLOR_WHITE, string);
				
				SendClientMessage(id, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

				SetPVarInt(id, "Med_Medtype", medtype);
				SetPVarInt(id, "Med_Price", money);
				SetPVarInt(id, "Med_Player", playerid);
				SetPVarInt(id, "Accept_Type", 14);
			}
		    else
		    {
		        DeletePVar(playerid, "Lic_Type");
		        DeletePVar(playerid, "Lic_Player");
		    }
		    return 1;
		}
		case 295:
		{
			if(response)
		    {
		        switch(listitem)
		        {
		            case 0: // Карта
		            {
			    		ShowPlayerDialog(playerid, 296, DIALOG_STYLE_LIST, RGB_SERVER"Выбор трассы", "LS кольцо\nSF кольцо\nLV кольцо #1\nLV спринт\nLS спринт\nLV кольцо #2", "Выбрать", "Назад");
		            }
		            case 1: // Тачки
		            {
		                globalstr = "";
						for(new i; i < sizeof(Racer_Cars_Pvp); i++)
						{
						    format(globalstr, sizeof(globalstr), "%s%s\n", globalstr, Racer_Cars_Pvp[i][CarName]);
						}
						ShowPlayerDialog(playerid, 300, DIALOG_STYLE_LIST, RGB_SERVER"Выбор автомобиля", globalstr, "Выбрать", "Назад");
						globalstr = "";
		            }
		            case 2: // Пригласить игрока
					{
		                globalstr = "";

		               	new name[24];
						new TotalPla;
						new Float:pos[3];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						for(new i; i < MAX_PLAYERS; i ++)
						{
							if(IsPlayerInRangeOfPoint(i, 10.0, pos[0], pos[1], pos[2]))
							{
							    if(i == playerid) continue;
		    					GetPlayerName(i, name, sizeof(name));
								format(globalstr, sizeof(globalstr), "%s%s\n", globalstr, name);
								TotalPla ++;
					 			if(TotalPla == 40)
								{
									break;
								}
							}
						}
						if(TotalPla == 0)
						{
		                    ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Выбор соперника", RGB_WHITE"Нет поблизости игроков, с которыми можно начать гонку!", "Ok", "");
						}
						else
						{
						    ShowPlayerDialog(playerid, 298, DIALOG_STYLE_LIST, RGB_SERVER"Выбор соперника", globalstr, "Выбрать", "Назад");
						}
						globalstr = "";
					}
					case 3: // Ставка
					{
		       			ShowPlayerDialog(playerid, 299, DIALOG_STYLE_INPUT, RGB_SERVER"Денежная ставка",  RGB_WHITE"Сколько денег хотите поставить на свой выигрыш.\nУчтите, что у второго игрока должно хватать денег,\nчтобы начать гонку с Вами: "RGB_GREY"($100-$50.000)", "Готово", "Назад");
					}
		            case 4: // Начать
		            {
						if(GetPVarInt(playerid, "Race_Pvp_Map") == 0)	return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Вы не выбрали трассу для гонки", "Ok", "");

						new playa = GetPVarInt(playerid, "Race_Pvp_Play");

						if(playa == -1) 							return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Вы не выбрали соперника для проведения гонки", "Ok", "");
						if(!IsPlayerConnected(playa)) 				return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Соперник покинул сервер", "Ok", "");
						if(!ProxDetectorS(10.0, playerid, playa)) 	return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Соперник слишком далеко от Вас", "Ok", "");
						if(GetPVarInt(playerid, "Race_Pvp_Money") < 1) 	return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Вы не сделали ставку", "Ok", "");
						if(GetPVarInt(playa, "Race_Pvp_Create") == 1) 	return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Этот игрок сейчас создает гонку", "Ok", "");
						if(GetPVarInt(playa, "Race_Pvp_On") == 1)   return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Начало гонки", RGB_WHITE"Игрок уже на гонке", "Ok", "");

						new map[40];
						switch(GetPVarInt(playerid, "Race_Pvp_Map"))
						{
						    case 1: map = "LS кольцо";
						    case 2: map = "SF кольцо";
						    case 3: map = "LV кольцо #1";
						    case 4: map = "LV спринт";
						    case 5: map = "LS спринт";
						    case 6: map = "LV кольцо #2";
						}

						format(string, sizeof(string), RGB_WHITE"\
						%s предлагает Вам гонку!\n\n\
						Карта:\t\t"RGB_SERVER"%s"RGB_WHITE"\n\
						Авто:\t\t"RGB_SERVER"%s"RGB_WHITE"\n\
						Ставка:\t"RGB_SERVER"$%d"RGB_WHITE,
						GetName(playerid), map, Racer_Cars_Pvp[GetPVarInt(playerid, "Race_Pvp_Car")][CarName], GetPVarInt(playerid, "Race_Pvp_Money"));

						ShowPlayerDialog(playa, 301, DIALOG_STYLE_MSGBOX, RGB_SERVER"Вам предлагают гонку", string, "Принять", "Отказать");

						SetPVarInt(playa, "Race_Pvp_Play", playerid);

						SendClientMessage(playerid, COLOR_ORANGE, "Ожидайте ответа от соперника...");

						SetTimerEx("SetOrder", 5000, 0, "d", playerid);
		            }
		        }
		    }
		    else
		    {
		        SetTimerEx("SetOrder", 2000, 0, "d", playerid);
				ClearPVars_Race_Pvp(playerid);
			}
		    return 1;
		}
		case 296:
		{
			if(response)
			{
			    SetPVarInt(playerid, "Race_Pvp_Map", listitem+1);
			}
			ShowPlayerRacePvpInfo(playerid);
			return 1;
		}
		case 297:
		{
		    ShowPlayerRacePvpInfo(playerid);
		    return 1;
		}
		case 298:
		{
			if(response)
			{
			    new id = ReturnUser(inputtext);

			    if(!IsPlayerConnected(playerid))
			    {
		     		return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Этот игрок вышел с сервера", "Ok", "");
			    }
				if(!ProxDetectorS(15.0, playerid, id))
			    {
		     		return ShowPlayerDialog(playerid, 297, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Игрок слишком далеко", "Ok", "");
			    }

				SetPVarInt(playerid, "Race_Pvp_Play", id);
			}
			ShowPlayerRacePvpInfo(playerid);
			return 1;
		}
		case 299:
		{
			if(response)
			{
			    new money = strval(inputtext);
			    if(money < 100 || money > 50000) return ShowPlayerDialog(playerid, 299, DIALOG_STYLE_INPUT, RGB_SERVER"Денежная ставка",  RGB_WHITE"Сколько денег хотите поставить на свой выигрыш.\nУчтите, что у второго игрока должно хватать денег,\nчтобы начать гонку с Вами: "RGB_GREY"($100-$50.000)", "Готово", "Назад");
				if(GetPlayerPCash(playerid) < money) return ShowPlayerDialog(playerid, 299, DIALOG_STYLE_INPUT, RGB_SERVER"Денежная ставка",  RGB_WHITE"Сколько денег хотите поставить на свой выигрыш.\nУчтите, что у второго игрока должно хватать денег,\nчтобы начать гонку с Вами:  "RGB_GREY"(У Вас нет столько денег)", "Готово", "Назад");

				SetPVarInt(playerid, "Race_Pvp_Money", money);
			}
   			ShowPlayerRacePvpInfo(playerid);
			return 1;
		}
		case 300: // Выбор автомобиля
		{
		    if(response)
			{
			    SetPVarInt(playerid, "Race_Pvp_Car", listitem);
			}
		    ShowPlayerRacePvpInfo(playerid);
			return 1;
		}
		case 301:
		{
			new id = GetPVarInt(playerid, "Race_Pvp_Play");
			if(response)
			{
			
			    new vehs;
			    for(new i; i < MAX_VEHICLES; i++)
			    {
			        if(GetVehicleModel(i) > 0) vehs++;
				}
				if(vehs > 1700)
				{
                    ClearPVars_Race_Pvp(id);
		            ClearPVars_Race_Pvp(playerid);
				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"Ошибка в создании гонки, повторите позже", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"Ошибка в создании гонки, повторите позже", "Ok", "");
				}
			    if(GetPVarInt(id, "Race_Pvp_Play") != playerid)
			    {
				    ClearPVars_Race_Pvp(id);
		            ClearPVars_Race_Pvp(playerid);

				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"Нельзя приглашать сразу несколько человек", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"Нельзя приглашать сразу несколько человек", "Ok", "");
			    }
				if(!IsPlayerConnected(id))
				{
				    ClearPVars_Race_Pvp(playerid);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"Соперник покинул сервер!", "Ok", "");
				}
				if(!ProxDetectorS(10.0, playerid, id))
				{
				    ClearPVars_Race_Pvp(playerid);
				    ClearPVars_Race_Pvp(id);
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"Соперник слишком далеко от Вас!", "Ok", "");
				}
				if(GetPlayerPCash(id) < GetPVarInt(id, "Race_Pvp_Money"))
				{
				    ClearPVars_Race_Pvp(id);
		            ClearPVars_Race_Pvp(playerid);
				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"У Вас нет денег для ставки", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"У соперника нет денег для ставки", "Ok", "");
				}
				if(GetPlayerPCash(playerid) < GetPVarInt(id, "Race_Pvp_Money"))
				{
				    ClearPVars_Race_Pvp(id);
				    ClearPVars_Race_Pvp(playerid);
				    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"У соперника нет денег для ставки", "Ok", "");
					return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"У Вас нет денег для ставки", "Ok", "");
				}
				SetPlayerVirtualWorld(id, id+1000);
				SetPlayerVirtualWorld(playerid, id+1000);

				SetPlayerInterior(playerid, 0);
				SetPlayerInterior(id, 0);

				SetPlayerColor(playerid, COLOR_YELLOW);
				SetPlayerColor(id, COLOR_YELLOW);


				if(Pvp_Race_Car[playerid] != 0) DestroyVehicle(Pvp_Race_Car[playerid]);
				if(Pvp_Race_Car[id] != 0) DestroyVehicle(Pvp_Race_Car[id]);

                SetPVarInt(playerid, "Race_Pvp_Map", GetPVarInt(id, "Race_Pvp_Map"));

				switch(GetPVarInt(id, "Race_Pvp_Map"))
				{
				    case 1:
				    {
                        Pvp_Race_Car[playerid] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LS_Lap1[0][0], CarPos_LS_Lap1[0][1], CarPos_LS_Lap1[0][2], CarPos_LS_Lap1[0][3], 6, 6, 100);
                        Pvp_Race_Car[id] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LS_Lap1[1][0], CarPos_LS_Lap1[1][1], CarPos_LS_Lap1[1][2], CarPos_LS_Lap1[1][3], 6, 6, 100);
				    }
				    case 2:
				    {
                        Pvp_Race_Car[playerid] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_SF_Lap1[0][0], CarPos_SF_Lap1[0][1], CarPos_SF_Lap1[0][2], CarPos_SF_Lap1[0][3], 6, 6, 100);
                        Pvp_Race_Car[id] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_SF_Lap1[1][0], CarPos_SF_Lap1[1][1], CarPos_SF_Lap1[1][2], CarPos_SF_Lap1[1][3], 6, 6, 100);
				    }
				    case 3:
				    {
                        Pvp_Race_Car[playerid] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LV_Lap1[0][0], CarPos_LV_Lap1[0][1], CarPos_LV_Lap1[0][2], CarPos_LV_Lap1[0][3], 6, 6, 100);
                        Pvp_Race_Car[id] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LV_Lap1[1][0], CarPos_LV_Lap1[1][1], CarPos_LV_Lap1[1][2], CarPos_LV_Lap1[1][3], 6, 6, 100);
				    }
				    case 4:
				    {
                        Pvp_Race_Car[playerid] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LV_Sprint1[0][0], CarPos_LV_Sprint1[0][1], CarPos_LV_Sprint1[0][2], CarPos_LV_Sprint1[0][3], 6, 6, 100);
                        Pvp_Race_Car[id] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LV_Sprint1[1][0], CarPos_LV_Sprint1[1][1], CarPos_LV_Sprint1[1][2], CarPos_LV_Sprint1[1][3], 6, 6, 100);
				    }
				    case 5:
				    {
                        Pvp_Race_Car[playerid] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LS_Sprint1[0][0], CarPos_LS_Sprint1[0][1], CarPos_LS_Sprint1[0][2], CarPos_LS_Sprint1[0][3], 6, 6, 100);
                        Pvp_Race_Car[id] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LS_Sprint1[1][0], CarPos_LS_Sprint1[1][1], CarPos_LS_Sprint1[1][2], CarPos_LS_Sprint1[1][3], 6, 6, 100);
				    }
				    case 6:
				    {
                        Pvp_Race_Car[playerid] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LV_Lap2[0][0], CarPos_LV_Lap2[0][1], CarPos_LV_Lap2[0][2], CarPos_LV_Lap2[0][3], 6, 6, 100);
                        Pvp_Race_Car[id] = CreateVehicle(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][CarModel], CarPos_LV_Lap2[1][0], CarPos_LV_Lap2[1][1], CarPos_LV_Lap2[1][2], CarPos_LV_Lap2[1][3], 6, 6, 100);
				    }
				}
				
				if(Racer_Cars_Pvp[GetPVarInt(playerid, "Race_Pvp_Car")][n2o] == true) AddVehicleComponent(Pvp_Race_Car[playerid],   1008);
				if(Racer_Cars_Pvp[GetPVarInt(id, "Race_Pvp_Car")][n2o] == true) AddVehicleComponent(Pvp_Race_Car[id],   1008);


				SetVehicleVirtualWorld(Pvp_Race_Car[id], id+1000);
				SetVehicleVirtualWorld(Pvp_Race_Car[playerid], id+1000);

		    	Gas[Pvp_Race_Car[playerid]] = 100;
		    	Gas[Pvp_Race_Car[id]] = 100;

				SetVehicleParamsEx(Pvp_Race_Car[id],1,0,0,0,0,0,0);
				SetVehicleParamsEx(Pvp_Race_Car[playerid],1,0,0,0,0,0,0);

			    SetPVarInt(playerid, "InCar",  Pvp_Race_Car[playerid]);
			    SetPVarInt(id, "InCar",  Pvp_Race_Car[id]);

                HealthChanged[Pvp_Race_Car[playerid]] = true;
				PutPlayerInVehicleEx(playerid, Pvp_Race_Car[playerid], 0);
				
				HealthChanged[Pvp_Race_Car[id]] = true;
				PutPlayerInVehicleEx(id, Pvp_Race_Car[id], 0);

				SetCameraBehindPlayer(playerid);
				SetCameraBehindPlayer(id);

				SetPlayerHealthUAC(id, 100.0);
				SetPlayerHealthUAC(playerid, 100.0);


				SetPVarInt(playerid, "Race_Pvp_On", 1);
				SetPVarInt(id, "Race_Pvp_On", 1);

				SetPVarInt(playerid, "Race_Pvp_Money", GetPVarInt(id, "Race_Pvp_Money"));

				format(string, sizeof(string), "~r~-$%d", GetPVarInt(id, "Race_Pvp_Money"));
				GameTextForPlayer(playerid, string, 3000, 1);
				GameTextForPlayer(id, string, 3000, 1);

				GivePlayerPCash(playerid, -GetPVarInt(id, "Race_Pvp_Money"), "Race pvp");
				GivePlayerPCash(id, -GetPVarInt(id, "Race_Pvp_Money"), "Race pvp");


				SetTimerEx("Race_Pvp_Count", 1000, 0, "ddd", playerid, id, 3);
				SetTimerEx("Race_Pvp_Count", 2000, 0, "ddd", playerid, id, 2);
				SetTimerEx("Race_Pvp_Count", 3000, 0, "ddd", playerid, id, 1);
				SetTimerEx("Race_Pvp_Count", 4000, 0, "ddd", playerid, id, 0);

			}
			else
			{
			    ShowPlayerDialog(id, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"\tВаш соперник отказался от гонки", "Ok", "");
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Гонка отменена", RGB_WHITE"\tВы отказались от гонки", "Ok", "");
		     	SetTimerEx("SetOrder", 2000, 0, "d", id);

		        ClearPVars_Race_Pvp(id);
		        ClearPVars_Race_Pvp(playerid);
			}
			return 1;
		}
		case 302:
		{
		    if(GetPVarInt(playerid, "Wait_Pvp_Race") == 1) ShowPlayerDialog(playerid, 302 ,DIALOG_STYLE_MSGBOX, RGB_SERVER"Дождитесь начала гонки!", " ", "Ok", "");
		    return 1;
		}
		case 303:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(GetPVarInt(playerid, "AllowNameChange") > 0) return ShowNameChangeMenu(playerid);
			            else return ShowPlayerDialog(playerid, 304, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена ника", "{bbbbbb}У Вас нет возможности менять ник.", "Ок", "");
			        }
			        case 1:
			        {
			            if(GetPVarInt(playerid, "AllowCarNumberChange") < 1) return ShowPlayerDialog(playerid, 304, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена номера на автомобиле", "{bbbbbb}У Вас нет возможности менять номер на автомобиле.", "Ок", "");
		                if(GetPVarInt(playerid,"CarKey") == -1) return ShowPlayerDialog(playerid, 304, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена номера на автомобиле", "{bbbbbb}У Вас нет личного автомобиля.", "Ок", "");

			            ShowPlayerDialog(playerid, 305, DIALOG_STYLE_INPUT, RGB_SERVER"Смена номера на автомобиле",  "{bbbbbb}\
						Введите новый номер для своего автомобиля:\n\
						Номер может содержать символы английской раскладки, цифры, «.», «_».\n\
						Длина номера от 1 до 9 символов.", "Готово", "Отмена");

					}
					case 2:
					{
					    if(GetPVarInt(playerid, "TogWhisper") == 0) SetPVarInt(playerid, "TogWhisper", 1);
					    else DeletePVar(playerid, "TogWhisper");
					    ShowVipMenu(playerid);
					}
					case 3:
					{
					    if(GetPVarInt(playerid, "TogPhone") == 0) SetPVarInt(playerid, "TogPhone", 1);
					    else DeletePVar(playerid, "TogPhone");
					    ShowVipMenu(playerid);
					}
			    }
			}
			else ShowMainMenu(playerid);

			return 1;
		}
		case 304:
		{
			return ShowVipMenu(playerid);
		}
		case 305:
		{
		    if(response)
			{
				if(GetPVarInt(playerid,"CarKey") == -1) return ShowPlayerDialog(playerid, 304, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена номера на автомобиле", "{bbbbbb}У Вас нет личного автомобиля.", "Ок", "");
			    if(!ValidCarForNumber(CarInfo[playerid][cModel])) return ShowPlayerDialog(playerid, 304, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена номера на автомобиле", "{bbbbbb}На Вашем автомобиле нельзя сменить номер.", "Ок", "");

			    if(strlen(inputtext) > 9 || strlen(inputtext) < 1)
					return ShowPlayerDialog(playerid, 305, DIALOG_STYLE_INPUT, RGB_SERVER"Смена номера на автомобиле",  "{bbbbbb}\
						Введите новый номер для своего автомобиля:\n\
						Номер может содержать символы английской раскладки, цифры, «.», «_».\n\
						Длина номера от 1 до 9 символов.", "Готово", "Отмена");


			    for(new i; i < strlen(inputtext); i++)
			    {
			        switch(inputtext[i])
			        {
			            case 'a'..'z', 'A'..'Z', '0'..'9', '.', '_': {}
			            default: return ShowPlayerDialog(playerid, 305, DIALOG_STYLE_INPUT, RGB_SERVER"Смена номера на автомобиле",  "{bbbbbb}\
						Введите новый номер для своего автомобиля:\n\
						Номер может содержать символы английской раскладки, цифры, «.», «_».\n\
						Длина номера от 1 до 9 символов.", "Готово", "Отмена");
					}
				}

				strmid(CarInfo[playerid][cNumber], inputtext, 0, strlen(inputtext), 255);
				SetVehicleNumberPlate(CarInfo[playerid][cMaincar], CarInfo[playerid][cNumber]);


				format(string, sizeof(string), "{bbbbbb}Вы сменили номер на автомобиле - '%s'\n\
				Для изменения номера может потребоваться некоторое время.", inputtext);
				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Номер успешно изменен", string, "Ok", "");

				GivePVarInt(playerid, "AllowCarNumberChange", -1);
				MySQL_UpdateInt(playerid, "AllowCarNumberChange");

			}
			else ShowVipMenu(playerid);
			return 1;
		}
		case 306:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: SetPVarInt(playerid, "SellGun_Gun", 1); // 20
		            case 1: SetPVarInt(playerid, "SellGun_Gun", 2); // 30
		            case 2: SetPVarInt(playerid, "SellGun_Gun", 5); // 30
		            case 3: SetPVarInt(playerid, "SellGun_Gun", 6); // 35
		            case 4: SetPVarInt(playerid, "SellGun_Gun", 23); // 130
		            case 5: SetPVarInt(playerid, "SellGun_Gun", 24); // 200
		            case 6: SetPVarInt(playerid, "SellGun_Gun", 25); // 240
		            case 7: SetPVarInt(playerid, "SellGun_Gun", 29); // 230
		            case 8: SetPVarInt(playerid, "SellGun_Gun", 30); // 300
		            case 9: SetPVarInt(playerid, "SellGun_Gun", 31); // 300
		            case 10: SetPVarInt(playerid, "SellGun_Gun", 33); // 300
				}
		        ShowPlayerDialog(playerid, 307, DIALOG_STYLE_LIST, RGB_SERVER"Укажите цену",
		        "$100\n$200\n$300\n$500\n$700\n$1000\n$1500\n$2000\n$3000\n$4000\n$5000\n$6000",
		        "Далее", "Назад");
		    }
			return 1;
		}
		case 307:
		{
		    if(response)
			{
			    switch(listitem)
			    {
			        case 0: SetPVarInt(playerid, "SellGun_Money", 100);
			        case 1: SetPVarInt(playerid, "SellGun_Money", 200);
			        case 2: SetPVarInt(playerid, "SellGun_Money", 300);
			        case 3: SetPVarInt(playerid, "SellGun_Money", 500);
			        case 4: SetPVarInt(playerid, "SellGun_Money", 700);
			        case 5: SetPVarInt(playerid, "SellGun_Money", 1000);
			        case 6: SetPVarInt(playerid, "SellGun_Money", 1500);
			        case 7: SetPVarInt(playerid, "SellGun_Money", 2000);
			        case 8: SetPVarInt(playerid, "SellGun_Money", 3000);
			        case 9: SetPVarInt(playerid, "SellGun_Money", 4000);
			        case 10: SetPVarInt(playerid, "SellGun_Money", 5000);
			        case 11: SetPVarInt(playerid, "SellGun_Money", 6000);
				}
		 		globalstr = "";

				new name[24];
				new TotalPla;
				new Float:pos[3];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				for(new i; i < MAX_PLAYERS; i ++)
				{
					if(IsPlayerInRangeOfPoint(i, 15.0, pos[0], pos[1], pos[2]))
					{
		   				if(i == playerid) continue;
						GetPlayerName(i, name, sizeof(name));
						format(globalstr, sizeof(globalstr), "%s%s\n", globalstr, name);
						TotalPla ++;
		 				if(TotalPla == 40)
						{
							break;
						}
					}
				}
				if(TotalPla == 0) ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Выберите покупателя", RGB_WHITE"Поблизости нет игроков, которым можно продать оружие.", "Ok", "");
				else ShowPlayerDialog(playerid, 308, DIALOG_STYLE_LIST, RGB_SERVER"Выберите покупателя", globalstr, "Далее", "Назад");

				globalstr = "";
			}
			else
			{
				ShowPlayerDialog(playerid, 306, DIALOG_STYLE_LIST, RGB_SERVER"Оружие | Количество материалов",
				"Кастет | 20\nГольф Клюшка | 30\nБита | 30\nЛопата | 35\n9mm с глуш. | 130\nDesert Eagle | 200\nShotgun | 240\nMP5 | 230\nAK-47 | 300\nM4 | 300\nRifle | 300",
				"Далее", "Отмена");
				DeletePVar(playerid, "SellGun_Gun");
			}
			return 1;
		}
		case 308:
		{
		    if(response)
		    {
		    	new id = ReturnUser(inputtext);

				if(!IsPlayerConnected(playerid))
		  		{
		  			return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Этот игрок вышел с сервера", "Ok", "");
			    }
				if(!ProxDetectorS(15.0, playerid, id))
		  		{
		  			return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Игрок слишком далеко", "Ok", "");
			    }
			    if(GetPVarInt(id, "Level") < 3)
		  		{
		  			return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"У игрока низкий уровень", "Ok", "");
			    }
			    if(GetPVarInt(id, "Jailed") != 0)
		  		{
		  			return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Произошла ошибка", RGB_WHITE"Этот игрок в тюрьме", "Ok", "");
			    }

				format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" купить «%s» за $%d", GetName(id), aWeaponNames[GetPVarInt(playerid, "SellGun_Gun")], GetPVarInt(playerid, "SellGun_Money"));
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам %s за $%d", GetName(playerid), aWeaponNames[GetPVarInt(playerid, "SellGun_Gun")], GetPVarInt(playerid, "SellGun_Money"));
				SendClientMessage(id, COLOR_WHITE, string);
				SendClientMessage(id, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");


				SetPVarInt(id, "BuyGun_ID", playerid);
				SetPVarInt(id, "BuyGun_Weapon", GetPVarInt(playerid, "SellGun_Gun"));
				SetPVarInt(id, "BuyGun_Money", GetPVarInt(playerid, "SellGun_Money"));
				SetPVarInt(id, "Accept_Type", 18);

				DeletePVar(playerid, "SellGun_Gun");
				DeletePVar(playerid, "SellGun_Money");
		    }
		    else
		    {
		         ShowPlayerDialog(playerid, 307, DIALOG_STYLE_MSGBOX, RGB_SERVER"Укажите цену",
		        "$100\n$200\n$300\n$500\n$700\n$1000\n$1500\n$2000\n$3000\n$4000\n$5000\n$6000",
		        "Далее", "Назад");
		    }
			return 1;
		}
		case 309:
		{
		    if(response)
		    {
		        new mats = listitem+1;
		        new price = mats*50;

		        if(GetPlayerPCash(playerid) < price)
		        {
			     	ShowPlayerDialog(playerid, 309, DIALOG_STYLE_LIST, RGB_SERVER"Сколько купить заготовок",
			      	"1 ($50)\n2 ($100)\n3 ($150)\n4 ($200)\n5 ($250)\n6 ($300)\n7 ($350)\n8 ($400)\n9 ($450)\n10 ($500)",
			       	"Купить", "Отмена");
			       	return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		        }
		        if(MatsHolding[playerid] > 0)
		        {
		            return ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка","{ffffff}У Вас сейчас есть неизрасходованные заготовки", "Ok", "");
		        }

		    	GivePlayerPCash(playerid, - price, "Kypil zagotovki");
			    MatsHolding[playerid] = mats;

			    SetTimerEx("SetOrder", 2000, 0, "d", playerid);

			    SetPVarInt(playerid, "Check_Cheat_mats_1", gettime()+20);
			    
			    format(string, sizeof(string), "Вы купили %d заготовок за $%d. Переработайте их в материалы на складе LV", mats, price);
			    SendClientMessage(playerid, COLOR_WHITE, string);
		    }
		    else SetTimerEx("SetOrder", 2000, 0, "d", playerid);
		    return 1;
		}
		case 310:
		{
		    if(response)
		    {
		        Show247Menu(playerid);
		        new money = 0;
		        switch(listitem)
		        {
		            case 0: // Мобила (100)
					{
					    money = 100;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						new randphone = 100000 + random(899999);//minimum 1000  max 9999
						SetPVarInt(playerid,"PhoneNumber",randphone);
						MySQL_UpdateInt(playerid,"PhoneNumber");
						format(string, sizeof(string), "Новый номер вашего мобильного теперь: "RGB_GREEN"%d", randphone);
						SendClientMessage(playerid, COLOR_WHITE, string);
						SendClientMessage(playerid, COLOR_WHITE, "Вы можете узнать его в любое время, введите "RGB_BLUE"/stats");
						SendClientMessage(playerid, COLOR_WHITE, "Звонок: "RGB_BLUE"/call"RGB_WHITE" | СМС: "RGB_BLUE"/sms");
					}
		            case 1: // Книга (90)
		            {
		                money = 90;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						if(GetPVarInt(playerid, "Phonebook") == 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть телефонная книга");
		       			SetPVarInt(playerid,"Phonebook",1);
		          		MySQL_UpdateInt(playerid,"Phonebook");
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили телефонную книгу, теперь можете просматривать номера телефонов");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/number [id/часть ника]");
		            }
		            case 2: // Кости (50)
		            {
		                money = 50;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    if(gDice[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть игральные кости");
						gDice[playerid] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили игральные кости");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/dice");
		            }
		            case 3: // Замок (200)
		            {
		                money = 200;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    if(gLastCar[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет автомобиля");
						if(HireCar[playerid] != 99999) UnLockCar(HireCar[playerid]);

						HireCar[playerid] = gLastCar[playerid];
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили замок для автомобиля, используйте "RGB_BLUE"Alt"RGB_WHITE" и "RGB_BLUE"2"RGB_WHITE" чтобы открыть/закрыть авто");
		            }
		            case 4: // Презервативы (10)
		            {
		                money = 10;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    Condom[playerid] ++;
					    SendClientMessage(playerid, COLOR_WHITE, "Вы купили презерватив");
		            }
		            case 5: // мп3 (200)
		            {
		                money = 200;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    if(GetPVarInt(playerid, "CDPlayer") == 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть mp3-плеер");
					    
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили mp3-плеер, теперь можете слушать интернет-радио");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/music");
						SetPVarInt(playerid,"CDPlayer",1);
						MySQL_UpdateInt(playerid,"CDPlayer");
		            }
		            case 6: // Камера (140)
		            {
		                money = 140;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили фотокамеру");
						GivePlayerWeaponUAC(playerid, 43, 50);
		            }
		            case 7: // Сигареты (20)
		            {
		                money = 20;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");

					    if(GetPVarInt(playerid,"Cigars") >= 20)
					    {
		       				format(string, sizeof(string), "У Вас есть еще %d сигарет, выкурите сначала их", GetPVarInt(playerid,"Cigars"));
				         	return SendClientMessage(playerid, COLOR_GREY, string);
					    }
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили пачку сигарет");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/smoke");
						GivePVarInt(playerid,"Cigars", 20);
						MySQL_UpdateInt(playerid,"Cigars");
		            }
		            case 8: // Зажигалка (10)
		            {
		                money = 10;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");

					    if(GetPVarInt(playerid,"Lighter") >= 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть зажигалка");
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили зажигалку");
						SetPVarInt(playerid,"Lighter",1);
						MySQL_UpdateInt(playerid,"Lighter");
		            }
		            case 9: // Спранк (10)
		            {
		                money = 10;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    if(GetPVarInt(playerid,"Sprunk") >= 20)
					    {
		       				format(string, sizeof(string), "У Вас есть еще %d бутылок спранка, выпейте сначала их", GetPVarInt(playerid,"Cigars"));
				         	return SendClientMessage(playerid, COLOR_GREY, string);
					    }
						GivePVarInt(playerid,"Sprunk",1);
						MySQL_UpdateInt(playerid,"Sprunk");
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили спранк");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/drinksprunk");
		            }
		            case 10: // Пиво (10)
		            {
		                money = 10;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    if(GetPVarInt(playerid,"Beer") >= 20)
					    {
		       				format(string, sizeof(string), "У Вас есть еще %d бутылок пива, выпейте сначала их", GetPVarInt(playerid,"Cigars"));
				         	return SendClientMessage(playerid, COLOR_GREY, string);
					    }
						GivePVarInt(playerid,"Beer",1);
						MySQL_UpdateInt(playerid,"Beer");
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили пиво");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/drinkbeer");
		            }
		            case 11: // Вино (30)
		            {
		                money = 30;
					    if(GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					    if(GetPVarInt(playerid,"Wine") >= 20)
					    {
		       				format(string, sizeof(string), "У Вас есть еще %d бутылок вина, выпейте сначала их", GetPVarInt(playerid,"Cigars"));
				         	return SendClientMessage(playerid, COLOR_GREY, string);
					    }
						GivePVarInt(playerid,"Wine",1);
						MySQL_UpdateInt(playerid,"Wine");
						SendClientMessage(playerid, COLOR_WHITE, "Вы купили вино");
						SendClientMessage(playerid, COLOR_WHITE, "Подсказка: "RGB_BLUE"/drinkwine");
		            }
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				if(GetPVarInt(playerid, "Achievement_Taxpayer") >= 500000 && GetPVarInt(playerid, "Achievement_Worker") >= 200 && GetPVarInt(playerid, "Achievement_Duel") >= 100)
		  		{
		            money = money/2;
		 		}
		 		format(string, sizeof(string), "~r~-$%d", money);
		 		
				GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerPCash(playerid, -money, "potratil v 24 7");
				GiveSBizMoney(9, money);
		    }
		    else
		    {
		        SetTimerEx("SetOrder", 2000, 0, "d", playerid);
		    }
			return 1;
		}
		case 311:
		{
		    if(response)
		    {
		        new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        switch(listitem)
		        {
		            case 0: // Снять
		            {
		                format(string, sizeof(string), RGB_WHITE"Сколько хотите взять наркотиков?\n"RGB_GREY"Не более %d", HouseInfo[id][hNarks]);
		                return ShowPlayerDialog(playerid, 312, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики", string, "Готово", "Отмена");
		            }
		            case 1: // Положить
		            {
		                format(string, sizeof(string), RGB_WHITE"Сколько хотите положить наркотиков?\n"RGB_GREY"Не более %d", 1000-HouseInfo[id][hNarks]);
		                return ShowPlayerDialog(playerid, 313, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики", string, "Готово", "Отмена");
		            }
		        }
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 312:
		{
		    if(response)
		    {
		    	new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        new narks = strval(inputtext);
				if(narks < 1 || narks > HouseInfo[id][hNarks])
				{
    				format(string, sizeof(string), RGB_WHITE"Сколько хотите взять наркотиков?\n"RGB_GREY"Не более %d", HouseInfo[id][hNarks]);
        			return ShowPlayerDialog(playerid, 312, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики", string, "Готово", "Отмена");
				}
				if((GetPVarInt(playerid, "Drugs") + narks) > 100)
				{
				    SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"[Дом] "RGB_WHITE"Вы не можете иметь при себе более 100 гр. наркотиков");
				    format(string, sizeof(string), RGB_WHITE"Сколько хотите взять наркотиков?\n"RGB_GREY"Не более %d", HouseInfo[id][hNarks]);
        			return ShowPlayerDialog(playerid, 312, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики", string, "Готово", "Отмена");
				}

				HouseInfo[id][hNarks] -= narks;
				GivePVarInt(playerid, "Drugs", narks);


		        format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Вы взяли из домашнего сейфа: %d наркотик(ов)", narks);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
				ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 313:
		{
		    if(response)
		    {
		    	new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        new narks = strval(inputtext);
				if(narks < 1 || (narks+HouseInfo[id][hNarks]) > 1000)
				{
    				format(string, sizeof(string), RGB_WHITE"Сколько хотите положить наркотиков?\n"RGB_GREY"Не более %d", 1000-HouseInfo[id][hNarks]);
        			return ShowPlayerDialog(playerid, 313, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики", string, "Готово", "Отмена");
				}
				if(GetPVarInt(playerid, "Drugs") < narks)
				{
				    SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"У Вас нет столько наркотиков");
        			format(string, sizeof(string), RGB_WHITE"Сколько хотите положить наркотиков?\n"RGB_GREY"Не более %d", 1000-HouseInfo[id][hNarks]);
           			return ShowPlayerDialog(playerid, 313, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики", string, "Готово", "Отмена");
				}

				HouseInfo[id][hNarks] += narks;
				GivePVarInt(playerid, "Drugs", -narks);

		        format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Вы положили в домашний сейф: %d наркотик(ов)", narks);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
				ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 314:
		{
		    if(response)
		    {
		        new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        switch(listitem)
		        {
		            case 0: // Снять
		            {
		                format(string, sizeof(string), RGB_WHITE"Сколько хотите взять материалов?\n"RGB_GREY"Не более %d", HouseInfo[id][hMats]);
		                return ShowPlayerDialog(playerid, 315, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы", string, "Готово", "Отмена");
		            }
		            case 1: // Положить
		            {
		                format(string, sizeof(string), RGB_WHITE"Сколько хотите положить материалов?\n"RGB_GREY"Не более %d", 5000-HouseInfo[id][hMats]);
		                return ShowPlayerDialog(playerid, 316, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы", string, "Готово", "Отмена");
		            }
		        }
		    }
		    else
		    {
		        ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 315:
		{
		    if(response)
		    {
		    	new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        new mats = strval(inputtext);
				if(mats < 1 || mats > HouseInfo[id][hMats])
				{
    				format(string, sizeof(string), RGB_WHITE"Сколько хотите взять материалов?\n"RGB_GREY"Не более %d", HouseInfo[id][hMats]);
        			return ShowPlayerDialog(playerid, 315, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы", string, "Готово", "Отмена");
				}

				HouseInfo[id][hMats] -= mats;
				GivePVarInt(playerid, "Materials", mats);


		        format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Вы взяли из домашнего сейфа: %d материал(ов)", mats);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
				ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 316:
		{
		    if(response)
		    {
		    	new id = GetPVarInt(playerid, "House");
			    if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#12)");

		        new mats = strval(inputtext);
				if(mats < 1 || (mats+HouseInfo[id][hMats]) > 5000)
				{
    				format(string, sizeof(string), RGB_WHITE"Сколько хотите положить материалов?\n"RGB_GREY"Не более %d", 5000-HouseInfo[id][hMats]);
        			return ShowPlayerDialog(playerid, 316, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы", string, "Готово", "Отмена");
				}
				if(GetPVarInt(playerid, "Materials") < mats)
				{
				    SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Дом] "RGB_WHITE"У Вас нет столько материалов");
        			format(string, sizeof(string), RGB_WHITE"Сколько хотите положить материалов?\n"RGB_GREY"Не более %d", 5000-HouseInfo[id][hMats]);
           			return ShowPlayerDialog(playerid, 316, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы", string, "Готово", "Отмена");
				}

				HouseInfo[id][hMats] += mats;
				GivePVarInt(playerid, "Materials", -mats);

		        format(string, sizeof(string), RGB_GREEN"[Дом] "RGB_WHITE"Вы положили в домашний сейф: %d материал(ов)", mats);
		        SendClientMessage(playerid, COLOR_WHITE, string);

		        ShowHPanel(playerid);
				SaveHouse(id);
		    }
		    else
		    {
				ShowHPanel(playerid);
		    }
		    return 1;
		}
		case 317:
		{
			SetTimerEx("SetOrder", 2000, false, "i", playerid);
			if(response)
			{
		   		if (GetPlayerPCash(playerid) < 700) return SendClientMessage(playerid, COLOR_GREY, "Регистрация стоит $700");
                if (OpenTDM == false) return SendClientMessage(playerid, COLOR_GREY, "Регистрация закрыта");


				SendClientMessage(playerid, COLOR_GREEN, "Вы были записаны на ТДМ");
				SendClientMessage(playerid, COLOR_GREEN, "Внимание! Не выходите из здания регистрации до начала матча, иначе Вы будете сняты");

				GivePlayerPCash(playerid, -700, "TDM");
				TDM_Money += 700;

                TDM_Players ++;
                
                format(string, sizeof(string), "%s зарегистрировался на ТДМ под номером #%d", GetName(playerid), TDM_Players);
               	ProxDetector(12.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
               	SetPVarInt(playerid, "RegOnTDM", 1);

				SetPlayerHealthUAC(playerid, 100.0);
				
				if(TDM_Players == 20)
				{
    				StartTDM();
				    KillTimer(TDM_Timer);
				}
			}
			return 1;
		}
		case 318:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
					case 0: showDonateDialog(playerid, 1);
					case 1: showDonateDialog(playerid, 2);
					case 2: showDonateDialog(playerid, 5);
				}
		    }
			return 1;
		}

		case 319:
		{
		    if(response)
		    {
				if(strlen(inputtext) < 9 || strlen(inputtext) > 10)
				{
				    SendClientMessage(playerid, COLOR_RED, "Неверно введен код");
					return showDonateDialog(playerid, 1);
				}
				for(new i; i < strlen(inputtext); i ++)
				{
		    		switch(inputtext[i])
		    		{
						case '0', '1'..'9': {}
			       		default:  return showDonateDialog(playerid, 1);
					}
				}
				new str[256];
				format(str, sizeof(str), "zadrot.cc/donate_samp.php?Code=%d&checkpass=Zdsf3cb1kd0", strval(inputtext));
				HTTP(playerid, 1, str, "", "ResponseDonate");

				SetPVarInt(playerid, "Temp_Code", strval(inputtext));
		    }
		    else
			{
				showDonateDialog(playerid, 0);
			}
		    return 1;
		}
		case 320:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: showDonateDialog(playerid, 3);// Покупка
		            case 1: showDonateDialog(playerid, 4);// Замена
				}
		    }
		    else
			{
				showDonateDialog(playerid, 0);
			}
			return 1;
		}

		case 321:
		{
			if(response)
		    {
				if(listitem < 0 || listitem >= sizeof(DonateCar)) return 1;
				if(GetPlayerInterior(playerid) != 0) return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_RED"Вы сейчас находитесь в здании. Выйдите из интерьера на улицу и повторите попытку.","Ок","");

				new c_price = DonateCar[listitem][cPrice];
				new c_id = DonateCar[listitem][cId];

				SetPVarInt(playerid, "D_Buy_Car_Price", c_price);
				SetPVarInt(playerid, "D_Buy_Car_Id", c_id);

				format(string, sizeof(string), RGB_WHITE"Вы подтверждаете покупку "RGB_SERVER"%s[%d]"RGB_WHITE" за %d dm?", VehiclesName[c_id-400], c_id, c_price);
		  		ShowPlayerDialog(playerid, 322, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", string, "Купить", "Назад");
		  		
		  		PlayerViewModel(playerid, c_id);

			}
			else
			{
			    showDonateDialog(playerid, 2);
			}
			return 1;
		}
		case 322:
		{
			new c_price = GetPVarInt(playerid, "D_Buy_Car_Price");
			new c_id = GetPVarInt(playerid, "D_Buy_Car_Id");

			DeletePVar(playerid, "D_Buy_Car_Price");
			DeletePVar(playerid, "D_Buy_Car_Id");

			PlayerHideModel(playerid);
			
			if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < c_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 3);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"На Вашем счету недостаточно средств для совершения покупки", "Назад", "Отмена");
			    }
			    if(GetPVarInt(playerid, "CarKey") != 0)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 3);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"У Вас уже есть транспорт. Вы можете изменить лишь модель", "Назад", "Отмена");
			    }

			    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Покупка транспорта", RGB_WHITE"Поздравляем с приобретением автомобиля!", "Ок", "");

				new Float:pos[4];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				GetPlayerFacingAngle(playerid, pos[3]);
				CreatePlayerCar(playerid, c_id, pos[0], pos[1], pos[2], pos[3]);
				GivePVarInt(playerid, "DonateMoney", -c_price);
				MySQL_UpdateInt(playerid,"DonateMoney");

			}
			else
			{
			    showDonateDialog(playerid, 3);
			}
			return 1;
		}
		case 323:
		{
			if(response) showDonateDialog(playerid, GetPVarInt(playerid, "Return_D_Dialog"));
			DeletePVar(playerid, "Return_D_Dialog");
			return 1;
		}
		case 324:
		{
			if(response)
		    {
				if(listitem < 0 || listitem >= sizeof(DonateCar)) return 1;

				new ch_price = DonateCar[listitem][cChange];
				new ch_id = DonateCar[listitem][cId];

				SetPVarInt(playerid, "D_Change_Car_Price", ch_price);
				SetPVarInt(playerid, "D_Change_Car_Id", ch_id);

				format(string, sizeof(string), RGB_WHITE"Вы подтверждаете замену своего транспорта на "RGB_SERVER"%s[%d]"RGB_WHITE" за %d dm?", VehiclesName[ch_id-400], ch_id, ch_price);
		  		ShowPlayerDialog(playerid, 325, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", string, "Сменить", "Назад");

                PlayerViewModel(playerid, ch_id);
			}
			else
			{
			    showDonateDialog(playerid, 2);
			}
			return 1;
		}
		case 325:
		{
		    PlayerHideModel(playerid);
		    
			new ch_price = GetPVarInt(playerid, "D_Change_Car_Price");
			new ch_id = GetPVarInt(playerid, "D_Change_Car_Id");

			DeletePVar(playerid, "D_Change_Car_Price");
			DeletePVar(playerid, "D_Change_Car_Id");

			if(response)
			{
			    if(GetPVarInt(playerid, "DonateMoney") < ch_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 4);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"На Вашем счету недостаточно средств для совершения замены", "Назад", "Отмена");
			    }
			    if(GetPVarInt(playerid, "CarKey") == 0)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 4);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"У Вас нет транспорта, который можно было бы заменить", "Назад", "Отмена");
			    }
			    if(CarInfo[playerid][cModel] == ch_id)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 4);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_WHITE"У Вас на данный момент такой же автомобиль", "Назад", "Отмена");
			    }

			    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Замена транспорта", RGB_WHITE"Поздравляем с заменой автомобиля!", "Ок", "");

				new Float:posx, Float:posy, Float:posz, Float:ang;
				GetVehiclePos(CarInfo[playerid][cMaincar], posx, posy, posz);
				GetVehicleZAngle(CarInfo[playerid][cMaincar], ang);

				CarInfo[playerid][carX] = posx;
				CarInfo[playerid][carY] = posy;
				CarInfo[playerid][carZ] = posz;
				CarInfo[playerid][carA] = ang;

				CarInfo[playerid][cModel] = ch_id;
				CarInfo[playerid][cSpoiler]= 0;
				CarInfo[playerid][cHood]= 0;
		  		CarInfo[playerid][cSideskirt]= 0;
		    	CarInfo[playerid][cNitro]= 0;
		     	CarInfo[playerid][cLamps]= 0;
		      	CarInfo[playerid][cExhaust]= 0;
		       	CarInfo[playerid][cWheels]= 0;
		        CarInfo[playerid][cRoof]= 0;
		        CarInfo[playerid][cStereo]= 0;
		        CarInfo[playerid][cHydraulics]= 0;
		        CarInfo[playerid][cBullbar]= 0;
		        CarInfo[playerid][cRearBullbars]= 0;
		        CarInfo[playerid][cFrontSign]= 0;
		        CarInfo[playerid][cFrontBullbars]= 0;
		        CarInfo[playerid][cFrontBumper]= 0;
		        CarInfo[playerid][cRearBumper]= 0;
		        CarInfo[playerid][cVents]= 0;
		        CarInfo[playerid][cPaintJob]= -1;
		        SavePlayerCar(playerid);
		        RespawnPlayerCar(playerid);

				GivePVarInt(playerid, "DonateMoney", -ch_price);
				MySQL_UpdateInt(playerid,"DonateMoney");

			}
			else
			{
			    showDonateDialog(playerid, 4);
			}
			return 1;
		}
		case 326:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0: showDonateDialog(playerid, 6);
		            case 1: showDonateDialog(playerid, 7);
		            case 2: showDonateDialog(playerid, 8);
		            case 3: showDonateDialog(playerid, 9);
		            case 4: showDonateDialog(playerid, 10);
		        }
		    }
		    else
			{
				showDonateDialog(playerid, 0);
			}
		    return 1;
		}
		case 327:
		{
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarInt(playerid, "P_Buy_Vip", 3); // 3 уровень, 210 дм
		     			ShowPlayerDialog(playerid, 328, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", RGB_WHITE"Вы подтверждаете "RGB_SERVER"покупку премиум аккаунта"RGB_WHITE" 3 уровня (Gold) за 210 dm на месяц?", "Купить", "Отмена");
		            }
		            case 1:
		            {
		                SetPVarInt(playerid, "P_Buy_Vip", 2); // 2 уровень, 150 дм
		     			ShowPlayerDialog(playerid, 328, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", RGB_WHITE"Вы подтверждаете "RGB_SERVER"покупку премиум аккаунта"RGB_WHITE" 2 уровня (Silver) за 150 dm на месяц?", "Купить", "Отмена");
		            }
		            case 2:
		            {
		                SetPVarInt(playerid, "P_Buy_Vip", 1); // 1 уровень, 90 дм
		     			ShowPlayerDialog(playerid, 328, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", RGB_WHITE"Вы подтверждаете "RGB_SERVER"покупку премиум аккаунта"RGB_WHITE" 1 уровня (Bronze) за 90 dm на месяц?", "Купить", "Отмена");
		            }
		            case 3:
		            {
			        	SetPVarInt(playerid, "Return_D_Dialog", 6);
			        	globalstr = "";
			        	
			        	strcat(globalstr, RGB_GREEN"1 уровень премиум аккаунта (Bronze):\n\n"RGB_WHITE);
			        	strcat(globalstr, "\
						 — Возможность отключать личные сообщения и телефон\n\
					     — Увеличена денежная прибыль\n\
					    "RGB_GREY"Стоимость: 90dm/месяц\n\n\n");
			        	
			        	strcat(globalstr, RGB_GREEN"2 уровень премиум аккаунта (Silver):\n\n"RGB_WHITE);
			        	strcat(globalstr, "\
						 — Возможность отключать личные сообщения и телефон\n\
					     — Увеличена денежная прибыль\n\
						 — 2 респекта за час игры, вместо одного\n\
						 — 120hp при спавне\n\
						 — 2 возможности сменить ник [*]\n\
						 — 2 возможности сменить номер личного автомобиля [*]\n\
						 "RGB_GREY"Стоимость: 150dm/месяц\n\n\n");
						 
			        	strcat(globalstr, RGB_GREEN"3 уровень премиум аккаунта (Gold):\n\n"RGB_WHITE);
			        	strcat(globalstr, "\
						 — Возможность отключать личные сообщения и телефон\n\
					     — Увеличена денежная прибыль\n\
						 — 2 респекта за час игры, вместо одного\n\
						 — 120hp при спавне\n\
						 — 3 возможности сменить ник [*]\n\
						 — 3 возможности сменить номер личного автомобиля [*]\n\
						 — Возможность иметь нестандартный ник\n\
						 "RGB_GREY"Стоимость: 210dm/месяц\n\n");

                        strcat(globalstr, RGB_GREY"[*] - За каждые 30 дней купленного или продленного аккаунта");

			        	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Премиум аккаунт", globalstr, "Назад", "Отмена");
			        	globalstr = "";
			        	return 1;
		            }
		        }
		    }
		    else
			{
				showDonateDialog(playerid, 5);
			}
			return 1;
		}
		case 328:
		{
			new vip_lvl = GetPVarInt(playerid, "P_Buy_Vip");
			DeletePVar(playerid, "P_Buy_Vip");
			if(vip_lvl == 0) return 1;

		    if(response)
		    {
		        new vip_price;
		        switch(vip_lvl)
		        {
		            case 1: vip_price = 90;
		            case 2: vip_price = 150;
		            case 3: vip_price = 210;
				}

			    if(GetPVarInt(playerid, "DonateMoney") < vip_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 6);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для совершения покупки", "Назад", "Отмена");
			    }

		        if(GetPVarInt(playerid,"VipLevel") == 0) GivePlayerVip(playerid, vip_lvl, 30);
		        else UpdatePlayerVip(playerid, vip_lvl);

		        switch(vip_lvl)
		        {
		            case 1: ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Премиум аккаунт", RGB_WHITE"Поздравляем с приобретением премиум аккаунта 1 уровня!", "Ок", "");
		            case 2: ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Премиум аккаунт", RGB_WHITE"Поздравляем с приобретением премиум аккаунта 2 уровня!", "Ок", "");
		            case 3: ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Премиум аккаунт", RGB_WHITE"Поздравляем с приобретением премиум аккаунта 3 уровня!", "Ок", "");
				}

				GivePVarInt(playerid, "DonateMoney", -vip_price);
				MySQL_UpdateInt(playerid, "DonateMoney");

		    }
		    else
		    {
		        showDonateDialog(playerid, 6);
		    }
			return 1;
		}
		case 329:
		{
		    if(response)
		    {
		        new vip_days = strval(inputtext);
		        if(vip_days > 100000 || vip_days < 1) return showDonateDialog(playerid, 7);

		        new vip_price;
		        switch(GetPVarInt(playerid, "VipLevel"))
		        {
		            case 1: vip_price = vip_days*3;
		            case 2: vip_price = vip_days*5;
		            default: vip_price = vip_days*7;
				}
		  		SetPVarInt(playerid, "P_Days_Vip", vip_days);
		  		format(string, sizeof(string), RGB_WHITE"Вы подтверждаете "RGB_SERVER"продление премиум аккаунта"RGB_WHITE" %d уровня на %d дней за %d dm?", GetPVarInt(playerid, "VipLevel"), vip_days, vip_price);
				ShowPlayerDialog(playerid, 330, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите продление", string, "Продлить", "Отмена");
		    }
		    else
		    {
		        showDonateDialog(playerid, 5);
		    }
			return 1;
		}
		case 330:
		{
			new vip_days = GetPVarInt(playerid, "P_Days_Vip");
			DeletePVar(playerid, "P_Days_Vip");
			if(vip_days < 1) return 1;

		    if(response)
		    {
		        new vip_price;
		        switch(GetPVarInt(playerid, "VipLevel"))
		        {
		            case 1: vip_price = vip_days*3;
		            case 2: vip_price = vip_days*5;
		            default: vip_price = vip_days*7;
				}
		  		if(GetPVarInt(playerid, "DonateMoney") < vip_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 7);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для продления премиума", "Назад", "Отмена");
			    }

			    ExtendPlayerVip(playerid, vip_days);

			    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Премиум аккаунт", RGB_WHITE"Вы успешно продлили действие аккаунта!", "Ок", "");

		   		GivePVarInt(playerid, "DonateMoney", -vip_price);
				MySQL_UpdateInt(playerid, "DonateMoney");

		    }
		    else
		    {
		        showDonateDialog(playerid, 5);
		    }
			return 1;
		}
		case 331:
		{
			if(response)
		    {
		        new exps_buy = strval(inputtext);
		        if(exps_buy < 1 || exps_buy > 100000) return showDonateDialog(playerid, 8);

		  		SetPVarInt(playerid, "P_Buy_exps", exps_buy);
		  		format(string, sizeof(string), RGB_WHITE"Вы подтверждаете "RGB_SERVER"покупку %d респектов"RGB_WHITE" за %d dm?", exps_buy, exps_buy*8);
				ShowPlayerDialog(playerid, 332, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите продление", string, "Купить", "Отмена");
			}
			else
			{
		        showDonateDialog(playerid, 5);
			}
			return 1;
		}
		case 332:
		{
			new exps_buy = GetPVarInt(playerid, "P_Buy_exps");
			DeletePVar(playerid, "P_Buy_exps");
			if(exps_buy < 1 || exps_buy > 100000) return 1;
		    if(response)
		    {
		        new exp_price = exps_buy * 8;
		  		if(GetPVarInt(playerid, "DonateMoney") < exp_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 8);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для приобретения респектов", "Назад", "Отмена");
			    }

			    format(string, sizeof(string), RGB_WHITE"Вы приобрели %d респектов за %d dm", exps_buy, exp_price);
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Респекты", string, "Ок", "");

			    GivePVarInt(playerid, "Respect", exps_buy);

				GivePVarInt(playerid, "DonateMoney", -exp_price);
				MySQL_UpdateInt(playerid,"DonateMoney");

		    }
		    else
		    {
		        showDonateDialog(playerid, 8);
		    }
			return 1;
		}
		case 333:
		{
		    if(response)
		    {
				new str[24], skin[10];

				skin[0] = GetPVarInt(playerid, "Skin1");
				skin[1] = GetPVarInt(playerid, "Skin2");
				skin[2] = GetPVarInt(playerid, "Skin3");
				skin[3] = GetPVarInt(playerid, "Skin4");
				skin[4] = GetPVarInt(playerid, "Skin5");
				skin[5] = GetPVarInt(playerid, "Skin6");
				skin[6] = GetPVarInt(playerid, "Skin7");
				skin[7] = GetPVarInt(playerid, "Skin8");
				skin[8] = GetPVarInt(playerid, "Skin9");
				skin[9] = GetPVarInt(playerid, "Skin10");

				for (new i; i < sizeof(skin); i++)
				{
		  			if(skin[i]) format(str, sizeof(str), RGB_SERVER"id %d\n",skin[i]);
			    	else format(str, sizeof(str), RGB_GREY"Пусто\n");
		      		strcat(string, str);
				}

				ShowPlayerDialog(playerid, 334, DIALOG_STYLE_LIST, RGB_SERVER"Выберите слот для скина", string, "Выбрать", "Назад");
				SetPVarInt(playerid, "donate_Skin_idx", listitem);
				
				if(listitem > sizeof(DonateSkin) || listitem < 0) return 1;
				PlayerViewModel(playerid, DonateSkin[listitem][sId]);
				
		    }
		    else
		    {
		        showDonateDialog(playerid, 5);
		    }
		    return 1;
		}
		case 334:
		{
		    PlayerHideModel(playerid);
			new s_id = GetPVarInt(playerid, "donate_Skin_idx");

			if(s_id > sizeof(DonateSkin) || s_id < 0) return 1;
		    if(response)
		    {
		  		if(GetPVarInt(playerid, "DonateMoney") < DonateSkin[s_id][sPrice])
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 9);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для приобретения скина", "Назад", "Отмена");
			    }

				new skin[10];
				skin[0] = GetPVarInt(playerid, "Skin1");
				skin[1] = GetPVarInt(playerid, "Skin2");
				skin[2] = GetPVarInt(playerid, "Skin3");
				skin[3] = GetPVarInt(playerid, "Skin4");
				skin[4] = GetPVarInt(playerid, "Skin5");
				skin[5] = GetPVarInt(playerid, "Skin6");
				skin[6] = GetPVarInt(playerid, "Skin7");
				skin[7] = GetPVarInt(playerid, "Skin8");
				skin[8] = GetPVarInt(playerid, "Skin9");
				skin[9] = GetPVarInt(playerid, "Skin10");
				if(listitem  < 0 || listitem > sizeof(skin)) return 1;

				if(skin[listitem] != 0)
				{
					format(string, sizeof(string), RGB_WHITE"Вы подтверждаете "RGB_SERVER"замену скина %d"RGB_WHITE" в %d слоте на %d за %d dm?", skin[listitem], listitem+1, DonateSkin[s_id][sId], DonateSkin[s_id][sPrice]);
					ShowPlayerDialog(playerid, 335, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", string, "Купить", "Отмена");
				}
				else
				{
					format(string, sizeof(string), RGB_WHITE"Вы подтверждаете "RGB_SERVER"покупку скина %d"RGB_WHITE" на %d слот за %d dm?", DonateSkin[s_id][sId], listitem+1, DonateSkin[s_id][sPrice]);
					ShowPlayerDialog(playerid, 335, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", string, "Купить", "Отмена");
				}

				SetPVarInt(playerid, "skin_Slot", listitem);
		    }
		    else
		    {
		        showDonateDialog(playerid, 9);
		    }
			return 1;
		}
		case 335:
		{
			new s_id = GetPVarInt(playerid, "donate_Skin_idx");
			DeletePVar(playerid, "donate_Skin_idx");
			if(s_id > sizeof(DonateSkin) || s_id < 0) return 1;

			new s_slot = GetPVarInt(playerid, "skin_Slot");
			DeletePVar(playerid, "skin_Slot");
		    if(response)
		    {
		  		if(GetPVarInt(playerid, "DonateMoney") < DonateSkin[s_id][sPrice])
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 9);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для приобретения скина", "Назад", "Отмена");
			    }

			    format(string, sizeof(string), RGB_WHITE"Вы приобрели %d скин на %d слот за %d dm", DonateSkin[s_id][sId], s_slot+1, DonateSkin[s_id][sPrice]);
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Пополнение гардероба", string, "Ок", "");

				format(string, sizeof(string), "Skin%d", s_slot+1);
				SetPVarInt(playerid, string, DonateSkin[s_id][sId]);
				MySQL_UpdateInt(playerid, string);

		 		GivePVarInt(playerid, "DonateMoney", -DonateSkin[s_id][sPrice]);
				MySQL_UpdateInt(playerid,"DonateMoney");

		    }
			else
			{
			    showDonateDialog(playerid, 9);
			}
			return 1;
		}
		case 336:
		{
		    if(response)
		    {
		        new w_price = GetPVarInt(playerid, "Warnings")*50;
		  		if(GetPVarInt(playerid, "DonateMoney") < w_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 5);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для снятие предупреждений", "Назад", "Отмена");
			    }

				format(string, sizeof(string), RGB_WHITE"Вы подтверждаете "RGB_SERVER"снятие предупреждений"RGB_WHITE" за %d dm?", w_price);
				ShowPlayerDialog(playerid, 337, DIALOG_STYLE_MSGBOX, RGB_SERVER"Подтвердите покупку", string, "Снять", "Отмена");
		    }
		    else
		    {
		        showDonateDialog(playerid, 5);
		    }
			return 1;
		}
		case 337:
		{
		    if(response)
		    {
		        new w_price = GetPVarInt(playerid, "Warnings")*50;
		  		if(GetPVarInt(playerid, "DonateMoney") < w_price)
			    {
			        SetPVarInt(playerid, "Return_D_Dialog", 5);
			        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "На Вашем счету недостаточно средств для снятие предупреждений", "Назад", "Отмена");
			    }

		        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Снятие предупреждений", RGB_WHITE"Вы успешно сняли все предупреждения со своего аккаунта", "Ок", "");
				SetPVarInt(playerid, "Warnings", 0);
				MySQL_UpdateInt(playerid, "Warnings");

				GivePVarInt(playerid, "DonateMoney", -w_price);
				MySQL_UpdateInt(playerid,"DonateMoney");


		    }
		    else
		    {
		        showDonateDialog(playerid, 5);
		    }
			return 1;
		}
		case 338:// пароль общака
		{
			if(response)
		    {
		        if(GetPVarInt(playerid, "Leader") == 0) return 1;
		        new pasw = strval(inputtext);
		        new fid = ReturnFractionID(playerid);
		        if(fid == 255) return 1;

		        if(pasw < 1000 || pasw > 9999)
		        {
		        	ShowCommons(playerid, 7);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Установите 4-х значный код, состояший из цифр");
		        }

		        CommonInfo[fid][gPassword] = pasw;

		  		GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[Общак] %s[%d] поменял код доступа", sendername, playerid);
				SendFamilyMessage(GetPVarInt(playerid, "Team"), TEAM_AZTECAS_COLOR, string);
				print(string);

				ShowCommons(playerid, 0);
				SaveFactionCommon(fid);
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 339: // доступ
		{
			if(response)
		    {
		        if(GetPVarInt(playerid, "Leader") == 0) return 1;
		        new pasw = strval(inputtext);
		        new fid = ReturnFractionID(playerid);
		        if(fid == 255) return 1;

		        if(pasw != CommonInfo[fid][gPassword])
		        {
		        	GivePVarInt(playerid, "Wronk_Access_Common", 1);
		        	if(GetPVarInt(playerid, "Wronk_Access_Common") == 3)
		        	{
						SendClientMessage(playerid, COLOR_RED, "Неверный пароль");
						Kick_(playerid);
						return 1;
					}
					ShowCommons(playerid, 8);
		            return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"[Общак] "RGB_WHITE"Вы ввели неверный код");
		        }

				SetPVarInt(playerid, "Access_Common", 1);
				DeletePVar(playerid, "Wronk_Access_Common");

				SendClientMessage(playerid, COLOR_WHITE, "[Общак] доступ открыт");

				ShowCommons(playerid, GetPVarInt(playerid, "Common_Return_To"));
				SaveFactionCommon(fid);
				DeletePVar(playerid, "Common_Return_To");
		    }
		    else ShowCommons(playerid, 0);
			return 1;
		}
		case 340:
		{
		    if(response)
		    {
				switch(listitem)
				{
				    case 0: // такси
				    {
						if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "Выйдите на улицу и повторите");
						
				        new TotalTaxis;
					    for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(!IsPlayerConnected(i)) continue;
					        if(GetPVarInt(i, "Job") == 17 && IsTaxi(GetPlayerVehicleID(i))) TotalTaxis++;
					    }
						if(TotalTaxis < 1) return SendClientMessage(playerid, COLOR_GREY, "Нет таксистов на смене");
						
				        if(GetPVarInt(playerid, "A_Service_Flood_t") > gettime()) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже вызывали такси");
						SetPVarInt(playerid, "A_Service_Flood_t", gettime()+60);

						
						SendClientMessage(playerid, COLOR_WHITE, "Вы вызвали таксиста, ждите, пока кто-то примет вызов");
						
						LastTaxiCall = playerid;
						
						format(string, sizeof(string), "[J] %s вызывает такси, нажмите [Y] для принятия вызова", GetName(playerid));
						for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(!IsPlayerConnected(i)) continue;
					        if(GetPVarInt(i, "Job") == 17 && IsTaxi(GetPlayerVehicleID(i))) SendClientMessage(i, COLOR_GREEN, string), SetPVarInt(i, "Accept_Type", 20);
					    }
				    }
				    case 1: // мех
				    {

						if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "Выйдите на улицу и повторите");
						
				        new TotalMechs;
						for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(!IsPlayerConnected(i)) continue;
					        if(GetPVarInt(i, "Job") == 7 && IsAMehanikCar(GetPlayerVehicleID(i))) TotalMechs++;
					    }
				        if(TotalMechs < 1) return SendClientMessage(playerid, COLOR_GREY, "Нет механиков на смене");
				        
				        if(GetPVarInt(playerid, "A_Service_Flood_mc") > gettime()) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже вызывали механика");
						SetPVarInt(playerid, "A_Service_Flood_mc", gettime()+60);

				        
				        SendClientMessage(playerid, COLOR_WHITE, "Вы вызвали механика, ждите, пока кто-то примет вызов");
				        
				        LastMecCall = playerid;
				        
						format(string, sizeof(string), "[J] %s вызывает механика, нажмите [Y] для принятия вызова", GetName(playerid));
						for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(!IsPlayerConnected(i)) continue;
					        if(GetPVarInt(i, "Job") == 7 && IsAMehanikCar(GetPlayerVehicleID(i))) SendClientMessage(i, COLOR_GREEN, string), SetPVarInt(i, "Accept_Type", 5);
					    }
				    }
				    case 2: // медик
					{
						if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_WHITE, "Выйдите на улицу и повторите");
						
					    new TotalMedics;
						for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(!IsPlayerConnected(i)) continue;
					        if(GetPVarInt(i, "Team") == 4 && IsAnAmbulance(GetPlayerVehicleID(i))) TotalMedics++;
					    }
					    if(TotalMedics < 1) return SendClientMessage(playerid, COLOR_GREY, "Нет медиков на смене");
					    
					    
				        if(GetPVarInt(playerid, "A_Service_Flood_md") > gettime()) return SendClientMessage(playerid, COLOR_WHITE, "Вы уже вызывали медика");
						SetPVarInt(playerid, "A_Service_Flood_md", gettime()+60);
						
						
					    SendClientMessage(playerid, COLOR_WHITE, "Вы вызвали медика, ждите, пока кто-то примет вызов");
					    
					    LastMedicCall = playerid;
					    
						format(string, sizeof(string), "[J] %s вызывает медика, нажмите [Y] для принятия вызова", GetName(playerid));
						for(new i; i < MAX_PLAYERS; i++)
					    {
					        if(!IsPlayerConnected(i)) continue;
					        if(GetPVarInt(i, "Team") == 4 && IsAnAmbulance(GetPlayerVehicleID(i))) SendClientMessage(i, COLOR_GREEN, string), SetPVarInt(i, "Accept_Type", 4);
					    }
					}
				}
		    }
		    return 1;
		}
		
		case 341:
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);

		    if(response)
		    {
		        SetPlayerMineCp(playerid);

		        SetPVarInt(playerid, "Miner_Job", 1);
		        SetPVarInt(playerid, "Miner_Count", 0);

		        SetPlayerSkinEx(playerid, 16);

				SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);

		        SendClientMessage(playerid, COLOR_YELLOW, "Спуститесь в карьер и добывайте руду. Чтобы закончить работу и получить зарплату, встаньте на эту же иконку");
		    }
			return 1;
		}
		case 342:
		{
		    SetTimerEx("SetOrder", 3000, 0, "d", playerid);

		    if(response)
		    {
		        GivePlayerPCash(playerid, GetPVarInt(playerid, "Miner_Count")*70, "Miner_Count");

		        format(string, sizeof(string), "~g~+$%d", GetPVarInt(playerid, "Miner_Count")*50);
		        GameTextForPlayer(playerid, string, 3000, 1);

		        DeletePVar(playerid, "Miner_Count");
		        DeletePVar(playerid, "Miner_Job");

		        DisablePlayerCheckpoint(playerid);
		        gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;

				RemovePlayerAttachedObject(playerid, 3);
				RemovePlayerAttachedObject(playerid, 2);
				
				ReplaceSkin(playerid);
		    }

			return 1;
		}
// ------------------------------
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    if(CheckFCalls(playerid, 9)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerSelectedMenuRow(%d, %d);", GetName(playerid), playerid, row);
    
    new sendername[MAX_PLAYER_NAME];
    new string[180];
    new drunklev = GetPlayerDrunkLevel(playerid);
	new Menu:current = GetPlayerMenu(playerid);
	new location = GetPVarInt(playerid, "Local");

    if(current == DildoMenu)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"), ShowMenuForPlayer(DildoMenu,playerid);
        switch(row)
        {
            case 0:
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели Small White Vibrator за $20");
				GivePlayerPCash(playerid, - 20);
				GiveBizMoney(location-99, 20);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 11, 1);
			}
			case 1:
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели Silver Vibrator за $30");
				GivePlayerPCash(playerid, - 30);
				GiveBizMoney(location-99, 30);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 13, 1);
			}
			case 2:
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели Large White Vibrator за $40");
				GivePlayerPCash(playerid, - 40);
				GiveBizMoney(location-99, 40);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 12, 1);
			}
			case 3:
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели Purple Dildo за $50");
				GivePlayerPCash(playerid, - 50);
				GiveBizMoney(location-99, 50);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 10, 1);
			}
		}
		ShowMenuForPlayer(DildoMenu,playerid);
	}
	else if(current == PizzaMenu)
    {
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 375.8239,-119.0235,1001.4995)) return 1;
        new money = GetPlayerPCash(playerid), Float:health;
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"), ShowMenuForPlayer(PizzaMenu,playerid);
        GetPlayerHealth(playerid,health);
        if(health >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не хотите есть"),SetPlayerHealthUAC(playerid,100),ShowMenuForPlayer(PizzaMenu,playerid);
        switch(row)
        {
            case 0:
			{
	            GameTextForPlayer(playerid,"~r~-$20",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) Cheese Pizza", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				if(health+30 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+30);
		        GivePlayerPCash(playerid,-20);
	            GiveSBizMoney(12, 20);

            }
            case 1:
			{
	            GameTextForPlayer(playerid,"~r~-$25",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) Bacon Pizza", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+40 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+40);
		        GivePlayerPCash(playerid,-25);
          		GiveSBizMoney(12, 25);
            }
            case 2:
			{
	            GameTextForPlayer(playerid,"~r~-$35",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) Large Pizza", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+50 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+50);
		        GivePlayerPCash(playerid,-35);
             	GiveSBizMoney(12, 35);
			}
		}
		ShowMenuForPlayer(PizzaMenu,playerid);
	}
    else if(current == BurgerMenu)
    {
        if(!IsPlayerInRangeOfPoint(playerid, 10.0, 377.1347,-67.6812,1001.5151)) return 1;
        if(SBizzInfo[13][sbProducts] < 0) return SendClientMessage(playerid, COLOR_GREY, "Кончилась еда"), ShowMenuForPlayer(BurgerMenu,playerid);
    	new money = GetPlayerPCash(playerid), Float:health;
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(BurgerMenu,playerid);
        GetPlayerHealth(playerid,health);
        if(health >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не хотите есть"),SetPlayerHealthUAC(playerid,100),ShowMenuForPlayer(BurgerMenu,playerid);
        switch(row)
        {
            case 0:
			{
	            GameTextForPlayer(playerid,"~r~-$3",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s выпил(а) Cola", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+10 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+10);
		        GivePlayerPCash(playerid,-3);
	            GiveSBizMoney(13, 3);
	            SBizzInfo[13][sbProducts] --;
            }
            case 1:
			{
	            GameTextForPlayer(playerid,"~r~-$5",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) картошку фри", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+20 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+20);
		        GivePlayerPCash(playerid,-5);
	            GiveSBizMoney(13, 5);
	            SBizzInfo[13][sbProducts] --;
            }
            case 2:
			{
	            GameTextForPlayer(playerid,"~r~-$10",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) гамбургер", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+25 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+25);
		        GivePlayerPCash(playerid,-10);
	            GiveSBizMoney(13, 10);
	            SBizzInfo[13][sbProducts] --;
          	}
            case 3:
			{
	            GameTextForPlayer(playerid,"~r~-$15",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) чизбургер", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+25 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+25);
		        GivePlayerPCash(playerid,-15);
	            GiveSBizMoney(13, 15);
	            SBizzInfo[13][sbProducts] --;
            }
		}
		ShowMenuForPlayer(BurgerMenu,playerid);
	}
    else if(current == CluckMenu)
    {
        if(!IsPlayerInRangeOfPoint(playerid, 10.0, 369.8165,-6.3198,1001.8589)) return 1;
        new money = GetPlayerPCash(playerid), Float:health;
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(CluckMenu,playerid);
        GetPlayerHealth(playerid,health);
        if(health >= 100) return SendClientMessage(playerid, COLOR_GREY, "Вы не хотите есть"),SetPlayerHealthUAC(playerid,100),ShowMenuForPlayer(CluckMenu,playerid);
        switch(row)
        {
            case 0:
			{
	            GameTextForPlayer(playerid,"~r~-$4",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) куриные ножки", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+20 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+20);
		        GivePlayerPCash(playerid,-4);
	            GiveSBizMoney(14, 4);
            }
            case 1:
			{
	            GameTextForPlayer(playerid,"~r~-$4",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) куриные крылышки", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+20 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+20);
		        GivePlayerPCash(playerid,-4);
	            GiveSBizMoney(14, 4);
            }
            case 2:
			{
	            GameTextForPlayer(playerid,"~r~-$5",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) куриную грудку", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+25 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+25);
		        GivePlayerPCash(playerid,-5);
	            GiveSBizMoney(14, 5);
          	}
            case 3:
			{
	            GameTextForPlayer(playerid,"~r~-$15",5000,1);
	            GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s съел(а) Chicken Menu", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		        if(health+50 > 100) SetPlayerHealthUAC(playerid,100);
		        else SetPlayerHealthUAC(playerid,health+50);
		        GivePlayerPCash(playerid,-15);
	            GiveSBizMoney(14, 15);
            }
		}
		ShowMenuForPlayer(CluckMenu,playerid);
	}
	else if(current == changeInteriorMenu[0])
    {
        switch(row)
        {
            case 0: ChangeNextInterior(playerid);
			case 1: ChangePreviousInterior(playerid);
			case 2: ShowDonateDialog(playerid,18);
		}
	}
	else if(current == changeInteriorMenu[1])
    {
        switch(row)
        {
            case 0: ChangePreviousInterior(playerid);
			case 1: ChangeNextInterior(playerid);
			case 2: ShowDonateDialog(playerid,18);
		}
	}
	else if(current == gunmenu)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu,playerid);
        switch(row)
        {
            case 0: ShowMenuForPlayer(gunmenu1,playerid);
			case 1: ShowMenuForPlayer(gunmenu2,playerid);
			case 2: ShowMenuForPlayer(gunmenu3,playerid);
			case 3: ShowMenuForPlayer(gunmenu4,playerid);
			case 4: ShowMenuForPlayer(gunmenu5,playerid);
			case 5: ShowMenuForPlayer(gunmenu6,playerid);
			case 6:
			{
				GivePlayerPCash(playerid, - 20);
				GiveBizMoney(location-99, 20);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 2, 1);
				ShowMenuForPlayer(gunmenu,playerid);
				
				GiveAchievement(playerid, 18, 20);
			}
			case 7:
			{
				GivePlayerPCash(playerid, - 15);
				GiveBizMoney(location-99, 15);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 3, 1);
				ShowMenuForPlayer(gunmenu,playerid);
				GiveAchievement(playerid, 18, 15);
			}
			case 8:
			{
				GivePlayerPCash(playerid, - 10);
				GiveBizMoney(location-99, 10);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 5, 1);
				ShowMenuForPlayer(gunmenu,playerid);
				GiveAchievement(playerid, 18, 10);
			}
			case 9:
			{
		 		GivePlayerPCash(playerid, - 10);
				GiveBizMoney(location-99, 10);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 6, 1);
				ShowMenuForPlayer(gunmenu,playerid);
				GiveAchievement(playerid, 18, 10);
			}
			case 10:
			{
				GivePlayerPCash(playerid, - 10);
				GiveBizMoney(location-99, 10);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 7, 1);
				ShowMenuForPlayer(gunmenu,playerid);
				GiveAchievement(playerid, 18, 10);
			}
			case 11:
			{
				GivePlayerPCash(playerid, - 20);
				GiveBizMoney(location-99, 20);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 15, 1);
				ShowMenuForPlayer(gunmenu,playerid);
				GiveAchievement(playerid, 18, 20);
			}
		}
	}
	else if(current == gunmenu1)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu1,playerid);
        switch(row)
        {
            case 0:
			{
				GivePlayerPCash(playerid, - 100);
				GiveBizMoney(location-99, 100);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 24, 50);
				GiveAchievement(playerid, 18, 100);
			}
			case 1:
			{
				GivePlayerPCash(playerid, - 150);
				GiveBizMoney(location-99, 150);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 24, 100);
				GiveAchievement(playerid, 18, 150);
			}
			case 2:
			{
    			GivePlayerPCash(playerid, - 200);
				GiveBizMoney(location-99, 200);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 24, 200);
				GiveAchievement(playerid, 18, 200);
			}
			case 3:
			{
				GivePlayerPCash(playerid, - 300);
				GiveBizMoney(location-99, 300);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 24, 500);
				GiveAchievement(playerid, 18, 300);
			}
		}
		ShowMenuForPlayer(gunmenu,playerid);
	}
	else if(current == gunmenu2)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu2,playerid);
        switch(row)
        {
            case 0:
			{
				GivePlayerPCash(playerid, - 50);
				GiveBizMoney(location-99, 50);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 25, 50);
				GiveAchievement(playerid, 18, 50);
			}
			case 1:
			{
				GivePlayerPCash(playerid, - 100);
				GiveBizMoney(location-99, 100);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 25, 100);
				GiveAchievement(playerid, 18, 100);
			}
			case 2:
			{
				GivePlayerPCash(playerid, - 150);
				GiveBizMoney(location-99, 150);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 25, 200);
				GiveAchievement(playerid, 18, 150);
			}
			case 3:
			{
				GivePlayerPCash(playerid, - 250);
				GiveBizMoney(location-99, 250);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 25, 500);
				GiveAchievement(playerid, 18, 250);
			}
		}
		ShowMenuForPlayer(gunmenu,playerid);
	}
	else if(current == gunmenu3)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu3,playerid);
        switch(row)
        {
            case 0:
			{
				GivePlayerPCash(playerid, - 25);
				GiveBizMoney(location-99, 25);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 29, 50);
				GiveAchievement(playerid, 18, 25);
			}
			case 1:
			{
				GivePlayerPCash(playerid, - 50);
				GiveBizMoney(location-99, 50);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 29, 100);
				GiveAchievement(playerid, 18, 50);
			}
			case 2:
			{
				GivePlayerPCash(playerid, - 75);
				GiveBizMoney(location-99, 75);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 29, 200);
				GiveAchievement(playerid, 18, 75);
			}
			case 3:
			{
				GivePlayerPCash(playerid, - 150);
				GiveBizMoney(location-99, 150);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 29, 500);
				GiveAchievement(playerid, 18, 150);
			}
		}
		ShowMenuForPlayer(gunmenu,playerid);
	}
	else if(current == gunmenu4)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu4,playerid);
        switch(row)
        {
            case 0:
			{
				GivePlayerPCash(playerid, - 50);
				GiveBizMoney(location-99, 50);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 30, 50);
				GiveAchievement(playerid, 18, 50);
			}
			case 1:
			{
				GivePlayerPCash(playerid, - 75);
				GiveBizMoney(location-99, 75);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 30, 100);
				GiveAchievement(playerid, 18, 75);
			}
			case 2:
			{
				GivePlayerPCash(playerid, - 150);
				GiveBizMoney(location-99, 150);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 30, 200);
				GiveAchievement(playerid, 18, 150);
			}
			case 3:
			{
				GivePlayerPCash(playerid, - 250);
				GiveBizMoney(location-99, 250);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 30, 500);
				GiveAchievement(playerid, 18, 250);
			}
		}
		ShowMenuForPlayer(gunmenu,playerid);
	}
	else if(current == gunmenu5)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu5,playerid);
        switch(row)
        {
            case 0:
			{
				GivePlayerPCash(playerid, - 50);
				GiveBizMoney(location-99, 50);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 31, 50);
				GiveAchievement(playerid, 18, 50);
			}
			case 1:
			{
				GivePlayerPCash(playerid, - 75);
				GiveBizMoney(location-99, 75);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 31, 100);
				GiveAchievement(playerid, 18, 75);
			}
			case 2:
			{
                GivePlayerPCash(playerid, - 150);
				GiveBizMoney(location-99, 150);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 31, 200);
				GiveAchievement(playerid, 18, 150);
			}
			case 3:
			{
				GivePlayerPCash(playerid, - 250);
				GiveBizMoney(location-99, 250);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 31, 500);
				GiveAchievement(playerid, 18, 250);
			}
		}
		ShowMenuForPlayer(gunmenu,playerid);
	}
	else if(current == gunmenu6)
    {
        new money = GetPlayerPCash(playerid);
        if(money < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег"),ShowMenuForPlayer(gunmenu6,playerid);
        switch(row)
        {
            case 0:
			{
				GivePlayerPCash(playerid, - 100);
				GiveBizMoney(location-99, 100);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 33, 50);
				GiveAchievement(playerid, 18, 100);
			}
			case 1:
			{
				GivePlayerPCash(playerid, - 150);
				GiveBizMoney(location-99, 150);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 33, 100);
				GiveAchievement(playerid, 18, 150);
			}
			case 2:
			{
				GivePlayerPCash(playerid, - 250);
				GiveBizMoney(location-99, 20);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 33, 200);
				GiveAchievement(playerid, 18, 250);
			}
			case 3:
			{
				GivePlayerPCash(playerid, - 400);
    			GiveBizMoney(location-99, 400);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeaponUAC(playerid, 33, 500);
				GiveAchievement(playerid, 18, 400);
			}
		}
		ShowMenuForPlayer(gunmenu,playerid);
	}
	else if(current == drinkmenu)
    {
        if(GetPlayerPCash(playerid) < 1)
		{
			TogglePlayerControllable(playerid, 1);
			return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		}
        new Float:health;
        GetPlayerHealth(playerid, health);
        switch(row)
        {
            case 0:
			{
				if (health <= 150.0)
				{
	            	GivePlayerPCash(playerid, - 5);
					GameTextForPlayer(playerid, "~r~-$5", 5000, 1);
					
					new Float:hp = 5.0;
					
					if(GetPVarInt(playerid, "Achievement_First_Peint") >= 10) hp += 5.0;
					if(GetPVarInt(playerid, "Achievement_First_Race") >= 10)  hp += 5.0;
					if(GetPVarInt(playerid, "Achievement_Criminal") >= 1000)  hp += 5.0;
					
					SetPlayerHealthUAC(playerid, health + hp);
					
					ShowMenuForPlayer(drinkmenu,playerid);
					format(string, sizeof(string), "%s выпил(а) стакан содовой", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
				}
    			else
     			{
         			SetPlayerHealthUAC(playerid, 150);
					SendClientMessage(playerid, COLOR_GREY, "Бармен отказывается продавать вам напитки");
         			TogglePlayerControllable(playerid, 1);
         			ClearAnimations(playerid);
			 	}
			}
            case 1:
			{
				if (health <= 150.0)
				{
	            	GivePlayerPCash(playerid, - 10);
					GameTextForPlayer(playerid, "~r~-$10", 5000, 1);

					new Float:hp = 7.0;

					if(GetPVarInt(playerid, "Achievement_First_Peint") >= 10) hp += 3.0;
					if(GetPVarInt(playerid, "Achievement_First_Race") >= 10)  hp += 3.0;
					if(GetPVarInt(playerid, "Achievement_Criminal") >= 1000)  hp += 3.0;

					SetPlayerHealthUAC(playerid, health + hp);

					ShowMenuForPlayer(drinkmenu,playerid);
					format(string, sizeof(string), "%s выпил(а) стакан Coca-Cola", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
				}
				else
   				{
   					SetPlayerHealthUAC(playerid, 150);
					SendClientMessage(playerid, COLOR_GREY, "Бармен отказывается продавать вам напитки");
					TogglePlayerControllable(playerid, 1);
					ClearAnimations(playerid);
				}
			}
            case 2:
			{
				if (health <= 150.0)
				{
				    SetPlayerDrunkLevel (playerid, drunklev+4000);
				    
	            	GivePlayerPCash(playerid, - 20);
					GameTextForPlayer(playerid, "~r~-$20", 5000, 1);

					new Float:hp = 27.0;

					if(GetPVarInt(playerid, "Achievement_First_Peint") >= 10) hp += 5.0;
					if(GetPVarInt(playerid, "Achievement_First_Race") >= 10)  hp += 5.0;
					if(GetPVarInt(playerid, "Achievement_Criminal") >= 1000)  hp += 5.0;

					SetPlayerHealthUAC(playerid, health + hp);

					ShowMenuForPlayer(drinkmenu,playerid);
					format(string, sizeof(string), "%s выпил(а) бутылку пива", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
         		}
         		else
     			{
   					SetPlayerHealthUAC(playerid, 150);
					SendClientMessage(playerid, COLOR_GREY, "Бармен отказывается продавать вам напитки");
					TogglePlayerControllable(playerid, 1);
					ClearAnimations(playerid);
     			}
			}
            case 3:
			{
				if (health <= 150.0)
				{
				    SetPlayerDrunkLevel (playerid, drunklev+4000);

	            	GivePlayerPCash(playerid, - 25);
					GameTextForPlayer(playerid, "~r~-$25", 5000, 1);

					new Float:hp = 35.0;

					if(GetPVarInt(playerid, "Achievement_First_Peint") >= 10) hp += 5.0;
					if(GetPVarInt(playerid, "Achievement_First_Race") >= 10)  hp += 5.0;
					if(GetPVarInt(playerid, "Achievement_Criminal") >= 1000)  hp += 5.0;

					SetPlayerHealthUAC(playerid, health + hp);

					ShowMenuForPlayer(drinkmenu,playerid);
					format(string, sizeof(string), "%s выпил(а) стакан водки", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
  				}
    			else
     			{
   					SetPlayerHealthUAC(playerid, 150);
					SendClientMessage(playerid, COLOR_GREY, "Бармен отказывается продавать вам напитки");
					TogglePlayerControllable(playerid, 1);
					ClearAnimations(playerid);
     			}
			}
            case 4:
			{
				if (health <= 150.0)
				{
				    SetPlayerDrunkLevel (playerid, drunklev+6000);

	            	GivePlayerPCash(playerid, - 50);
					GameTextForPlayer(playerid, "~r~-$50", 5000, 1);

					new Float:hp = 40.0;

					if(GetPVarInt(playerid, "Achievement_First_Peint") >= 10) hp += 10.0;
					if(GetPVarInt(playerid, "Achievement_First_Race") >= 10)  hp += 10.0;
					if(GetPVarInt(playerid, "Achievement_Criminal") >= 1000)  hp += 10.0;

					SetPlayerHealthUAC(playerid, health + hp);

					ShowMenuForPlayer(drinkmenu,playerid);
					format(string, sizeof(string), "%s выпил(а) виски", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
  				}
    			else
     			{
   					SetPlayerHealthUAC(playerid, 150);
					SendClientMessage(playerid, COLOR_GREY, "Бармен отказывается продавать вам напитки");
					TogglePlayerControllable(playerid, 1);
					ClearAnimations(playerid);
     			}
			}
            case 5:
			{
				if (health <= 150.0)
				{
				    SetPlayerDrunkLevel (playerid, drunklev+7000);

	            	GivePlayerPCash(playerid, - 75);
					GameTextForPlayer(playerid, "~r~-$75", 5000, 1);

					new Float:hp = 50.0;

					if(GetPVarInt(playerid, "Achievement_First_Peint") >= 10) hp += 10.0;
					if(GetPVarInt(playerid, "Achievement_First_Race") >= 10)  hp += 10.0;
					if(GetPVarInt(playerid, "Achievement_Criminal") >= 1000)  hp += 10.0;

					SetPlayerHealthUAC(playerid, health + hp);

					ShowMenuForPlayer(drinkmenu,playerid);
					format(string, sizeof(string), "%s выпил(а) коньяк", GetName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
  				}
    			else
     			{
   					SetPlayerHealthUAC(playerid, 150);
					SendClientMessage(playerid, COLOR_GREY, "Бармен отказывается продавать вам напитки");
					TogglePlayerControllable(playerid, 1);
					ClearAnimations(playerid);
     			}
			}
		}
  	}
	else if(current == GlassMenu)
	{
	    ShowMenuForPlayer(GlassMenu, playerid);
	    new GlassType;
	    switch(row)
	    {
	        case 0: GlassType = 19006, SetPVarInt(playerid, "Glass_Money", 200);
	        case 1: GlassType = 19009, SetPVarInt(playerid, "Glass_Money", 200);
	        case 2: GlassType = 19012, SetPVarInt(playerid, "Glass_Money", 200);
	        case 3: GlassType = 19014, SetPVarInt(playerid, "Glass_Money", 200);
	        case 4: GlassType = 19016, SetPVarInt(playerid, "Glass_Money", 200);
	        case 5: GlassType = 19019, SetPVarInt(playerid, "Glass_Money", 200);
	        case 6: GlassType = 19022, SetPVarInt(playerid, "Glass_Money", 200);
	        case 7: GlassType = 19024, SetPVarInt(playerid, "Glass_Money", 200);
	        case 8: GlassType = 19031, SetPVarInt(playerid, "Glass_Money", 500);
	        case 9: GlassType = 19138, SetPVarInt(playerid, "Glass_Money", 500);
	        case 10: GlassType = 19139, SetPVarInt(playerid, "Glass_Money", 500);
	        case 11:
	        {
	            if(GetPVarInt(playerid, "Glass_Money") == 0)
	            {
	                SetPlayerVirtualWorld(playerid, 1);
	                SetCameraBehindPlayer(playerid);
	                TogglePlayerControllable(playerid, 1);
	                HideMenuForPlayer(GlassMenu, playerid);
	                return 1;
	            }
	            if(GetPlayerPCash(playerid) < GetPVarInt(playerid, "Glass_Money")) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
                CancelEdit(playerid);
                SetPlayerVirtualWorld(playerid, 1);
                SetCameraBehindPlayer(playerid);
                GivePlayerPCash(playerid, -GetPVarInt(playerid, "Glass_Money"));

                format(string, 24, "~r~-$%d", GetPVarInt(playerid, "Glass_Money"));
				GameTextForPlayer(playerid, string, 3500, 1);
				
                DeletePVar(playerid, "Glass_Money");
                TogglePlayerControllable(playerid, 1);
                HideMenuForPlayer(GlassMenu, playerid);
	            return 1;
	        }
	    }
	    SetPlayerAttachedObject(playerid, 9, GlassType, 2, 0.100000, 0.039999, 0.000000, 0.000000, 90.000000, 90.000000, 1.000000, 1.000000, 1.000000);
        EditAttachedObject(playerid, 9);
		return 1;
	}
	
	else if(current == CapsMenu)
	{
	    ShowMenuForPlayer(CapsMenu, playerid);
	    new CapsType;
	    static Float:CapsPos[][9] = {
			{0.15, -0.01, 0.0, 0.0, 0.0, 0.0, 1.05, 1.05, 1.07},
			{0.15, -0.01, 0.0, 0.0, 0.0, 0.0, 1.05, 1.05, 1.07},
			{0.15, -0.03, 0.0, 0.0, 0.0, 0.0, 1.05, 1.05, 1.05},
			{0.15, -0.03, 0.0, 0.0, 0.0, 0.0, 1.05, 1.05, 1.05},
			{0.07, -0.0,  0.0, 0.0, 0.0, 0.0, 1.14, 1.14, 1.14},
			{0.1, -0.01,  0.0, 0.0, 0.0, 0.0, 1.15, 1.15, 1.15},
			{0.1,  -0.0,  0.0, 0.0, 0.0, 0.0, 1.1,  1.1,  1.1},
			{0.05, 0.02,  0.0, 0.0, 90.0, 90.0, 1.1, 1.1, 1.1},
			{0.05, 0.02,  0.0, 0.0, 90.0, 90.0, 1.1, 1.1, 1.1},
			{0.1, -0.01,  0.0, 0.0, 0.0, 0.0, 1.15, 1.15, 1.15},
			{0.12, -0.01,  0.0, 0.0, 0.0, 0.0, 1.1, 1.0, 1.15}
		};
	    switch(row)
	    {
	        case 0: CapsType = 18939, SetPVarInt(playerid, "Caps_Money", 200);
	        case 1: CapsType = 18940, SetPVarInt(playerid, "Caps_Money", 200);
	        case 2: CapsType = 18944, SetPVarInt(playerid, "Caps_Money", 400);
	        case 3: CapsType = 18945, SetPVarInt(playerid, "Caps_Money", 400);
	        case 4: CapsType = 18952, SetPVarInt(playerid, "Caps_Money", 500);
	        case 5: CapsType = 18962, SetPVarInt(playerid, "Caps_Money", 600);
	        case 6: CapsType = 18953, SetPVarInt(playerid, "Caps_Money", 600);
	        case 7: CapsType = 18976, SetPVarInt(playerid, "Caps_Money", 800);
	        case 8: CapsType = 18978, SetPVarInt(playerid, "Caps_Money", 800);
	        case 9: CapsType = 19099, SetPVarInt(playerid, "Caps_Money", 1000);
	        case 10: CapsType = 19101, SetPVarInt(playerid, "Caps_Money", 1000);
	        case 11:
	        {
	            if(GetPVarInt(playerid, "Caps_Money") == 0)
	            {
	                SetPlayerVirtualWorld(playerid, 1);
	                SetCameraBehindPlayer(playerid);
	                TogglePlayerControllable(playerid, 1);
	                HideMenuForPlayer(CapsMenu, playerid);
	                return 1;
	            }
	            if(GetPlayerPCash(playerid) < GetPVarInt(playerid, "Caps_Money")) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
                CancelEdit(playerid);
                SetPlayerVirtualWorld(playerid, 2);
                SetCameraBehindPlayer(playerid);
                GivePlayerPCash(playerid, -GetPVarInt(playerid, "Caps_Money"));
                
                format(string, 24, "~r~-$%d", GetPVarInt(playerid, "Caps_Money"));
				GameTextForPlayer(playerid, string, 3500, 1);

                DeletePVar(playerid, "Caps_Money");
                TogglePlayerControllable(playerid, 1);
                HideMenuForPlayer(CapsMenu, playerid);
	            return 1;
	        }
	    }
	    SetPlayerAttachedObject(playerid, 8, CapsType, 2, CapsPos[row][0], CapsPos[row][1], CapsPos[row][2], CapsPos[row][3], CapsPos[row][4], CapsPos[row][5], CapsPos[row][6], CapsPos[row][7], CapsPos[row][8]);
        EditAttachedObject(playerid, 8);
		return 1;
	}
  	else if(current == ColorMenu1_1)
    {
    	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1697.713134,-1473.033325,13.546875)) return 1;
        if(!IsPlayerInAnyVehicle(playerid)) return 1;
		new vehi = GetPlayerVehicleID(playerid);
        if(!IsForSaleCar[vehi]) return 1;

        switch(row)
        {
            case 0:
            {
                GivePVarInt(playerid, "SelectCarColor1", -1);
				if(GetPVarInt(playerid, "SelectCarColor1") < 0) SetPVarInt(playerid, "SelectCarColor1", 126);
				ShowMenuForPlayer(ColorMenu1_1,playerid);
            }
            case 1:
            {
                GivePVarInt(playerid, "SelectCarColor1", 1);
                if(GetPVarInt(playerid, "SelectCarColor1") > 126) SetPVarInt(playerid, "SelectCarColor1", 0);
                ShowMenuForPlayer(ColorMenu1_2,playerid);
            }
            case 2:
            {
            	ShowMenuForPlayer(ColorMenu2_1,playerid);
            }
		}
		ChangeVehicleColor(vehi, GetPVarInt(playerid, "SelectCarColor1"), GetPVarInt(playerid, "SelectCarColor2"));
	}
	else if(current == ColorMenu2_1)
    {
    	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1697.713134,-1473.033325,13.546875)) return 1;
        if(!IsPlayerInAnyVehicle(playerid)) return 1;
		new vehi = GetPlayerVehicleID(playerid);
        if(!IsForSaleCar[vehi]) return 1;

        switch(row)
        {
            case 0:
            {
                GivePVarInt(playerid, "SelectCarColor2", -1);
				if(GetPVarInt(playerid, "SelectCarColor2") < 0) SetPVarInt(playerid, "SelectCarColor2", 126);
				ShowMenuForPlayer(ColorMenu2_1,playerid);
            }
            case 1:
            {
                GivePVarInt(playerid, "SelectCarColor2", 1);
                if(GetPVarInt(playerid, "SelectCarColor2") > 126) SetPVarInt(playerid, "SelectCarColor2", 0);
                ShowMenuForPlayer(ColorMenu2_2,playerid);
            }
            case 2:
            {
                ShowMenuForPlayer(ColorMenu1_1,playerid);
            }
		}
		ChangeVehicleColor(vehi, GetPVarInt(playerid, "SelectCarColor1"), GetPVarInt(playerid, "SelectCarColor2"));
	}
	else if(current == ColorMenu1_2)
    {
    	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1697.713134,-1473.033325,13.546875)) return 1;
        if(!IsPlayerInAnyVehicle(playerid)) return 1;
		new vehi = GetPlayerVehicleID(playerid);
        if(!IsForSaleCar[vehi]) return 1;

        switch(row)
        {
            case 0:
            {
                GivePVarInt(playerid, "SelectCarColor1", 1);
				if(GetPVarInt(playerid, "SelectCarColor1") > 126) SetPVarInt(playerid, "SelectCarColor1", 0);
				ShowMenuForPlayer(ColorMenu1_2,playerid);
            }
            case 1:
            {
                GivePVarInt(playerid, "SelectCarColor1", -1);
                if(GetPVarInt(playerid, "SelectCarColor1") < 0) SetPVarInt(playerid, "SelectCarColor1", 126);
                ShowMenuForPlayer(ColorMenu1_1,playerid);
            }
            case 2:
            {
            	ShowMenuForPlayer(ColorMenu2_1,playerid);
            }
		}
		ChangeVehicleColor(vehi, GetPVarInt(playerid, "SelectCarColor1"), GetPVarInt(playerid, "SelectCarColor2"));
	}
	else if(current == ColorMenu2_2)
    {
    	if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1697.713134,-1473.033325,13.546875)) return 1;
        if(!IsPlayerInAnyVehicle(playerid)) return 1;
        new vehi = GetPlayerVehicleID(playerid);
        if(!IsForSaleCar[vehi]) return 1;

        switch(row)
        {
            case 0:
            {
                GivePVarInt(playerid, "SelectCarColor2", 1);
                if(GetPVarInt(playerid, "SelectCarColor2") > 126) SetPVarInt(playerid, "SelectCarColor2", 0);
				ShowMenuForPlayer(ColorMenu2_2,playerid);
            }
            case 1:
            {
                GivePVarInt(playerid, "SelectCarColor2", -1);
                if(GetPVarInt(playerid, "SelectCarColor2") < 0) SetPVarInt(playerid, "SelectCarColor2", 126);
                ShowMenuForPlayer(ColorMenu2_1,playerid);
            }
            case 2:
            {
                ShowMenuForPlayer(ColorMenu1_1,playerid);
            }
		}
		ChangeVehicleColor(vehi, GetPVarInt(playerid, "SelectCarColor1"), GetPVarInt(playerid, "SelectCarColor2"));
	}
	else if(current == Civilian_Man[0])
	{
	    switch(row)
	    {
	        case 0: ScrollManSkin(playerid, 1), ShowMenuForPlayer(Civilian_Man[0], playerid);
	        case 1: ScrollManSkin(playerid, -1), ShowMenuForPlayer(Civilian_Man[1], playerid);
	        case 2: BuyManSkin(playerid);
		}
	}
	else if(current == Civilian_Man[1])
	{
	    switch(row)
	    {
	        case 0: ScrollManSkin(playerid, -1), ShowMenuForPlayer(Civilian_Man[1], playerid);
	        case 1: ScrollManSkin(playerid, 1), ShowMenuForPlayer(Civilian_Man[0], playerid);
	        case 2: BuyManSkin(playerid);
		}
	}
	else if(current == Civilian_Woman[0])
	{
	    switch(row)
	    {
	        case 0: ScrollWomanSkin(playerid, 1), ShowMenuForPlayer(Civilian_Woman[0], playerid);
	        case 1: ScrollWomanSkin(playerid, -1), ShowMenuForPlayer(Civilian_Woman[1], playerid);
	        case 2: BuyWomanSkin(playerid);
		}
	}
	else if(current == Civilian_Woman[1])
	{
	    switch(row)
	    {
	        case 0: ScrollWomanSkin(playerid, -1), ShowMenuForPlayer(Civilian_Woman[1], playerid);
	        case 1: ScrollWomanSkin(playerid, 1), ShowMenuForPlayer(Civilian_Woman[0], playerid);
	        case 2: BuyWomanSkin(playerid);
		}
	}

	new Fact = GetPVarInt(playerid, "Team") - 1;
	if(Fact >= 0 && Fact < sizeof(Victim_Menu_Man))
	{
		if(current == Victim_Menu_Man[Fact])
		{
			if(row < MaxManCloth[Fact])
	  		{
	  		    if(ClothesMan[Fact][row] == 0) return 1;
	    		SetPlayerSkinEx(playerid, ClothesMan[Fact][row]);
	      		ShowMenuForPlayer(Victim_Menu_Man[Fact], playerid);
				SetPVarInt(playerid, "Select_Skin", ClothesMan[Fact][row]);
			}
			else
			{
				if(GetPVarInt(playerid, "Select_Skin") == 0)
				{
					ReplaceSkin(playerid);
					TogglePlayerControllable(playerid, 1);
			  		SetCameraBehindPlayer(playerid);
			    	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
			    	DeletePVar(playerid, "InClothShop");
			    	DeletePVar(playerid, "SelectType_Skin");
				}
				else
				{
					new st[150];
					format(st, sizeof(st), RGB_WHITE"\
					Если Вы выберете этот скин, то текущий "RGB_SERVER"скин %d"RGB_WHITE" в 1 слоте будет изменен.\n\
					Вы подтверждаете изменение скина?", GetPVarInt(playerid, "Skin"));
		   			ShowPlayerDialog(playerid, 287, DIALOG_STYLE_MSGBOX, "   ", st, "Да", "Нет");
	   			}
			}
		}
		else if(current == Victim_Menu_Woman[Fact])
		{
			if(row < MaxWomanCloth[Fact])
	  		{
	  		    if(ClothesWoman[Fact][row] == 0) return 1;
	    		SetPlayerSkinEx(playerid, ClothesWoman[Fact][row]);
	      		ShowMenuForPlayer(Victim_Menu_Woman[Fact], playerid);
	        	SetPVarInt(playerid, "Select_Skin", ClothesWoman[Fact][row]);
			}
			else
			{
				if(GetPVarInt(playerid, "Select_Skin") == 0)
				{
					ReplaceSkin(playerid);
					TogglePlayerControllable(playerid, 1);
			  		SetCameraBehindPlayer(playerid);
			    	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
			    	DeletePVar(playerid, "InClothShop");
			    	DeletePVar(playerid, "SelectType_Skin");
				}
				else
				{
					new st[150];
					format(st, sizeof(st), RGB_WHITE"\
					Если Вы выберете этот скин, то текущий "RGB_SERVER"скин %d"RGB_WHITE" в 1 слоте будет изменен.\n\
					Вы подтверждаете изменение скина?", GetPVarInt(playerid, "Skin"));
		   			ShowPlayerDialog(playerid, 287, DIALOG_STYLE_MSGBOX, "   ", st, "Да", "Нет");
	   			}
			}
		}
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
    if(CheckFCalls(playerid, 10)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerExitedMenu(%d);", GetName(playerid), playerid);

	new Menu:current;
	new Float:health;
	current = GetPlayerMenu(playerid);
	new Fact = GetPVarInt(playerid, "Team") - 1;
	if(current == changeInteriorMenu[0] || current == changeInteriorMenu[1])
	{
	    new house = GetPVarInt(playerid, "House");
		SetPlayerInterior(playerid,HouseInfo[house][hInt]);
		SetPlayerVirtualWorld(playerid,HouseInfo[house][hWorld]);
		oSetPlayerPos(playerid,HouseInfo[house][hExitx],HouseInfo[house][hExity],HouseInfo[house][hExitz]);
		SetPVarInt(playerid, "Local", house+1000);
		DeletePVar(playerid, "CurrentChangeInt");
	}
	if(Fact >= 0 && Fact < TOTAL_FACTIONS)
	{
		if(current == Victim_Menu_Man[Fact] || current == Victim_Menu_Woman[Fact])
		{
		    if(Fact >= 0 && Fact < TOTAL_FACTIONS)
		    {
				DeletePVar(playerid, "Select_Skin");
				ReplaceSkin(playerid);
				TogglePlayerControllable(playerid, 1);
		  		SetCameraBehindPlayer(playerid);
		    	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
		    	DeletePVar(playerid, "InClothShop");
		    	DeletePVar(playerid, "SelectType_Skin");
	    	}
		    return 1;
		}
	}
	if(current == Civilian_Man[0] || current == Civilian_Woman[0] || current == Civilian_Man[1] || current == Civilian_Woman[1])
	{
	    DeletePVar(playerid, "Scroll_Skins2");
	    DeletePVar(playerid, "Scroll_Skins");
		ReplaceSkin(playerid);
		TogglePlayerControllable(playerid, 1);
	  	SetCameraBehindPlayer(playerid);
	   	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)-playerid-1000);
	   	DeletePVar(playerid, "InClothShop");
	   	DeletePVar(playerid, "SelectType_Skin");
	   	GameTextForPlayer(playerid, "~y~Good Luck", 5000, 1);
	   	return 1;
	}
	else if(current == GlassMenu)
	{
		CancelEdit(playerid);
 		SetPlayerVirtualWorld(playerid, 1);
 		SetCameraBehindPlayer(playerid);
 		DeletePVar(playerid, "Glass_Money");
 		RemovePlayerAttachedObject(playerid, 9);
 		TogglePlayerControllable(playerid, 1);
 		return 1;
	}
	else if(current == CapsMenu)
	{
		CancelEdit(playerid);
 		SetPlayerVirtualWorld(playerid, 2);
 		SetCameraBehindPlayer(playerid);
 		DeletePVar(playerid, "Caps_Money");
 		RemovePlayerAttachedObject(playerid, 8);
 		TogglePlayerControllable(playerid, 1);
 		return 1;
	}
	else if(current == drinkmenu)
    {
		TogglePlayerControllable(playerid, 1);
		GetPlayerHealth(playerid, health);
		if (health > 150.0) SetPlayerHealthUAC(playerid, 150);
	}
	else if(current == DildoMenu)
    {
		TogglePlayerControllable(playerid, 1);
		SetTimerEx("SetOrder", 2000, false, "i", playerid);
	}
	else if(current == CluckMenu)
    {
		TogglePlayerControllable(playerid, 1);
		GetPlayerHealth(playerid, health);
		SetTimerEx("SetOrder", 2000, false, "i", playerid);
		if (health > 150.0) SetPlayerHealthUAC(playerid, 150);
	}

	else if(current == BurgerMenu)
    {
		TogglePlayerControllable(playerid, 1);
		GetPlayerHealth(playerid, health);
		SetTimerEx("SetOrder", 2000, false, "i", playerid);
		if (health > 150.0) SetPlayerHealthUAC(playerid, 150);
	}
	else if(current == PizzaMenu)
    {
		TogglePlayerControllable(playerid, 1);
		GetPlayerHealth(playerid, health);
		SetTimerEx("SetOrder", 2000, false, "i", playerid);
		if (health > 150.0) SetPlayerHealthUAC(playerid, 150);
	}
	else if(current == gunmenu)
    {
		TogglePlayerControllable(playerid, 1);
		SetTimerEx("SetOrder", 2000, false, "i", playerid);
	}
	else if(current == gunmenu1) ShowMenuForPlayer(gunmenu,playerid);
	else if(current == gunmenu2) ShowMenuForPlayer(gunmenu,playerid);
	else if(current == gunmenu3) ShowMenuForPlayer(gunmenu,playerid);
	else if(current == gunmenu4) ShowMenuForPlayer(gunmenu,playerid);
	else if(current == gunmenu5) ShowMenuForPlayer(gunmenu,playerid);
	else if(current == gunmenu6) ShowMenuForPlayer(gunmenu,playerid);
	
	else if(current == ColorMenu1_1 || current == ColorMenu1_2 || current == ColorMenu2_1 || current == ColorMenu2_2)
	{
		if(GetPlayerVehicleID(playerid) == CarInfo[playerid][cMaincar])
		{
		    if(GetPlayerPCash(playerid) > 1000)
		    {
	  			CarInfo[playerid][cColor1] = GetPVarInt(playerid, "SelectCarColor1");
	     		CarInfo[playerid][cColor2] = GetPVarInt(playerid, "SelectCarColor2");
	     		GivePlayerPCash(playerid, -1000, "ColorMenu");
	     		GameTextForPlayer(playerid, "~r~-$1000", 5000, 1);
        		GiveSBizMoney(5, 1000);
			}
			else
			{
			    ChangeVehicleColor(CarInfo[playerid][cMaincar], CarInfo[playerid][cColor1], CarInfo[playerid][cColor2]);
			    SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег ($1000)");
			}
		}
		else
		{
  			ChangeVehicleColor(CarInfo[playerid][cMaincar], CarInfo[playerid][cColor1], CarInfo[playerid][cColor2]);
		}
		DeletePVar(playerid, "SelectCarColor1");
		DeletePVar(playerid, "SelectCarColor2");

		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    if(CheckFCalls(playerid, 11)) return 1;
	if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerInteriorChange(%d, %d, %d);", GetName(playerid), playerid, newinteriorid, oldinteriorid);

    if(GetPVarInt(playerid, "InClothShop") == 1)
    {
    	new Menu:myMenu = GetPlayerMenu(playerid);
    	HideMenuForPlayer(myMenu, playerid);
    	KickCheater(playerid, SKINCHANGE);
    }
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    if(CheckFCalls(playerid, 12)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerStateChange(%d, %d, %d);", GetName(playerid), playerid, newstate, oldstate);
    
    if(IsPlayerNPC(playerid)) return 1;
	new string[128];

	SetPVarInt(playerid, "DelayAmmo", gettime()+2);
	
	order[playerid] = 0;
	PlayerDropObject(playerid);
 	switch(newstate)
 	{
		case PLAYER_STATE_ONFOOT:
		{
			if(oldstate == PLAYER_STATE_PASSENGER || oldstate == PLAYER_STATE_DRIVER)
			{
			    if(GetPVarInt(playerid, "Check_TP_Car") >= GetTickCount())
			    {
					GivePVarInt(playerid, "Kick_TP_Car", 1);
					if(GetPVarInt(playerid, "Kick_TP_Car") >= 2)
					{
					    printf("[AC] %s[%d] телепорт тачек читом", GetName(playerid), playerid);
				        Kick(playerid);
				        return 1;
			        }

			        if(GetVehicleDistanceFromPoint(gLastCar[playerid],
			            GetPVarFloat(playerid, "Check_TP_Car_PosX"),
			            GetPVarFloat(playerid, "Check_TP_Car_PosY"),
			            GetPVarFloat(playerid, "Check_TP_Car_PosZ")) > 10.0)
					{
						new str[128];
					    format(str, sizeof(str), "[A] %s[%d] телепортирует тачки читом, проверьте его #2", GetName(playerid), playerid);
					    ABroadCast(str);
					}
					
					if(!IsPlayerInRangeOfPoint(playerid, 10.0, GetPVarFloat(playerid, "Check_TP_Car_PosX"), GetPVarFloat(playerid, "Check_TP_Car_PosY"), GetPVarFloat(playerid, "Check_TP_Car_PosZ")))
					{
					    new str[128];
					    format(str, sizeof(str), "[A] %s[%d] телепортирует авто, проверьте его #1", GetName(playerid), playerid);
					    ABroadCast(str);
					}
			    }
			    
			    
			    Check_Radius[playerid] = 400.0;
			}
			GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
			
			

		    DeletePVar(playerid, "InCar");
		    TextDrawHideForPlayer(playerid, CarSystem[playerid]);
		    

			if(RemovePlayerFromVehicleTimer[playerid] != 0)
			{
			    KillTimer(RemovePlayerFromVehicleTimer[playerid]);
			    RemovePlayerFromVehicleTimer[playerid] = 0;
			}
			if(GetPVarInt(playerid, "OnBusJob") == 1)
			{
				SendClientMessage(playerid, COLOR_GREEN, "У Вас есть 15 секунд, чтобы сесть в автобус, иначе работа будет закончена");
				if(BusTimer[playerid] != -1) KillTimer(BusTimer[playerid]);
				BusTimer[playerid] = SetTimerEx("EndBusWork", 15000, 0, "d", playerid);
			}
			if(GetPVarInt(playerid, "OnTaxiJob") == 1 && oldstate == PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid, COLOR_GREEN, "У Вас есть 15 секунд, чтобы вернуться в машину, иначе работа будет закончена");
				if(TaxiLeaveTimer[playerid] != -1) KillTimer(TaxiLeaveTimer[playerid]);
				TaxiLeaveTimer[playerid] = SetTimerEx("EndTaxiWork", 15000, 0, "d", playerid);
			}
			if(GetPVarInt(playerid, "OnAHTest") == 1)
			{
			    SetPVarInt(playerid, "InCar",  PlayerSchoolCar[playerid]);
			    PutPlayerInVehicleEx(playerid, PlayerSchoolCar[playerid], 0);
			    SendClientMessage(playerid, COLOR_GREEN, "Не выходите из машины до конца экзамена!");
			}
			if(PassengerTimer[playerid] != -1)
			{
				KillTimer(PassengerTimer[playerid]);
				PassengerTimer[playerid] = -1;
			}
			if(GetLoaderCar(gLastCar[playerid]) != -1)
			{
				if(GetPVarInt(playerid, "OnOilJob") == 1)
				{
				    if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_OILJOB || gPlayerCheckpointStatus[playerid] == CHECKPOINT_OILJOBTOFACTORY)
				    {
				        DisablePlayerRaceCheckpoint(playerid);
				        gPlayerCheckpointStatus[playerid] = 0;
					}
				}
			}
			if(IsACleanerCar(gLastCar[playerid]))
			{
				if(AttachOjects[playerid][0] != 0)
				{
					DestroyObject(AttachOjects[playerid][0]);
					AttachOjects[playerid][0] = 0;
				}
				if(AttachOjects[playerid][1] != 0)
				{
					DestroyObject(AttachOjects[playerid][1]);
					AttachOjects[playerid][1] = 0;
				}
				if(GetPVarInt(playerid, "OnCleanerJob") == 1)
				{
				    if(TimerEndCleanerWork[playerid] != -1) KillTimer(TimerEndCleanerWork[playerid]);

					TimerEndCleanerWork[playerid] = SetTimerEx("CleanerEndJob", 15000, 0, "d", playerid);
				    LockForPlayer[gLastCar[playerid]] = -1;
					LockedCarP[gLastCar[playerid]] = 0;
				}
			}
			for(new i; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i)) continue;
			    if(GetPlayerVehicleID(i) != gLastCar[playerid]) continue;
			    if(GetPlayerState(i) != PLAYER_STATE_PASSENGER) continue;
			    if(AFKText[i] < 2) continue;
			    
			    Check_Radius[i] = 80.0;
			    
			    Dop_CheckPos[i][0] = Dop_CheckPos[playerid][0];
				Dop_CheckPos[i][1] = Dop_CheckPos[playerid][1];
				Dop_CheckPos[i][2] = Dop_CheckPos[playerid][2];
			}
		}
		case PLAYER_STATE_PASSENGER:
		{
		    SetTimerEx("SetArmedFirst", 800, 0, "d", playerid);
		    new newcar = GetPlayerVehicleID(playerid);
		    
		    GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
   			if(GetPlayerVehicleSeat(playerid) > 1)
			{
				switch(GetVehicleModel(newcar))
				{
				    case 401..403, 406..408, 410..412, 415, 419, 422, 424..425, 429, 430, 432,
				    433..436, 439, 441, 443..444, 446..457, 460..465, 468..469, 471..478,
				    480..481, 484..486, 489, 491, 493..496, 498..506, 508..515, 517..528,
				    530..539, 541..545, 548..549, 552..559, 562..565, 568..578, 581, 583,
				    584, 586..595, 599..603, 605..608, 610..611:
				    {
				        Kick(playerid);
				        return 1;
				    }
				}
			}

			new count = GetTickCount();
			if(GetPVarInt(playerid, "Check_TP_Car") < count) SetPVarInt(playerid, "Kick_TP_Car", 0);
			SetPVarInt(playerid, "Check_TP_Car", count+300);

			new Float:pos[3];
			GetVehiclePos(newcar, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "Check_TP_Car_PosX", pos[0]);
			SetPVarFloat(playerid, "Check_TP_Car_PosY", pos[1]);
			SetPVarFloat(playerid, "Check_TP_Car_PosZ", pos[2]);
			
			
			
   			if(newcar != GetPVarInt(playerid, "InCar") && !GetPVarInt(playerid, "AdminLevel"))
			{
       			removePlayerFromVehicle(playerid);
			    return 1;
			}
			
			if(GetRobCar(newcar) != -1)
			{
				if(GetPVarInt(playerid, "On_RobHouse") != 0)
				{
					switch(gPlayerCheckpointStatus[playerid])
					{
						case CHECKPOINT_ROBGARAGE, CHECKPOINT_ROBCAR:
						{
  							gPlayerCheckpointStatus[playerid] = 0;
					    	DisablePlayerCheckpoint(playerid);
						    DisablePlayerRaceCheckpoint(playerid);
						}
					}
				}
				return 1;
			}
			if(IsTaxi(newcar))
			{
				for(new i; i < MAX_PLAYERS; i++)
				{
				    if(GetPlayerVehicleID(i) == newcar && GetPlayerState(i) == PLAYER_STATE_DRIVER)
				    {
				        if(GetPlayerPCash(playerid) < GetPVarInt(i, "TaxiPrice"))
				        {
							removePlayerFromVehicle(playerid);
			                return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег для поездки");
						}
				        if(GetPVarInt(i, "OnTaxiJob") != 1)
				        {
							removePlayerFromVehicle(playerid);
			                return SendClientMessage(playerid, COLOR_GREY, "Водитель не начал работу");
						}

				        SetPVarInt(playerid, "pTaxist", i);
				        SetPVarInt(playerid, "pTax", GetPVarInt(i, "TaxiPrice"));


				        GetPlayerName(playerid, string, 24);
				        format(string, sizeof(string), "Пассажир %s сел в Ваше такси", string);
				        SendClientMessage(i, COLOR_GREEN, string);

						GivePVarInt(i, "TotalPass", 1);
						
				        format(string, sizeof(string), "~g~$%d", GetPVarInt(i, "TaxiPrice"));
				        GameTextForPlayer(i, string, 5000, 6);

				        GivePlayerPCash(playerid, -GetPVarInt(i, "TaxiPrice"), "TaxiPrice");
				        GivePlayerPCash(i, GetPVarInt(i, "TaxiPrice"), "TaxiPrice");

				        SetPVarInt(playerid, "LoopTimer", 1);

						if(PassengerTimer[playerid] != -1) KillTimer(PassengerTimer[playerid]);

						PassengerTimer[playerid] = SetTimerEx("PlayerTaxiPassenger", 1000, 1, "d", playerid);
				        return 1;
				    }
				}
				removePlayerFromVehicle(playerid);
    			return SendClientMessage(playerid, COLOR_GREY, "В такси нет водителя");
			}
			if(GetBusID(newcar) != -1)
			{
				new bus = GetBusID(newcar);

			 	if(GetPlayerPCash(playerid) < BusInfo[bus][BusPrice])
			  	{
			   		removePlayerFromVehicle(playerid);
			     	SendClientMessage(playerid, COLOR_GREY, "У Вас нет денег на проезд");
			      	return 1;
				}

				if(GetPVarInt(BusInfo[bus][BusDriver], "OnBusJob") == 1 && GetPlayerVehicleID(BusInfo[bus][BusDriver]) == BusInfo[bus][BusCar])
				{
					GivePlayerPCash(playerid, -BusInfo[bus][BusPrice], "BusPrice");
			 		GivePlayerPCash(BusInfo[bus][BusDriver], GetPVarInt(BusInfo[bus][BusDriver], "BubPricePas"), "BusPrice");

				    format(string, sizeof(string), "~r~-$%d", BusInfo[bus][BusPrice]);
					GameTextForPlayer(playerid, string, 3000, 1);

			   		format(string, sizeof(string), "~g~+$%d", GetPVarInt(BusInfo[bus][BusDriver], "BubPricePas"));
					GameTextForPlayer(BusInfo[bus][BusDriver], string, 3000, 1);

			   		GivePVarInt(BusInfo[bus][BusDriver], "TotalPassengers", 1);

			   		return 1;
				}
				removePlayerFromVehicle(playerid);
			 	return SendClientMessage(playerid, COLOR_GREY, "В автобусе нет водителя");
			}
		}
		case PLAYER_STATE_DRIVER:
		{
			SetTimerEx("SetArmedFirst", 800, 0, "d", playerid);
			
			new newcar = GetPlayerVehicleID(playerid);
            gLastCar[playerid] = newcar;

			new count = GetTickCount();
			if(GetPVarInt(playerid, "Check_TP_Car") < count) SetPVarInt(playerid, "Kick_TP_Car", 0);
			SetPVarInt(playerid, "Check_TP_Car", count+300);

			new Float:pos[3];
			GetVehiclePos(newcar, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "Check_TP_Car_PosX", pos[0]);
			SetPVarFloat(playerid, "Check_TP_Car_PosY", pos[1]);
			SetPVarFloat(playerid, "Check_TP_Car_PosZ", pos[2]);
			
			
			
   			if(newcar != GetPVarInt(playerid, "InCar") && !GetPVarInt(playerid, "AdminLevel"))
			{
                removePlayerFromVehicle(playerid);
			    return 1;
			}
	    	if(oldstate == PLAYER_STATE_PASSENGER)
	    	{
	    	    KickCheater(playerid, AUTODRIVER);
	    	    return 1;
	    	}
	    	
	        if(IsAPlane(newcar) || IsABoat(newcar) || IsABike(newcar))
			{
			    new engine,lights,alarm,door,bonnet,boot,objective;
				GetVehicleParamsEx(newcar,engine,lights,alarm,door,bonnet,boot,objective);
                SetVehicleParamsEx(newcar, VEHICLE_PARAMS_ON, lights,alarm,door,bonnet,boot,objective);
			}
			
			if(Timer_VehName[playerid] != 0)
			{
				KillTimer(Timer_VehName[playerid]);
				PlayerTextDrawHide(playerid, CarName_Name[playerid]);
				TextDrawHideForPlayer(playerid, CarName_Line);
				TextDrawHideForPlayer(playerid, CarName_Vehicle);
			}
			Timer_VehName[playerid] = SetTimerEx("HideVehicleName", 3000, 0, "d", playerid);
	        
	        format(vehname,sizeof(vehname),"%s",VehiclesName[GetVehicleModel(newcar)-400]);
			PlayerTextDrawSetString(playerid, CarName_Name[playerid], vehname);
			PlayerTextDrawShow(playerid, CarName_Name[playerid]);
			TextDrawShowForPlayer(playerid, CarName_Line);
			TextDrawShowForPlayer(playerid, CarName_Vehicle);
			
	        new factionid = ReturnFractionID(playerid);
			new rank = GetPVarInt(playerid, "Rank");
			
			for(new i = 0; i < sizeof(GangCarInfo); i ++)
			{
			    for(new v = 0; v < sizeof(GangCarInfo[]); v ++)
				{
				    if(newcar != GangCarInfo[i][v][gVehId]) continue;
			 	   	if(factionid != i)
					{
						removePlayerFromVehicle(playerid);
						return SendClientMessage(playerid, COLOR_GREY, "Вы не можете управлять этим автомобилем");
					}
			 	   	if(rank < GangCarInfo[i][v][gCarRank])
					{
						removePlayerFromVehicle(playerid);
						return SendClientMessage(playerid, COLOR_GREY, "Ваш ранг слишком мал, чтобы управлять этим автомобилем");
					}
					if(i == 8)
					{
					    if(MatsInfo[v][mCapacity])
					    {
						    format(string, sizeof(string), "Материалы: %d / %d", MatsInfo[v][mLoad],MatsInfo[v][mCapacity]);
							SendClientMessage(playerid, COLOR_GREEN, string);
							SendClientMessage(playerid, COLOR_GREEN, "Вы можете поставить материалы на склад");
						}
					}
					if(i == 9)
					{
					    if(GangCarInfo[i][v][gCarModel] == 532)
						{
							format(string, sizeof(string), "Конопля в бункере комбайна: %d/100", DrugsLoad[v]);
							SendClientMessage(playerid, COLOR_GREEN, string);
							if(DrugsLoad[v] >= 100) SendClientMessage(playerid, COLOR_GREEN, "Комбайн полный! Выгрузите коноплю на склад");
							else SendClientMessage(playerid, COLOR_GREEN, "Отправляйтесь на поле для сбора урожая");
						}
						else
						{
							format(string, sizeof(string), "Наркотики в автомобиле: %d/100", DrugsLoad[v]);
							SendClientMessage(playerid, COLOR_GREEN, string);
							if(DrugsLoad[v] > 0) SendClientMessage(playerid, COLOR_GREEN, "Доставьте наркотики в наркопритон и получите деньги");
							else SendClientMessage(playerid, COLOR_GREEN, "Купите наркотики на ферме, доставьте в притон и получите деньги");
						}
					}
				}
			}
			new rc = GetRobCar(newcar);
			if(rc != -1)
			{
				switch(GetPVarInt(playerid, "Team"))
				{
					case 10, 13, 14..18:
					{
						switch(GetPVarInt(playerid, "On_RobHouse"))
						{
						    case 0: SendClientMessage(playerid, COLOR_GREEN, "Нажмите (~k~~TOGGLE_SUBMISSIONS~), чтобы начать ограбление");
							case 1:
							{
						    	if(RobCarInfo[rc][cTotalp] > 10) SendClientMessage(playerid, COLOR_GREEN, "Грузовик уже полон, сдайте награбленное (( Склад отмечен на радаре ))");
								else
								{
									format(string, sizeof(string), "Загруженность грузовика: %d / 10", RobCarInfo[rc][cTotalp]);
									SendClientMessage(playerid, COLOR_GREEN, string);
								}
								Gas[newcar] = 100;
								new rgar = GetPVarInt(playerid, "Rob_Garage");
								DisablePlayerCheckpoint(playerid);
								gPlayerCheckpointStatus[playerid] = CHECKPOINT_ROBGARAGE;
								SetPlayerRaceCheckpoint(playerid, 2, GarageRob[rgar][0], GarageRob[rgar][1], GarageRob[rgar][2], 0.0, 0.0, 0.0, 3.0);
							}
						}
					}
					default:
					{
					    removePlayerFromVehicle(playerid);
						return SendClientMessage(playerid, COLOR_GREY, "Только для бандитов");
					}
				}
			}
			if(IsTaxi(newcar))
			{
				if(GetPVarInt(playerid, "Job") != 17)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не таксист");
				}
				else
				{
				    if(GetPVarInt(playerid, "OnTaxiJob") == 0)
				    {
				        Gas[newcar] = 100;
				        ShowPlayerDialog(playerid, 185, DIALOG_STYLE_MSGBOX, RGB_SERVER"Аренда такси", RGB_WHITE"Прежде чем начать работу, Вам необходимо арендовать машину.\nСтоимость аренды: $240", "Далее", "Отмена");
					}
					else
					{
					    if(TaxiLeaveTimer[playerid] != -1) KillTimer(TaxiLeaveTimer[playerid]);
					}
				}
			}
			if(IsFishingBoat(newcar))
			{
				if(GetPVarInt(playerid, "Fisher") == 1)
				{
				    if(GetPVarInt(playerid, "PayedForBoat") == 0)
				    {
						if(GetPlayerPCash(playerid) < SBizzInfo[30][sbEntranceCost])
						{
						    removePlayerFromVehicle(playerid);
						    return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
						}
						else
						{
						    Gas[newcar] = 100;
					        GivePlayerPCash(playerid, -SBizzInfo[30][sbEntranceCost], "SBizzInfo[30][sbEntranceCost]");
					        GiveSBizMoney(30, SBizzInfo[30][sbEntranceCost]);
					        SBizzInfo[30][sbProducts] --;
					        
					        format(string, sizeof(string), "~r~-$%d", SBizzInfo[30][sbEntranceCost]);
							SetPVarInt(playerid, "PayedForBoat", 1); // Заплатил за лодку
							gPlayerCheckpointStatus[playerid] = CHECKPOINT_FISHER;
							new rand = random(sizeof(FisherJobPlace));
							SetPlayerRaceCheckpoint(playerid, 1, FisherJobPlace[rand][0], FisherJobPlace[rand][1], FisherJobPlace[rand][2], FisherJobPlace[rand][0], FisherJobPlace[rand][1], FisherJobPlace[rand][2], 60.0); // тут можно рандомно несколько точек
						}
					}
					else // уже заплатил за лодку
					{
					    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
					}
				}
				else
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не арендовали лодку");
				}
			}
			if(IsACleanerCar(newcar))
			{
			    if(GetPVarInt(playerid, "OnCleanerJob") == 1)
			    {
	    			if(AttachOjects[playerid][0] != 0) DestroyObject(AttachOjects[playerid][0]);
					AttachOjects[playerid][0] = CreateObject(18669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 30.0);
					AttachObjectToVehicle(AttachOjects[playerid][0], newcar, 0.6, 1.8, -2.0, 0.0, 0.0, 0.0);

		    		if(AttachOjects[playerid][1] != 0) DestroyObject(AttachOjects[playerid][1]);
					AttachOjects[playerid][1] = CreateObject(18669, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 30.0);
					AttachObjectToVehicle(AttachOjects[playerid][1], newcar, -0.6, 1.8, -2.0, 0.0, 0.0, 0.0);
					
			        SendClientMessage(playerid, COLOR_GREEN, "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			        SendClientMessage(playerid, COLOR_GREEN, "Введите /cleaner для просмотра меню уборщика");
			        
			        LockForPlayer[newcar] = playerid;
					LockedCarP[newcar] = 1;
					Gas[newcar] = 100;
					
					if(TimerEndCleanerWork[playerid] != -1)
					{
						KillTimer(TimerEndCleanerWork[playerid]);
						TimerEndCleanerWork[playerid] = -1;
					}
				}
				else
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете уборщиком улиц");
				}
				return 1;
			}
			if(GetDumpCar(newcar) != -1)
			{
				if(GetPVarInt(playerid, "OnDumpJob") != 2)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Транспорт доступен только для рабочих");
				}
				else
				{
				    Gas[newcar] = 100;
				    SendClientMessage(playerid, COLOR_GREEN, "Вы можете закупить металл на складе командой /buym");
				    SendClientMessage(playerid, COLOR_GREEN, "Место закупки метелла отмечено иконкой на Вашем радаре!");
				    SendClientMessage(playerid, COLOR_GREEN, "Введите /biznes чтобы просмотреть список магазинов");
				    SetPlayerMapIcon(playerid, ICON_JOB, 2108.101074,-2002.671875,13.252698, 51, 0, 1 );
				}
				return 1;
			}
			if(GetLoaderCar(newcar) != -1)
			{
				if(GetPVarInt(playerid, "OnOilJob") != 1)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете грузчиком");
				}
				else
				{
					if(gPlayerCheckpointStatus[playerid] != CHECKPOINT_OILJOB)
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_OILJOB;
						if(GetPVarInt(playerid, "RandCpOil") == 0) SetPVarInt(playerid, "RandCpOil", random(5)+1);
						SetCheckpointLoadOil(playerid, GetPVarInt(playerid, "RandCpOil"));
						Gas[newcar] = 100;
					}
				}
				return 1;
			}
			if(IsOilTruck(newcar))
			{
				if(GetPVarInt(playerid, "OnOilJob") != 2)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не работаете в доставке нефти");
				}
				new id = GetVehicleTank(newcar);
				if(id != -1)
				{
					if(OilTank[id][gOil] > 500)
					{
					    format(string, sizeof(string), "В цистерне еще достаточно нефти (%d). Место доставки помечено на радаре", OilTank[id][gOil]);
					    SendClientMessage(playerid, COLOR_GREEN, string);

					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_SELLOIL;
					    SetPlayerRaceCheckpoint(playerid, 1, -1033.152954,-625.747985,32.007812, 0.0, 0.0, 0.0, 8.0);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREEN, "В цистерне мало нефти. Закупите её около раздаточной бочки, либо везите остатки сразу на завод");
					}
					Gas[newcar] = 100;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN, "Вам понадобится цистерна для перевозки нефти на завод");
				}
				return 1;
			}
			if(GetBusID(newcar) != -1)
			{
				if(GetPVarInt(playerid, "Job") != 14)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель автобуса");
				}
				else
				{
				    if(GetPVarInt(playerid, "OnBusJob") != 1)
				    {
				        ShowPlayerDialog(playerid, 182, DIALOG_STYLE_MSGBOX, RGB_SERVER"Аренда автобуса",RGB_WHITE"Чтобы начать работу, Вам необходимо взять\nавтобус в аренду. Стоимость аренды: 200$", "Далее", "Отмена");
					}
					else
					{
						if(BusTimer[playerid] != -1) KillTimer(BusTimer[playerid]);
					}
					Gas[newcar] = 100;
				}
			}
   			if(IsACollectorcar(newcar))
    		{
		    	if(GetPVarInt(playerid,"Job") != 22)
			    {
		       		removePlayerFromVehicle(playerid);
		       		return SendClientMessage(playerid, COLOR_GREY, "Вы не инкассатор");
		    	}
		    	else
		    	{
   					if(GetPVarInt(playerid,"PickupToCar"))
					{
                    	SetPlayerCollectorRoute(playerid);
					}
					else
					{
		    			ShowPlayerDialog(playerid,34,DIALOG_STYLE_MSGBOX, RGB_SERVER"Работа инкассатора", RGB_WHITE"Вы хотите начать работу инкассатора?","Да","Нет");
			    	}
			    	Gas[newcar] = 100;
		   	 	}
			}
			if(IsFuelTruck(newcar) && GetPVarInt(playerid, "FuelTrucker") != 1)
			{
			    Gas[newcar] = 100;
				removePlayerFromVehicle(playerid);
    			return SendClientMessage(playerid, COLOR_GREY, "Транспорт только для рабочих");
			}
			for(new i; i < sizeof(AutoSchoolMoped); i ++)
			{
			    if(newcar == AutoSchoolMoped[i])
			    {
			        if(GetPVarInt(playerid, "Level") > 1)
			        {
                        removePlayerFromVehicle(playerid);
                        return SendClientMessage(playerid, COLOR_GREY, "Транспорт только для игроков 1 уровня");
					}
				}
			}
			for(new i; i < sizeof(PizzaBoy); i ++)
			{
				if(newcar == PizzaBoy[i])
				{
				    if(!GetPVarInt(playerid, "OnPizzaDuty"))
				    {
						removePlayerFromVehicle(playerid);
						return SendClientMessage(playerid, COLOR_GREY, "Только для развозчиков пиццы");
					}
					else
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_PIZZA;
					    
					    SendClientMessage(playerid, COLOR_GREEN, "Следуйте по красным меткам");
					    
					    new nowcp = GetPVarInt(playerid, "CoursePizza");
                    	switch(GetPVarInt(playerid, "Marshrut"))
						{
						    case 1: SetPlayerRaceCheckpoint(playerid, 0, PizzaCourse[nowcp][0], PizzaCourse[nowcp][1], PizzaCourse[nowcp][2], PizzaCourse[nowcp+1][0], PizzaCourse[nowcp+1][1], PizzaCourse[nowcp+1][2], 6.0);
						    case 2: SetPlayerRaceCheckpoint(playerid, 0, PizzaCourse2[nowcp][0], PizzaCourse2[nowcp][1], PizzaCourse2[nowcp][2], PizzaCourse2[nowcp+1][0], PizzaCourse2[nowcp+1][1], PizzaCourse2[nowcp+1][2], 6.0);
						    case 3: SetPlayerRaceCheckpoint(playerid, 0, PizzaCourse3[nowcp][0], PizzaCourse3[nowcp][1], PizzaCourse3[nowcp][2], PizzaCourse3[nowcp+1][0], PizzaCourse3[nowcp+1][1], PizzaCourse3[nowcp+1][2], 6.0);
						}
						return 1;
					}
				}
			}
			
			if(IsABoat(newcar))
			{
			    if(GetPVarInt(playerid,"BoatLic") < 1)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на водный транспорт");
				}
			}
			else if(IsAPlane(newcar))
			{
			    if(GetPVarInt(playerid,"FlyLic") < 1 && TakingLesson[playerid] != 1)
				{
					removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "У Вас нет лицензии на воздушный транспорт");
				}
			}
			else
			{
	   			if(GetPVarInt(playerid,"CarLic") < 1)
				{
					switch(GetVehicleModel(newcar))
					{
					    case 462, 481, 510, 509, 488: return 1;
					    default:
					    {
					        if((TakingLesson[playerid] == 1 && IsALicenzersCar(newcar)) || newcar == PlayerSchoolCar[playerid])
					        {
					            return SendClientMessage(playerid, COLOR_WHITE, "Для управления автомобилем используйте "RGB_BLUE"левый CTRL");
					        }
					        else
					        {
								removePlayerFromVehicle(playerid);
								return SendClientMessage(playerid, COLOR_GREY, "У Вас нет прав для вождения автомобиля");
					        }
					  	}
					}
				}
			}

			if(IsAPoliceCar(newcar))
			{
			    if(GetPVarInt(playerid,"Team") != 1)
			    {
					removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Техника доступна только для полиции");
				}
				if((newcar == PoliceCar[13] || newcar == PoliceCar[14]) && GetPVarInt(playerid, "Rank") < 8)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 8 ранг, чтобы управлять этим");
				}
			}
			
			if(IsAFBICar(newcar))
			{
			    if(GetPVarInt(playerid,"Team") != 2)
			    {
					removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Техника доступна только для агентов FBI");
				}
				else if((newcar == FBICar[11] || newcar == FBICar[12]) && GetPVarInt(playerid,"Rank") < 3)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 3 ранг, чтобы управлять этим");
				}
				else if((newcar == FBICar[13] || newcar == FBICar[14]) && GetPVarInt(playerid,"Rank") < 5)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 5 ранг, чтобы управлять этим");
				}
				else if((newcar == FBICar[15] || newcar == FBICar[16] || newcar == FBICar[8] || newcar == FBICar[9] || newcar == FBICar[10]) && GetPVarInt(playerid,"Rank") < 8)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 8 ранг, чтобы управлять этим");
				}
			}
			
			if(IsAArmyCar(newcar))
			{
			    if(GetPVarInt(playerid,"Team") != 3)
			    {
					removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Техника доступна только для армейцев");
				}
				if((newcar == ArmyCar[7] || newcar == ArmyCar[8]) && rank < 2)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 2 ранг, чтобы управлять этим");
				}
				if((newcar == ArmyCar[4] || newcar == ArmyCar[5] || newcar == ArmyCar[6]) && rank < 3)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 3 ранг, чтобы управлять этим");
				}
				if((newcar == ArmyCar[9] || newcar == ArmyCar[10] || newcar == ArmyCar[13] || newcar == ArmyCar[14]) && rank < 5)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 5 ранг, чтобы управлять этим");
				}
				if((newcar == ArmyCar[11] || newcar == ArmyCar[12] || newcar == ArmyCar[15] || newcar == ArmyCar[16] || newcar == ArmyCar[17]) && rank < 10)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 10 ранг, чтобы управлять этим");
				}
				if((newcar == ArmyCar[18] || newcar == ArmyCar[19]) && rank < 14)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 14 ранг, чтобы управлять этим");
				}
				if((newcar == ArmyCar[20] || newcar == ArmyCar[21]) && rank < 16)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 16 ранг, чтобы управлять этим");
				}
				if((newcar == ArmyCar[22]) && rank < 3)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 3 ранг, чтобы управлять этим");
				}
				if(newcar == ArmyCar[23] && rank < 6)
				{
				    removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 6 ранг, чтобы управлять этим");
				}
			}
			if(IsAnAmbulance(newcar) && GetPVarInt(playerid,"Team") != 4)
			{
				removePlayerFromVehicle(playerid);
				return SendClientMessage(playerid, COLOR_GREY, "Вы не работник МЧС");
			}
			if(GetProdCar(newcar) != -1)
			{
				if(GetPVarInt(playerid, "OnFacJob") != 2)
				{
					removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");
				}
				else
				{
				    Gas[newcar] = 100;
					SendClientMessage(playerid, COLOR_GREEN, "Закупите товар на складе и развезите его по бизнесам");
					return SendClientMessage(playerid, COLOR_GREEN, "Команды: /buyprods /sellprods /biznes");
				}
			}
			if(IsALicenzersCar(newcar))
			{
				if(!IsAnInstructor(playerid) && TakingLesson[playerid] != 1)
			    {
			        removePlayerFromVehicle(playerid);
					return SendClientMessage(playerid, COLOR_GREY, "Вы не лицензиар");
			    }
			}
			if(IsASanNewsCar(newcar))
			{
				if(GetPVarInt(playerid,"Team") != 9)
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Вы не репортер");
				}
				if(GetPVarInt(playerid,"Rank") < 3 && newcar == SanNewsCar[4])
				{
				    removePlayerFromVehicle(playerid);
				    return SendClientMessage(playerid, COLOR_GREY, "Для управления этим транспортом требуется 3+ ранг");
				}
			}
			if(IsAKartCar(newcar) && GetPVarInt(playerid, "KartingAllowed") == 0)
			{
			    Gas[newcar] = 100;
			    removePlayerFromVehicle(playerid);
			    return SendClientMessage(playerid, COLOR_GREY, "Вы не оплатили картинг");
			}
		   	if(newcar == RentLSCar[0] || newcar == RentLSCar[1] || newcar == RentLSCar[2])
			{
				if (HireCar[playerid] != newcar)
				{
				    TogglePlayerControllable(playerid, 0);
					format(string, sizeof(string), "Вы можете арендовать авто за $%d, используйте /rentcar. Чтобы выйти из авто /exit",SBizzInfo[0][sbEntranceCost]);
					return SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
			if(newcar == RentSFCar[0] || newcar == RentSFCar[1] || newcar == RentSFCar[2])
			{
				if (HireCar[playerid] != newcar)
				{
				    TogglePlayerControllable(playerid, 0);
					format(string, sizeof(string), "Вы можете арендовать авто за $%d, используйте /rentcar. Чтобы выйти из авто /exit", SBizzInfo[1][sbEntranceCost]);
					return SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
	        if(IsAMeriyaCar(newcar) && GetPVarInt(playerid,"Team") != 7)
			{
  				removePlayerFromVehicle(playerid);
  				return SendClientMessage(playerid, COLOR_GREY, "Вы не состоите в мэрии");
			}
	        if(IsAHitmansCar(newcar) && GetPVarInt(playerid,"Team") != 8)
			{
  				removePlayerFromVehicle(playerid);
  				return SendClientMessage(playerid, COLOR_GREY, "Вы не наемный убийца");
			}
	    	if(IsAMehanikCar(newcar) && GetPVarInt(playerid,"Job") != 7)
			{
				removePlayerFromVehicle(playerid);
				return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
			}
			UpdateCarSystemTextForPlayer(playerid);
			return SendClientMessage(playerid, COLOR_WHITE, "Для управления автомобилем используйте "RGB_BLUE"левый CTRL");
		}
		case PLAYER_STATE_SPAWNED:
		{
		    if(GetPVarInt(playerid,"Logged") == 0)
			{
		    	SendClientMessage(playerid, COLOR_RED, "Этот сервер требует регистрации! (Kicked)");
		        Kick_(playerid);
		        return 1;
		 	}
			
   			SetPlayerWantedLevel(playerid, 0);
			WantedPoints[playerid] = 0;
			WantedLevel[playerid] = 0;

			if(GetPVarInt(playerid,"VipLevel") > 1)
			{
				SetPlayerHealthUAC(playerid, 120.0);
			}
			else 
			{
			    new Float:hp = 50;
			    
				if(GetPVarInt(playerid, "Achievement_Best_Mechanic") >= 100) hp += 10.0;
				if(GetPVarInt(playerid, "Achievement_Scavenger") >= 100) hp += 10.0;
				if(GetPVarInt(playerid, "Achievement_Loader") >= 500) hp += 20.0;
				if(GetPVarInt(playerid, "Achievement_Fisher") >= 100) hp += 10.0;

				SetPlayerHealthUAC(playerid, hp);
			}
			SetPlayerWantedLevel(playerid, 0);
		}
		case PLAYER_STATE_SPECTATING:
		{
		    if(GetPVarInt(playerid, "AdminLevel") < 1)
		    {
		        KickCheater(playerid, SPEC_CHEAT);
		        return 1;
		    }
		}
	}
	return 1;
}

forward SetArmedFirst(playerid);
public SetArmedFirst(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerArmedWeapon(playerid,0);
	}
	return 1;
}

forward HideVehicleName(playerid);
public HideVehicleName(playerid)
{
    Timer_VehName[playerid] = 0;
	PlayerTextDrawHide(playerid, CarName_Name[playerid]);
	TextDrawHideForPlayer(playerid, CarName_Line);
	TextDrawHideForPlayer(playerid, CarName_Vehicle);
	return 1;
}



public OnVehicleSpawn(vehicleid)
{
    if(dodebug == true) printf("DEBUG LOG: OnVehicleSpawn(%d); [Owned: %d]", vehicleid, IsForSaleCar[vehicleid]);
    LockForPlayer[vehicleid] = -1;
    LockedCarP[vehicleid] = 0;
	if(IsForSaleCar[vehicleid] == true)
	{
		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(CarInfo[i][cMaincar] == vehicleid)
		    {
	            SetVehiclePos(CarInfo[i][cMaincar], CarInfo[i][carX], CarInfo[i][carY], CarInfo[i][carZ]);
	            SetVehicleZAngle(CarInfo[i][cMaincar], CarInfo[i][carA]);
	            TunePlayerCar(i);
				break;
			 }
		}
	}

    VehicleHealth[vehicleid] = 1000.0;
    if(IsARifaWorkCar(vehicleid)) MatsInfo[GetFactionCarId(8,vehicleid)][mLoad] = 0;
 	if(Gas[vehicleid] < 15) Gas[vehicleid] = 30;
	
	if(IsACollectorcar(vehicleid))
	{
		UnLockCar(vehicleid);
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if(CheckFCalls(playerid, 13)) return 1;
	new car = GetPlayerVehicleID(playerid);
	new engine,lights,alarm,door,bonnet,boot,objective;


	if (HOLDING(KEY_ACTION) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(IsAPlane(car) || IsABoat(car) || IsABike(car)) return 1;
     	if(IsForSaleCar[car] && car != CarInfo[playerid][cMaincar]) return 1;
	    if(!GetPVarInt(playerid, "ShowCarHelpText")) { TextDrawShowForPlayer(playerid, CarHelpText); SetPVarInt(playerid, "ShowCarHelpText",1); }
	}
	if (RELEASED(KEY_ACTION))
	{
	    if(GetPVarInt(playerid, "ShowCarHelpText")) { TextDrawHideForPlayer(playerid, CarHelpText); DeletePVar(playerid, "ShowCarHelpText"); }
	}
	if (HOLDING( KEY_ACTION | KEY_SPRINT ) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(IsAPlane(car) || IsABoat(car) || IsABike(car)) return 1;
	    GetVehicleParamsEx(car,engine,lights,alarm,door,bonnet,boot,objective);
		new Float:vHeal;
	    GetVehicleHealth(car, vHeal);
	    if(engine == VEHICLE_PARAMS_ON) SetVehicleParamsEx(car, VEHICLE_PARAMS_OFF, lights,alarm,door,bonnet,boot,objective);
		else if(Gas[car] > 1 && vHeal > 400.0) SetVehicleParamsEx(car, VEHICLE_PARAMS_ON,  lights,alarm,door,bonnet,boot,objective);
		UpdateCarSystemTextForPlayer(playerid);
	}
	if (HOLDING( KEY_ACTION | KEY_JUMP ) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(IsAPlane(car) || IsABoat(car) || IsABike(car)) return 1;
	    GetVehicleParamsEx(car,engine,lights,alarm,door,bonnet,boot,objective);
	    if(lights == VEHICLE_PARAMS_ON) SetVehicleParamsEx(car, engine, VEHICLE_PARAMS_OFF,alarm,door,bonnet,boot,objective);
		else SetVehicleParamsEx(car, engine,VEHICLE_PARAMS_ON,alarm,door,bonnet,boot,objective);
		UpdateCarSystemTextForPlayer(playerid);
	}
	
	if(oldkeys & 1)
	{
		switch(GetVehicleModel(car))
		{
		    case 509, 481, 510:
		    {
				new Float:pos[3];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				if(BikeJumpTimer[playerid] != -1) KillTimer(BikeJumpTimer[playerid]);
				BikeJumpTimer[playerid] = SetTimerEx("CheckJumpCheat", 1000, 0, "dfff", playerid, pos[0], pos[1], pos[2]);
			}
		}
	}
	
	if((newkeys & 512 && IsPlayerInAnyVehicle(playerid)) || (newkeys & 1024 && !IsPlayerInAnyVehicle(playerid)))
	{
	    if(GetPVarInt(playerid, "CarKey") != 0)
	    {
			new Float:x, Float:y, Float:z;
			GetVehiclePos(CarInfo[playerid][cMaincar], x, y, z);
			if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
			{
				GetVehicleParamsEx(CarInfo[playerid][cMaincar],	engine,lights,alarm,door,bonnet,boot,objective);

			    if(door == 0)
			    {
			        GameTextForPlayer(playerid, "~r~Locked", 1000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					LockCar(CarInfo[playerid][cMaincar]);
				}
				else
				{
					GameTextForPlayer(playerid, "~g~Opened", 1000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					UnLockCar(CarInfo[playerid][cMaincar]);
				}
			}
		}
		if(HireCar[playerid] != 99999)
		{
		    new Float:pos[3];
		    GetVehiclePos(HireCar[playerid], pos[0], pos[1], pos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 3.0, pos[0], pos[1], pos[2]))
			{
				GetVehicleParamsEx(HireCar[playerid],	engine,lights,alarm,door,bonnet,boot,objective);

			    if(door == 0)
			    {
			        GameTextForPlayer(playerid, "~r~Locked", 1000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					LockCar(HireCar[playerid]);
				}
				else
				{
					GameTextForPlayer(playerid, "~g~Opened", 1000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					UnLockCar(HireCar[playerid]);
				}
			}
		}
  		if(GetPVarInt(playerid, "HavePizza") == 1) // Если есть пицца
		{
  			RemovePlayerAttachedObject(playerid, 6);
	    	DeletePVar(playerid, "HavePizza");
			SetPlayerHealthUAC(playerid, 120.0);
   			ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1, 0, 1, 1, 0, 5000, 1);
		}
	}
	if(newkeys == 512)
	{
		if(GetPVarInt(playerid, "On_RobHouse") == 0)
		{
			switch(GetPVarInt(playerid, "Team"))
			{
				case 10, 13, 14..18:
				{
					new rc = GetRobCar(car);
					if(rc != -1)
					{
						if(GetPVarInt(playerid, "AfloodRob") > gettime()) return SendClientMessage(playerid, COLOR_GREEN, "Вам нужен напарник для совершения ограбления");

						DeletePVar(playerid, "AfloodRob");
					    new rgar;
		   				switch(rc)
					    {
		       				case 0: rgar = random(3);
					        case 1: rgar = random(3)+3;
					        case 2: rgar = random(3)+6;
						}
						new thelps;
						for(new i; i < MAX_PLAYERS; i++)
						{
						    if(GetPlayerVehicleID(i) == car && i != playerid)
						    {
						        thelps ++;
						        SetPVarInt(i, "On_RobHouse", 1);
						        SetPVarInt(i, "Rob_Car", car);
						        SetPVarInt(i, "Rob_Garage", rgar);
						        SetPlayerAttachedObject(i, 2, 19036, 2, 0.079999, 0.039999, 0.000000, 0.000000, 90.000000, 90.000000, 1.000000, 1.000000, 1.000000);

								break;
							}
						}
						if(thelps > 0)
						{
						    SendClientMessage(playerid, COLOR_GREEN, "Найдите дом, который можно ограбить");
						    SetPVarInt(playerid, "On_RobHouse", 1);
						    SetPVarInt(playerid, "Rob_Car", car);
							SetPVarInt(playerid, "Rob_Garage", rgar);
						    SetPlayerAttachedObject(playerid, 2, 19036, 2, 0.079999, 0.039999, 0.000000, 0.000000, 90.000000, 90.000000, 1.000000, 1.000000, 1.000000);
						}
						else
						{
						    SetPVarInt(playerid, "AfloodRob", gettime()+2);
						    SendClientMessage(playerid, COLOR_GREEN, "Вам нужен напарник для совершения ограбления");
						}
					}
				}
			}
		}
	    if(IsACop(playerid) && IsACopCar(car) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(PlayerChase[playerid] == -1)
	        {
	        	ShowWantedList(playerid);
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~Mission Canceled", 3000, 1);
			    PlayerChase[playerid] = -1;
			    DisablePlayerCheckpoint(playerid);
			    gPlayerCheckpointStatus[playerid] = 0;
			}
	    }
	}
	if(newkeys & 1024)
	{
	    new id = GetPVarInt(playerid, "Local");
		if(id >= 1000 && id < (sizeof(HouseInfo)+1000))
		{
		    id -= 1000;
			if (IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[id][hExitx], HouseInfo[id][hExity], HouseInfo[id][hExitz]))
			{
			    order[playerid] = 1;
			    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid,0);
				oSetPlayerPos(playerid,HouseInfo[id][hEntrancex], HouseInfo[id][hEntrancey], HouseInfo[id][hEntrancez]);
				SetPlayerVirtualWorld(playerid,0);
				DeletePVar(playerid, "Local");
			}
	    }
		new pid = GetPVarInt(playerid, "Cuff_Player_Susp");
	    if(GetPVarInt(playerid, "NowCanTazer") > gettime())
	    {
	        DeletePVar(playerid, "Cuff_Player_Susp");
			DeletePVar(playerid, "NowCanTazer");
	        if(IsPlayerConnected(pid))
	        {
		        if(ProxDetectorS(3.0, playerid, pid))
		        {
		            new str[128];
					new cuff = random(12);
					if(GetPVarInt(pid, "Level") < 3) cuff = 0; // Чтобы новичков не сажали
		            switch(cuff)
		            {
		                case 0..3:
						{
							format(str, sizeof(str), "%s попытался надеть наручники на %s (неудачно)", GetName(playerid), GetName(pid));
						}
						default:
						{
							if(Cuffed_Timer[pid] != 0) KillTimer(Cuffed_Timer[pid]);
							Cuffed_Timer[pid] = SetTimerEx("UnCuffed", 15000, 0, "d", pid);
						    format(str, sizeof(str), "%s надел наручники на %s (удачно)", GetName(playerid), GetName(pid));
				        	SetPlayerSpecialAction(pid, SPECIAL_ACTION_CUFFED);
				        	SetPVarInt(pid, "Cuff_Player", 1);
				        	SetPlayerAttachedObject(pid, 3, 19418, 6, -0.010999, 0.028000, -0.021999, -15.600011, -33.699977, -81.700035, 1.399999, 2.400000, 1.399999);
                            TogglePlayerControllable(pid, 0);
						}
					}
					ProxDetector(15.0, playerid, str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
	}
	if(newkeys == 128)
	{
		if(GetPVarInt(playerid, "CanStartFishing") == 1 && GetPVarInt(playerid, "KgFish") < 50)
		{
			if(IsPlayerInRangeOfBoat(playerid))
			{
				switch(GetPlayerAnimationIndex(playerid))
				{
				    case 1275, 1186, 1189:
				    {
				    	ApplyAnimation(playerid,"SWORD", "sword_4", 4.1,0,1,1,1,1,1); // забрасывает удочку
				    	DeletePVar(playerid, "CanStartFishing");
				    	SetTimerEx("NowStartFishing", 10000, 0, "d", playerid);
				    }
				}
			}
		}
	}
	if((newkeys & KEY_FIRE) || (newkeys & 1) && (newkeys & 128))
	{
	    new weapon = GetPlayerWeapon(playerid);
		if(PlayerWeapons[playerid][weapon] == 0 && weapon != 0 && GetPVarInt(playerid, "DelayWeapon") < gettime())
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		    {
				ResetPlayerWeaponsUAC(playerid);
				KickCheater(playerid, GUNCHEATKEY);
				return 1;
			}
		}
	}
	if(Bankomat(playerid) && (newkeys & 16))
	{
   		ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM","Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления","Дальше","Отмена");
   		ClearAnimations(playerid);
	}
	if(newkeys == 16)
	{
		if(GetPVarInt(playerid, "On_RobHouse") == 1 && GetPVarInt(playerid, "Have_RobObject") == 0)
		{
			new id = GetPVarInt(playerid, "Local");
			if(id >= 1000 && id < (sizeof(HouseInfo)+1000))
			{
			    id -= 1000;
				if(GetPlayerVirtualWorld(playerid) == HouseInfo[id][hWorld] && GetPlayerInterior(playerid) == HouseInfo[id][hInt])
				{
			 		if(HouseInfo[id][hMoney] < 800 || HouseInfo[id][hRobMoney] > 5 || HouseInfo[id][hOwned] == 0)
			 		{
			 		    return SendClientMessage(playerid, COLOR_GREEN, "В этом доме нечего красть");
			 		}
		    		new rc = GetRobCar(GetPVarInt(playerid, "Rob_Car"));
				    if(RobCarInfo[rc][cTotalp] > 10)
				    {
				        return SendClientMessage(playerid, COLOR_GREEN, "В Ваш грузовик не поместится больше вещей");
				    }
					for(new i; i < sizeof(RobHouse_Objects); i++)
					{
					    if(HouseInfo[id][hObjects][i] != 0) continue;
					    if(IsPlayerInRangeOfPoint(playerid, 1.2, RobHouse_Objects[i][1], RobHouse_Objects[i][2], RobHouse_Objects[i][3]))
					    {
					        AttachRobObject(playerid, floatround(RobHouse_Objects[i][0]));
					        SetPVarInt(playerid, "Have_RobObject", 1);

							new Float: pos[4];
							new  pcar = GetPVarInt(playerid, "Rob_Car");
							GetVehiclePos   ( pcar, pos[0], pos[1], pos[2] );
				 			GetVehicleZAngle( pcar, pos[3] );

							SetPlayerCheckpoint(playerid,
								pos[0] + 4.0 * floatcos(pos[3]-90.0, degrees),
								pos[1] + 4.0 * floatsin(pos[3]-90.0, degrees),
								pos[2] + 0.3,
								1.2);
				           	gPlayerCheckpointStatus[playerid] = CHECKPOINT_ROBCAR;
							ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1,1);
							SetTimerEx("animliftup", 1000, false, "i", playerid);
							
				 			HouseInfo[id][hMoney] -= random(500)+300;
			 				HouseInfo[id][hRobMoney] ++;
                            HouseInfo[id][hObjects][i] = 1;
					        return 1;
						}
					}
		 		}
		   	}
			return 1;
		}
	}
	
	if((newkeys & 2) || (newkeys & 4) || (newkeys & 32) || (newkeys & 128))
	{
		PlayerDropObject(playerid);
	}
	if(!IsPlayerInAnyVehicle(playerid) && newkeys & KEY_SECONDARY_ATTACK)
	{
	    new Float:pos[3];
	    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	    if(pos[1] < -1301.4 && pos[1] > -1303.2417 && pos[0] < 1786.2131 && pos[0] > 1784.1555)    // He is using the elevator button
	        ShowElevatorDialog(playerid);
		else    // Is he in a floor button?
		{
		    if(pos[1] > -1301.4 && pos[1] < -1299.1447 && pos[0] < 1785.6147 && pos[0] > 1781.9902)
		    {
		        // He is most likely using it, check floor:
				new i=20;
				while(pos[2] < GetDoorsZCoordForFloor(i) + 3.5 && i > 0)
				    i --;

				if(i == 0 && pos[2] < GetDoorsZCoordForFloor(0) + 2.0)
				    i = -1;

				if(i <= 19)
				{
					CallElevator(playerid, i + 1);
					GameTextForPlayer(playerid, "~r~Elevator called", 3500, 4);
				}
		    }
		}
	}
	if((((newkeys & 1) && (newkeys & 128)) || (newkeys & (KEY_HANDBRAKE | KEY_SECONDARY_ATTACK)) == (KEY_HANDBRAKE | KEY_SECONDARY_ATTACK) || newkeys & KEY_FIRE) && IsAtGreenZone(playerid) && !IsPlayerInAnyVehicle(playerid))
	{
	    switch(GetPlayerWeapon(playerid))
	    {
	        case 43: {}
			default:
			{
			    if(GetPVarInt(playerid, "NoShowDialog") == 0)
				{
					ShowPlayerDialog(playerid,39,DIALOG_STYLE_MSGBOX,"   ",RGB_WHITE"В зеленых зонах запрещено драться!\nВы заморожены на 5 секунд!","Ок","");
					SetPVarInt(playerid, "NoShowDialog", 1);
					SetTimerEx("HideDialogDM", 5000, false, "d", playerid);
					SetPlayerArmedWeapon(playerid, 0);
					SetCameraBehindPlayer(playerid);
					ApplyAnimation(playerid, "FAT", "IDLE_TIRED", 4.1, 1, 0, 0, 0, 5000, 1);
				}
			}
		}
	}

	new action = GetPlayerSpecialAction(playerid);
	if(newkeys & KEY_FIRE && (action == SPECIAL_ACTION_SMOKE_CIGGY || action == SPECIAL_ACTION_DRINK_SPRUNK))
	{
		GivePVarInt(playerid,"SpecialAction",-1);
		if(GetPVarInt(playerid, "SpecialAction") == 0) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	}
	if(newkeys & KEY_FIRE && (action == SPECIAL_ACTION_DRINK_BEER || action == SPECIAL_ACTION_DRINK_WINE))
	{
		GivePVarInt(playerid,"SpecialAction",-1);
		if(GetPVarInt(playerid, "SpecialAction") == 0) SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	}

	
	if(((newkeys & KEY_CROUCH) && IsPlayerInAnyVehicle(playerid)) || ((newkeys & 1024) && !IsPlayerInAnyVehicle(playerid))) // Alt если пешком и H если в авто
	{
	    if(IsACop(playerid))
	    {
   			if(IsPlayerInRangeOfPoint(playerid, 15.0,  1544.69360352, -1630.80761719, 13.07956696) && LSPDrotateaction == 0) // шлагбаум при въезде
			{
	    		LSPDrotateaction = 1; // пока не закрылся нельзя опять открывать
	    		MoveObject(LSPDrotate, 1544.70360352,-1630.81761719,13.08956696,0.01, 0.10000000,10.10000000,90.10000000); // Открыл
				SetTimer("LSPDcloserot", 5000, 0);
			}
	    }
	    switch(GetPVarInt(playerid, "Team"))
	    {
	        case 1:
	        {
				if(IsPlayerInRangeOfPoint(playerid, 15.0,  1588.39440918,-1638.14953613,14.68334770) && LSPDgateaction == 0) // ворота в гараж
				{
	    			LSPDgateaction = 1;
					MoveObject(LSPDgate, 1588.39440918,-1638.14953613,0.000000000, 10.0); // открыл
					SetTimer("LSPDclosegat", 5000, 0);
				}
			 	else if(IsPlayerInRangeOfPoint(playerid, 5.0,  246.34458923,72.56134796,1003.70977783) && LSPDdooraction == 0) // дверь в ЛСПД
				{
	    			LSPDdooraction = 1;
					MoveObject(LSPDdoor, 247.24900818,72.40412903,1015.0000, 5.0); // открыл
					SetTimer("LSPDclosedoor", 2500, 0);
				}
	        }
	        case 2: // ФБР
			{
				if(IsPlayerInRangeOfPoint(playerid, 15.0, 2238.1999500,2450.5000000,10.6000000) && FBIrotaction == 0)
			    {
			        FBIrotaction = 1;
					MoveObject(FBIrotate, 2238.1999500+0.01,2450.5000000+0.01,10.6000000+0.1, 0.06, 0.0000000,341.5000000,270.0000000);
                    SetTimer("FBIcloserotate", 5000, 0);
			    }
			    else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2294.0000000,2498.6999500,4.5000000) && FBIgateaction[0] == 0)
			    {
			        FBIgateaction[0] = 1;
			        MoveObject(FBIgate[0], 2294.0000000,2498.6999500,-4.5000000, 10.0); // open
			        SetTimer("FBIgateclose1", 5000, 0);
				}
			    else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2335.1001000,2443.5000000,7.0000000) && FBIgateaction[1] == 0)
			    {
			        FBIgateaction[1] = 1;
			        MoveObject(FBIgate[1], 2335.1001000,2443.5000000,-3.0000000, 10.0); // open
			        SetTimer("FBIgateclose2", 5000, 0);
				}
			}

			
	        case 3: // армия
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 15.0, 2720.03222656,-2405.21191406,15.70587540) && Armygateaction == 0)
	            {
	                Armygateaction = 1;
	                MoveObject(ARMYgate, 2720.03222656,-2405.21191406,0.00000, 10.0); // открыл
	                SetTimer("Armygateclose", 5000, 0);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 15.0, 2774.09130859,-2417.60571289,15.18078423) && Angaraction[0] == 0)
				{
				    Angaraction[0] = 1;
				    MoveObject(ARMYangar[0], 2774.09130859,-2417.60571289,0.00000, 10.0); // открыл
				    SetTimer("Angar1close", 5000, 0);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 15.0, 2774.33105469,-2455.84106445,15.17098427) && Angaraction[1] == 0)
				{
				    Angaraction[1] = 1;
				    MoveObject(ARMYangar[1], 2774.33105469,-2455.84106445,0.00000, 10.0); // открыл
				    SetTimer("Angar2close", 5000, 0);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 15.0, 2774.29541016,-2493.99267578,15.20078659) && Angaraction[2] == 0)
				{
				    Angaraction[2] = 1;
				    MoveObject(ARMYangar[2], 2774.29541016,-2493.99267578,0.00000, 10.0); // открыл
				    SetTimer("Angar3close", 5000, 0);
				}
	        }
	        case 7: // мэрия
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 15.0, 1544.05834961,-1840.02307129,14.71682930) && HELLgateaction[0] == 0)
	            {
	                HELLgateaction[0] = 1;
	            	MoveObject(HALLgate[0], 1544.05834961,-1840.02307129,0.000000, 10.0); // открыл
	            	SetTimer("Hellclose1", 5000, 0);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 15.0, 1418.04455566,-1840.04785156,15.11677742) && HELLgateaction[1] == 0)
				{
				    HELLgateaction[1] = 1;
				    MoveObject(HALLgate[1], 1418.04455566,-1840.04785156,0.000000, 10.0); // открыл
				    SetTimer("Hellclose2", 5000, 0);
				}
	        }
	        case 9: // Репортеры
	        {
				if(IsPlayerInRangeOfPoint(playerid, 15.0, 1803.1999512, -1277.8000488, 13.5000000) && CNNrotaction == 0) // ворота в гараж
				{
	    			CNNrotaction = 1;
					MoveObject(CNNrotate, 1803.1999512+0.01, -1277.8000488+0.01, 13.4+0.1, 0.06, 0.0000000, 341.5000000, 34.5000305);
					SetTimer("CNNcloserotate", 5000, 0);
				}
	        }
	        case 11: // лицензеры
	        {
	            if(IsPlayerInRangeOfPoint(playerid, 10.0, -2043.6999512, -80.4000015, 35.1000000) && Licgateaction == 0)
	            {
	                Licgateaction = 1;
	                MoveObject(LICENZERSrotate, -2043.6999512+0.1, -80.4000015+0.00001, 35.1000000, 0.06, 358.15478515625, 344.49176025391, 1.4031372070313);
	                SetTimer("LicClose", 5000, 0);
				}
			}
	    }
		if(GetProdCar(GetPlayerVehicleID(playerid)) != -1)
		{
  			if(IsPlayerInRangeOfPoint(playerid, 15.0, -2124.00000000,-81.09999847,34.29999924) && slagbclose == 0)
	    	{
	    		slagbclose = 1;
				MoveObject(slagbfactory, -2124.10000000,-81.10000,35.30000076, 0.06, 0.00000000,350.00000, 0.00000000);
				SetTimer("FactoryCloseSlagb", 5000, 0);
			}
		}
	}
    if((newkeys == 16) && (IsPlayerInRangeOfPoint(playerid,1.0,-2035.621215,-100.877395,35.164062) || IsPlayerInRangeOfPoint(playerid,1.0,2752.131347,-2452.988769,13.643185) ))
	{
	    if(GetPlayerPCash(playerid) > 2)
	    {
			new Float:health;
			GetPlayerHealth(playerid, health);
			ApplyAnimation(playerid,"BAR","dnk_stndM_loop",4.1,0,0,0,0,0);
			SetTimerEx("ClearAnim", 2000, 0, "d", playerid);
			GivePlayerPCash(playerid, - 2);
			if(health < 100) SetPlayerHealthUAC(playerid, health + 30.0);
		}
	}
	
	
	if((newkeys & KEY_YES) && (GetPVarInt(playerid, "Logged")))
	{
	    new string[144];
	    switch(GetPVarInt(playerid, "Accept_Type"))
	    {
	        case 1:
	        {
				new id = GetPVarInt(playerid, "CarDellier_Player");
				new money = GetPVarInt(playerid, "CarDellier_Price");

				DeletePVar(playerid, "CarDellier_Player");
				DeletePVar(playerid, "CarDellier_Price");
				DeletePVar(playerid, "Accept_Type");


				if (!IsPlayerConnected(id))				return SendClientMessage(playerid, COLOR_GREY, "Продавец отключился от сервера");
				if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Продавец слишком далеко");
				if (GetPVarInt(id, "Job") != 10)		return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не продавец автомобилей");
				if (!IsPlayerInAnyVehicle(playerid))	return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в автомобиле");
				if (GetPlayerPCash(playerid) < money)
				{
				    SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег");
				    return SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
				}

	            new points, level = GetPVarInt(id, "CarSkill");

	            if(level < 401)	GivePVarInt(id, "CarSkill", 1);

	            switch(level)
	            {
		            case 50:  SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 2 профессии автодилера, ваши клиенты теперь могут вызывать авто 2 раза");
					case 100: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 3 профессии автодилера, ваши клиенты теперь могут вызывать авто 3 раза");
					case 200: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 4 профессии автодилера, ваши клиенты теперь могут вызывать авто 4 раза");
					case 400: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 5 профессии автодилера, ваши клиенты теперь могут вызывать авто 5 раз");
				}
				switch(level)
				{
				    case 0..50: 	points = 1;
				    case 51..100:   points = 2;
				    case 101..200:  points = 3;
				    case 201..400:  points = 4;
					default:        points = 5;
				}

				format(string, sizeof(string), "Вы продали автомобиль %s за $%d", GetName(playerid), money);
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "Вы купили автомобиль у %s, чтобы вызвать авто введите /callcar (Доступно %d раз)", GetName(id), points);
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePlayerPCash(id, money, "callcar");
				GivePlayerPCash(playerid, -money, "callcar");

				CarCalls[playerid] = points;
				CarID[playerid] = GetPlayerVehicleID(playerid);
	        }
			case 2:
			{
			    new id = GetPVarInt(playerid, "Ticket_ID");
			    new money = GetPVarInt(playerid, "Ticket_Money");

			    DeletePVar(playerid, "Ticket_Money");
			    DeletePVar(playerid, "Ticket_ID");
			    DeletePVar(playerid, "Accept_Type");

				if (!IsPlayerConnected(id))				return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
				if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
				if (!IsACop(id))						return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не законник");
				if (GetPlayerPCash(playerid) < money)
				{
				    SendClientMessage(playerid,  COLOR_GREY, "У Вас недостаточно денег для оплаты штрафа");
				    return SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег для оплаты штрафа");
				}

				format(string, sizeof(string), "Вы оплатили штраф на сумму "RGB_GREEN"$%d", money);
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Игрок оплатил штраф на сумму "RGB_GREEN"$%d", money);
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePlayerPCash(id, money, "ticket");
				GivePlayerPCash(playerid, -money, "ticket");
			}
			case 3:
			{
			    new id = GetPVarInt(playerid, "Paper_ID");

			    DeletePVar(playerid, "Paper_ID");
			    DeletePVar(playerid, "Accept_Type");

			    SendClientMessage(playerid, COLOR_WHITE, "Вы взяли газету, чтобы прочитать её введите "RGB_GREEN"/read paper");
			    
			    format(string, sizeof(string), "%s взял у Вас газету", GetName(playerid));
			    SendClientMessage(id, COLOR_WHITE, string);

			    GotPaper[playerid] = 1;
			}
			case 4: // Медик
			{
			    DeletePVar(playerid, "Accept_Type");
			    if(GetPVarInt(playerid, "Team") != 4 || !IsAnAmbulance(GetPlayerVehicleID(playerid))) return 1;
				if(LastMedicCall == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не вызывал медика");
			    if(!IsPlayerConnected(LastMedicCall)) return SendClientMessage(playerid, COLOR_GREY, "Игрок, вызывавший медика, не в сети");
			    if(GetPlayerInterior(LastMedicCall) != 0) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуется медик");

				format(string, sizeof(string), "[J] %s принял вызов от %s", GetName(playerid), GetName(LastMedicCall));
				for(new i; i < MAX_PLAYERS; i++)
    			{
       				if(!IsPlayerConnected(i)) continue;
			        if(GetPVarInt(i, "Team") == 4 && IsAnAmbulance(GetPlayerVehicleID(i))) SendClientMessage(i, COLOR_GREEN, string);
			    }
			    SendClientMessage(LastMedicCall, COLOR_YELLOW, "Медик принял Ваш вызов, ожидайте его на месте");

				gPlayerCheckpointStatus[playerid] = CHECKPOINT_CHASE;
				PlayerChase[playerid] = LastMedicCall;
				
			    SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    
       			LastMedicCall = -1;
			}
			case 5: // Механик
			{
			    DeletePVar(playerid, "Accept_Type");
			    if(GetPVarInt(playerid, "Job") != 7 || !IsAMehanikCar(GetPlayerVehicleID(playerid))) return 1;
				if(LastMecCall == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не вызывал механика");
			    if(!IsPlayerConnected(LastMecCall)) return SendClientMessage(playerid, COLOR_GREY, "Игрок, вызывавший механика, не в сети");
			    if(GetPlayerInterior(LastMecCall) != 0) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуется механик");

				format(string, sizeof(string), "[J] %s принял вызов от %s", GetName(playerid), GetName(LastMecCall));
				for(new i; i < MAX_PLAYERS; i++)
    			{
       				if(!IsPlayerConnected(i)) continue;
			        if(GetPVarInt(i, "Job") == 7 && IsAMehanikCar(GetPlayerVehicleID(i))) SendClientMessage(i, COLOR_GREEN, string);
			    }
			    SendClientMessage(LastMecCall, COLOR_YELLOW, "Механик принял Ваш вызов, ожидайте его на месте");

				gPlayerCheckpointStatus[playerid] = CHECKPOINT_CHASE;
				PlayerChase[playerid] = LastMecCall;
				
			    SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");
			    
			    LastMecCall = -1;
			    if(GetPVarInt(playerid, "Achievement_Best_Mechanic") < 100) GivePVarInt(playerid, "Achievement_Best_Mechanic", 1);
			}
			case 6: // Заправка
			{
				new id = GetPVarInt(playerid, "Refill_ID");
				new money = GetPVarInt(playerid, "Refill_Money");

				DeletePVar(playerid, "Refill_Money");
				DeletePVar(playerid, "Refill_ID");
				DeletePVar(playerid, "Accept_Type");

	   			if (!IsPlayerConnected(id)) 			return SendClientMessage(playerid, COLOR_GREY, "Механик покинул сервер");
				if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Механик слишком далеко от Вас");
				if (!IsPlayerInAnyVehicle(playerid)) 	return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
	      		if (GetPlayerPCash(playerid) < money)
		  		{
		  		    SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег на заправку");
			  		return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег на заправку");
				}
				
				new fuel, level = GetPVarInt(id, "MechSkill");

				switch(level)
				{
				    case 0..50:     fuel = 10;
				    case 51..100:   fuel = 15;
				    case 101..200:  fuel = 25;
				    case 201..400:  fuel = 30;
					default:        fuel = 40;
				}
				
             	if(Gas[car] >= fuel)
			 	{
                    SendClientMessage(id, COLOR_GREY, "У игрока уже достаточно топлива");
				 	return SendClientMessage(playerid, COLOR_GREY, "Механик не может дозаправить Ваше авто, у Вас много топлива");
				}
				
	            if(level < 401) GivePVarInt(id, "MechSkill", 1);
	            
	            switch(level)
	            {
		            case 50:  SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 2, теперь Вы можете заправлять больше бензина");
					case 100: SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 3, теперь Вы можете заправлять больше бензина");
					case 200: SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 4, теперь Вы можете заправлять больше бензина");
					case 400: SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 5, теперь Вы можете заправлять больше бензина");
				}


	            format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" заправил Ваш автомобиль на %d л. за $%d", GetName(id), fuel, money);
	            SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Вы заправили машину "RGB_GREEN"%s"RGB_WHITE" за $%d", GetName(playerid), money);
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePlayerPCash(id, money, "zapravil");
				GivePlayerPCash(playerid, -money, "zapravil");

				if(Gas[car] < 110) Gas[car] += fuel;
			}
			case 7:
			{
				new id = GetPVarInt(playerid, "Repair_ID");
				new money = GetPVarInt(playerid, "Repair_Money");

				DeletePVar(playerid, "Repair_ID");
				DeletePVar(playerid, "Repair_Money");
				DeletePVar(playerid, "Accept_Type");

				if (!IsPlayerConnected(id)) 			return SendClientMessage(playerid, COLOR_GREY, "Механик покинул сервер");
				if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Механик слишком далеко от Вас");
				if (!IsPlayerInAnyVehicle(playerid)) 	return SendClientMessage(playerid, COLOR_GREY, "Вы не в машине");
				if (GetPlayerPCash(playerid) < money)
				{
                    SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег на ремонт");
					return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег на ремонт");
				}

				RepairVehicleEx(GetPlayerVehicleID(playerid));

				new level = GetPVarInt(id, "MechSkill");
	            if(level < 401) GivePVarInt(id, "MechSkill", 1);
	            switch(level)
	            {
		            case 50:  SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 2, теперь Вы можете заправлять больше бензина");
					case 100: SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 3, теперь Вы можете заправлять больше бензина");
					case 200: SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 4, теперь Вы можете заправлять больше бензина");
					case 400: SendClientMessage(id, COLOR_YELLOW, "Ваш skill механика достиг уровня 5, теперь Вы можете заправлять больше бензина");
				}

	            format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" отремонтировал Ваш автомобиль за $%d", GetName(id), money);
	            SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Вы отремонтировали машину "RGB_GREEN"%s"RGB_WHITE" за $%d", GetName(playerid), money);
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePlayerPCash(id, money, "remont");
				GivePlayerPCash(playerid, -money, "remont");
			}
			case 8:
			{
			    new id = GetPVarInt(playerid, "Live_ID");

			    DeletePVar(playerid, "Live_ID");
			    DeletePVar(playerid, "Accept_Type");

	   			if (!IsPlayerConnected(id))				return SendClientMessage(playerid, COLOR_GREY, "Репортер отключился от сервера");
		        if (!ProxDetectorS(5.0, playerid, id)) 	return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от репортера");
   				if(GetPVarInt(playerid, "Level") < 5)
   				{
   				    SendClientMessage(id, COLOR_GREY, "У игрока слишком низкий ЛВЛ");
   					return SendClientMessage(playerid, COLOR_GREY, "У Вас слишком низкий ЛВЛ");
				}
				
				SendClientMessage(id, COLOR_WHITE, "Для завершения эфира используйте команду "RGB_GREEN"/live");

				TalkingLive[playerid] = id;
				TalkingLive[id] = playerid;

				format(string, sizeof(string), "<< News >> Репортер %s начал интервью с гостем %s", GetName(id), GetName(playerid));
				OOCNews(COLOR_LIGHTGREEN, string);
			}
			case 9:
			{
			    new id = GetPVarInt(playerid, "Drug_ID");
			    new money = GetPVarInt(playerid, "Drug_Money");
			    new drugs = GetPVarInt(playerid, "Drug_Gram");

				DeletePVar(playerid, "Drug_ID");
			    DeletePVar(playerid, "Drug_Gram");
			    DeletePVar(playerid, "Drug_Money");
			    DeletePVar(playerid, "Accept_Type");

			    if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от продавца");
				if (GetPlayerPCash(playerid) < money)
				{
                    SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
					return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				}
				if (GetPVarInt(id, "Drugs") < drugs)
				{
                    SendClientMessage(id, COLOR_GREY, "У Вас не хватает наркотиков для продажи");
					return SendClientMessage(playerid, COLOR_GREY, "У продавца нет столько наркотиков");
				}
				if (GetPVarInt(playerid,"Drugs") > 6)	return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть наркотики, сначала используйте их");
				if (!IsPlayerConnected(id)) 			return SendClientMessage(playerid, COLOR_GREY, "Продавец отключился от сервера");


				format(string, sizeof(string), "Вы купили %d гр. наркотиков у "RGB_GREEN"%s", drugs, GetName(id));
				SendClientMessage(playerid, COLOR_WHITE, string);
				
				format(string, sizeof(string), "%s купил у Вас %d гр. наркотиков", GetName(playerid), drugs);
				SendClientMessage(id, COLOR_WHITE, string);
				
				GivePlayerPCash(id, money, "narko");
				GivePlayerPCash(playerid, -money, "narko");

				GivePVarInt(id, "Drugs", -drugs);
				GivePVarInt(playerid, "Drugs", drugs);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePVarInt(id, "DrugsSkill", 1);
				switch(GetPVarInt(id, "DrugsSkill"))
				{
					case 50:  SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 2 профессии наркоторговца, теперь Вы можете покупать больше наркотиков");
					case 100: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 3 профессии наркоторговца, теперь Вы можете покупать больше наркотиков");
					case 200: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 4 профессии наркоторговца, теперь Вы можете покупать больше наркотиков");
					case 400: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 5 профессии наркоторговца, теперь Вы можете покупать больше наркотиков");
				}
			}
			case 10:
			{
  			    new id = GetPVarInt(playerid, "Style_ID");
				new style = GetPVarInt(playerid, "Style_Style");
				new money = GetPVarInt(playerid, "Style_Money");

				DeletePVar(playerid, "Style_ID");
			    DeletePVar(playerid, "Style_Style");
			    DeletePVar(playerid, "Style_Money");
			    DeletePVar(playerid, "Accept_Type");

                if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
				if(GetPlayerPCash(playerid) < money)
				{
				    SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				    return SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
				}
				if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от тренера");

				new ftext[20];
				switch(style)
				{
				    case 1:  ftext = "'Normal'" ,   SetPlayerFightingStyle(playerid, 4);
				    case 2:  ftext = "'Grabkick'" , SetPlayerFightingStyle(playerid, 15);
				    case 3:  ftext = "'Boxing'" ,   SetPlayerFightingStyle(playerid, 5);
				    case 4:  ftext = "'Kungfu'" ,   SetPlayerFightingStyle(playerid, 6);
				    default: ftext = "'Kneehead'" , SetPlayerFightingStyle(playerid, 7);
				}
                SetPVarInt(playerid, "FightStyle", style);


                format(string, sizeof(string), "Вы обучились %s у "RGB_GREEN"%s"RGB_WHITE" за $%d", ftext, GetName(id), money);
                SendClientMessage(playerid, COLOR_WHITE, string);

                format(string, sizeof(string), "Вы обучили "RGB_GREEN"%s"RGB_GREEN" новому стилю боя за $%d", GetName(playerid), money);
				SendClientMessage(id, COLOR_WHITE, string);

				GivePlayerPCash(id, money, "stil boya");
				GivePlayerPCash(playerid, -money, "stil boya");

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePVarInt(id, "TrainerSkill", 1);
				switch(GetPVarInt(id, "TrainerSkill"))
				{
					case 50:  SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 2 профессии тренер, теперь Вы можете обучать новым стилям боя");
					case 100: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 3 профессии тренер, теперь Вы можете обучать новым стилям боя");
					case 200: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 4 профессии тренер, теперь Вы можете обучать новым стилям боя");
					case 400: SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 5 профессии тренер, теперь Вы можете обучать новым стилям боя");
				}
			}
			case 11:
			{

		        new id = GetPVarInt(playerid, "Sex_ID");
		        new money = GetPVarInt(playerid, "Sex_Money");

			    DeletePVar(playerid, "Sex_ID");
			    DeletePVar(playerid, "Sex_Money");
			    DeletePVar(playerid, "Accept_Type");

		        if (!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
				if (GetPlayerPCash(playerid) < money)
				{
				    SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
					return SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
				}
				if((GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) || (!IsPlayerInAnyVehicle(playerid)))
				{
				    SendClientMessage(id, COLOR_GREY, "Вы должны находиться в одной машине");
					return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в одной машине");
				}
				if(STDPlayer[playerid] != 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Вы заражены СПИД'ом");
					return SendClientMessage(id, COLOR_GREY, "Партнер заражен СПИД'ом");
				}

				format(string, sizeof(string), "Вы занялись сексом с "RGB_GREEN"%s"RGB_WHITE" за $%d", GetName(playerid), money);
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "Вы занялись сексом с "RGB_GREEN"%s"RGB_WHITE" за $%d", GetName(id), money);
				SendClientMessage(playerid, COLOR_WHITE, string);

				GivePlayerPCash(id, money, "sex");
				GivePlayerPCash(playerid, -money, "sex");

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);

				GivePVarInt(id, "SexSkill", 1);
				new level = GetPVarInt(id, "SexSkill");

				switch(level)
				{
				    case 50: 	SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 2 профессии проститутка");
				    case 100:   SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 3 профессии проститутка");
				    case 200:   SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 4 профессии проститутка");
				    case 400:   SendClientMessage(id, COLOR_YELLOW, "Вы достигли уровня 5 профессии проститутка");
				}
				
				new Float:health;
				new STD;
				
				if(Condom[playerid] > 0)
				{
					STD = 0;
					Condom[playerid] --;
					SendClientMessage(playerid, COLOR_WHITE, "Вы использовали презерватив");
				}
				else STD = random(4);

				if(STDPlayer[id] == 0) 		 STDPlayer[id] = STD;
				if(STDPlayer[playerid] == 0) STDPlayer[playerid] = STD;
				
			    GetPlayerHealth(playerid, health);
			    switch(level)
				{
				    case 0..50:
				    {
				        if(health < 150.0) SetPlayerHealthUAC(playerid, health + 30.0);
						if(STD == 0)
						{
      						SendClientMessage(playerid, COLOR_GREEN, "Вы получили +30 hp и ничем не заразились");
				        	SendClientMessage(id, COLOR_GREEN, "Вы ничем не заразились");
						}
					 	else
			    		{
	        				SendClientMessage(playerid, COLOR_GREEN, "Вы получили +30 hp и заразились СПИД'ом");
				        	SendClientMessage(id, COLOR_GREEN, "Вы заразились СПИД'ом");
						}
					}
				    case 51..100: // 60
				    {
				        if(health < 150.0) SetPlayerHealthUAC(playerid, health + 60.0);
						if(STD == 0)
						{
      						SendClientMessage(playerid, COLOR_GREEN, "Вы получили +60 hp и ничем не заразились");
				        	SendClientMessage(id, COLOR_GREEN, "Вы ничем не заразились");
						}
					 	else
			    		{
	        				SendClientMessage(playerid, COLOR_GREEN, "Вы получили +60 hp и заразились СПИД'ом");
				        	SendClientMessage(id, COLOR_GREEN, "Вы заразились СПИД'ом");
						}
					}
				    case 101..200: // 90
				    {
					    if(health < 150.0) SetPlayerHealthUAC(playerid, health + 90.0);
						if(STD == 0)
						{
      						SendClientMessage(playerid, COLOR_GREEN, "Вы получили +90 hp и ничем не заразились");
				        	SendClientMessage(id, COLOR_GREEN, "Вы ничем не заразились");
						}
					 	else
			    		{
	        				SendClientMessage(playerid, COLOR_GREEN, "Вы получили +90 hp и заразились СПИД'ом");
				        	SendClientMessage(id, COLOR_GREEN, "Вы заразились СПИД'ом");
						}
					}
		    		case 201..400: // 120
		    		{
	        			if(health < 150.0) SetPlayerHealthUAC(playerid, health + 120.0);
						if(STD == 0)
						{
      						SendClientMessage(playerid, COLOR_GREEN, "Вы получили +120 hp и ничем не заразились");
				        	SendClientMessage(id, COLOR_GREEN, "Вы ничем не заразились");
						}
					 	else
			    		{
	        				SendClientMessage(playerid, COLOR_GREEN, "Вы получили +120 hp и заразились СПИД'ом");
				        	SendClientMessage(id, COLOR_GREEN, "Вы заразились СПИД'ом");
						}
					}
		    		default:
					{
		    			if(health < 150.0) SetPlayerHealthUAC(playerid, health + 150.0);
						SendClientMessage(playerid, COLOR_GREEN, "Вы получили +150 hp и не заразились СПИД'ом");
					}
				}
			}
			case 12:
			{
			    new pFaction = GetPVarInt(playerid, "Invite_Fraction");
			    new id = GetPVarInt(playerid, "Invite_ID");

   				DeletePVar(playerid, "Invite_Fraction");
				DeletePVar(playerid, "Invite_ID");
				DeletePVar(playerid, "Accept_Type");

				if(GetPVarInt(playerid, "InClothShop") == 1)
				{
				    SendClientMessage(id, COLOR_WHITE, "Вы не можете принять игрока в данный момент");
				    return SendClientMessage(playerid, COLOR_WHITE, "Вы не можете вступить в организацию в данный момент");
				}
				
				SetPVarInt(playerid, "Team",   pFaction);
	 			SetPVarInt(playerid, "Member", pFaction);
				SetPVarInt(playerid, "Rank", 1);

				MySQL_UpdateInt(playerid, "Member");
				MySQL_UpdateInt(playerid, "Rank");

				if(IsPlayerConnected(id) && GetPVarInt(id, "Leader") == pFaction)
				{
					format(string, sizeof(string), "Вы приняли "RGB_GREEN"%s"RGB_WHITE" в свою организацию", GetName(playerid));
					SendClientMessage(id, COLOR_WHITE, string);

					format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" принял Вас в свою организацию", GetName(id));
					SendClientMessage(playerid, COLOR_WHITE, string);
				}

				if(pFaction >= 1 && pFaction <= TOTAL_FACTIONS)
				{
				    SetPVarInt(playerid, "OldSkin", GetPVarInt(playerid, "Skin"));
				    MySQL_UpdateInt(playerid, "OldSkin");
				    
					if(GetPVarInt(playerid, "Sex") == 1) SetPVarInt(playerid, "Skin", ClothesMan[pFaction-1][0]);
					else SetPVarInt(playerid, "Skin", ClothesWoman[pFaction-1][0]);
					
					ReplaceSkin(playerid);
				}
			}
			case 13:
			{
			    DeletePVar(playerid, "Accept_Type");
			    new id = GetPVarInt(playerid, "Lic_Player");
			    new money = GetPVarInt(playerid, "Lic_Price");
			    new lictype = GetPVarInt(playerid, "Lic_Lictype");

			    DeletePVar(playerid, "Lic_Player");
			    DeletePVar(playerid, "Lic_Price");
			    DeletePVar(playerid, "Lic_Lictype");

			    if (!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
			    if(GetPlayerPCash(playerid) < money)
			    {
			        SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
			        return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				}
		  		if(!ProxDetectorS(16.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");

				new ltext[30];
				switch(lictype)
				{
		  			case 0:
		  			{
					  	ltext = "водителя";
					  	SetPVarInt(playerid,"CarLic",1);
			        	MySQL_UpdateInt(playerid,"CarLic");
					}
			    	case 1:
					{
						ltext = "на морской транспорт";
				        SetPVarInt(playerid,"BoatLic",1);
			        	MySQL_UpdateInt(playerid,"BoatLic");
					}
				    case 2:
					{
						ltext = "на воздушный транспорт";
		    			SetPVarInt(playerid,"FlyLic",1);
			        	MySQL_UpdateInt(playerid,"FlyLic");
					}
				    case 3:
					{
						ltext = "на рыбалку";
				  		SetPVarInt(playerid,"FishLic",1);
			        	MySQL_UpdateInt(playerid,"FishLic");
					}
				    default:
					{
						ltext = "на оружие";
		    			SetPVarInt(playerid,"GunLic",1);
			        	MySQL_UpdateInt(playerid,"GunLic");
					}
				}
				
				
				if(id != playerid)
				{
					GivePlayerPCash(playerid, -money, "Kypil licy");
					GivePlayerPCash(id, money, "Prodal licy");

					format(string, sizeof(string), "~g~+$%d", money);
					GameTextForPlayer(id, string, 3000, 1);

					format(string, sizeof(string), "~r~-$%d", money);
					GameTextForPlayer(playerid, string, 3000, 1);
					
					format(string, sizeof(string), "Вы купили лицензию %s за $%d", ltext, money);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}

				format(string, sizeof(string), "[LIC] %s[%d] выдал лицензию %s %s[%d]", GetName(id), id, ltext, GetName(playerid), playerid);
				SendFamilyMessage(11, COLOR_BLUE, string);
			}
			case 14:
			{
			    DeletePVar(playerid, "Accept_Type");
			    new id = GetPVarInt(playerid, "Med_Player");
			    new money = GetPVarInt(playerid, "Med_Price");
			    new medtype = GetPVarInt(playerid, "Med_Medtype");

			    DeletePVar(playerid, "Med_Player");
			    DeletePVar(playerid, "Med_Price");
			    DeletePVar(playerid, "Med_Medtype");

			    if (!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
			    if(GetPlayerPCash(playerid) < money)
			    {
			        SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
			        return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				}
		  		if(!ProxDetectorS(16.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		  		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в одной машине");
				if(!IsAnAmbulance(GetPlayerVehicleID(playerid)) && !IsPlayerInRangeOfPoint(playerid, 50.0, 365.2393,162.0382,1019.9844)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в больнице и не в машине скорой помощи");

				switch(medtype)
				{
 					case 0:
	  				{
						SetPlayerHealthUAC(playerid, 100.0);
						if(id != playerid) format(string, sizeof(string), "%s бинтует пострадавшего", GetName(id));
					}
    				default:
					{
	    				SetPlayerWeather(playerid, 10);
					    SetPlayerHealthUAC(playerid, 100.0);
					    DeletePVar(playerid, "Drugs_Ad");
					    if(id != playerid) format(string, sizeof(string), "%s дал лекарства пациенту", GetName(id));
					}
				}
    			if(id != playerid)
				{
					ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

					GivePlayerPCash(playerid, -money, "Medic");
					GivePlayerPCash(id, money, "Medic");

					format(string, sizeof(string), "~g~+$%d", money);
					GameTextForPlayer(id, string, 3000, 1);

					format(string, sizeof(string), "~r~-$%d", money);
					GameTextForPlayer(playerid, string, 3000, 1);

					format(string, sizeof(string), "Вы были вылечены за $%d", money);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
			case 15:
			{
			    new id = GetPVarInt(playerid, "Free_Id");
			    new money = GetPVarInt(playerid, "Free_Money");

			    DeletePVar(playerid, "Accept_Type");
			    DeletePVar(playerid, "Free_Id");
			    DeletePVar(playerid, "Free_Money");

	   			if (!IsPlayerConnected(id))					return SendClientMessage(playerid, COLOR_GREY, "Адвокат отключился от сервера");
		        if (!ProxDetectorS(20.0, playerid, id)) 	return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от адвоката");
		        if (GetPlayerPCash(playerid) < money)
		        {
		            SendClientMessage(id, COLOR_GREY, "У заключенного нет столько денег");
		            return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
			    }
			    if (GetPVarInt(playerid, "Jailed") == 2)
		        {
		            SendClientMessage(id, COLOR_GREY, "Вы не можете освободить из присона");
		            return SendClientMessage(playerid, COLOR_GREY, "Адвокат не может освободить Вас");
			    }
			    if (GetPVarInt(playerid, "Jailed") == 0)
		        {
		            SendClientMessage(id, COLOR_GREY, "Игрок не в тюрьме");
		            return SendClientMessage(playerid, COLOR_GREY, "Вы не в тюрьме");
			    }
			    if (ApprovedLawyer[id] < 1)
		        {
		            SendClientMessage(id, COLOR_GREY, "У Вас нет ордера");
		            return SendClientMessage(playerid, COLOR_GREY, "У адвоката нет ордера");
			    }

			    format(string, sizeof(string), "[FREE] Адвокат %s[%d] освободил %s[%d] LVL: %d", GetName(id), id, GetName(playerid), playerid, GetPVarInt(playerid, "Level"));
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(!IsPlayerConnected(i) || !IsACop(i)) continue;
					SendClientMessage(i, COLOR_BLUE, string);
				}
				GivePVarInt(id, "LawSkill", 1);
				switch(GetPVarInt(id,"LawSkill"))
				{
					case 50:  SendClientMessage(id, COLOR_YELLOW, "Ваш навык професии адвоката достиг 2 уровня");
					case 100: SendClientMessage(id, COLOR_YELLOW, "Ваш навык професии адвоката достиг 3 уровня");
					case 200: SendClientMessage(id, COLOR_YELLOW, "Ваш навык професии адвоката достиг 4 уровня");
					case 400: SendClientMessage(id, COLOR_YELLOW, "Ваш навык професии адвоката достиг 5 уровня");
				}
				ApprovedLawyer[id] = 0;
    			Pobegtime[playerid] = 0;
				SetPVarInt(playerid, "JailTime", 0);
				SetPVarInt(playerid, "Jailed", 0);
				if(GetPVarInt(playerid,"Jailed") == 2) SetPlayerWorldBounds(playerid,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
                SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 6);
				oSetPlayerPos(playerid,246.623672,67.595924,1003.640625);
				SetPlayerFacingAngle(playerid, 180.732223);
				SetCameraBehindPlayer(playerid);
				SetPlayerColor(playerid,TEAM_HIT_COLOR);
				GameTextForPlayer(playerid, "~g~You are free now", 5000, 1);
				if(GetPVarInt(playerid, "Sex") == 1) ReplaceSkin(playerid);

				format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" освободил Вас из тюрьмы", GetName(id));
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, sizeof(string), "Вы освободили "RGB_GREEN"%s"RGB_WHITE" из тюрьмы", GetName(playerid));
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);
				
				GivePlayerPCash(playerid, -money, "Advokat");
				GivePlayerPCash(id, money, "Advokat");
				
			}
			case 16:
			{
			    SendClientMessage(playerid, COLOR_YELLOW, "Подтвердите "RGB_GREEN"покупку респектов");
				SendClientMessage(playerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для подтверждения, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");
				SetPVarInt(playerid, "Accept_Type", 17);
			}
			case 17:
			{
				new id  	= GetPVarInt(playerid, "ExpSeller");
				new exps   	= GetPVarInt(playerid, "Pexp");
				new money 	= GetPVarInt(playerid, "ExpPrice");

				DeletePVar(playerid, "ExpSeller");
				DeletePVar(playerid, "Pexp");
		 		DeletePVar(playerid, "ExpPrice");
		 		DeletePVar(playerid, "Accept_Type");

                if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок вышел с сервера");
				if(GetPVarInt(id, "CantuseSellexp") != 1 || GetPVarInt(id, "SellExpBuyer") != playerid) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не предлагал Вам респекты");

				DeletePVar(id, "CantuseSellexp");
				DeletePVar(id, "SellExpBuyer");

				if(GetPlayerPCash(playerid) < money)
				{
					SendClientMessage(id, COLOR_GREY, "У игрока недостаточно денег для покупки респектов");
		  			return SendClientMessage(playerid, COLOR_GREY, "У Вас недостаточно денег для покупки респектов");
				}
				if(money < 0) return 1;
				if(exps < 0) return 1;
				if(exps > GetPVarInt(id, "Respect"))
				{
					SendClientMessage(id, COLOR_GREY, "У Вас не хватает респектов");
		  			return SendClientMessage(playerid, COLOR_GREY, "У игрока не хватает респектов для продажи");
				}
				if(!ProxDetectorS(5.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от продавца");

				GivePVarInt(playerid, "Respect", exps);
				GivePVarInt(id, "Respect", -exps);

				GivePlayerPCash(playerid, -money, "Kypil respi");
				GivePlayerPCash(id, money, "Prodal respi");

				format(string, 100, "Вы купили у "RGB_GREEN"%s"RGB_WHITE" %d респект(ов) за %d$", GetName(id), exps, money);
				SendClientMessage(playerid, COLOR_WHITE, string);

				format(string, 100, "Вы продали "RGB_GREEN"%s"RGB_WHITE" %d респект(ов) за %d$", GetName(playerid), exps, money);
				SendClientMessage(id, COLOR_WHITE, string);

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);
			}
			case 18:
			{
				new id = GetPVarInt(playerid, "BuyGun_ID");
				new money = GetPVarInt(playerid, "BuyGun_Money");
				new weapon = GetPVarInt(playerid, "BuyGun_Weapon");

				DeletePVar(playerid, "BuyGun_ID");
				DeletePVar(playerid, "BuyGun_Money");
				DeletePVar(playerid, "BuyGun_Weapon");
				DeletePVar(playerid, "Accept_Type");

				if (!IsPlayerConnected(id))				return SendClientMessage(playerid, COLOR_GREY, "Игрок отключился от сервера");
				if (!ProxDetectorS(8.0, playerid, id))	return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
				if (GetPlayerPCash(playerid) < money)
				{
				    SendClientMessage(playerid,  COLOR_GREY, "У Вас недостаточно денег для покупки оружия");
				    return SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег для покупки оружия");
				}
				if (GetPVarInt(playerid, "Jailed") != 0)
				{
				    SendClientMessage(playerid,  COLOR_GREY, "Вы в тюрьме");
				    return SendClientMessage(id, COLOR_GREY, "Игрок в тюрьме");
				}
			    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			    {
				    SendClientMessage(playerid,  COLOR_GREY, "Выйдите из машины");
				    return SendClientMessage(id, COLOR_GREY, "Игрок в машине");
				}
				
				new materials;
				new ammo;

				switch(weapon)
				{
					case 1: materials = 20, ammo = 1;
					case 2: materials = 30, ammo = 1;
					case 5: materials = 30, ammo = 1;
					case 6: materials = 35, ammo = 1;
					case 23: materials = 130, ammo = 40;
					case 24: materials = 200, ammo = 40;
					case 25: materials = 240, ammo = 30;
					case 29: materials = 230, ammo = 100;
					case 30: materials = 300, ammo = 90;
					case 31: materials = 300, ammo = 90;
					case 33: materials = 300, ammo = 30;
				}
		            
		            
				if(GetPVarInt(id, "Achievement_Peint") >= 500) 		materials -= materials/10;
				if(GetPVarInt(id, "Achievement_Shooter") >= 150000) materials -= materials/10;
				if(GetPVarInt(id, "Achievement_Copjail") >= 100) 	materials -= materials/10;

				if(GetPVarInt(id, "Materials") < materials)
				{
				    SendClientMessage(id, COLOR_GREY, "У Вас недостаточно материалов");
				    return SendClientMessage(playerid, COLOR_GREY, "У продавца недостаточно материалов");
				}

		        format(string, sizeof(string), "Вы продали "RGB_GREEN"%s"RGB_WHITE" оружие за $%d", GetName(playerid), money);
		        SendClientMessage(id, COLOR_WHITE, string);

		        format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" продал Вам «%s» за $%d", GetName(id), aWeaponNames[weapon], money);
		        SendClientMessage(playerid, COLOR_WHITE, string);

				GivePlayerWeaponUAC(playerid, weapon, ammo);
		        GivePVarInt(id, "Materials", -materials);

		        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

				GivePlayerPCash(playerid, -money, "Kypil oryzie");
				GivePlayerPCash(id, money, "Prodal oryzie");

				format(string, sizeof(string), "~g~+$%d", money);
				GameTextForPlayer(id, string, 3000, 1);

				format(string, sizeof(string), "~r~-$%d", money);
				GameTextForPlayer(playerid, string, 3000, 1);
			}
			case 19:
			{
			    new giveplayerid = GetPVarInt(playerid, "SellCar_Id");
			    new check_id = GetPVarInt(playerid, "SellCar_SQLid");
			    new money = GetPVarInt(playerid, "SellCar_Money");

			    DeletePVar(playerid, "SellCar_Id");
			    DeletePVar(playerid, "SellCar_SQLid");
			    DeletePVar(playerid, "SellCar_Money");
			    DeletePVar(playerid, "Accept_Type");

				if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети");
				if (GetPVarInt(giveplayerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нет машины");
				if (GetPlayerPCash(giveplayerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У игрока слишком мало денег");
				if (money < 0) return SendClientMessage(playerid, COLOR_GREY, "недопустимая сумма");
				if (GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Покупка/продажа доступна только для игроков с 3 лвл");
				if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меняться машиной с самим собой");
				if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Покупатель должен находиться рядом с Вами");
				if (GetPVarInt(playerid, "CantUseSellCar") == 1)  return SendClientMessage(playerid, COLOR_GREY, "Вы уже продаете/меняете автомобиль");
				if (GetPVarInt(giveplayerid, "CantUseSellCar") == 1)  return SendClientMessage(playerid, COLOR_GREY, "Игрок уже меняется автомобилями");
			    if (check_id != CarInfo[giveplayerid][cSQL]) return SendClientMessage(playerid, COLOR_GREY, "ID/модель транспорта не совпадает");

				SetPVarInt(playerid, "CantUseSellCar", 1);
				SetPVarInt(giveplayerid, "CantUseSellCar", 1);

				new st[144];
				format(st, sizeof(st), RGB_GREEN"%s[%d]"RGB_WHITE" предлагает Вам обменять его авто %s[%d] на Ваше %s[%d], с Вашей доплатой %d$", GetName(playerid), playerid, VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cSQL], VehiclesName[CarInfo[giveplayerid][cModel]-400], CarInfo[giveplayerid][cSQL], money);
				SendClientMessage(giveplayerid, COLOR_WHITE, st);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Введите "RGB_BLUE"/acceptchange"RGB_WHITE", если согласны");


				format(st, sizeof(st), "Вы предложили "RGB_GREEN"%s[%d]"RGB_WHITE" обменять свой %s[%d] на его %s[%d] за %d$", GetName(giveplayerid), giveplayerid,
				VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cSQL], VehiclesName[CarInfo[giveplayerid][cModel]-400],
				CarInfo[giveplayerid][cSQL], money);

				SendClientMessage(playerid, COLOR_WHITE, st);

				SetPVarInt(giveplayerid, "ChangePlayerid", playerid);
				SetPVarInt(giveplayerid, "ChangeMoney", money);
			}
			case 20:
			{
			    DeletePVar(playerid, "Accept_Type");
			    if(GetPVarInt(playerid, "Job") != 17 || !IsTaxi(GetPlayerVehicleID(playerid))) return 1;
				if(LastTaxiCall == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не вызывал такси");
			    if(!IsPlayerConnected(LastTaxiCall)) return SendClientMessage(playerid, COLOR_GREY, "Игрок, вызывавший такси, не в сети");
			    if(GetPlayerInterior(LastTaxiCall) != 0) return SendClientMessage(playerid, COLOR_GREY, "Игроку не требуется такси");
			    
				format(string, sizeof(string), "[J] %s принял вызов от %s", GetName(playerid), GetName(LastTaxiCall));
				for(new i; i < MAX_PLAYERS; i++)
    			{
       				if(!IsPlayerConnected(i)) continue;
			        if(GetPVarInt(i, "Job") == 17 && IsTaxi(GetPlayerVehicleID(i))) SendClientMessage(i, COLOR_GREEN, string);
			    }
			    SendClientMessage(LastTaxiCall, COLOR_YELLOW, "Таксист принял Ваш вызов, ожидайте его на месте");
			    
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_CHASE;
				PlayerChase[playerid] = LastTaxiCall;
			    
			    SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE"GPS: "RGB_WHITE"Следуйте к красной метке на Вашем радаре");

				LastTaxiCall = -1;
			}
			// =============================
		}
	}
	if(newkeys & KEY_NO)
	{
	    switch(GetPVarInt(playerid, "Accept_Type"))
	    {
	        case 1:
	        {
 				new id = GetPVarInt(playerid, "CarDellier_Player");

				DeletePVar(playerid, "CarDellier_Player");
				DeletePVar(playerid, "CarDellier_Price");
				DeletePVar(playerid, "Accept_Type");

				SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от покупки");
				if (!ProxDetectorS(8.0, playerid, id)) return 1;
				SendClientMessage(id, COLOR_WHITE, "Игрок отказался от покупки автомобиля");
	        }
	        case 2:
	        {
	            new id = GetPVarInt(playerid, "Ticket_ID");

	            DeletePVar(playerid, "Ticket_Money");
	            DeletePVar(playerid, "Ticket_ID");
	            DeletePVar(playerid, "Accept_Type");

	            SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от оплаты штрафа");
				if (!ProxDetectorS(8.0, playerid, id)) return 1;
				SendClientMessage(id, COLOR_WHITE, "Игрок отказался от оплаты штрафа");
	        }
	        case 3:
	        {
			    new id = GetPVarInt(playerid, "Paper_ID");

			    DeletePVar(playerid, "Paper_ID");
			    DeletePVar(playerid, "Accept_Type");

	            SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от газеты");
				if (!ProxDetectorS(8.0, playerid, id)) return 1;
				SendClientMessage(id, COLOR_WHITE, "Игрок отказался от газеты");
	        }
	        // Тут пропускаю всяике accept'ы где нельзя отказать (медик, механик)
	        case 6:
	        {
	            new id = GetPVarInt(playerid, "Refill_ID");

	            DeletePVar(playerid, "Refill_ID");
	            DeletePVar(playerid, "Refill_Money");
	            DeletePVar(playerid, "Accept_Type");

	            SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от заправки");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от заправки");
	        }
	        case 7:
			{
	            new id = GetPVarInt(playerid, "Repair_ID");

	            DeletePVar(playerid, "Repair_ID");
	            DeletePVar(playerid, "Repair_Money");
	            DeletePVar(playerid, "Accept_Type");

	            SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от починки");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от починки");
	        }
	        case 8:
	        {
  			    new id = GetPVarInt(playerid, "Live_ID");

			    DeletePVar(playerid, "Live_ID");
			    DeletePVar(playerid, "Accept_Type");

         		SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от интервью");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от интервью");
	        }
	        case 9:
			{
  			    new id = GetPVarInt(playerid, "Drug_ID");

				DeletePVar(playerid, "Drug_ID");
			    DeletePVar(playerid, "Drug_Gram");
			    DeletePVar(playerid, "Drug_Money");
			    DeletePVar(playerid, "Accept_Type");

         		SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от наркотиков");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от наркотиков");
			}
			case 10:
			{
  			    new id = GetPVarInt(playerid, "Style_ID");

				DeletePVar(playerid, "Style_ID");
			    DeletePVar(playerid, "Style_Style");
			    DeletePVar(playerid, "Style_Money");
			    DeletePVar(playerid, "Accept_Type");

         		SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от услуг тренера");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от Ваших услуг");
			}
			case 11:
			{
  			    new id = GetPVarInt(playerid, "Sex_ID");

				DeletePVar(playerid, "Sex_ID");
			    DeletePVar(playerid, "Sex_Money");
			    DeletePVar(playerid, "Accept_Type");

         		SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от секса");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от секса");
			}
			case 12:
			{
			    new id = GetPVarInt(playerid, "Invite_ID");

				DeletePVar(playerid, "Invite_Fraction");
				DeletePVar(playerid, "Invite_ID");
				DeletePVar(playerid, "Accept_Type");

  				SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от приглашения");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от приглашения");
			}
			case 13:
			{
			    new id = GetPVarInt(playerid, "Lic_Player");

			    DeletePVar(playerid, "Lic_Player");
			    DeletePVar(playerid, "Lic_Price");
			    DeletePVar(playerid, "Lic_Lictype");
			    DeletePVar(playerid, "Accept_Type");
			    
   				SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от лицензии");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от лицензии");
			}
			case 14:
			{
			    new id = GetPVarInt(playerid, "Med_Player");

			    DeletePVar(playerid, "Med_Player");
			    DeletePVar(playerid, "Med_Price");
			    DeletePVar(playerid, "Med_Medtype");
			    DeletePVar(playerid, "Accept_Type");

   				SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от помощи");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от помощи");
			}
			case 15:
			{
			    new id = GetPVarInt(playerid, "Free_Id");

			    DeletePVar(playerid, "Accept_Type");
			    DeletePVar(playerid, "Free_Id");
			    DeletePVar(playerid, "Free_Money");
			    
   				SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от услуг адвоката");
	            if (!ProxDetectorS(8.0, playerid, id)) return 1;
	            SendClientMessage(id, COLOR_WHITE, "Игрок отказался от услуг адвоката");
			}
			case 16, 17:
			{
				new id = GetPVarInt(playerid, "ExpSeller");

				DeletePVar(playerid, "ExpSeller");
				DeletePVar(playerid, "Pexp");
		 		DeletePVar(playerid, "ExpPrice");
		 		DeletePVar(playerid, "Accept_Type");

		 		SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от покупки респектов");

		 		if(IsPlayerConnected(id) && GetPVarInt(id, "CantuseSellexp") == 1 && GetPVarInt(id, "SellExpBuyer") == playerid)
		 		{
		 		    DeletePVar(id, "CantuseSellexp");
		 		    DeletePVar(id, "SellExpBuyer");

		 		    SendClientMessage(id, COLOR_WHITE, "Игрок отказался от покупки респектов");
		 		}
			}
	        case 18:
	        {
	            new id = GetPVarInt(playerid, "BuyGun_ID");

				DeletePVar(playerid, "BuyGun_ID");
				DeletePVar(playerid, "BuyGun_Money");
				DeletePVar(playerid, "BuyGun_Weapon");
				DeletePVar(playerid, "Accept_Type");

	            SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от покупки оружия");
				if (!ProxDetectorS(8.0, playerid, id)) return 1;
				SendClientMessage(id, COLOR_WHITE, "Игрок отказался от покупки оружия");
	        }
			case 19:
			{
			    DeletePVar(playerid, "SellCar_Id");
			    DeletePVar(playerid, "SellCar_SQLid");
			    DeletePVar(playerid, "SellCar_Money");
			    DeletePVar(playerid, "Accept_Type");
			    
			    SendClientMessage(playerid, COLOR_WHITE, "Вы отказались от обмена");
			}
		// =====================
		}
	}
	return 1;
}
forward UnCuffed(playerid);
public UnCuffed(playerid)
{
    Cuffed_Timer[playerid] = 0;
    RemovePlayerAttachedObject(playerid, 3);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	DeletePVar(playerid, "Cuff_Player");
    TogglePlayerControllable(playerid, 1);
	return 1;
}

public CarCheck()
{
	new string[128],hour, minuite,engine,lights,bonnet,boot,objective, alarm, door, Float:health;
	
 	gettime(hour,minuite);
	format(string,128,"%02d:%02d",hour,minuite);
	TextDrawSetString(txtTimeDisp,string);
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
    	if(IsAPlane(i) || IsABoat(i) || IsABike(i)) continue;
		GetVehicleParamsEx(i,engine,lights,alarm,door,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON)
		{
			if(Gas[i] > 0) Gas[i]--;
		}
  		if(Gas[i] < 1)
		{
			Gas[i] = 0;
			SetVehicleParamsEx(i,VEHICLE_PARAMS_OFF,lights,alarm,door,bonnet,boot,objective);
		}
	}
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(!IsPlayerConnected(j) || IsPlayerNPC(j)) continue;
	    if(IsPlayerInAnyVehicle(j)) UpdateCarSystemTextForPlayer(j);

		switch(GetPVarInt(j,"Level"))
		{
			case 0..5: 	GivePVarInt(j, "Paycheck", 30);
			case 6..10: GivePVarInt(j, "Paycheck", 60);
			case 11..15: GivePVarInt(j, "Paycheck", 90);
			case 16..25: GivePVarInt(j, "Paycheck", 120);
			case 26..9999: GivePVarInt(j, "Paycheck", 180);
		}
		switch(STDPlayer[j])
		{
		    case 1:
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealthUAC(j, health - 5.0);
			    SendClientMessage(j, COLOR_YELLOW, "Вы Потеряли 5 hp из-за СПИД'а");
			}
		    case 2:
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealthUAC(j, health - 12.0);
			    SendClientMessage(j, COLOR_YELLOW, "Вы Потеряли 12 hp из-за СПИД'а");
			}
		    case 3:
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealthUAC(j, health - 20.0);
			    SendClientMessage(j, COLOR_YELLOW, "Вы Потеряли 20 hp из-за СПИД'а");
			}
		}
		if(GetPVarInt(j, "Level") < 3 && GetPVarInt(j, "Total_Quests") < 6)
		{
			if(GetPVarInt(j, "Next_Quest") != 0 && GetPVarInt(j, "Next_Quest") < gettime() && GetPVarInt(j, "Start_Quest") == 0 && GetPVarInt(j, "On_Quest") == 0)
			{
			    StartQuest(j, -1);
			}
		}
	}
	return 1;
}


stock LockCar(carid)
{
    new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(carid,	engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,	engine,lights,alarm,   1 ,bonnet,boot,objective);
	
	return 1;
}

stock UnLockCar(carid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(carid,	engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,	engine,lights,alarm, 0   ,bonnet,boot,objective);
	
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
    return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    if(CheckFCalls(playerid, 14)) return 1;
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerClickPlayer(%d, %d, %d);", GetName(playerid), playerid, clickedplayerid, source);

	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerRequestClass(%d, %d);", GetName(playerid), playerid, classid);

	new Float:pHealth;
	GetPlayerHealth(playerid, pHealth);
	if(pHealth != 0.0) ClearAnimations(playerid, 1);
	
    if(CheckFCalls(playerid, 15)) return 1;
	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
	return 1;
}


new vd_flood_count[MAX_PLAYERS];
new vd_flood_last[MAX_PLAYERS];
new vd_a_flood[MAX_PLAYERS];
public OnVehicleDeath(vehicleid, killerid)
{
	if(vd_a_flood[killerid] > gettime()) return 1;
	
	if(!IsVehicleStreamedIn(vehicleid, killerid))
	{
	    new str[144];
	    format(str, sizeof(str), "AdmCmd: %s[%d] заспавнил тачку %d читом, проверьте его", GetName(killerid), killerid, vehicleid);
	    ABroadCast(str);
	    
	    vd_a_flood[killerid] = gettime()+3;
	    return 1;
	}
	new Float:hpcar;
	new Float:pos[3];
	GetVehicleHealth(vehicleid, hpcar);
	GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
	if(hpcar > 400.0 && pos[2] > 5.0)
	{
	    new ctime = gettime();
		if(vd_flood_last[killerid] < ctime)
		{
		    vd_flood_last[killerid] = ctime+5;
		    vd_flood_count[killerid] = 0;
		}
		else
		{
		    vd_flood_count[killerid] ++;
		    if(vd_flood_count[killerid] > 2)
		    {
			    new str[144];
			    format(str, sizeof(str), "AdmCmd: %s[%d] заспавнил тачку %d читом, проверьте его", GetName(killerid), killerid, vehicleid);
			    ABroadCast(str);

			    vd_a_flood[killerid] = gettime()+3;
		    }
		}
	}
	return 1;
}

stock SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
	    GivePVarInt(playerid,"Crimes",1);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new cbjstore[128];
		new wantedlevel = GetPlayerWantedLevel(playerid);
		strmid(PlayerCrime[playerid][Reason], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			strmid(PlayerCrime[playerid][Cop], "Аноним", 0, strlen("Аноним"), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][Cop], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][Reason], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "Вы совершили преступление ( %s ). Обвиняет: %s",reason,turner);
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		
		SetPlayerWantedLevel(playerid, wantedlevel+1);
		if(WantedLevel[playerid] < 10)
		{
			WantedLevel[playerid]++;
			WantedPoints[playerid]++;
		}
		format(turnmes, sizeof(turnmes), "Ваш текущий уровень розыска: "RGB_GREEN"%d", WantedLevel[playerid]);
		SendClientMessage(playerid, COLOR_WHITE, turnmes);
		
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
   			{
				if(IsACop(i))
				{
					format(cbjstore, sizeof(cbjstore), "%s ВНИМАНИЕ! преступление: (%s), Подозреваемый: %s",turner,reason,turned);
					SendClientMessage(i, COLOR_BLUE, cbjstore);
				}
			}
		}
	}
}
//---------------------------------------------------------



forward Timer5();
public Timer5()
{
	SetTimer("Timer5", 1044, 0);

    new Float:speed, Float:heal, weapon, pstate, Float:pos[3], time = gettime(),
	Float:CheckSpeed, carp, ammo, slot, TotalKicked, Float:veloc[3];

    
	for(new i=0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i) || !GetPVarInt(i,"Logged")) continue;
/*============================================================================*/
       	pstate = GetPlayerState(i);
       	speed = oGetPlayerSpeed(i);
       	carp = GetPlayerVehicleID(i);
       	
		if(pstate == PLAYER_STATE_DRIVER && GetPVarInt(i,"AdminLevel") < 1 && AFKText[i] < 4)
		{
			if(IsAPlane(carp)) continue;
			if(speed > 250.0)
			{
				KickCheater(i, SPEEDHACK); 
   				continue;
			}
		}

/*============================================================================*/
		GetPlayerPos(i, pos[0], pos[1], pos[2]);
		
		if(pos[0] > 5000.0 || pos[0] < -5000.0 ||
		   pos[1] > 5000.0 || pos[1] < -5000.0 ||
		   pos[2] > 5000.0 || pos[2] < -5000.0)
		{
			KickCheater(i, FLYMOD_ONFOOT);
			continue;
		}
		
		CheckSpeed = floatsqroot(floatpower((pos[0]-SpeedPos[i][0]), 2.0) + floatpower((pos[1]-SpeedPos[i][1]), 2.0));

		
		if(GetPVarInt(i, "AdminLevel") < 1)
		{
			if(DoubleCheckTP == 1)
			{
				Check_Radius[i] = 350.0;
				Check_Pos_Value[i] = 350.0;
			}
   			switch(pstate)
		    {
				case PLAYER_STATE_ONFOOT:
				{
    				if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID)
					{
						Check_Radius[i] = 900.0;
						Check_Pos_Value[i] = 900.0;
					}

					if(CheckSpeed > Check_Pos_Value[i] &&
		   				!IsPlayerInRangeOfPoint(i, Check_Radius[i], Dop_CheckPos[i][0], Dop_CheckPos[i][1], Dop_CheckPos[i][2]) &&
		   				!IsPlayerInRangeOfPoint(i, Check_Radius[i], Dop_CheckPos[i][3], Dop_CheckPos[i][4], Dop_CheckPos[i][5]))
					{
						TotalKicked ++;
						KickCheater(i, FLYMOD_ONFOOT);
						continue;
   					}
		    			
	    			Check_Pos_Value[i] = 60.0;
					Check_Radius[i] = 60.0;
					
					GetPlayerVelocity(i, veloc[0], veloc[1], veloc[2]);
					
					if(veloc[0] > 1.5 || veloc[0] < -1.5 ||
						veloc[1] > 1.5 || veloc[1] < -1.5 ||
						veloc[2] > 2.5)
					{
						KickCheater(i, PIZDARVANKA);
						continue;
					}
				}
				case PLAYER_STATE_DRIVER:
				{
    				if(CheckSpeed > 100.0 && speed < 10.0 && !IsPlayerInRangeOfPoint(i, 100.0, Dop_CheckPos[i][0], Dop_CheckPos[i][1], Dop_CheckPos[i][2]))
				    {
				    	if(!IsAtModShop(i) && !IsAPlane(carp) && GetVehicleModel(carp) != 569)
						{
							TotalKicked ++;
							KickCheater(i, FLYMOD_DRIVER);
							continue;
			    		}
	    			}
				}
				case PLAYER_STATE_PASSENGER:
				{
    				if(CheckSpeed > 60.0 && speed < 10.0 && !IsPlayerInRangeOfPoint(i, Check_Radius[i], Dop_CheckPos[i][0], Dop_CheckPos[i][1], Dop_CheckPos[i][2]))
				    {
				    	if(!IsAtModShop(i) && !IsAPlane(carp) && GetVehicleModel(carp) != 569 && !IsVehicleWithDriver(carp))
						{
							TotalKicked ++;
							KickCheater(i, FLYMOD_PASSEN);
							continue;
						}
		    		}
				}
			}
		}
		
		if(AFKText[i] < 2)
		{
			SpeedPos[i][0] = pos[0];
			SpeedPos[i][1] = pos[1];
			SpeedPos[i][2] = pos[2];
		}

/*============================================================================*/
		if(pstate != PLAYER_STATE_NONE && !GetPVarInt(i, "HealthDelay") && AFKText[i] < 4)
		{
			GetPlayerHealth(i, heal);
   			if(heal != GetPVarFloat(i, "Health") && heal > 0.0 && GetPVarFloat(i, "Health") > 0.0)
			{
				if(heal < GetPVarFloat(i, "Health") || IsAtCandySprunk(i)) SetPVarFloat(i, "Health", heal);
				else SetPlayerHealth(i, GetPVarFloat(i, "Health"));
			}
		}
/*============================================================================*/
		switch(GetPlayerAnimationIndex(i))
		{
		    case 1538, 1539, 1543:
			{
	 			if(pos[2] > 10.0 && GetPlayerState(i) == PLAYER_STATE_ONFOOT) // если выше воды
				{
				    if(!IsPlayerInRangeOfPoint(i, 50.0, 192.844879,-1229.593017,76.503395) && // бассейны
					   !IsPlayerInRangeOfPoint(i, 50.0, 514.525756,-1106.073242,78.823760) &&
					   !IsPlayerInRangeOfPoint(i, 50.0, 1094.990844,-674.974548,111.449996) &&
					   !IsPlayerInRangeOfPoint(i, 50.0, 1277.169677,-805.897949,86.122993) &&
					   !IsPlayerInRangeOfPoint(i, 50.0, 227.418548,-1186.219116,73.449996) &&
					   !IsPlayerInRangeOfPoint(i, 50.0, 1979.5465,-1196.3489,17.4500) &&
					   !IsPlayerInRangeOfPoint(i, 50.0, 1279.6035,-774.2108,1082.1799) &&
					   !IsPlayerInRangeOfPoint(i, 60.0, 2312.7637,-1421.7882,21.6150) &&
					   !IsPlayerInRangeOfPoint(i, 60.0, 2589.086669,2391.458984,15.850000) &&
					   !IsPlayerInArea(i, 1787.967163, 1445.924804, 2067.967285, 1725.924804) &&
					   !IsPlayerInArea(i, 2033.367431, 1862.159057, 2125.367431, 1970.159057) &&
					   !IsPlayerInArea(i, -1422.158081, 1963.169189, -442.158081, 2831.169189))
					{
						KickCheater(i, SWIMCHEAT); /* плаванье в воздухе */
						continue;
					}
				}
			}
			case 1224, 1228, 1247, 1257, 1197, 1195, 1196, 1198, 1458: TotalPlayerRun[i] ++;
		}
/*============================================================================*/
		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
		{
			KickCheater(i, JETPACK);
		    continue;
		}
/*============================================================================*/
		if(GetPVarInt(i, "DelayWeapon") < time)
	 	{
	        weapon = GetPlayerWeapon(i);
			if(weapon != GetPVarInt(i, "iPlayerWeapon"))
			{
			    SetPVarInt(i, "iPlayerWeapon", weapon);
				if(PlayerWeapons[i][weapon] == 0 && weapon != 0)
				{
					ResetPlayerWeaponsUAC(i);
					KickCheater(i, GUNCHEAT);
					continue;
				}
			}
		}
/*============================================================================*/
        switch(weapon)
        {
            case 0, 43, 46: {}
            case 22..34:
            {
                if(pstate == PLAYER_STATE_ONFOOT)
                {
 		        	ammo = GetPlayerAmmo(i);
		        	if(GetPVarInt(i, "DelayAmmo") < time && GetPVarInt(i, "AdminLevel") < 1 && ammo != 0 && AFKText[i] < 2)
		        	{
		        	    slot = ReturnSlot(weapon);
						if((ammo > PlayerAmmo[i][slot] && PlayerAmmo[i][slot] != 0) || ammo < 0)
						{
							if((ammo - PlayerAmmo[i][slot]) < 4)
							{
							    GivePVarInt(i, "Dop_Check_Ammo", 1);
							    if(GetPVarInt(i, "Dop_Check_Ammo") == 3)
							    {
							        KickCheater(i, INFAMMO);
							        continue;
							    }
							}
						}
						PlayerAmmo[i][slot] = ammo;
					}
				}
                if(GetPVarInt(i, "nodm") == 1)
				{
					SetPlayerArmedWeapon(i, 0);
				}
            }
            default:
            {
                if(GetPVarInt(i, "nodm") == 1)
				{
					SetPlayerArmedWeapon(i, 0);
				}
			}
		}
/*============================================================================*/
	}
	if(TotalKicked > 4)
	{
	    DoubleCheckTP = 1;
	}
}


forward Timer4();
public Timer4()
{
	SetTimer("Timer4", 1033, 0);

	new string[140], Float:a, Float:pos[3], Keys, ud, lr, engine, lights, alarm, door, bonnet, boot, objective, car, nw_stat;
	for(new i; i<MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;

		if(GetPVarInt(i, "Level") < 2)
		{
			nw_stat = ReturnNetWorkValue(i, "Bytes received: ");

			if((nw_stat - GetPVarInt(i, "Bytes_received")) >= 10000)
	  		{
				if(GetPVarInt(i, "Bytes_Ban") == 1)
				{
		    		GetPlayerIp(i, string, sizeof(string));
		      		if(strval(string) != 255)
		        	{
		         		printf("Возможная атака %s[id: %d | ip: %s | level: %d]", GetName(i), i, string, GetPVarInt(i, "Level"));
		         		Kick(i);
		         		continue;
		           	}
	           	}
				SetPVarInt(i, "Bytes_Ban", 1);
			}
			else SetPVarInt(i, "Bytes_Ban", 0);

			SetPVarInt(i, "Bytes_received", nw_stat);
		}



		if(GetPVarInt(i, "ShowCarHelpText"))
		{
			car = GetPlayerVehicleID(i);
			GetPlayerKeys(i,Keys,ud,lr);
			if(!GetPVarInt(i, "CarHelpPressed"))
			{
				if(lr < 0)
				{
			        GetVehicleParamsEx(car,engine,lights,alarm,door,bonnet,boot,objective);
				    if(boot == VEHICLE_PARAMS_ON) SetVehicleParamsEx(car, engine, lights,alarm,door,bonnet,VEHICLE_PARAMS_OFF,objective);
					else SetVehicleParamsEx(car, engine,lights,alarm,door,bonnet,VEHICLE_PARAMS_ON,objective);
					SetPVarInt(i, "CarHelpPressed",1);
					SetTimerEx("ClearCarHelpPressed", 500, false, "i", i);
					UpdateCarSystemTextForPlayer(i);
				}
				else if(lr > 0)
				{
			        GetVehicleParamsEx(car,engine,lights,alarm,door,bonnet,boot,objective);
				    if(bonnet == VEHICLE_PARAMS_ON) SetVehicleParamsEx(car, engine, lights,alarm,door,VEHICLE_PARAMS_OFF,boot,objective);
					else SetVehicleParamsEx(car, engine,lights,alarm,door,VEHICLE_PARAMS_ON,boot,objective);
					SetPVarInt(i, "CarHelpPressed",1);
					SetTimerEx("ClearCarHelpPressed", 500, false, "i", i);
					UpdateCarSystemTextForPlayer(i);
				}
			}
		}
	
		AFKText[i] ++;
		if(AFKText[i] > 4)
		{
			format(string, sizeof(string), "[AFK] [%d секунд]", AFKText[i]-4);
 			SetPlayerChatBubble(i, string, COLOR_GREEN, 10.0, 1600);
 			DelayPayCheck[i] ++;
		}
		if(PlayerChase[i] != -1)
    	{
      		if(GetPlayerInterior(PlayerChase[i]) != 0 || !IsPlayerConnected(PlayerChase[i]))
      		{
          		SendClientMessage(i, COLOR_GREEN, "Игрок скрылся");
          		PlayerChase[i] = -1;
			  	gPlayerCheckpointStatus[i] = 0;
		    	DisablePlayerCheckpoint(i);
			}
			else
			{
				GetPlayerPos(PlayerChase[i], pos[0], pos[1], pos[2]);
				SetPlayerCheckpoint(i, pos[0], pos[1], pos[2], 3.0);
        	}
    	}
		GetPlayerArmour(i, a);
		if(IsACop(i))
		{
			if(!a && IsPlayerAttachedObjectSlotUsed(i, 4))
			{
				RemovePlayerAttachedObject(i, 4);
			}
		}
		else
		{
		    if(a > 0.0) SetPlayerArmour(i, 0.0);
		}
	}
}
forward Timer3();
public Timer3()
{
	SetTimer("Timer3", 1011, 0);

	if(StartingPaintballRound == 1)
	{
		if(AnnouncedPaintballRound == 0)
		{
			AnnouncedPaintballRound = 1;
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
				if(PlayerPaintballing[i] != 0) SendClientMessage(i, COLOR_INFO, "Пейнтобольный матч начнётся через 15 секунд (Ожидание игроков)");
			}
		}
	}

	if(PaintballRound != 1)
	{
		if(PaintballPlayers >= 1 && StartingPaintballRound != 1)
		{
			StartingPaintballRound = 1;
			SetTimer("PreparePaintball", 15000, 0);
		}
	}
	
	new Float:VHealth;
  	for(new v = 1; v < MAX_VEHICLES; v++)
   	{
    	if(!GetVehicleModel(v))continue;
     	GetVehicleHealth(v,VHealth);
      	if(floatround(VHealth) != floatround(VehicleHealth[v]))
       	{
        	VehicleUpdateHealth(v, VHealth, VehicleHealth[v]);
         	VehicleHealth[v] = VHealth;
       	}
       	if(VHealth < 400.0) SetVehicleHealth(v, 400.0);
	}
}




forward Timer2();
public Timer2()
{
	SetTimer("Timer2", 2022, 0);
	new surf;
	new Float: pos[4];
	

  	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		
//==============================================================================
		surf = GetPlayerSurfingVehicleID(i);
		
		
		if(IsAtGreenZone(i) && GetPVarInt(i, "nodm") != 1)
		{
		    SetPlayerTeam(i, 3);
			TextDrawShowForPlayer(i, nodmtext);
			SetPVarInt(i, "nodm", 1);
		}
		else if(!IsAtGreenZone(i) && GetPVarInt(i, "nodm") == 1)
		{
		    SetPlayerTeam(i, i);
			TextDrawHideForPlayer(i, nodmtext);
			DeletePVar(i, "nodm");
		}

		if(GetPlayerCameraMode(i) == 55 && GetPlayerState(i) == PLAYER_STATE_PASSENGER)
		{
			KickCheater(i, WINDOWSHOOT);
   			continue;
		}
		
		if(surf != INVALID_VEHICLE_ID && surf < sizeof(UnSerfCar))
		{
		    if(UnSerfCar[surf] != 0)
		    {
	  			GetVehiclePos   ( surf, pos[0], pos[1], pos[2] );
	    		GetVehicleZAngle( surf, pos[3] );

				SetPlayerPos(i,
  					pos[0] + 4.0 * floatcos(pos[3]-90.0, degrees),
     				pos[1] + 4.0 * floatsin(pos[3]-90.0, degrees),
       				pos[2] + 0.3);
		    }
		}
		if(GetPVarInt(i, "SpecTV") != -1)
		{
			new targetid = GetPVarInt(i, "SpecTV");
			if(IsPlayerConnected(targetid))
			{
   				if(GetPVarInt(i,"AdminLevel") >= 1)
			    {
	      			new Float:health;
			    	new name[MAX_PLAYER_NAME];
		 			new string3[512];
		    		GetPlayerName(targetid, name, sizeof(name));
				    GetPlayerHealth(targetid, health);
				    format(string3, sizeof(string3), "~n~~n~~n~~n~~n~~n~~y~%s~g~ (ID:%d)~n~~y~HP:~g~ %.1f~n~~y~Drugs:~g~ %d~n~~y~ammo: ~g~%d",name,targetid,health, GetPVarInt(targetid,"Drugs"), GetPlayerAmmo(targetid));
				    GameTextForPlayer(i, string3, 2500, 3);
		  	 	}
			}
		}
//==============================================================================
	}
}


forward Timer1();
public Timer1()
{
	SetTimer("Timer1", 1038, 0);
	new jailed;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || !GetPVarInt(i,"Jailed")) continue;
	    
	    jailed = GetPVarInt(i,"Jailed");
		if(GetPVarInt(i,"JailTime"))
		{
			GivePVarInt(i,"JailTime",-1);
			if(Pobegtime[i] == 1)
			{
				if((jailed == 1 && !IsPlayerInRangeOfPoint(i, 5.0,  264.6288,77.5742,1001.0391)) ||
				   (jailed == 2 && !IsPlayerInRangeOfPoint(i, 20.0, 2144.056152,1615.458618,993.688171)))
				{
    				SpecJail[i] ++;
					switch(jailed)
					{
	    				case 1: SetPlayerInterior(i, 6), oSetPlayerPos(i, 264.628800,77.5742,1001.0391);
					    case 2: SetPlayerInterior(i, 1), oSetPlayerPos(i, 2144.056152,1615.458618,993.688171);
					}
					if(SpecJail[i] > 3)
					{
	    				Kick_(i);
	    				continue;
					}
				}
			}
			if(GetPVarInt(i,"JailTime") <= 0)
			{
			    Pobegtime[i] = 0;
				SetPVarInt(i,"JailTime",0);
				SetPVarInt(i,"Jailed",0);
				if(GetPVarInt(i,"Jailed") == 2) SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
                SetPlayerVirtualWorld(i, 0);
				SetPlayerInterior(i, 6);
				oSetPlayerPos(i,246.623672,67.595924,1003.640625);
				SetPlayerFacingAngle(i, 180.732223);
				SetCameraBehindPlayer(i);

				SetPlayerColor(i,TEAM_HIT_COLOR);
				SendClientMessage(i, COLOR_WHITE, "Вы заплатили Ваш долг обществу");
				GameTextForPlayer(i, "~g~You are free now", 5000, 1);
				
				if(GetPVarInt(i, "Sex") == 1) ReplaceSkin(i);
			}
		}
	}
}







public Fillup(playerid, veh, price)
{
   	if(veh > MAX_VEHICLES) return 1;
    new string[128];
	format(string, sizeof(string), "Автомобиль заправлен! С Вас: "RGB_GREEN"$%d", price);
	SendClientMessage(playerid, COLOR_WHITE, string);
	Gas[veh] = 100;

	return 1;
}


stock SetPlayerWeapons(playerid)
{
    ResetPlayerWeaponsUAC(playerid);
    if(GetPVarInt(playerid,"Jailed") < 1)
    {
		switch(GetPVarInt(playerid,"Team"))
		{
			case 1:
			{
				GivePlayerWeaponUAC(playerid, 41, 1500); //spray
				GivePlayerWeaponUAC(playerid, 24, 200);
				GivePlayerWeaponUAC(playerid, 3, 1);
			}
		    case 2: // ФБР
		    {
			    GivePlayerWeaponUAC(playerid, 41, 1500); // спрей
				GivePlayerWeaponUAC(playerid, 24, 200); // дигл
				GivePlayerWeaponUAC(playerid, 3, 1); // дубинка
		    }
			case 3://National Guard
			{
			    GivePlayerWeaponUAC(playerid, 24, 80); // дигл
			    GivePlayerWeaponUAC(playerid, 31, 150); // м 4
			    GivePlayerWeaponUAC(playerid, 29, 200); // мп 5
			}
			case 4: // МЧС
			{
				GivePlayerWeaponUAC(playerid, 42, 5000); // огнетушитель
		        GivePlayerWeaponUAC(playerid, 24, 60); // дигл
		    }
			case 7: // Мэрия
			{
			    GivePlayerWeaponUAC(playerid, 3, 1); // дубинка
       			GivePlayerWeaponUAC(playerid, 24, 50); // дигл
		        GivePlayerWeaponUAC(playerid, 29, 200); // мп 5
		        GivePlayerWeaponUAC(playerid, 41, 1500); //spray
			}
			case 9: // Репортеры
			{
		        GivePlayerWeaponUAC(playerid, 24, 60); // дигл
		        GivePlayerWeaponUAC(playerid, 43, 200); // фотик
			}
			case 11: // Лицензеры
			{
				GivePlayerWeaponUAC(playerid, 41, 1500); //spray
				GivePlayerWeaponUAC(playerid, 24, 60); // дигл
			}
			case 13, 14, 15, 16, 17: // Банды
			{
				GivePlayerWeaponUAC(playerid, 5, 1); // бита
		        GivePlayerWeaponUAC(playerid, 24, 80); // дигл
		        GivePlayerWeaponUAC(playerid, 29, 200); // мп 5
			}
			case 10: // байкеры
			{
				GivePlayerWeaponUAC(playerid, 5, 1); // бита
		        GivePlayerWeaponUAC(playerid, 24, 80); // дигл
		        GivePlayerWeaponUAC(playerid, 25, 50); // шотган
			}
			case 5: // ЛКН
			{
				GivePlayerWeaponUAC(playerid, 1, 1); // кастет
		        GivePlayerWeaponUAC(playerid, 24, 80); // дигл
		        GivePlayerWeaponUAC(playerid, 31, 200); // м4
			}
			case 6: // ЯКИ
			{
				GivePlayerWeaponUAC(playerid, 8, 1); // катана
		        GivePlayerWeaponUAC(playerid, 24, 80); // дигл
		        GivePlayerWeaponUAC(playerid, 31, 200); // м4
			}
			case 12: // РМ
			{
				GivePlayerWeaponUAC(playerid, 1, 1); // кастет
		        GivePlayerWeaponUAC(playerid, 24, 80); // дигл
		        GivePlayerWeaponUAC(playerid, 30, 200); // ак 47
			}
			case 18: // Колхоз
			{
				GivePlayerWeaponUAC(playerid, 6, 1); // лопата
		        GivePlayerWeaponUAC(playerid, 24, 60); // дигл
		        GivePlayerWeaponUAC(playerid, 29, 200); // мп 5
		        GivePlayerWeaponUAC(playerid, 33, 30); // рифл
			}
		}
	}
}

stock ShowStats(playerid, targetid)
{
 	new
	 	married[24],
	 	nxtlevel = GetPVarInt(targetid,"Level")+1,
	 	expamount = nxtlevel*levelexp,
	 	costlevel,
	    name[24],
		atext[15], // пол
		ttext[20], // фракция
		jtext[20], // работа
		drank[30], // вип уровень
		hText[17], // Ключ от дома
		bText[17], // От биза
		cText[17]; // от тачки

    globalstr = "";
    
	if(GetPVarInt(targetid, "House") != -1) format(hText, 17, "Есть (%d)", GetPVarInt(targetid, "House"));
	else hText = "Нет";

	if(GetPVarInt(targetid, "Bizz") != 255) format(bText, 17, "Есть (%d)", GetPVarInt(targetid, "Bizz"));
	else bText = "Нет";

	if(GetPVarInt(targetid,"CarKey") > 0) format(cText, 17, "Есть (%d)", GetPVarInt(targetid, "CarKey"));
	else cText = "Нет";

    GetPVarString(targetid, "MarriedTo", married, 24);
   	GetPlayerName(targetid, name, sizeof(name));

	if(GetPVarInt(targetid,"Level") == 1) costlevel = 0;
	else costlevel = nxtlevel*levelcost;

	if(GetPVarInt(targetid,"Sex") == 1) atext = "Мужчина";
	else atext = "Женщина";

	new Team = GetPVarInt(targetid,"Team");
	switch(Team)
	{
		case 0: ttext = "Гражданин";
		case 1: ttext = "Полицейский";
		case 2: ttext = "Агент FBI";
		case 3: ttext = "Военный";
		case 4: ttext = "Медик";
		case 5: ttext = "LCN";
		case 6: ttext = "Yakuza";
		case 7: ttext = "Член Мэрии";
		case 8: ttext = "Hitman";
		case 9: ttext = "Репортёр";
		case 10: ttext = "Байкер";
		case 11: ttext = "Лицензиар";
		case 12: ttext = "Русская Мафия";
	    case 13: ttext = "The Ballas Gang";
	    case 14: ttext = "Grove Street";
		case 15: ttext = "LS Vagos";
	   	case 16: ttext = "El Coronos";
	    case 17: ttext = "The Rifa Gang";
	    case 18: ttext = "Колхоз";
	}

	switch(GetPVarInt(targetid,"Job"))
	{
        case 1: jtext = "Детектив";
        case 2: jtext = "Юрист";
        case 3: jtext = "Проститутка";
        case 4: jtext = "Наркодилер";
        case 5: jtext = "Автоугонщик";
        case 6: jtext = "Репортёр новостей";
        case 7: jtext = "Механик";
        case 9: jtext = "Продавец оружия";
        case 10: jtext = "Оформитель";
        case 11: jtext = "Медик";
		case 12: jtext = "Тренер";
        case 14: jtext = "Водитель автобуса";
        case 15: jtext = "Разносчик газет";
        case 17: jtext = "Таксист";
        
        case 19: jtext = "Нет"; //
        
        case 20: jtext = "Грузчик";
        case 21: jtext = "Шахтер";
        case 22: jtext = "Инкассатор";
        default: jtext = "Нет";
	}
	switch(GetPVarInt(targetid,"VipLevel"))
	{
		case 1: drank = "{cd7f32}1 (Bronze){ffffff}";
		case 2: drank = "{c0c0c0}2 (Silver){ffffff}";
		case 3: drank = "{ffd700}3 (Gold){ffffff}";
		default: drank = "Нет";
	}
	new Float:hp = 50; // Спаун хп
	if(GetPVarInt(targetid,"VipLevel") > 1)
	{
	    hp = 120.0;
	}
	else
	{
		if(GetPVarInt(targetid, "Achievement_Best_Mechanic") >= 100) hp += 10.0;
		if(GetPVarInt(targetid, "Achievement_Scavenger") >= 100) hp += 10.0;
		if(GetPVarInt(targetid, "Achievement_Loader") >= 500) hp += 20.0;
		if(GetPVarInt(targetid, "Achievement_Fisher") >= 100) hp += 10.0;
	}
	
	
	new LastVisit[40];
	new RegDate[40];
	
	GetPVarString(targetid, "LastVisit", LastVisit, 40);
	GetPVarString(targetid, "RegDate", RegDate, 40);

	strcat(globalstr, "{ffffff}______________________________________________________________\n\n");

	format(globalstr, sizeof(globalstr), "%s\t\tИмя:\t\t\t %s \n\n", 		globalstr, name);
	format(globalstr, sizeof(globalstr), "%s\t\tУровень:\t\t %d \n", 		globalstr, GetPVarInt(targetid,"Level"));
	format(globalstr, sizeof(globalstr), "%s\t\tРеспекты:\t\t %d / %d \n", 	globalstr, GetPVarInt(targetid,"Respect"), expamount);

	format(globalstr, sizeof(globalstr), "%s\t\tСлед. уровень:\t %d$ \n",   globalstr, costlevel);
	format(globalstr, sizeof(globalstr), "%s\t\tVIP аккаунт:\t\t %s \n\n",  globalstr, drank);
	format(globalstr, sizeof(globalstr), "%s\t\tДенег:\t\t\t %d$ \n",    	globalstr, GetPlayerPCash(targetid));
	format(globalstr, sizeof(globalstr), "%s\t\tВ банке:\t\t %d$ \n",    	globalstr, GetPVarInt(targetid,"BankMoney"));
	format(globalstr, sizeof(globalstr), "%s\t\tТелефон:\t\t %d \n",     	globalstr, GetPVarInt(targetid,"PhoneNumber"));
	format(globalstr, sizeof(globalstr), "%s\t\tПол:\t\t\t %s \n",     		globalstr, atext);
	format(globalstr, sizeof(globalstr), "%s\t\tВозраст:\t\t %d \n",     	globalstr, GetPVarInt(targetid,"Age"));
	format(globalstr, sizeof(globalstr), "%s\t\tВарны:\t\t\t %d \n",     	globalstr, GetPVarInt(targetid,"Warnings"));

	format(globalstr, sizeof(globalstr), "%s\t\tПреступлений:\t %d \n",     globalstr, GetPVarInt(targetid,"Crimes"));
	format(globalstr, sizeof(globalstr), "%s\t\tУбийств:\t\t %d \n",     	globalstr, GetPVarInt(targetid,"Kills"));
	format(globalstr, sizeof(globalstr), "%s\t\tСмертей:\t\t %d \n",     	globalstr, GetPVarInt(targetid,"Deaths"));
	format(globalstr, sizeof(globalstr), "%s\t\tРозыск:\t\t %d \n\n",    	globalstr, WantedLevel[targetid]);

	format(globalstr, sizeof(globalstr), "%s\t\tРабота:\t\t %s \n",     	globalstr, jtext);
	format(globalstr, sizeof(globalstr), "%s\t\tОрганизация:\t\t %s \n",    globalstr, ttext);
	
	new Rank = GetPVarInt(targetid, "Rank");
	if(Rank <= 20 && Rank > 0) format(globalstr, sizeof(globalstr), "%s\t\tРанг:\t\t\t %s \n\n", globalstr, FactionRanks[Team][Rank-1]);
	else strcat(globalstr, "\t\tРанг:\t\t\t Нет\n\n");

	format(globalstr, sizeof(globalstr), "%s\t\tСпаун ХП:\t\t %.1f\n",   globalstr, hp);
	switch(GetPVarInt(targetid, "ConnectedTime"))
	{
	    case 0..50:     format(globalstr, sizeof(globalstr), "%s\t\tСтатус:\t\t\t Новичок(%d)\n",   globalstr, GetPVarInt(targetid, "ConnectedTime"));
	    case 51..100:   format(globalstr, sizeof(globalstr), "%s\t\tСтатус:\t\t\t Освоившийся(%d)\n",   globalstr, GetPVarInt(targetid, "ConnectedTime"));
	    case 101..250:  format(globalstr, sizeof(globalstr), "%s\t\tСтатус:\t\t\t Проверенный(%d)\n",   globalstr, GetPVarInt(targetid, "ConnectedTime"));
	    case 251..500:  format(globalstr, sizeof(globalstr), "%s\t\tСтатус:\t\t\t Старый игрок(%d)\n",   globalstr, GetPVarInt(targetid, "ConnectedTime"));
	    case 501..1000: format(globalstr, sizeof(globalstr), "%s\t\tСтатус:\t\t\t Очень старый игрок(%d)\n",   globalstr, GetPVarInt(targetid, "ConnectedTime"));
		default:        format(globalstr, sizeof(globalstr), "%s\t\tСтатус:\t\t\t Уважаемый(%d)\n",   globalstr, GetPVarInt(targetid, "ConnectedTime"));
	}
	
	format(globalstr, sizeof(globalstr), "%s\t\tСупруг(а):\t\t %s\n\n",    globalstr, married);
	format(globalstr, sizeof(globalstr), "%s\t\tНаркотики:\t\t %d\n",     	globalstr, GetPVarInt(targetid,"Drugs"));
	format(globalstr, sizeof(globalstr), "%s\t\tМатериалы:\t\t %d\n\n",    globalstr, GetPVarInt(targetid,"Materials"));
	
	format(globalstr, sizeof(globalstr), "%s\t\tДом:\t\t\t %s\n",   		globalstr,  hText);
	format(globalstr, sizeof(globalstr), "%s\t\tБизнес:\t\t %s\n",   		globalstr,  bText);
	format(globalstr, sizeof(globalstr), "%s\t\tАвто:\t\t\t %s\n\n",   		globalstr,  cText);
	
	format(globalstr, sizeof(globalstr), "%s\t\tПерсональный ID:\t %d\n",   globalstr,  GetPVarInt(targetid, "MySQL_id"));
	format(globalstr, sizeof(globalstr), "%s\t\tРегистрация:\t\t %s\n",   	globalstr,  RegDate);
	format(globalstr, sizeof(globalstr), "%s\t\tПоследний визит:\t %s\n",   globalstr,  LastVisit);
    strcat(globalstr, "______________________________________________________________");

	if(GetPVarInt(playerid, "StatsBackMain") == 1)
	{
		ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Статистика игрового аккаунта:", globalstr, "Назад", "");
		DeletePVar(playerid, "StatsBackMain");
	}
 	else
 	{
 		ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, RGB_SERVER"Статистика игрового аккаунта:", globalstr, "Ok", "");
	}
	globalstr = "";
	return 1;
}


stock SetPlayerToTeamColor(playerid)
{
	return SetPlayerColor(playerid, TEAM_HIT_COLOR); // white
}
public GameModeInitExitFunc()
{
	new string[128];
	format(string, sizeof(string), "Restarting...");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i, 1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i, 1374.5, -1291.1, 239.0);
			SetPVarInt(i,"Logged",0);
		}
	}
	SendRconCommand("reloadbans");
	SetTimer("GameModeExitFunc", 10000, 0);
	return 1;
}

public GameModeExitFunc()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    TextDrawDestroy(CarSystem[i]);
	}
	
	for(new i = 0; i < 5; i++)
	{
		TextDrawDestroy(ProgressBarText[i]);
	}
	TextDrawDestroy(CarHelpText);
	TextDrawDestroy(txtTimeDisp);
    TextDrawDestroy(sait);
	KillTimer(synctimer);
	KillTimer(cartimer);
	KillTimer(productiontimer);
	GameModeExit();
}

//------------------------------------------------------------------------------------------------------

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    if(CheckFCalls(playerid, 16)) return 1;
    if(IsPlayerNPC(playerid)) return 1;
    
    if(LockedCarP[vehicleid] == 1)
    {
	    if(LockForPlayer[vehicleid] != -1 && LockForPlayer[vehicleid] != playerid && ispassenger == 0)
	    {
	        SetVehicleParamsForPlayer(vehicleid, playerid, 0, 1);
	        ClearAnimations(playerid);
	    }
	    else
	    {
			SetVehicleParamsForPlayer(vehicleid, playerid, 0, 0);
	    }
    }
    SetPVarInt(playerid, "InCar",  vehicleid);
    if(IsAFarmerCar(vehicleid) && GetPVarInt(playerid,"Team") == 18)
    {
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_PRITON;
		SetPlayerCheckpoint(playerid, 2161.9656,-1659.5684,15.0859, 3.0);
		SetPVarInt(playerid, "DrugsDelivery", 1);
	}
    if(IsAPlane(vehicleid))
	{
		SetTimerEx("ACSweapon2", 600, false, "i", playerid);
	}
	if(GetVehicleModel(vehicleid) == 457) SetTimerEx("ACSweapon3", 600, false, "i", playerid);
	
	if(CheckCJRunTimer[playerid])
	{
		KillTimer(CheckCJRunTimer[playerid]);
		CheckCJRunTimer[playerid] = 0;
		DeletePVar(playerid, "StopTimerCjRun");
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(CheckFCalls(playerid, 17)) return 1;
    if(IsPlayerNPC(playerid)) return 1;

	if(gPlayerCheckpointStatus[playerid] == CHECKPOINT_PRITON)
	{
	    DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
		DeletePVar(playerid, "DrugsDelivery");
	}
	if(RemovePlayerFromVehicleTimer[playerid] != 0)
	{
 		KillTimer(RemovePlayerFromVehicleTimer[playerid]);
   		RemovePlayerFromVehicleTimer[playerid] = 0;
	}

	if(IsFishingBoat(vehicleid))
	{
	    if(GetPVarInt(playerid, "Fisher") == 1 && GetPVarInt(playerid, "PayedForBoat") != 0)
		{
			SetPlayerAttachedObject(playerid, 4, 18632, 6, 0.070000, 0.029999, 0.000000, 0.000000, 180.000000, 0.000000, 1.000000, 1.000000, 1.000000); // Удочка
		}
	}

	if(GetPVarInt(playerid, "TakeLicTest")) DisablePlayerCheckpoint(playerid), gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	if(IsAPlane(vehicleid)) SetTimerEx("ACSweapon2", 600, false, "i", playerid);
	if(GetVehicleModel(vehicleid) == 457) SetTimerEx("ACSweapon3", 600, false, "i", playerid);

	if(vehicleid == CarInfo[playerid][cMaincar]) // для сохранения позиции
	{
	    new Float:pos[4];
	    
		GetVehiclePos(CarInfo[playerid][cMaincar], pos[0], pos[1], pos[2]);
		GetVehicleZAngle(CarInfo[playerid][cMaincar], pos[3]);

		CarInfo[playerid][carX] = pos[0];
		CarInfo[playerid][carY] = pos[1];
		CarInfo[playerid][carZ] = pos[2];
		CarInfo[playerid][carA] = pos[3];
	}
	
	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
	return 1;
}




stock LoadFactionsCommons()
{
	new DataString[64], Query[512];
	mysql_query("SELECT * FROM `"Gang_CommonTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("Drugs", DataString); CommonInfo[id][Drugs] = strval(DataString);
			mysql_fetch_field("Materials", DataString); CommonInfo[id][Materials] = strval(DataString);
			mysql_fetch_field("Money", DataString); CommonInfo[id][Cash] = strval(DataString);
			mysql_fetch_field("Password", DataString); CommonInfo[id][gPassword] = strval(DataString);
		}
	}
	mysql_free_result();
	print("Fractions commons loaded");
	return 1;
}

stock SaveFactionCommon(fraction) // SaveOther
{
    new query[512], src[64];
    format(query,sizeof(query),"UPDATE `"Gang_CommonTable"` SET ");
	format(src,sizeof(src),"`Drugs` = %d,", CommonInfo[fraction][Drugs]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Materials` = %d,", CommonInfo[fraction][Materials]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Password` = %d,", CommonInfo[fraction][gPassword]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Money` = %d", CommonInfo[fraction][Cash]); strcat(query,src,sizeof(query));
	format(src,sizeof(src)," WHERE `id` = %d LIMIT 1", fraction); strcat(query,src,sizeof(query));
	mysql_query(query);
}
//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{

    ConnectMySQL();
   	mysql_set_character_set("utf8");
   	mysql_query("SET NAMES 'cp1251'");
   	
   	
    synctimer = SetTimer("SyncUp", 60000, 1);               //60.000
	cartimer = SetTimer("CarCheck", 30000, 1);              //30.000
	productiontimer = SetTimer("Production", 300000, 1);


    Timer1();
    Timer2();
    Timer3();
    Timer4();
    Timer5();

	new  Year, Month, Day, Hour, Minute;
	gettime(Hour, Minute, _);
	getdate(Year, Month, Day);
	printf("DEBUG LOG: Starting Server (%d/%d/%d    %d:%d)", Year, Month, Day, Hour, Minute);
	if(Hour != 4) dodebug = true;

	switch(Month)
	{
	    case 1:
		{
	        switch(Day) {case 0..10: action_holiday = 1;} // НГ
		}
		case 12:
		{
		    switch(Day) {case 25..31: action_holiday = 1;} // НГ
		}
		case 6:
		{
		    switch(Day) {case 7..14: action_holiday = 2;} // ДР сриме
		}
	}
	if(action_holiday != 0)
	{
	    SetTimer("HolidayAds", 840000, 1); // 14 минут
	}
	
    nodmtext = TextDrawCreate(510, 100, "~r~No-DM ~w~Zone");
	TextDrawFont(nodmtext, 3);

	TDM_Count = TextDrawCreate(498.000000,114.000000,"~r~Red:~w~0~n~~b~Blue:~w~0");
	TextDrawAlignment(TDM_Count,0);
	TextDrawBackgroundColor(TDM_Count,0x000000ff);
	TextDrawFont(TDM_Count,3);
	TextDrawLetterSize(TDM_Count,0.599999,2.299999);
	TextDrawColor(TDM_Count,0xffffffff);
	TextDrawSetOutline(TDM_Count,1);
	TextDrawSetProportional(TDM_Count,1);
	TextDrawSetShadow(TDM_Count,1);
	
	CarHelpText = TextDrawCreate(44.000000,280.000000,"\
	~r~Keys:~n~\
	~r~up - ~w~Engine ~g~On~w~ / ~r~Off~w~     ~n~\
	~r~dn - ~w~Lights ~g~On~w~ / ~r~Off~w~     ~n~\
	~r~lt - ~w~Boot ~g~Open~w~ / ~r~Close~w~   ~n~\
	~r~rt - ~w~Bonnet ~g~Open~w~ / ~r~Close");
	TextDrawUseBox(CarHelpText,1);
	TextDrawBoxColor(CarHelpText,0x00000099);
	TextDrawTextSize(CarHelpText,150.000000,47.000000);
	TextDrawAlignment(CarHelpText,0);
	TextDrawBackgroundColor(CarHelpText,0x000000ff);
	TextDrawFont(CarHelpText,2);
	TextDrawLetterSize(CarHelpText,0.199999,1.100000);
	TextDrawColor(CarHelpText,0xffffffff);
	TextDrawSetOutline(CarHelpText,1);
	TextDrawSetProportional(CarHelpText,1);
	TextDrawSetShadow(CarHelpText,1);
	
	WelcomeText = TextDrawCreate(101.000000,271.000000," ~w~Welcome to~n~~r~C~w~rime ~r~S~w~treets");
	TextDrawAlignment(WelcomeText,2);
	TextDrawBackgroundColor(WelcomeText, COLOR_BLACK);
	TextDrawFont(WelcomeText,0);
	TextDrawLetterSize(WelcomeText,0.900000,2.799999);
	TextDrawColor(WelcomeText,0xffffffff);
	TextDrawSetProportional(WelcomeText,1);
	TextDrawSetShadow(WelcomeText,1);
	
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		CarSystem[i] = TextDrawCreate(2.000000,422.000000,"E IIIIIIIIII F     R N D     Engine    Lights    Boot    Bonnet     Bloodring Banger (id 554)");
		TextDrawUseBox(CarSystem[i],1);
		TextDrawBoxColor(CarSystem[i],0x00000033);
		TextDrawTextSize(CarSystem[i],639.000000,64.000000);
		TextDrawAlignment(CarSystem[i],1);
		TextDrawBackgroundColor(CarSystem[i],0x000000ff);
		TextDrawFont(CarSystem[i],1);
		TextDrawLetterSize(CarSystem[i],0.299999,1.199998);
		TextDrawColor(CarSystem[i],0xffffffff);
		TextDrawSetOutline(CarSystem[i],1);
		TextDrawSetProportional(CarSystem[i],1);
		TextDrawSetShadow(CarSystem[i],3);
    }
	txtTimeDisp = TextDrawCreate(555.0, 24.0,"00:00");
	TextDrawAlignment(txtTimeDisp,0);
	TextDrawFont(txtTimeDisp,3);
	TextDrawLetterSize(txtTimeDisp,0.5,2.0);
	TextDrawSetOutline(txtTimeDisp,1);
	TextDrawSetProportional(txtTimeDisp,1);
	TextDrawSetShadow(txtTimeDisp,1);
	
	CarName_Line = TextDrawCreate(342.000000,379.700042,"-");
	CarName_Vehicle = TextDrawCreate(364.000000,371.000000,"vehicle");
	
	TextDrawSetProportional(CarName_Line,1);
	TextDrawSetProportional(CarName_Vehicle,1);
	TextDrawAlignment(CarName_Line,0);
	TextDrawAlignment(CarName_Vehicle,0);
	TextDrawBackgroundColor(CarName_Line,0x000000ff);
	TextDrawBackgroundColor(CarName_Vehicle,0x000000ff);
	TextDrawFont(CarName_Line,3);
	TextDrawFont(CarName_Vehicle,3);
	TextDrawLetterSize(CarName_Line,19.000000,0.599999);
	TextDrawLetterSize(CarName_Vehicle,1.000000,1.000000);
	TextDrawColor(CarName_Line,0xff0000ff);
	TextDrawColor(CarName_Vehicle,0xffffffff);
	TextDrawSetShadow(CarName_Line,1);
	TextDrawSetShadow(CarName_Vehicle,1);
	//_______________________________________PROGRESS BAR______________________________________________
	
	ProgressBarText[0] = TextDrawCreate(399.000000,384.000000,"_");
	TextDrawUseBox(ProgressBarText[0],1);
	TextDrawBoxColor(ProgressBarText[0],0x000000ff);
	TextDrawTextSize(ProgressBarText[0],239.000000,-10.000000);
	TextDrawAlignment(ProgressBarText[0],0);
	TextDrawFont(ProgressBarText[0],3);
	TextDrawLetterSize(ProgressBarText[0],1.900000,0.399994);
	TextDrawColor(ProgressBarText[0],0xffffffff);
	TextDrawBackgroundColor(ProgressBarText[0],0x000000ff);
	TextDrawSetOutline(ProgressBarText[0],1);
	TextDrawSetProportional(ProgressBarText[0],1);
	TextDrawSetShadow(ProgressBarText[0],1);
	
	ProgressBarText[1] = TextDrawCreate(281.000000,386.000000," ");
	TextDrawUseBox(ProgressBarText[1],1);
	TextDrawBoxColor(ProgressBarText[1],0xff0000cc);
	TextDrawTextSize(ProgressBarText[1],241.000000,-15.000000);
	TextDrawAlignment(ProgressBarText[1],0);
	TextDrawBackgroundColor(ProgressBarText[1],0x000000ff);
	TextDrawFont(ProgressBarText[1],3);
	TextDrawLetterSize(ProgressBarText[1],1.000000,1.000000);
	TextDrawColor(ProgressBarText[1],0xffffffff);
	TextDrawSetOutline(ProgressBarText[1],1);
	TextDrawSetProportional(ProgressBarText[1],1);
	TextDrawSetShadow(ProgressBarText[1],1);
	
	ProgressBarText[2] = TextDrawCreate(323.000000,386.000000," ");
	TextDrawUseBox(ProgressBarText[2],1);
	TextDrawBoxColor(ProgressBarText[2],0xff0000cc);
	TextDrawTextSize(ProgressBarText[2],277.000000,-13.000000);
	TextDrawAlignment(ProgressBarText[2],0);
	TextDrawFont(ProgressBarText[2],3);
	TextDrawLetterSize(ProgressBarText[2],1.000000,1.000000);
	TextDrawBackgroundColor(ProgressBarText[2],0x000000ff);
	TextDrawColor(ProgressBarText[2],0xffffffff);
	TextDrawSetProportional(ProgressBarText[2],1);
	TextDrawSetShadow(ProgressBarText[2],1);
	TextDrawSetOutline(ProgressBarText[2],1);
	
	
	ProgressBarText[3] = TextDrawCreate(363.000000,386.000000," ");
	TextDrawUseBox(ProgressBarText[3],1);
	TextDrawBoxColor(ProgressBarText[3],0xff0000cc);
	TextDrawTextSize(ProgressBarText[3],319.000000,-1.000000);
	TextDrawAlignment(ProgressBarText[3],0);
	TextDrawBackgroundColor(ProgressBarText[3],0x000000ff);
	TextDrawFont(ProgressBarText[3],3);
	TextDrawLetterSize(ProgressBarText[3],1.000000,1.000000);
	TextDrawColor(ProgressBarText[3],0xffffffff);
	TextDrawSetOutline(ProgressBarText[3],1);
	TextDrawSetProportional(ProgressBarText[3],1);
	TextDrawSetShadow(ProgressBarText[3],1);
	
	ProgressBarText[4] = TextDrawCreate(397.000000,386.000000," ");
 	TextDrawUseBox(ProgressBarText[4],1);
	TextDrawBoxColor(ProgressBarText[4],0xff0000cc);
	TextDrawTextSize(ProgressBarText[4],359.000000,-14.000000);
 	TextDrawAlignment(ProgressBarText[4],0);
 	TextDrawBackgroundColor(ProgressBarText[4],0x000000ff);
 	TextDrawFont(ProgressBarText[4],3);
	TextDrawLetterSize(ProgressBarText[4],1.000000,1.000000);
	TextDrawColor(ProgressBarText[4],0xffffffff);
 	TextDrawSetOutline(ProgressBarText[4],1);
 	TextDrawSetProportional(ProgressBarText[4],1);
	TextDrawSetShadow(ProgressBarText[4],1);
	//_________________________________________________________________________________________________
    
	new saitname[64];
	
	#if defined LOCALHOST
        format(saitname, 64, "TEST SERVER");
    #endif
    
	#if defined SAMP1
	    format(saitname, 64, "~y~www.~w~crime-streets.~y~ru");
	#endif
	
	#if defined SAMP2
		format(saitname, 64, "~g~www.~w~crime-streets.~g~ru");
	#endif
	
	#if defined SAMP3
		format(saitname, 64, "~b~www.~w~crime-streets.~b~ru");
	#endif
	
	sait = TextDrawCreate(440.0, 2.0, saitname);
	TextDrawAlignment(sait,0);
	TextDrawFont(sait,0);
	TextDrawLetterSize(sait,0.7,1.7);
	TextDrawSetOutline(sait,1);
	TextDrawSetProportional(sait,1);
	TextDrawSetShadow(sait,1);

	
	LoadHouses();
 	LoadSBizzes();
   	LoadBizzes();
	LoadZones();
	LoadOther();
	LoadRanks();
	LoadFactionsCars();
	LoadFactionsSpawns();
	LoadFactionsCommons();
	LoadFactionsNewsPickups();
	
	if(Hour == 4 && Minute == 5)
	{
	    print("Сбор налога...");
	    new count = GetTickCount();
		#if defined SAMP1
			mysql_query("UPDATE `"UsersTable"` SET `BankMoney` = `BankMoney`-`BankMoney`/10 WHERE `BankMoney` > 10000000");
			mysql_query("UPDATE `"UsersTable"` SET `Money` = `Money`-`Money`/10 WHERE `Money` > 10000000");
		#endif

		#if defined SAMP2
			mysql_query("UPDATE `"UsersTable"` SET `BankMoney` = `BankMoney`-`BankMoney`/65 WHERE `BankMoney` > 1000000");
			mysql_query("UPDATE `"UsersTable"` SET `Money` = `Money`-`Money`/65 WHERE `Money` > 1000000");
		#endif

		#if defined SAMP3
			mysql_query("UPDATE `"UsersTable"` SET `BankMoney` = `BankMoney`-`BankMoney`/65 WHERE `BankMoney` > 1000000");
			mysql_query("UPDATE `"UsersTable"` SET `Money` = `Money`-`Money`/65 WHERE `Money` > 1000000");
		#endif
		printf("Сбор налога: %d ms", GetTickCount()-count);

	}
	
	
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	LimitPlayerMarkerRadius(300.0);
	SetNameTagDrawDistance(30.0);
 	CreatePickups();
 	ResetElevatorQueue();
	Elevator_Initialize();
	ManualVehicleEngineAndLights();
//	InitMapIconStreaming();
 	AddPlayerClass( 1, 1958.33, 1343.12, 15.36, 269.15, 0, 0, 0, 0, 0, 0 );
 	if(Password != 0)
	{
	    new passstr[64];
	    format(passstr, sizeof(passstr), "password %d", Password);
	    SendRconCommand(passstr);
	}
	for(new p; p < 15; p++)
	{
		strmid(AdvInfo[p][Textad], "Свободное место для объявления", 0, strlen("Свободное место для объявления"), 255);
		strmid(AdvInfo[p][Owner], "none", 0, strlen("none"), 255);
	}


	Victim_EnterLS = CreatePickup(1318, 23, 460.408142,-1500.964233,31.057167,-1);
	Victim_EnterSF = CreatePickup(1318, 23, -1695.602783,950.944274,24.890625,-1);
	Victim_EnterLV = CreatePickup(1318, 23, 2802.231933,2429.896728,11.062500,-1);
	Victim_Exit = CreatePickup(1318, 23, 227.145080,-8.225682,1002.210937,-1);

	Victim_Mans = CreatePickup(1275, 23, 206.074737,-3.806688,1001.210937,-1);
	Victim_Womans = CreatePickup(1275, 23, 208.751495,-12.366640,1001.210937,-1);


	new st1[64];
	for(new i; i < sizeof(ClothesMan); i ++)
	{
	    Victim_Menu_Man[i] = CreateMenu ("Clothes", 1, 497.0, 130.0, 91.0, 0.0);

	    for(new d; d < sizeof(ClothesMan[]); d++)
	    {
	        if(ClothesMan[i][d] != 0)
	        {
		        format(st1, sizeof(st1), "Man skin %d", d);
		        AddMenuItem(Victim_Menu_Man[i], 0, st1);
			}
			else
			{
			    AddMenuItem(Victim_Menu_Man[i], 0, "Select");
			    break;
			}
		}
	}
	for(new i; i < sizeof(ClothesWoman); i ++)
	{
	    Victim_Menu_Woman[i] = CreateMenu ("Clothes", 1, 497.0, 130.0, 91.0, 0.0);

	    for(new d; d < sizeof(ClothesWoman[]); d++)
	    {
	        if(ClothesWoman[i][d] != 0)
	        {
		        format(st1, sizeof(st1), "Woman skin %d", d);
		        AddMenuItem(Victim_Menu_Woman[i], 0, st1);
			}
			else
			{
			    AddMenuItem(Victim_Menu_Woman[i], 0, "Select");
			    break;
			}
		}
	}
	
	Civilian_Man[0] = CreateMenu (" ", 1, 497.0, 130.0, 91.0, 0.0);
	AddMenuItem(Civilian_Man[0], 0, "Next >>");
	AddMenuItem(Civilian_Man[0], 0, "<< Previous");
	AddMenuItem(Civilian_Man[0], 0, "Select");

	Civilian_Man[1] = CreateMenu (" ", 1, 497.0, 130.0, 91.0, 0.0);
	AddMenuItem(Civilian_Man[1], 0, "<< Previous");
	AddMenuItem(Civilian_Man[1], 0, "Next >>");
	AddMenuItem(Civilian_Man[1], 0, "Select");

	Civilian_Woman[0] = CreateMenu (" ", 1, 497.0, 130.0, 91.0, 0.0);
	AddMenuItem(Civilian_Woman[0], 0, "Next >>");
	AddMenuItem(Civilian_Woman[0], 0, "<< Previous");
	AddMenuItem(Civilian_Woman[0], 0, "Select");

	Civilian_Woman[1] = CreateMenu (" ", 1, 497.0, 130.0, 91.0, 0.0);
	AddMenuItem(Civilian_Woman[1], 0, "<< Previous");
	AddMenuItem(Civilian_Woman[1], 0, "Next >>");
	AddMenuItem(Civilian_Woman[1], 0, "Select");


	EnterRaceReg = CreatePickup(1318, 23, -1544.135253,-441.174926,6.000000,-1);
	ExitRaceReg = CreatePickup(1318, 23, 833.902832,7.497178,1004.179687,-1);
	RegPickupRace = CreatePickup(19135, 23, 822.046569,1.812449,1004.179687, 1);
	Reg_Race_Pvp = CreatePickup(19135, 23, -1663.788330,1207.899780,7.254645, 0);
	

    PDDpickup = CreatePickup(2894, 23, -2022.351440,-116.729331,1035.171875, -1);
	autoschoolpickup = CreatePickup(1239, 23, -2026.7699,-114.7279,1035.1719, 1);

	Create3DTextLabel("Правила дорожного\nдвижения", 0x50A3DAFF, -2022.351440,-116.729331,1036.0, 10.0, 1, 2 );
	Create3DTextLabel("Сдать тест на\nполучение прав", 0x50A3DAFF, -2026.7699,-114.7279,1036.0, 10.0, 1, 2 );

	PizzaEatPickup[0] = CreatePickup(2220, 23, 	-1982.121826,484.669525,35.171875  ,-1);
	PizzaEatPickup[1] = CreatePickup(2220, 23, 	-1975.149902,475.539154,35.171875  ,-1);
	Create3DTextLabel("Пицца: 100$\nНовичкам: бесплатно",COLOR_GREEN3D,-1982.09997559,486.00000000,36.0, 20.0,0,1);//
	Create3DTextLabel("Пицца: 100$\nНовичкам: бесплатно",COLOR_GREEN3D,-1974.00000000,475.60000610,36.0, 20.0,0,1);//

	Create3DTextLabel("Женская одежда",   COLOR_CGREEN3d,   199.115661,-131.226608,1004.215197,   10.0,   4,   1);
	Create3DTextLabel("Мужская одежда",   COLOR_CGREEN3d,   202.044342,-131.167160,1004.207812,   10.0,   4,   1);
	
	Create3DTextLabel("Женская одежда",   0x50A3DAFF,   206.278686,-100.429443,1005.757812,   10.0,   1,   1);
	Create3DTextLabel("Мужская одежда",   0x50A3DAFF,   208.914505,-100.502296,1005.757812,   10.0,   1,   1);

	Create3DTextLabel("Введите /unput\nчтобы высадить преступника", COLOR_YELLOW, 1584.383911,-1634.978149,14.382812, 15.0, 0, 1);

	PickupEnterDuel = CreatePickup(1318, 23, -2221.002685,100.528114,35.320312, 0);
 	PickupExitDuel = CreatePickup(1318, 23, 316.364196,-169.340759,999.601013, 1);
 	PickupCreateDuel = CreatePickup(1313, 23, 307.110870,-159.668823,999.593750, 1);
 	Create3DTextLabel("{ffffff}_____________________________\n{FF8000}Встаньте на пикап, чтобы\nсоздать новую дуэль\n{ffffff}_____________________________",0xFF8000FF, 307.110870,-159.668823,1000.593750, 20.0, 1, 0 );

	Create3DTextLabel("{ffffff}_____________________________\n{FF8000}Встаньте на пикап, чтобы\nзарегистрироваться на ТДМ\n{ffffff}_____________________________",0xFF8000FF, 822.046569,1.812449,1005.579687, 20.0, 2, 1 );
	Enter_TDM = CreatePickup(1318, 23, 2594.222900,2790.535888,10.820312, 0);
	Reg_TDM = CreatePickup(19135, 23, 822.046569,1.812449,1004.179687, 2);

	Heart_Pickup[0] = CreatePickup(1240, 23, 2117.861083,-1985.878417,13.563137, 0);
	Heart_Pickup[1] = CreatePickup(1240, 23, -2148.764160,-241.752838,36.515625, 2);
	Heart_Pickup[2] = CreatePickup(1240, 23, -1501.953613,127.008758,17.328125, 0);
	Heart_Pickup[3] = CreatePickup(1240, 23, 286.648071,1427.702270,10.585937, 0);


	Pickup_Job_Miner = CreatePickup(1275, 23, 816.624206, 856.665161, 12.789062, 0);
	Pickup_Miner_Info = CreatePickup(1239, 23, 823.985961, 859.604858, 12.124272, 0);

	Pickup_Miner_Ware[0] = CreatePickup(19135, 23, 601.507934, 867.853881, -42.960937, 0);
	Pickup_Miner_Ware[1] = CreatePickup(19135, 23, 638.914733, 851.232971, -42.960937, 0);
	Pickup_Miner_Ware[2] = CreatePickup(19135, 23, 637.618469, 831.283142, -42.960937, 0);
	
	Create3DTextLabel("Склад с рудой", COLOR_YELLOW, 601.507934, 867.853881, -42.960937+0.5, 50.0, 0, 1);
	Create3DTextLabel("Склад с рудой", COLOR_YELLOW, 638.914733, 851.232971, -42.960937+0.5, 50.0, 0, 1);
	Create3DTextLabel("Склад с рудой", COLOR_YELLOW, 637.618469, 831.283142, -42.960937+0.5, 50.0, 0, 1);

	Create3DTextLabel("Работа в карьере", COLOR_BLUE, 816.624206, 856.665161, 12.789062+0.5, 20.0, 0, 1);
	Create3DTextLabel("Информация", COLOR_YELLOW, 823.985961, 859.604858, 12.124272+0.5, 20.0, 0, 1);


	#if defined LOCALHOST
	pickupautosalon = CreatePickup(1239, 23, 2200.914550,1392.863525,10.820312, -1);
	Create3DTextLabel("Покупка автомобиля", 0x50A3DAFF, 2200.914550,1392.863525,11.520312, 30.0, 0, 1);//
	#endif

	BusInfo[0][BusCar] = AddStaticVehicleEx(437,736.466979,-1337.072509,13.640020,180.0,CAR_COLOR,-1,15); //BUS1
	BusInfo[1][BusCar] = AddStaticVehicleEx(437,742.070129,-1337.072509,13.637059,180.0,CAR_COLOR,-1,15); //BUS2
	BusInfo[2][BusCar] = AddStaticVehicleEx(437,746.898559,-1337.072509,13.639236,180.0,CAR_COLOR,-1,15); //BUS3
	BusInfo[3][BusCar] = AddStaticVehicleEx(437,752.586730,-1337.072509,13.637690,180.0,CAR_COLOR,-1,15); //BUS4
	BusInfo[4][BusCar] = AddStaticVehicleEx(437,758.100830,-1337.072509,13.713323,180.0,CAR_COLOR,-1,15); //BUS5
	BusInfo[5][BusCar] = AddStaticVehicleEx(437,763.704162,-1337.072509,13.635672,180.0,CAR_COLOR,-1,15); //BUS6
	BusInfo[6][BusCar] = AddStaticVehicleEx(437,783.995361,-1377.718505,13.735909,0.0,CAR_COLOR,-1,15); //BUS7
	BusInfo[7][BusCar] = AddStaticVehicleEx(437,770.051391,-1337.072509,13.640411,180.0,CAR_COLOR,-1,15); //BUS8
	BusInfo[8][BusCar] = AddStaticVehicleEx(437,784.318298,-1337.072509,13.639627,180.0,CAR_COLOR,-1,15); //BUS9
	BusInfo[9][BusCar] = AddStaticVehicleEx(437,759.830505,-1377.882568,13.716531,360.0,CAR_COLOR,-1,15); //BUS10
	BusInfo[10][BusCar] = AddStaticVehicleEx(437,765.644958,-1377.587280,13.719369,0.0,CAR_COLOR,-1,15); //BUS11

    RobCarInfo[0][cMaincar] = AddStaticVehicleEx(609,2282.944335,-1819.232421,13.611872,270.724365,-1,-1,300); //robcar
    RobCarInfo[1][cMaincar] = AddStaticVehicleEx(609,-2521.933105,311.864898,27.833623,75.000976,-1,-1,300); //robcar
    RobCarInfo[2][cMaincar] = AddStaticVehicleEx(609,1643.232421,669.098022,10.891483,90.0,-1,-1,300); //robcar


	PizzaBoy[0] = AddStaticVehicleEx(448,-2331.161376,-137.548889,34.920230,325.210235,-1,-1,50); //pizza
	PizzaBoy[1] = AddStaticVehicleEx(448,-2329.760742,-137.624435,34.917922,325.773223,-1,-1,50); //pizza
	PizzaBoy[2] = AddStaticVehicleEx(448,-2328.249511,-137.491302,34.910739,329.258209,-1,-1,50); //pizza
	PizzaBoy[3] = AddStaticVehicleEx(448,-2326.434082,-137.716629,34.916671,328.936126,-1,-1,50); //pizza
	PizzaBoy[4] = AddStaticVehicleEx(448,-2324.593017,-137.437637,34.914749,327.143432,-1,-1,50); //pizza
	PizzaBoy[5] = AddStaticVehicleEx(448,-2323.376708,-137.770538,34.923377,327.040374,-1,-1,50); //pizza
	PizzaBoy[6] = AddStaticVehicleEx(448,-2321.543457,-137.478424,34.915348,323.710144,-1,-1,50); //pizza
	PizzaBoy[7] = AddStaticVehicleEx(448,-2320.127441,-137.620819,34.920852,328.509033,-1,-1,50); //pizza
	
	FishingBoat[0] = AddStaticVehicleEx(472, -415.098266, 1157.229638, 0.103672, 178.372421, -1, -1, 600); //lodka1 (Деревня)
	FishingBoat[1] = AddStaticVehicleEx(472, -419.001251, 1157.229638, 0.076696, 178.372421, -1, -1, 600); //lodka2 (Деревня)
	FishingBoat[2] = AddStaticVehicleEx(472, -423.473510, 1157.229638, 0.009159, 178.372421, -1, -1, 600); //lodka3 (Деревня)
	FishingBoat[3] = AddStaticVehicleEx(472, -416.811767, 1170.119384, 0.137556, 357.352569, -1, -1, 600); //lodka4 (Деревня)
	FishingBoat[4] = AddStaticVehicleEx(472, -420.390869, 1170.119384, 0.106654, 357.352569, -1, -1, 600); //lodka5 (Деревня)
	FishingBoat[5] = AddStaticVehicleEx(472, -1480.22265, 1095.341674, 0.388071, 358.903076, -1, -1, 600); //lodka2_1 (СФ)
	FishingBoat[6] = AddStaticVehicleEx(472, -1473.81274, 1095.341674, 0.079169, 358.903076, -1, -1, 600); //lodka2_2 (СФ)
	FishingBoat[7] = AddStaticVehicleEx(472, -1467.46801, 1095.341674, 0.290916, 358.903076, -1, -1, 600); //lodka2_3 (СФ)
	FishingBoat[8] = AddStaticVehicleEx(472, -1460.58264, 1095.341674, 0.240010, 358.903076, -1, -1, 600); //lodka2_4 (СФ)
	FishingBoat[9] = AddStaticVehicleEx(472, -1452.99511, 1087.037109, 0.114265, 273.706726, -1, -1, 600); //lodka2_5 (СФ)

//==========================================
	CleanerCar[0] = AddStaticVehicleEx(574, 1596.678833, -1556.396240, 13.313874, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц ЛС
	CleanerCar[1] = AddStaticVehicleEx(574, 1600.155517, -1556.396240, 13.314014, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц ЛС
	CleanerCar[2] = AddStaticVehicleEx(574, 1606.608642, -1556.396240, 13.305611, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц ЛС
	CleanerCar[3] = AddStaticVehicleEx(574, 1610.009399, -1556.396240, 13.302651, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц ЛС
	CleanerCar[4] = AddStaticVehicleEx(574, 1617.244018, -1556.396240, 13.304126, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц ЛС
	CleanerCar[5] = AddStaticVehicleEx(574, 1620.223632, -1556.396240, 13.303104, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц ЛС

	CleanerCar[6] = AddStaticVehicleEx(574, -2067.967041, 9.666419, 35.046333, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц СФ
	CleanerCar[7] = AddStaticVehicleEx(574, -2064.723144, 9.666419, 35.046081, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц СФ
	CleanerCar[8] = AddStaticVehicleEx(574, -2061.175048, 9.666419, 35.045925, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц СФ
	CleanerCar[9] = AddStaticVehicleEx(574, -2057.319580, 9.666419, 35.050186, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц СФ
	CleanerCar[10] = AddStaticVehicleEx(574, -2051.093994, 9.666419, 35.054080, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц СФ
	CleanerCar[11] = AddStaticVehicleEx(574, -2047.645996, 9.666419, 35.051956, 0.0, CAR_COLOR, CAR_COLOR, 15); // Уборщик улиц СФ

	pickupcleaner[0] = CreatePickup(1275, 23, 	1625.378295,-1551.844604,13.671560  ,-1); // LS
	pickupcleaner[1] = CreatePickup(1275, 23, 	-2071.031738,8.346884,35.320312  ,-1); // SF

	Create3DTextLabel("Уборщик улиц" , 0x50A3DAFF, 1625.378295,-1551.82,14.2, 10.0, 0, 2 ); // LS
	Create3DTextLabel("Уборщик улиц" , 0x50A3DAFF, -2071.031738,8.32,36.0, 10.0, 0, 2 ); // SF

///========================================
	Taxi[0] = AddStaticVehicleEx(420,-2166.865722,306.044158,34.897926,180.0,-1,-1,15); //Tax1
	Taxi[1] = AddStaticVehicleEx(420,-2171.411376,306.044158,34.925289,180.0,-1,-1,15); //Tax2
	Taxi[2] = AddStaticVehicleEx(420,-2175.840332,306.044158,34.924724,180.0,-1,-1,15); //Tax3
	Taxi[3] = AddStaticVehicleEx(420,-2179.774658,306.044158,34.924335,180.0,-1,-1,15); //Tax4
	Taxi[4] = AddStaticVehicleEx(420,-2184.312988,306.044158,34.924221,180.0,-1,-1,15); //Tax5
	Taxi[5] = AddStaticVehicleEx(420,-2213.933105,306.044158,34.925178,180.0,-1,-1,15); //Tax6
	Taxi[6] = AddStaticVehicleEx(438,-2218.317138,306.044158,34.926456,180.0,-1,-1,15); //Tax7
	Taxi[7] = AddStaticVehicleEx(438,-2222.429443,306.044158,34.923301,180.0,-1,-1,15); //Tax8
	Taxi[8] = AddStaticVehicleEx(438,-2226.951171,306.044158,34.927589,180.0,-1,-1,15); //Tax9
	Taxi[9] = AddStaticVehicleEx(438,-2231.388427,306.044158,34.925903,180.0,-1,-1,15); //Tax10
	Taxi[10] = AddStaticVehicleEx(438,-2235.787109,306.044158,34.925617,180.0,-1,-1,15); //Tax11
	
	for(new i; i < sizeof(Taxi); i++)
	{
	    UnSerfCar[Taxi[i]] = 1;
	}

// =================== Завод =====================

	pickupzagotovki[0] = CreatePickup(19135, 23, 	-2162.293212,-264.343170,36.515625  ,2);
	pickupzagotovki[1] = CreatePickup(19135, 23, 	-2158.738037,-264.343170,36.515625  ,2);
	pickupzagotovki[2] = CreatePickup(19135, 23, 	-2155.349609,-264.343170,36.515625  ,2);

	pickupstoliL[0] = CreatePickup(18635, 2, 	-2174.182128,-248.983276,36.3  ,2); // 360
	pickupstoliL[1] = CreatePickup(18635, 2, 	-2170.450927,-248.983276,36.3  ,2);
	pickupstoliL[2] = CreatePickup(18635, 2, 	-2166.947509,-248.983276,36.3  ,2);
	pickupstoliL[3] = CreatePickup(18635, 2, 	-2163.318847,-248.983276,36.3  ,2);
	pickupstoliL[4] = CreatePickup(18635, 2, 	-2159.955810,-248.983276,36.3  ,2);
	pickupstoliL[5] = CreatePickup(18635, 2, 	-2156.528808,-248.983276,36.3  ,2);

	pickupstoliR[0] = CreatePickup(18635, 2, 	-2158.022460,-247.075942,36.3  ,2); // 180
	pickupstoliR[1] = CreatePickup(18635, 2, 	-2161.536376,-247.075942,36.3  ,2);
	pickupstoliR[2] = CreatePickup(18635, 2, 	-2164.691894,-247.075942,36.3  ,2);
	pickupstoliR[3] = CreatePickup(18635, 2, 	-2168.442382,-247.075942,36.3  ,2);
	pickupstoliR[4] = CreatePickup(18635, 2, 	-2172.122802,-247.075942,36.3  ,2);
	pickupstoliR[5] = CreatePickup(18635, 2, 	-2175.643554,-247.075942,36.3  ,2);

	sdatzagotovku = CreatePickup(1575, 23, 	-2139.908203,-248.135147,36.515625 ,2);
	pickupJOBzavod = CreatePickup(1275, 23, -2152.404052,-224.080978,35.320312 ,-1);
	pickupJOBrazvoz = CreatePickup(1275, 23, -2136.446289,-143.264678,35.320312 ,-1);
	pickupzavodINFO = CreatePickup(1239, 23, -2120.248046,-78.747421,35.320312 ,-1);

	pickupEnterFact = CreatePickup(1318, 23, -2162.910644,-224.511322,36.515625,-1);
	pickupExitFact = CreatePickup(1318, 23, -2162.746337,-226.926620,36.515625, 2);



	CreateObject(17951,-2180.50000000,-209.50000000,37.29999924,0.00000000,0.00000000,0.00000000); // Ворота [Завод]
	CreateObject(1567,-2163.60009766,-225.50000000,35.50000000,0.00000000,0.00000000,0.00000000); // Дверь [Завод]
	CreateObject(966,-2124.00000000,-81.09999847,34.29999924,0.00000000,0.00000000,0.00000000);  // Стойка шлагбаума [Завод]
	slagbfactory = CreateObject(968,-2124.00000000,-81.09999847,35.20000076,0.00000000,269.24975586,0.00000000); // Шлагбаум [Завод]

	prods3d = Create3DTextLabel("На складе завода:\n** кг. продуктов",COLOR_YELLOW, -2139.908203,-248.135147,39.000, 40.0, 2, 1);
	Create3DTextLabel("Завод по производству\nпродуктов",COLOR_YELLOW, -2120.248046,-78.747421,36.320312, 20.0,0,1);
	
	Create3DTextLabel("Устроиться работать\nна завод", 0x50A3DAFF, -2152.404052,-224.080978,36.2000 ,20.0,0,1);
	Create3DTextLabel("Устроиться работать\nразвозчиком продуктов", 0x50A3DAFF, -2136.446289,-143.264678,36.1000 ,20.0,0,1);
	Create3DTextLabel("Производственный цех", COLOR_GREY, -2162.910644,-224.511322,37.55, 20.0, 0, 1);
	
	buyprod = Create3DTextLabel("Продуктов на складе: **\nЗакупка: /buyprods\nПродажа: /sellprods",COLOR_YELLOW, -2179.452148,-209.451339,38.0000, 40.0,0, 1);

	Materials_Get = CreatePickup(1239, 23, 597.1277, -1248.6479, 18.2734, 0);
	Materials_Deliver = CreatePickup(1239, 23, 1708.9837, 757.6990, 10.8203, 0);
    Create3DTextLabel("Закупка материалов",COLOR_YELLOW, 597.1277,-1248.6479,19.000, 20.0,0,1);
// ======================


/* ======================= Квесты =========================================== */
	PickupPhoneQuest[0] = CreatePickup(19135, 23, -1967.312744,162.018173,27.687500, 0);
	PickupPhoneQuest[1] = CreatePickup(19135, 23, 339.657135,-1398.872558,14.389949, 0);
/* ========================================================================== */


// ===== Нефтезавод ====

	LoadCar[0][gMaincar] = AddStaticVehicleEx(530, 269.913146,1466.852783,10.347498, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[1][gMaincar] = AddStaticVehicleEx(530, 272.313293,1466.852783,10.351826, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[2][gMaincar] = AddStaticVehicleEx(530, 274.233306,1466.852783,10.348695, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[3][gMaincar] = AddStaticVehicleEx(530, 276.221466,1466.852783,10.350308, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[4][gMaincar] = AddStaticVehicleEx(530, 278.298370,1466.852783,10.346630, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[5][gMaincar] = AddStaticVehicleEx(530, 280.242736,1466.852783,10.360690, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[6][gMaincar] = AddStaticVehicleEx(530, 282.131683,1466.852783,10.350777, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[7][gMaincar] = AddStaticVehicleEx(530, 283.767669,1466.852783,10.348425, 180.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[8][gMaincar] = AddStaticVehicleEx(530, 261.7, 1451.683471, 10.347978, 270.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[9][gMaincar] = AddStaticVehicleEx(530, 261.7, 1453.369018, 10.350154, 270.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[10][gMaincar] = AddStaticVehicleEx(530, 261.7, 1455.152954, 10.349416, 270.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[11][gMaincar] = AddStaticVehicleEx(530, 261.7, 1456.820190, 10.348459, 270.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[12][gMaincar] = AddStaticVehicleEx(530, 261.7, 1458.452026, 10.347743, 270.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[13][gMaincar] = AddStaticVehicleEx(530, 261.7, 1460.082763, 10.348432, 270.0, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе
	LoadCar[14][gMaincar] = AddStaticVehicleEx(530, 255.0, 1449.011108, 10.349686, 267.8, CAR_COLOR, CAR_COLOR, 10); // Погрузщик на нефтезаводе

	OilTruck[0] = AddStaticVehicleEx(514, 283.260894, 1372.991088, 11.170659, 90.0, CAR_COLOR, CAR_COLOR, 10); // Тягач на нефтезаводе
	OilTruck[1] = AddStaticVehicleEx(514, 283.260894, 1377.690673, 11.178864, 90.0, CAR_COLOR, CAR_COLOR, 10); // Тягач на нефтезаводе
	OilTruck[2] = AddStaticVehicleEx(514, 283.260894, 1382.265747, 11.172480, 90.0, CAR_COLOR, CAR_COLOR, 10); // Тягач на нефтезаводе
	OilTruck[3] = AddStaticVehicleEx(514, 283.260894, 1386.796508, 11.171167, 90.0, CAR_COLOR, CAR_COLOR, 10); // Тягач на нефтезаводе
	OilTruck[4] = AddStaticVehicleEx(514, 283.260894, 1392.012939, 11.169194, 90.0, CAR_COLOR, CAR_COLOR, 10); // Тягач на нефтезаводе
	OilTruck[5] = AddStaticVehicleEx(514, 283.260894, 1396.884277, 11.174497, 90.0, CAR_COLOR, CAR_COLOR, 10); // Тягач на нефтезаводе

	OilTank[0][gMailcar] = AddStaticVehicleEx(584, 283.562347, 1348.525878, 11.792483, 90.0,1,1, 40); //cisterna1
	OilTank[1][gMailcar] = AddStaticVehicleEx(584, 283.562347, 1353.163818, 11.742284, 90.0,1,1, 40); //cisterna2
	OilTank[2][gMailcar] = AddStaticVehicleEx(584, 283.562347, 1357.783325, 11.753964, 90.0,1,1, 40); //cisterna3
	OilTank[3][gMailcar] = AddStaticVehicleEx(584, 283.562347, 1361.733032, 11.778475, 90.0,1,1, 40); //cisterna4
	OilTank[4][gMailcar] = AddStaticVehicleEx(584, 283.562347, 1365.445434, 11.734947, 90.0,1,1, 40); //cisterna5
	OilTank[5][gMailcar] = AddStaticVehicleEx(584, 283.562347, 1343.626953, 11.785291, 90.0,1,1, 40); //cisterna6

	OilTank[0][gOilText] = Create3DTextLabel("[Нефть]\n0 / 1000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	OilTank[1][gOilText] = Create3DTextLabel("[Нефть]\n0 / 1000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	OilTank[2][gOilText] = Create3DTextLabel("[Нефть]\n0 / 1000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	OilTank[3][gOilText] = Create3DTextLabel("[Нефть]\n0 / 1000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	OilTank[4][gOilText] = Create3DTextLabel("[Нефть]\n0 / 1000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	OilTank[5][gOilText] = Create3DTextLabel("[Нефть]\n0 / 1000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );

	Attach3DTextLabelToVehicle(OilTank[0][gOilText], OilTank[0][gMailcar], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(OilTank[1][gOilText], OilTank[1][gMailcar], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(OilTank[2][gOilText], OilTank[2][gMailcar], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(OilTank[3][gOilText], OilTank[3][gMailcar], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(OilTank[4][gOilText], OilTank[4][gMailcar], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(OilTank[5][gOilText], OilTank[5][gMailcar], 0.0, 0.0, 1.8);
	
	
	
	pickupbuyoil = CreatePickup(19135, 14, 301.302001,1377.684570,9.706792, -1);
	
	pickupinfooil = CreatePickup(1239, 23, 337.029235, 1397.828247, 6.809699, -1);
	Create3DTextLabel("Завод по добыче\nнефти",COLOR_YELLOW, 337.029235, 1397.828247, 7.609699, 40.0, 0, 1);

	pickupoiljob = CreatePickup(1275, 23, 286.568023,1423.140869,10.585937 ,-1);
	Create3DTextLabel("Устроиться работать\nна завод грузчиком",0x50A3DAFF, 286.568023, 1423.140869, 11.385937 ,20.0,0,1);

	pickupdrivertruck = CreatePickup(1275, 23, 286.568023, 1399.114746, 10.585937 ,-1);
	Create3DTextLabel("Устроиться работать\nна завод водителем",0x50A3DAFF, 286.568023, 1399.114746, 11.385937 ,20.0,0,1);

	buyoil = Create3DTextLabel("[Закупка нефти]\n\nЗакупка нефти: -\nПродажа нефти: -\nНефть в цистернах: -\nБензозавод: - / -",0xFFFF00FF, 301.302001,1377.684570,12.506792, 40.0,0, 1);

// =============
	GlassMenu = CreateMenu ( " ", 1, 497.0, 130.0, 91.0, 0.0);
	AddMenuItem(GlassMenu, 0, "Glasses 01 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 02 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 03 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 04 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 05 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 06 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 07 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 08 (200$)");
	AddMenuItem(GlassMenu, 0, "Glasses 09 (500$)");
	AddMenuItem(GlassMenu, 0, "Glasses 10 (500$)");
	AddMenuItem(GlassMenu, 0, "Glasses 11 (500$)");
	AddMenuItem(GlassMenu, 0, "Select");

 	EnterGlassShop = CreatePickup(1318, 23, -2243.071533,146.074462,35.320312, 0);
	ExitGlassShop = CreatePickup(1318, 23, 203.748123,-50.236076,1001.804687, -1);
	GlassPickup = CreatePickup(19135, 23, 203.749893,-43.407138,1001.804687, 1);
	
	
	CapsMenu = CreateMenu ( " ", 1, 497.0, 130.0, 91.0, 0.0);
	AddMenuItem(CapsMenu, 0, "Cap 01 (200$)");
	AddMenuItem(CapsMenu, 0, "Cap 02 (200$)");
	AddMenuItem(CapsMenu, 0, "Cap 03 (400$)");
	AddMenuItem(CapsMenu, 0, "Cap 04 (400$)");
	AddMenuItem(CapsMenu, 0, "Cap 05 (500$)");
	AddMenuItem(CapsMenu, 0, "Cap 06 (600$)");
	AddMenuItem(CapsMenu, 0, "Cap 07 (600$)");
	AddMenuItem(CapsMenu, 0, "Cap 08 (800$)");
	AddMenuItem(CapsMenu, 0, "Cap 09 (800$)");
	AddMenuItem(CapsMenu, 0, "Cap 10 (1000$)");
	AddMenuItem(CapsMenu, 0, "Cap 11 (1000$)");
	AddMenuItem(CapsMenu, 0, "Select");
	
	
 	EnterCapsShop = CreatePickup(1318, 23, -2242.780273,122.895606,35.320312, 0);
 	CapsPickup = CreatePickup(19135, 23, 203.749893,-43.407138,1001.804687, 2);


	PizzaBoyPickup = CreatePickup(1275, 23, -2323.514648, -158.067062, 35.554687, -1);
	Create3DTextLabel("> Развозщик пиццы <",COLOR_GREEN, -2323.514648, -158.067062, 36.20000, 15.0,0,1);
	
	EnterPaint = CreatePickup(1318, 23, 386.913482,-1897.160766,7.835937,-1);
	ExitPaint = CreatePickup(1318, 23, -2170.317871,636.204589,1052.375000,-1);
	RegPaint = CreatePickup(1313, 23, -2159.090576,640.590576,1052.381713,-1);
 	Create3DTextLabel("{ffffff}_____________________________\n{FF8000}Встаньте на пикап, чтобы\nзарегистрироваться на пейнтболл\n{ffffff}_____________________________",0xFF8000FF, -2159.090576,640.590576,1053.500, 20.0, 1, 0 );

// ==== Рыбалка
	Create3DTextLabel("{ffffff}_____________________________\n{FF8000}Рыбалка:\nАренда лодок и снастей\n{ffffff}_____________________________",0xFF8000FF, -390.029815, 1173.968994, 18.317433, 20.0, 0,1 );
	Create3DTextLabel("{ffffff}_____________________________\n{FF8000}Рыбалка:\nАренда лодок и снастей\n{ffffff}_____________________________",0xFF8000FF, -1486.226196, 1081.476318, 8.487500, 20.0, 0,1 );
	FishingPickup[0] = CreatePickup(1239, 23, 	-390.029815, 1173.968994, 17.017433  ,-1);
	FishingPickup[1] = CreatePickup(1239, 23, 	-1486.226196, 1081.476318, 7.187500  ,-1);

	SellFishPickup = CreatePickup(1274, 23, 	372.758300,-65.154464,1001.507812  ,-1);
// ----- Рыбалка конец


    pickupHallJobs = CreatePickup(2894, 23, 361.993743,173.619079,1008.382812, 7);
	Create3DTextLabel("Устройство на работу", 0x50A3DAFF, 361.993743, 173.619079, 1009.1, 30.0, 7, 2 );

// Система заправок ============================================================
	FuelTruckerPickup = CreatePickup(1275, 23, 	-1024.114013,-687.062866,32.007812  ,-1);
	Create3DTextLabel("Устроиться водителем\nбензовоза" , 0x50A3DAFF, -1024.114013,-687.062866,32.807812, 10.0, 0, 2 );

	BenzCar[0][Truck] = AddStaticVehicleEx(514,-1008.136291, -653.598266,32.597740,90.0,3,-1, 50); //benzovoz1
	BenzCar[1][Truck] = AddStaticVehicleEx(514,-1008.136291, -658.737976,32.594337,90.0,1,-1, 50); //benzovoz1
	BenzCar[2][Truck] = AddStaticVehicleEx(514,-1008.136291, -663.824218,32.594940,90.0,3,-1, 50); //benzovoz1
	BenzCar[3][Truck] = AddStaticVehicleEx(514,-1008.136291, -668.842163,32.596855,90.0,1,-1, 50); //benzovoz1
	BenzCar[4][Truck] = AddStaticVehicleEx(514,-1008.136291, -673.874328,32.594539,90.0,3,-1, 50); //benzovoz1
	BenzCar[5][Truck] = AddStaticVehicleEx(514,-1008.136291, -679.020385,32.593761,90.0,1,-1, 50); //benzovoz1
	BenzCar[6][Truck] = AddStaticVehicleEx(514,-1008.136291, -684.127258,32.595962,90.0,3,-1, 50); //benzovoz1

	BenzCar[0][Trailer] = AddStaticVehicleEx(584,-984.563720,-653.549255,33.150794,90.0,-1,-1, 50);
	BenzCar[1][Trailer] = AddStaticVehicleEx(584,-984.563720,-658.777221,33.180629,90.0,-1,-1, 50);
	BenzCar[2][Trailer] = AddStaticVehicleEx(584,-984.563720,-663.724487,33.206428,90.0,-1,-1, 50);
	BenzCar[3][Trailer] = AddStaticVehicleEx(584,-984.563720,-668.879760,33.191158,90.0,-1,-1, 50);
	BenzCar[4][Trailer] = AddStaticVehicleEx(584,-984.563720,-673.844360,33.164993,90.0,-1,-1, 50);
	BenzCar[5][Trailer] = AddStaticVehicleEx(584,-984.563720,-678.989379,33.172008,90.0,-1,-1, 50);
	BenzCar[6][Trailer] = AddStaticVehicleEx(584,-984.563720,-684.135009,33.149688,90.0,-1,-1, 50);


	BenzCar[0][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	BenzCar[1][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	BenzCar[2][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	BenzCar[3][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	BenzCar[4][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	BenzCar[5][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );
	BenzCar[6][BenfInfo] = Create3DTextLabel("[Бензин]\n0 / 2000" , 0xFFFF00FF, 0.0, 0.0, 0.0, 20.0, 0, 2 );

	Attach3DTextLabelToVehicle(BenzCar[0][BenfInfo], BenzCar[0][Trailer], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(BenzCar[1][BenfInfo], BenzCar[1][Trailer], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(BenzCar[2][BenfInfo], BenzCar[2][Trailer], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(BenzCar[3][BenfInfo], BenzCar[3][Trailer], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(BenzCar[4][BenfInfo], BenzCar[4][Trailer], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(BenzCar[5][BenfInfo], BenzCar[5][Trailer], 0.0, 0.0, 1.8);
	Attach3DTextLabelToVehicle(BenzCar[6][BenfInfo], BenzCar[6][Trailer], 0.0, 0.0, 1.8);
// =============================================================================

//******************************************************************************
// ================================= ОБЪЕКТЫ ===================================
	if(action_holiday == 1) // Ёлка на НГ
	{
		CreateObject(19076,836.12701416,-2054.70092773,11.86699963,0.00000000,0.00000000,190.00000000); //object(xmastree1) (1)
		CreateObject(19054,836.81298828,-2055.18896484,12.52000046,0.00000000,0.00000000,50.00000000); //object(xmasbox1) (1)
		CreateObject(19058,835.20898438,-2054.74804688,12.52299976,0.00000000,0.00000000,12.00000000); //object(xmasbox5) (1)
		CreateObject(19055,835.83001709,-2053.46191406,12.52299976,0.00000000,0.00000000,58.00000000); //object(xmasbox2) (1)
		CreateObject(19056,837.16900635,-2054.00610352,12.52299976,0.00000000,0.00000000,308.00000000); //object(xmasbox3) (1)
		CreateObject(19057,835.55603027,-2055.70703125,12.52299976,0.00000000,0.00000000,36.00000000); //object(xmasbox4) (1)
		CreateObject(19065,834.91699219,-2056.08398438,19.61800003,0.00000000,0.00000000,330.00000000); //object(santahat2) (1)
		CreateObject(19129,836.31597900,-2055.06909180,11.82999992,0.00000000,0.00000000,0.00000000); //object(dancefloor2) (2)
		CreateObject(983,826.25299072,-2048.15209961,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (34)
		CreateObject(983,826.25897217,-2054.53393555,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (35)
		CreateObject(983,826.27197266,-2060.94995117,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (36)
		CreateObject(983,826.27099609,-2061.92700195,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (37)
		CreateObject(983,846.35900879,-2048.16699219,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (38)
		CreateObject(983,846.35998535,-2054.57006836,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (39)
		CreateObject(983,846.37402344,-2060.99194336,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (40)
		CreateObject(983,846.37097168,-2061.96801758,12.55099964,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (41)
		CreateObject(983,829.44396973,-2065.12109375,12.55099964,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (42)
		CreateObject(983,835.84100342,-2065.11889648,12.55099964,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (45)
		CreateObject(983,842.24499512,-2065.11401367,12.55099964,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (43)
		CreateObject(983,843.21600342,-2065.11596680,12.55099964,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (44)
		CreateObject(983,843.17102051,-2044.99902344,12.55099964,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (46)
		CreateObject(983,829.45001221,-2044.96496582,12.55099964,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (47)
		CreateObject(19320,837.30603027,-2052.75805664,15.71700001,0.00000000,0.00000000,0.00000000); //object(pumpkin01) (1)
		CreateObject(18654,839.98400879,-2044.99304199,11.86699963,0.00000000,0.00000000,0.00000000); //object(discolightgreen) (1)
		CreateObject(18654,832.63397217,-2044.98095703,11.86699963,0.00000000,0.00000000,182.25000000); //object(discolightgreen) (2)
		CreateObject(18654,826.27301025,-2044.97595215,11.86699963,0.00000000,0.00000000,120.00000000); //object(discolightgreen) (3)
		CreateObject(18654,846.34399414,-2044.97399902,11.86699963,0.00000000,0.00000000,56.00000000); //object(discolightgreen) (4)
		CreateObject(18655,846.39398193,-2065.17895508,11.86699963,0.00000000,0.00000000,299.75000000); //object(discolightblue) (1)
		CreateObject(18653,826.25799561,-2065.13696289,11.86699963,0.00000000,0.00000000,222.00000000); //object(discolightred) (1)
		CreateObject(19178,835.56250000,-2053.21289062,12.89065552,0.00000000,0.00000000,0.00000000); //object(mapmarkernew2) (1)
		CreateObject(19279,845.44201660,-2044.70996094,12.11100006,0.00000000,0.00000000,0.00000000); //object(lcsmalllight1) (1)
		CreateObject(19279,840.98101807,-2044.64904785,12.11100006,0.00000000,0.00000000,0.00000000); //object(lcsmalllight1) (2)
		CreateObject(19279,831.83099365,-2044.68994141,12.11100006,0.00000000,0.00000000,0.00000000); //object(lcsmalllight1) (3)
		CreateObject(19279,827.19097900,-2044.67102051,12.11100006,0.00000000,0.00000000,0.00000000); //object(lcsmalllight1) (4)
		CreateObject(19279,825.89501953,-2045.74401855,12.11100006,0.00000000,0.00000000,90.00000000); //object(lcsmalllight1) (5)
		CreateObject(19279,826.11700439,-2055.32910156,12.11100006,0.00000000,0.00000000,90.00000000); //object(lcsmalllight1) (7)
		CreateObject(19279,825.92602539,-2064.52490234,12.11100006,0.00000000,0.00000000,90.00000000); //object(lcsmalllight1) (9)
		CreateObject(19279,846.58398438,-2045.78894043,12.11100006,0.00000000,0.00000000,270.00000000); //object(lcsmalllight1) (10)
		CreateObject(19279,846.58599854,-2055.40991211,12.11100006,0.00000000,0.00000000,270.00000000); //object(lcsmalllight1) (12)
		CreateObject(19279,846.77301025,-2064.57006836,12.11100006,0.00000000,0.00000000,270.00000000); //object(lcsmalllight1) (14)
		CreateObject(19279,845.76898193,-2065.49096680,12.11100006,0.00000000,0.00000000,180.00000000); //object(lcsmalllight1) (15)
		CreateObject(19279,836.82000732,-2065.42407227,12.11100006,0.00000000,0.00000000,179.99450684); //object(lcsmalllight1) (17)
		CreateObject(19279,827.05499268,-2065.39599609,12.11100006,0.00000000,0.00000000,179.99450684); //object(lcsmalllight1) (19)
		CreateObject(19054,836.63702393,-2056.50903320,12.55300045,0.00000000,0.00000000,349.99877930); //object(xmasbox1) (3)
		CreateObject(19056,837.82000732,-2056.00903320,12.55700016,0.00000000,0.00000000,303.99621582); //object(xmasbox3) (2)
		CreateObject(19058,838.13397217,-2054.87695312,12.55700016,0.00000000,0.00000000,313.99707031); //object(xmasbox5) (2)
		CreateObject(18875,835.73297119,-2052.90893555,13.03600025,0.00000000,0.00000000,210.00000000); //object(pager1) (1)
		CreateObject(18873,837.33801270,-2053.55004883,13.01599979,0.00000000,0.00000000,260.00000000); //object(mobilephone9) (1)
		CreateObject(18870,838.28900146,-2056.22705078,13.05399990,0.00000000,0.00000000,0.00000000); //object(mobilephone6) (1)
		CreateObject(18963,836.25799561,-2054.63793945,23.51199913,0.00000000,0.00000000,96.00000000); //object(cjelvishead) (1)
		CreateObject(18963,836.26898193,-2054.90600586,23.49799919,0.00000000,0.00000000,273.99853516); //object(cjelvishead) (2)
		CreateObject(18963,834.10601807,-2052.96093750,13.50000000,0.00000000,357.25000000,111.75000000); //object(cjelvishead) (3)
		CreateObject(18749,836.26202393,-2054.63793945,23.27599907,0.00000000,0.00000000,188.00000000); //object(samplogosmall) (1)
		CreateObject(18749,836.25799561,-2054.90795898,23.26099968,0.00000000,0.00000000,6.99804688); //object(samplogosmall) (2)
		CreateObject(18749,833.64898682,-2054.47802734,13.61499977,0.00000000,0.00000000,196.24278259); //object(samplogosmall) (3)
		CreateObject(19159,835.65997314,-2052.05688477,13.68099976,0.00000000,0.00000000,0.00000000); //object(mirrorball1) (1)
		CreateObject(18693,833.81298828,-2052.66601562,12.64999962,0.00000000,0.00000000,0.00000000); //object(flame99) (1)
		CreateObject(18693,833.39599609,-2054.61889648,12.47500038,0.00000000,0.00000000,0.00000000); //object(flame99) (2)
		CreateObject(18693,834.44396973,-2056.57202148,12.67500019,0.00000000,0.00000000,0.00000000); //object(flame99) (3)
		CreateObject(18693,836.85900879,-2057.48608398,12.92500019,0.00000000,0.00000000,0.00000000); //object(flame99) (4)
		CreateObject(18693,838.78302002,-2055.48999023,12.80000019,0.00000000,0.00000000,0.00000000); //object(flame99) (5)
		CreateObject(18693,837.74597168,-2052.15209961,12.57499981,0.00000000,0.00000000,0.00000000); //object(flame99) (6)
		CreateObject(19424,834.79498291,-2054.50390625,13.02299976,0.00000000,0.00000000,0.00000000); //object(headphones04) (1)
		CreateObject(19341,838.65502930,-2055.83007812,12.33899975,0.00000000,0.00000000,0.00000000); //object(easter_egg01) (1)
		CreateObject(1946,836.92901611,-2053.03588867,12.10599995,0.00000000,0.00000000,0.00000000); //object(baskt_ball_hi) (1)
		CreateObject(1946,834.97601318,-2053.93310547,12.10599995,0.00000000,0.00000000,0.00000000); //object(baskt_ball_hi) (2)
		CreateObject(18863,835.42700195,-2053.73095703,52.84999847,0.00000000,269.00000000,359.00000000); //object(snowarc1) (11)
		
		CreateObject(19076, 1479.450195, -1707.642700, 9.046875, 0.00000000, 0.00000000,190.00000000);
		CreateObject(19076, -2047.364746, -94.933952, 30.171798, 0.00000000, 0.00000000,190.00000000);
		CreateObject(19076, -1991.945678, 84.413459, 22.679862, 0.00000000, 0.00000000,190.00000000);
		CreateObject(19076, -2042.422851, 479.764770, 30.172294, 0.00000000, 0.00000000,190.00000000);
		CreateObject(19076, -2126.105224, -137.937454, 30.320312, 0.00000000, 0.00000000,190.00000000);
	}



	CreateObject(14623,-211.70410156,1113.45117188,9.29113197,0.00000000,0.00000000,0.00000000); // церковь
	CreateObject(13651,-198.47656250,1031.11035156,-5.03044033,0.00000000,0.00000000,178.59924316); // церковь
	CreateObject(2946,-215.21981812,1151.62805176,7.95660210,0.00000000,0.00000000,271.87536621); // церковь
	CreateObject(2946,-212.03433228,1151.71008301,7.95865917,0.00000000,0.00000000,92.14736938); //  церковь
	CreateObject(2946,-213.64477539,1151.74670410,8.09270096,270.67492676,0.00000000,270.12316895); // церковь(20)
	CreateObject(2946,-215.83665466,1151.74414062,8.08621979,270.67016602,0.00000000,270.12084961); // церковь(21)
	CreateObject(870,-206.09185791,1117.97644043,3.99283862,0.00000000,0.00000000,246.40527344); // церковь(22)
	CreateObject(870,-204.87036133,1115.73376465,3.98637891,0.00000000,0.00000000,232.50646973); // церковь(23)
	CreateObject(870,-204.52523804,1113.25012207,3.98637891,0.00000000,0.00000000,216.62377930); // церковь(24)
	CreateObject(870,-217.70678711,1117.57275391,3.98637891,0.00000000,0.00000000,354.08251953); // церковь(25)
	CreateObject(870,-218.67811584,1114.95520020,3.98637891,0.00000000,0.00000000,9.95825195); // церковь(26)
	CreateObject(870,-218.70901489,1112.57543945,3.98637891,0.00000000,0.00000000,25.83349609); // церковь(27)
	CreateObject(3810,-222.03868103,1117.24414062,6.05857801,0.00000000,0.00000000,0.00000000); // церковь(28)
	CreateObject(3810,-222.11566162,1110.21899414,6.08357811,0.00000000,0.00000000,21.83483887); // церковь(29)
	CreateObject(3810,-218.23899841,1104.83142090,6.05857801,0.00000000,0.00000000,57.55966187); // церковь(30)
	CreateObject(3810,-205.25390625,1104.60742188,6.05857801,0.00000000,0.00000000,125.79626465); // церковь(31)
	CreateObject(3810,-201.17675781,1110.12524414,6.05857801,0.00000000,0.00000000,159.29113770); // церковь(32)
	CreateObject(3810,-201.24804688,1116.94531250,6.05857801,0.00000000,0.00000000,196.46301270); // церковь(33)
	CreateObject(2435,-211.65214539,1108.31591797,3.74425697,0.00000000,0.00000000,182.61523438); // церковь(34)
	CreateObject(2434,-210.53515625,1108.19921875,3.74425697,0.00000000,0.00000000,92.37304688); // церковь(35)
	CreateObject(2434,-212.55850220,1108.27453613,3.74425697,0.00000000,0.00000000,183.24536133); // церковь(36)
	CreateObject(2855,-210.68981934,1108.20690918,4.72482538,0.00000000,0.00000000,330.22521973); // церковь(37)
	CreateObject(3058,-213.47373962,1151.81372070,7.55292988,0.00000000,0.00000000,28.00000000); // церковь(storm_drain_cover) (1)
	CreateObject(4182,-212.05174255,1149.80078125,7.23605919,0.00000000,164.00000000,90.00000000); // церковь(roads22_lan) (1)
	CreateObject(18024,2249.90966797,2388.99511719,5.80741692,0.00000000,0.00000000,356.00000000); // Интерьер магазины шляп
	CreateObject(3037,2259.66918945,2387.18994141,5.07623386,0.00000000,0.00000000,356.00000000); // Интерьер магазины шляп
	CreateObject(3029,2257.49584961,2389.69506836,2.87772942,0.00000000,0.00000000,266.00000000); // Интерьер магазины шляп
	CreateObject(3029,2257.21777344,2386.02001953,2.87772942,0.00000000,0.00000000,265.99548340); // Интерьер магазины шляп
	CreateObject(1371,2240.63867188,2393.29296875,3.44224215,0.00000000,0.00000000,44.00000000); // Интерьер магазины шляп
	CreateObject(1371,2246.28759766,2397.55175781,3.44224215,0.00000000,0.00000000,41.99475098); // Интерьер магазины шляп
	CreateObject(2599,2241.89233398,2388.57055664,3.12269020,0.00000000,0.00000000,58.00000000); // Интерьер магазины шляп
	CreateObject(2375,2251.89404297,2397.81054688,2.65897942,0.00000000,0.00000000,356.00000000); // Интерьер магазины шляп
	CreateObject(2387,2249.23510742,2392.94970703,2.65897942,0.00000000,0.00000000,358.00000000); // Интерьер магазины шляп
	CreateObject(2387,2250.49511719,2392.91284180,2.65897942,0.00000000,0.00000000,357.99499512); // Интерьер магазины шляп
	CreateObject(2622,2252.73437500,2380.56274414,3.44379759,0.00000000,0.00000000,10.00000000); // Интерьер магазины шляп
	CreateObject(2623,2253.52416992,2383.54516602,4.22929192,0.00000000,0.00000000,266.00000000); // Интерьер магазины шляп
	CreateObject(2652,2248.43041992,2393.01708984,3.15149879,0.00000000,0.00000000,4.00000000); // Интерьер магазины шляп
	CreateObject(2704,2248.77441406,2398.04956055,4.63517284,0.00000000,0.00000000,356.00000000); // Интерьер магазины шляп
	CreateObject(2689,2247.77709961,2398.11914062,4.60354900,0.00000000,0.00000000,356.00000000); // Интерьер магазины шляп
	CreateObject(2654,2252.35400391,2380.29492188,2.87688184,0.00000000,0.00000000,34.00000000); // Интерьер магазины шляп
	CreateObject(2372,2248.43847656,2379.95361328,2.66602492,0.00000000,0.00000000,358.00000000); // Интерьер магазины шляп
	CreateObject(2372,2245.98388672,2380.20385742,2.65897942,0.00000000,0.00000000,357.99499512); // Интерьер магазины шляп
	CreateObject(1778,2239.59692383,2380.06542969,2.65897942,0.00000000,0.00000000,230.00000000); // Интерьер магазины шляп
	CreateObject(14409,487.54458618,-1649.52172852,19.45879364,0.00000000,0.00000000,182.00000000);
	CreateObject(16061,-157.29588318,-1274.14111328,1.88906252,0.00000000,0.00000000,350.00000000);
	CreateObject(16061,-141.90350342,-1204.58508301,2.15283203,0.00000000,0.00000000,343.99694824);
	CreateObject(880,-105.86623383,-1167.85119629,2.22056627,0.00000000,0.00000000,8.00000000);
	CreateObject(3506,-101.24819946,-1158.10644531,1.26452827,0.00000000,0.00000000,0.00000000);
	CreateObject(3506,-109.48915100,-1176.02062988,1.89062500,0.00000000,0.00000000,0.00000000);
	CreateObject(973,-78.12439728,-1044.31774902,21.48595238,0.00000000,343.24890137,106.99963379);
	CreateObject(973,-76.69551086,-1048.99658203,20.01756477,0.00000000,343.24584961,106.99588013);
	CreateObject(973,-73.26939392,-1064.98315430,15.11215782,359.52383423,342.24517822,94.34347534);
	CreateObject(973,-73.05772400,-1073.88830566,12.34914589,0.00000000,343.24072266,88.24328613);
	CreateObject(973,-73.88726807,-1082.63146973,9.57472324,0.00000000,341.73522949,80.98876953);
	CreateObject(973,-75.33823395,-1091.28222656,6.86593866,0.00000000,343.73522949,79.98571777);
	CreateObject(973,-77.65969849,-1099.86303711,4.45454073,0.00000000,345.98522949,69.98571777);
	CreateObject(973,-81.23075104,-1035.82995605,23.35951614,0.00000000,353.24584961,112.99581909);
	CreateObject(979,-397.89077759,-823.37945557,47.23978806,0.00000000,356.50000000,172.75000000);
	CreateObject(979,-407.17761230,-822.65191650,47.77830505,0.00000000,356.99536133,178.24914551);
	CreateObject(979,-416.42102051,-823.00628662,48.11814117,0.00000000,358.73986816,186.24768066);
	CreateObject(979,-425.44500732,-824.43249512,48.45638657,358.25244141,356.98510742,191.65100098);
	CreateObject(979,-434.27960205,-827.08416748,48.89910507,358.24688721,357.23181152,201.65516663);
	CreateObject(979,-442.78363037,-830.60522461,49.14030457,358.24017334,359.73266602,203.23071289);
	CreateObject(979,-451.56262207,-832.56488037,49.68952560,359.24121094,353.73046875,180.90551758);
	CreateObject(979,-460.71170044,-832.71820068,49.82079315,359.23419189,4.47778320,181.04472351);
	CreateObject(997,-895.60766602,-1111.51940918,97.86234283,0.00000000,0.00000000,314.50000000); 	// ограждение в тунеле
	CreateObject(997,-1221.26428223,-777.36590576,62.90625000,0.00000000,0.00000000,313.00000000); 	// ограждение в тунеле
	CreateObject(982,-1745.60717773,-565.95379639,16.16793060,0.00000000,0.00000000,270.00000000); 	// при въезде в СФ забор
	CreateObject(982,-1771.20996094,-565.95379639,16.16793060,0.00000000,0.00000000,270.00000000); 	// при въезде в СФ забор
	CreateObject(1215,-1784.41918945,-565.98620605,16.04869843,0.00000000,0.00000000,0.00000000); 	// фонарик у забора
	CreateObject(1215,-1732.50878906,-565.98620605,16.04869843,0.00000000,0.00000000,0.00000000); 	// фонарик у забора
	CreateObject(673,-892.98071289,-1123.79040527,98.12113953,0.00000000,0.00000000,58.00000000);
	CreateObject(673,-887.91101074,-1105.71997070,97.83216095,0.00000000,0.00000000,31.99682617);
	CreateObject(700,-1217.40502930,-769.23632812,63.20145798,0.00000000,0.00000000,310.00000000);
	CreateObject(700,-1228.23315430,-781.09820557,63.43525696,0.00000000,0.00000000,119.99572754);
	CreateObject(16061,-1366.71508789,-799.62609863,78.43941498,352.50061035,359.24353027,274.40124512);
	CreateObject(16061,-1296.19311523,-782.81854248,68.86944580,5.75000000,0.00000000,113.74993896);
	CreateObject(705,-2021.56469727,487.56185913,34.17187500,0.00000000,0.00000000,60.00000000); 	// Отель СФ
	CreateObject(984,-2016.70910645,460.63793945,34.80855560,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(997,-2018.31347656,468.75106812,34.17229462,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(997,-2018.31347656,473.30142212,34.17229462,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(984,-2016.66870117,481.40710449,34.80855560,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(983,-2016.66870117,491.01440430,34.85543060,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(997,-2018.31347656,471.08914185,34.17229080,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(982,-2029.46582031,494.17541504,34.85543060,0.00000000,0.00000000,270.00000000); 	// Отель СФ
	CreateObject(997,-2044.18994141,495.73629761,34.16411209,0.00000000,0.00000000,270.00000000); 	// Отель СФ
	CreateObject(997,-2046.62280273,495.73629761,34.16411209,0.00000000,0.00000000,270.00000000); 	// Отель СФ
	CreateObject(983,-2054.24975586,494.15451050,34.85543060,0.00000000,0.00000000,270.00000000); 	// Отель СФ
	CreateObject(997,-2048.98461914,495.73629761,34.16411209,0.00000000,0.00000000,270.00000000); 	// Отель СФ
	CreateObject(3877,-2036.21362305,492.51303101,33.81249237,0.00000000,0.00000000,0.00000000);	// Отель СФ
	CreateObject(3877,-2036.21362305,488.97695923,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(3877,-2036.21362305,485.57800293,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(3877,-2036.21362305,482.06750488,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(3877,-2018.35656738,474.63571167,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(3877,-2022.02380371,474.63571167,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(3877,-2025.58605957,474.63571167,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ
	CreateObject(3877,-2029.19848633,474.63571167,33.81249237,0.00000000,0.00000000,0.00000000); 	// Отель СФ

	CreateObject(982,-1978.90002441,500.10000610,34.90000153,0.00000000,0.00000000,270.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(983,-1962.90002441,500.10000610,34.90000153,0.00000000,0.00000000,270.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(982,-1991.69995117,487.29998779,34.90000153,0.00000000,0.00000000,180.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(984,-1991.69995117,462.10000610,34.79999924,0.00000000,0.00000000,0.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(982,-1978.90002441,455.70001221,34.90000153,0.00000000,0.00000000,270.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(984,-1961.00000000,467.79998779,34.79999924,0.00000000,0.00000000,0.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(997,-1993.30004883,472.39999390,34.20000076,0.00000000,0.00000000,0.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(997,-1993.30004883,470.39999390,34.20000076,0.00000000,0.00000000,0.00000000); // Забор у отеля вокруз чиллидогс
	CreateObject(1281,-1986.00000000,491.50000000,35.00000000,0.00000000,0.00000000,44.00000000); // Столик
	CreateObject(1281,-1975.69995117,494.29998779,35.00000000,0.00000000,0.00000000,353.99475098); // Столик
	CreateObject(1281,-1969.40002441,485.39999390,35.00000000,0.00000000,0.00000000,289.99047852); // Столик
	CreateObject(1281,-1969.09997559,470.00000000,35.00000000,0.00000000,0.00000000,219.98962402); //  Столик
	CreateObject(1281,-1978.00000000,465.50000000,35.00000000,0.00000000,0.00000000,177.98474121); // Столик
	CreateObject(1340,-1982.09997559,486.00000000,35.29999924,0.00000000,0.00000000,270.00000000); // Чиллидогс
	CreateObject(1340,-1974.00000000,475.60000610,35.29999924,0.00000000,0.00000000,180.00000000); // Чиллидогс

    CreateObject(6976,1500.1999500,-1826.3000500,23.6000000,0.0000000,0.0000000,180.0000000); // Лестница у мэрии
	CreateObject(6976,1519.3000500,-1826.3000500,12.3000000,0.0000000,0.0000000,180.0000000); // Лестница у мэрии

	CreateObject(984,2861.60009766,1331.90002441,11.00000000,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(982,2861.60009766,1312.69995117,11.00000000,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(983,2861.60009766,1296.69995117,11.00000000,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(982,2861.60009766,1279.19995117,11.00000000,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(982,2861.60009766,1253.59997559,11.00000000,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(983,2797.00000000,1320.00000000,10.60000038,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(983,2797.00000000,1306.50000000,10.60000038,0.00000000,0.00000000,0.00000000);    // Забор на спавне ЛВ
	CreateObject(983,2820.30004883,1383.19995117,10.60000038,0.00000000,0.00000000,270.00000000);  // Забор на спавне ЛВ
	CreateObject(983,2833.89990234,1383.19995117,10.60000038,0.00000000,0.00000000,270.00000000);  // Забор на спавне ЛВ
	CreateObject(997,2795.60009766,1315.19995117,9.80000019,0.00000000,0.00000000,0.00000000); 	   // Преграда на дороге, чтобы не заезжали на спавн
	CreateObject(997,2795.60009766,1313.30004883,9.80000019,0.00000000,0.00000000,0.00000000);     // Преграда на дороге, чтобы не заезжали на спавн
	CreateObject(997,2795.60009766,1311.59997559,9.80000019,0.00000000,0.00000000,0.00000000);     // Преграда на дороге, чтобы не заезжали на спавн
	CreateObject(997,2827.19995117,1384.90002441,9.69999981,0.00000000,0.00000000,270.00000000);   //  Преграда на дороге, чтобы не заезжали на спавн
	CreateObject(997,2829.19995117,1384.90002441,9.80000019,0.00000000,0.00000000,270.00000000);   // Преграда на дороге, чтобы не заезжали на спавн
	CreateObject(997,2825.30004883,1384.90002441,9.80000019,0.00000000,0.00000000,270.00000000);   //  Преграда на дороге, чтобы не заезжали на спавн
	CreateObject(1330,2842.19995117,1287.00000000,10.89999962,0.00000000,0.00000000,0.00000000);   // Мусорка на спавне
	CreateObject(2677,2842.10009766,1287.00000000,10.69999981,0.00000000,0.00000000,328.00000000); // Мусорк вокруг мусорки у спавна ЛВ
	
	
	CreateObject(982,-2017.91430664,-45.65162277,35.01011276,0.00000000,0.00000000,2.00000000); 	// Забор у АШ вокруг банкомата
	CreateObject(982,-2030.27966309,-59.63516617,35.00209427,0.00000000,0.00000000,87.99951172); 	// Забор у АШ вокруг банкомата
	CreateObject(984,-2041.55895996,-46.88821793,35.05295563,0.00000000,0.00000000,2.00000000); 	// Забор у АШ вокруг банкомата
	CreateObject(2634,2144.17871094,1627.04614258,994.26220703,0.00000000,0.00000000,180.00000000); // Двери в деморгане
	CreateObject(1966,2144.30810547,1606.61889648,995.09973145,0.00000000,0.00000000,0.00000000); 	// Двери в деморгане
	CreateObject(1567,371.22338867,166.61073303,1007.38934326,0.00000000,0.00000000,0.00000000); 	// Дверь в мэрии на 2 этаж
	CreateObject(3077,-1569.04272461,132.36479187,2.55468750,0.00000000,0.00000000,342.00000000); 	// Доска для угона в СФ
	
	CreateObject(2942, 1540.1967773, -1618.22351074, 13.19746113, 0.00000000,0.00000000,0.00000000); 	// Банкомат
	CreateObject(2942, 717.04113770, -1440.43103027, 13.18196201, 0.00000000,0.00000000,181.09069824); 	// Банкомат
	CreateObject(2942, 475.04376221, -1647.71386719, 24.10574722, 0.00000000,0.00000000,356.71777344); 	// Банкомат
	CreateObject(2942, 1834.3392000, -1851.03900000, 13.03264000, 0.00000000,0.00000000,0.00000000);	 // Банкомат
	CreateObject(2942, 2837.1000976,  1283.80004883, 10.69999981, 0.00000000,0.00000000,270.00000000); // Банкомат в ЛВ
	CreateObject(2942,-2033.02844238,-57.43613052,34.97579956,0.00000000,0.00000000,87.69995117);// Банкомат
	
	CreateObject(1775,2751.07861328,-2453.02416992,13.74547386,0.00000000,0.00000000,91.76000977); // Автомат спранк у армии
	CreateObject(1775,-2035.66796875,-101.95997620,35.26110077,0.00000000,0.00000000,177.85266113); // Автомат спранк у АШ
	CreateObject(1237,-2083.34448242,-215.98773193,34.32031250,0.00000000,0.00000000,0.00000000); // Конус у сдачи на права в АШ
	CreateObject(1237,-2083.43457031,-198.68490601,34.32031250,0.00000000,0.00000000,0.00000000); // Конус у сдачи на права в АШ
	CreateObject(1237,-2083.83300781,-183.40034485,34.32031250,0.00000000,0.00000000,0.00000000); // Конус у сдачи на права в АШ
	CreateObject(1237,-2083.97778320,-168.49035645,34.32031250,0.00000000,0.00000000,0.00000000); // Конус у сдачи на права в АШ
	CreateObject(1237,-2084.40527344,-153.64418030,34.32031250,0.00000000,0.00000000,0.00000000); // Конус у сдачи на права в АШ
	CreateObject(1237,-2083.93041992,-133.21388245,34.32031250,0.00000000,0.00000000,0.00000000); // Конус у сдачи на права в АШ
	
	CreateObject(2060,-1504.73950195,128.99145508,16.48478127,0.00000000,0.00000000,352.00000000); // Мешки грузчиков
	CreateObject(2060,-1505.86743164,129.93597412,16.73479271,0.00000000,47.25000000,42.99645996); // Мешки грузчиков
	CreateObject(2060,-1504.09814453,128.32460022,16.48478127,0.00000000,340.00000000,231.49649048); // Мешки грузчиков
	CreateObject(2060,-1548.21972656,112.60472107,2.71134377,0.00000000,0.00000000,256.00000000); // Мешки грузчиков
	CreateObject(2060,-1546.38574219,113.01187897,2.71134377,0.00000000,0.00000000,68.00000000); // Мешки грузчиков
	CreateObject(2060,-1546.89306641,112.77777100,2.76134396,0.00000000,30.25000000,207.99786377); // Мешки грузчиков

 	CreateObject(982,1822.98254395,-1286.06555176,131.41674805,0.00000000,0.00000000,88.00000000); // репортеры
	CreateObject(984,1805.45886230,-1290.02160645,131.37104797,0.00000000,0.00000000,313.00000000); // репортеры
 	CreateObject(982,1787.92871094,-1294.41723633,131.41674805,0.00000000,0.00000000,90.00000000); // репортеры
 	CreateObject(8168,1771.96606445,-1302.90686035,132.68234253,0.00000000,0.00000000,106.69921875); // репортеры
 	CreateObject(18368,1789.31396484,-1312.80981445,126.08453369,0.00000000,0.00000000,262.00000000); // репортеры
 	CreateObject(9241,1824.12634277,-1307.13586426,132.41836548,0.00000000,0.00000000,270.00000000); // репортеры
 	CreateObject(983,1835.77661133,-1289.71264648,131.41792297,0.00000000,0.00000000,180.00000000); // репортеры
 	CreateObject(983,1773.54614258,-1297.18933105,131.41792297,0.00000000,0.00000000,330.00000000); // репортеры
 	CreateObject(1999,1805.97790527,-1302.70361328,113.69702911,0.00000000,0.00000000,270.00000000); // репортеры
 	CreateObject(2198,1775.60095215,-1303.27722168,113.77135468,0.00000000,0.00000000,270.00000000); // репортеры
 	CreateObject(2356,1774.10620117,-1304.05261230,113.83654785,0.00000000,0.00000000,296.00000000); // репортеры
 	CreateObject(2198,1814.30847168,-1275.04248047,113.76644897,0.00000000,0.00000000,30.74523926); // репортеры
 	CreateObject(2310,1814.93457031,-1276.07324219,114.28029633,0.00000000,0.00000000,239.99633789); // репортеры
 	CreateObject(2310,1805.35937500,-1302.74316406,114.21182251,0.00000000,0.00000000,131.99523926); // репортеры
    CreateObject(5816,1148.50000000,-1361.90002441,21.49999962,0.00000000,0.00000000,90.00000000); // лестница у медиков на крышу

// Колхоз
	CreateObject(17324,-1075.0999756,-1246.3000488,128.1999969,0.0000000,0.0000000,90.0000000); //object(cw_combbarn) (1)
	CreateObject(17324,-1148.8000488,-1212.1999512,128.1999969,0.0000000,0.0000000,90.0000000); //object(cw_combbarn) (2)
	CreateObject(17324,-1148.8000488,-1194.5000000,128.1999969,0.0000000,0.0000000,90.0000000); //object(cw_combbarn) (4)


// Свалка
	CreateObject(18250,2114.10009766,-1998.00000000,18.50000000,0.00000000,0.00000000,134.00000000); //  Ангар
	CreateObject(3761,2098.19995117,-1996.30004883,14.50000000,0.00000000,0.00000000,316.00000000); // Интерьер ангара
	CreateObject(3798,2100.19995117,-2000.40002441,12.50000000,0.00000000,0.00000000,0.00000000); // Интерьер ангара
	CreateObject(3796,2105.19995117,-1995.30004883,12.50000000,0.00000000,0.00000000,102.00000000); // Интерьер ангара
	CreateObject(11090,2124.30004883,-2005.19995117,13.30000019,0.00000000,0.00000000,314.00000000); // Интерьер ангара
	CreateObject(12957,2115.69995117,-2012.69995117,13.39999962,0.00000000,0.00000000,130.00000000); // Машина в ангаре
	CreateObject(12957,2158.00000000,-1981.00000000,13.39999962,0.00000000,0.00000000,318.00000000); // Разбитая машина
	CreateObject(13591,2151.39990234,-1985.90002441,12.89999962,0.00000000,0.00000000,252.00000000); // Разбитая машина
	CreateObject(3593,2138.50000000,-1970.90002441,13.30000019,0.00000000,0.00000000,60.00000000); // Разбитая машина
	CreateObject(3594,2123.00000000,-1971.30004883,13.19999981,0.00000000,0.00000000,130.00000000); // Разбитая машина
	CreateObject(12957,2137.89990234,-1973.80004883,13.39999962,342.66494751,8.12118530,170.68469238); // Разбитая машина
	CreateObject(1327,2126.30004883,-1970.69995117,12.89999962,0.00000000,40.00000000,170.00000000); // Колесо
	CreateObject(13591,2177.19995117,-1994.69995117,12.89999962,0.00000000,0.00000000,0.00000000); // Разбитая машина
	CreateObject(3594,2170.89990234,-2001.90002441,13.19999981,0.00000000,0.00000000,82.00000000); // Разбитая машина
	CreateObject(12957,2187.60009766,-2007.40002441,13.39999962,0.00000000,0.00000000,0.00000000); // Разбитая машина

// Автобусные остановки
	CreateObject(1257,744.29998779,-1386.40002441,14.00000000,0.00000000,0.00000000,90.00000000); //object(bustopm) (1)
	CreateObject(1257,506.79998779,-1372.09997559,16.39999962,0.00000000,0.00000000,198.00000000); //object(bustopm) (2)
	CreateObject(1257,466.60000610,-1666.59997559,25.29999924,0.00000000,0.00000000,263.99560547); //object(bustopm) (3)
	CreateObject(1257,855.79998779,-1607.09997559,13.80000019,0.00000000,0.00000000,315.99047852); //object(bustopm) (4)
	CreateObject(1257,1457.09997559,-1740.80004883,13.80000019,0.00000000,0.00000000,269.98876953); //object(bustopm) (5)
	CreateObject(1257,1650.30004883,-1881.19995117,13.80000019,0.00000000,0.00000000,269.98352051); //object(bustopm) (6)
	CreateObject(1257,1830.30004883,-1706.09997559,13.80000019,0.00000000,0.00000000,359.98352051); //object(bustopm) (7)
	CreateObject(1257,1800.09997559,-1258.19995117,13.89999962,0.00000000,0.00000000,119.97802734); //object(bustopm) (8)
	CreateObject(1257,761.29998779,-1311.00000000,13.80000019,0.00000000,0.00000000,87.97619629); //object(bustopm) (9)
	CreateObject(1257,528.70001221,-1240.59997559,16.89999962,0.00000000,0.00000000,125.97302246); //object(bustopm) (10)
	CreateObject(1257,196.30000305,-1743.69995117,4.80000019,0.00000000,0.00000000,273.96923828); //object(bustopm) (11)
	CreateObject(1257,1477.80004883,-1880.69995117,13.80000019,0.00000000,0.00000000,269.96606445); //object(bustopm) (12)
	CreateObject(1257,1482.00000000,-1583.80004883,13.80000019,0.00000000,0.00000000,89.96154785); //object(bustopm) (13)
	CreateObject(1257,1366.40002441,-1294.69995117,13.80000019,0.00000000,0.00000000,1.95605469); //object(bustopm) (14)
	CreateObject(1257,1282.59997559,-1386.69995117,13.69999981,0.00000000,0.00000000,89.95556641); //object(bustopm) (15)
	CreateObject(1257,-134.10000610,-1349.09997559,2.09999990,0.00000000,0.00000000,345.95056152); //object(bustopm) (16)
	CreateObject(1257,-2121.19995117,-2420.30004883,30.89999962,0.00000000,0.00000000,51.94848633); //object(bustopm) (17)
	CreateObject(1257,-1997.19995117,-116.19999695,36.09999847,0.00000000,0.00000000,357.94335938); //object(bustopm) (18)
	CreateObject(1257,-2243.19995117,-113.19999695,35.59999847,0.00000000,0.00000000,359.94006348); //object(bustopm) (19)
	CreateObject(1257,-1993.09997559,424.00000000,35.50000000,0.00000000,0.00000000,359.93957520); //object(bustopm) (20)
	CreateObject(1257,-1515.59997559,924.59997559,7.50000000,0.00000000,0.00000000,359.93957520); //object(bustopm) (21)
	CreateObject(1257,-1880.59997559,1366.40002441,7.50000000,0.00000000,0.00000000,131.93954468); //object(bustopm) (22)
	CreateObject(1257,-2607.19995117,1340.00000000,7.50000000,0.00000000,0.00000000,137.93481445); //object(bustopm) (23)
	CreateObject(1257,-2662.89990234,554.50000000,14.89999962,0.00000000,0.00000000,269.93334961); //object(bustopm) (24)
	CreateObject(1257,-2404.69995117,487.50000000,30.29999924,0.00000000,0.00000000,291.92858887); //object(bustopm) (25)
	CreateObject(1257,-2268.69995117,-136.10000610,35.59999847,0.00000000,0.00000000,177.92321777); //object(bustopm) (26)
	CreateObject(1257,-1982.40002441,156.39999390,28.00000000,0.00000000,0.00000000,359.91809082); //object(bustopm) (27)
	CreateObject(1257,1439.59997559,-1023.29998779,24.10000038,0.00000000,0.00000000,90.00000000); //object(bustopm) (1)

	CreateObject(2062,252.00000000,1359.40002441,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (1)
	CreateObject(2062,252.00000000,1360.30004883,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (2)
	CreateObject(2062,251.10000610,1362.90002441,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (3)
	CreateObject(2062,251.30000305,1383.69995117,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (4)
	CreateObject(2062,249.89999390,1381.69995117,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (5)
	CreateObject(2062,252.30000305,1409.40002441,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (6)
	CreateObject(2062,252.19999695,1410.19995117,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (7)
	CreateObject(2062,251.69999695,1434.80004883,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (8)
	CreateObject(2062,252.30000305,1434.50000000,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (9)
	CreateObject(2062,252.19999695,1435.59997559,10.30000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (10)
	CreateObject(2062,398.89999390,1460.19995117,6.50000000,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (11)
	CreateObject(2062,399.39999390,1459.19995117,6.50000000,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (12)
	CreateObject(2062,398.60000610,1458.00000000,6.50000000,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (13)
	CreateObject(2062,412.70001221,1412.80004883,7.19999981,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (14)
	CreateObject(2062,412.39999390,1411.00000000,7.19999981,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (15)
	CreateObject(2062,497.50000000,1388.09997559,4.19999981,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (16)
	CreateObject(2062,484.60000610,1305.19995117,8.80000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (17)
	CreateObject(2062,484.60000610,1303.80004883,8.80000019,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (18)
	CreateObject(2062,483.00000000,1305.00000000,8.89999962,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (19)
	CreateObject(2062,346.29998779,1293.59997559,12.00000000,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (20)
	CreateObject(2062,347.50000000,1292.19995117,12.00000000,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (21)
	CreateObject(2062,343.10000610,1290.90002441,12.00000000,0.00000000,0.00000000,0.00000000); // Бочка на нефтезаводе (22)
	CreateObject(3287,295.70001221,1378.09997559,13.80000019,0.00000000,0.00000000,270.00000000); // Цистерна около завода, где покупать нефть
	CreateObject(3675,295.29998779,1381.00000000,11.00000000,356.15283203,343.96286011,186.89282227); // Труба около цистерны
// ====================== ДЛЯ ФРАКЦИЙ ==========================================

// ФБР
	FBIgate[0] = CreateObject(980,2294.0000000,2498.6999500,4.5000000,0.0000000,0.0000000,270.0000000); // Ворота в гараж закрыты
	FBIgate[1] = CreateObject(980,2335.1001000,2443.5000000,7.0000000,0.0000000,0.0000000,240.0000000); // Ворота в гараж закрыты
	FBIrotate = CreateObject(968,2238.1999500,2450.5000000,10.6000000,0.0000000,269.7500000,270.0000000); // шлагбаум


// Полиция
	CreateObject(983,1544.83276367,-1620.57934570,12.96311283,0.00000000,0.00000000,0.00000000); // По краям от шлагбаума
	CreateObject(983,1544.15222168,-1635.98620605,12.86517429,0.00000000,0.00000000,0.00000000); // По краям от шлагбаума

	LSPDgate = CreateObject(980,1588.39440918,-1638.14953613,14.68334770,0.00000000,0.00000000,359.00000000); // Ворота
	LSPDdoor = CreateObject(2930,247.24900818,72.40412903,1005.27746582,0.00000000,0.00000000,270.00000000); // Дверь внутри ЛСПД закрыта
	LSPDrotate = CreateObject(968,1544.69360352,-1630.80761719,13.07956696,0.00000000,90.00000000,90.00000000); // Шлагбаум

// Репортеры
	CreateObject(4100,1816.6999512,-1278.9000244,14.3999996,0.0000000,0.0000000,236.9999847); //object(meshfence1_lan) (1)
	CreateObject(4100,1809.3000488,-1274.6999512,14.3999996,0.0000000,0.0000000,165.0000000); //object(meshfence1_lan) (2)
	CreateObject(966,1803.0999756,-1277.9000244,12.6000004,0.0000000,0.0000000,34.2500000); //object(bar_gatebar01) (1)
	CNNrotate = CreateObject(968,1803.1999512,-1277.8000488,13.4,0.0000000,270.0000000,34.35); //object(barrierturn) (1)
	CreateObject(4100,1791.5000000,-1286.5000000,14.3000002,0.0000000,0.0000000,178.9981689); //object(meshfence1_lan) (3)
	CreateObject(4100,1780.5999756,-1294.9000244,14.3000002,0.0000000,0.0000000,176.4947510); //object(meshfence1_lan) (4)


// Армия
	CreateObject(8210,2626.71240234,-2356.27148438,15.69136810,0.00000000,0.00000000,88.00000000); // Забор со стороны реки
	CreateObject(7191,2720.10913086,-2378.40112305,16.91504097,0.00000000,0.00000000,0.00000000); // Забор
	CreateObject(7191,2720.00439453,-2432.34960938,17.03557587,0.00000000,0.00000000,180.00000000); // Забор
	CreateObject(7191,2720.48144531,-2508.70385742,14.46005917,0.00000000,0.00000000,0.00000000); // Забор
	CreateObject(7191,2720.43481445,-2508.69262695,18.33656502,0.00000000,0.00000000,0.00000000); // Забор
	CreateObject(8229,2726.96875000,-2554.42773438,17.83329773,0.00000000,0.00000000,270.00000000); // Забор


	ARMYgate = CreateObject(971,2720.03222656,-2405.21191406,15.70587540,0.00000000,0.00000000,270.00000000); // Ворота
	ARMYangar[0] = CreateObject(11327,2774.33105469,-2417.80571289,15.18078423,0.00000000,0.00000000,0.00000000); // ангар 1
	ARMYangar[1] = CreateObject(11327,2774.33105469,-2455.84106445,15.17098427,0.00000000,0.00000000,0.00000000); // Ангар 2
	ARMYangar[2] = CreateObject(11327,2774.29541016,-2493.99267578,15.20078659,0.00000000,0.00000000,0.00000000); // Ангар 3






// Мэрия
	CreateObject(987,1496.56176758,-1854.32507324,12.54687500,0.00000000,0.00000000,0.00000000); // забор
	CreateObject(987,1417.89929199,-1823.71923828,12.50896454,0.00000000,0.00000000,271.25000000); // забор
	CreateObject(987,1543.89428711,-1823.73364258,12.09688187,0.00000000,0.00000000,271.24694824); // забор

	HALLgate[0] = CreateObject(971,1544.05834961,-1840.02307129,14.71682930,0.00000000,0.00000000,270.00000000); // Ворота 1
	HALLgate[1] = CreateObject(971,1418.04455566,-1840.04785156,15.11677742,0.00000000,0.00000000,270.00000000); // Ворота 2

    CreateObject(1492,1484.80005,-1824.5,12.5,0.00000000,0.00000000,0.00000000);


// Лицензеры (автошкола)
	CreateObject(984,-2017.0999756,-86.5999985,35.0000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (6)
	CreateObject(984,-2017.0999756,-96.1999969,35.0000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (7)
	CreateObject(984,-2023.5000000,-80.1999969,35.0000000,0.0000000,0.0000000,270.0000000); //object(fenceshit2) (9)
	CreateObject(982,-2070.6000977,-80.1999969,35.0499992,0.0000000,0.0000000,270.0000000); //object(fenceshit) (3)
	CreateObject(984,-2089.8000488,-80.1999969,35.0000000,0.0000000,0.0000000,270.0000000); //object(fenceshit2) (13)
	CreateObject(966,-2043.8000488,-80.4000015,34.2000008,0.0000000,0.0000000,0.0000000); //object(bar_gatebar01) (3)
	CreateObject(983,-2033.0999756,-80.1999969,35.0499992,0.0000000,0.0000000,270.0000000); //object(fenceshit3) (3)
	CreateObject(3877,-2038.4000244,-80.5000000,34.0999985,0.0000000,0.0000000,0.0000000); // Фонарик у АШ (?)
	CreateObject(3877,-2041.1999512,-80.5000000,34.0999985,0.0000000,0.0000000,0.0000000); // Фонарик у АШ (?)
	CreateObject(3877,-2053.1999512,-80.5000000,34.0999985,0.0000000,0.0000000,0.0000000); // Фонарик у АШ (?)
	CreateObject(3877,-2056.0000000,-80.5000000,34.0999985,0.0000000,0.0000000,0.0000000); // Фонарик у АШ (?)
	CreateObject(869,-2034.1999512,-82.6999969,35.0000000,0.0000000,0.0000000,334.0000000); // Цветы у АШ
	CreateObject(869,-2034.5000000,-85.4000015,35.0000000,0.0000000,0.0000000,345.9953613); // Цветы у АШ
	CreateObject(869,-2031.0000000,-85.4000015,35.0000000,0.0000000,0.0000000,13.9924316); // Цветы у АШ
	CreateObject(869,-2030.1999512,-82.4000015,35.0000000,0.0000000,0.0000000,349.9910889); // Цветы у АШ
	CreateObject(869,-2026.3000488,-82.5000000,35.0000000,0.0000000,0.0000000,337.9859619); // Цветы у АШ
	CreateObject(869,-2026.9000244,-85.5000000,35.0000000,0.0000000,0.0000000,351.9833984); // Цветы у АШ
	CreateObject(869,-2022.9000244,-85.5000000,35.0000000,0.0000000,0.0000000,1.9799805); // Цветы у АШ
	CreateObject(869,-2022.5999756,-82.5000000,35.0000000,0.0000000,0.0000000,347.9775391); // Цветы у АШ
	CreateObject(869,-2019.5999756,-83.9000015,35.0000000,0.0000000,0.0000000,265.9754639); // Цветы у АШ
	CreateObject(669,-2019.4000244,-81.4000015,33.5999985,0.0000000,0.0000000,0.0000000); // Дерево у АШ
	CreateObject(1364,-2031.9000244,-89.1999969,35.0999985,0.0000000,0.0000000,0.0000000); // Лавка у АШ
	CreateObject(1364,-2023.6999512,-89.1999969,35.0999985,0.0000000,0.0000000,0.0000000); // Лавка у АШ

	LICENZERSrotate = CreateObject(968,-2043.6999512,-80.4000015,35.0000000,0.0000000,269.5,0.0000000); // Шлагбаум у АШ
	
//================================= ОБЪЕКТЫ КОНЕЦ ==============================
	


	drinkmenu = CreateMenu ( "Drink menu", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(drinkmenu, 0, "Soda ($5)");
 	AddMenuItem(drinkmenu, 0, "Cola ($10)");
 	AddMenuItem(drinkmenu, 0, "Beer ($20)");
 	AddMenuItem(drinkmenu, 0, "Vodka ($25)");
 	AddMenuItem(drinkmenu, 0, "Whisky ($50)");
 	AddMenuItem(drinkmenu, 0, "Coniak ($75)");


 	gunmenu = CreateMenu ( "Ammunation", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu, 0, "Desert Eagle");
 	AddMenuItem(gunmenu, 0, "Shotgun");
 	AddMenuItem(gunmenu, 0, "MP-5");
 	AddMenuItem(gunmenu, 0, "AK47");
 	AddMenuItem(gunmenu, 0, "M4");
 	AddMenuItem(gunmenu, 0, "Rifle");
 	AddMenuItem(gunmenu, 0, "Golf Club $20");
  	AddMenuItem(gunmenu, 0, "Nite Stick $15");
 	AddMenuItem(gunmenu, 0, "Baseball Bat $10");
 	AddMenuItem(gunmenu, 0, "Shovel $10");
 	AddMenuItem(gunmenu, 0, "Pool Cue $10");
 	AddMenuItem(gunmenu, 0, "Cane $20");

 	DildoMenu = CreateMenu ( "Sex Shop", 1, 30.0, 130.0, 200.0, 200.0);
 	AddMenuItem(DildoMenu, 0, "Small White Vibrator $20");
 	AddMenuItem(DildoMenu, 0, "Silver Vibrator $30");
 	AddMenuItem(DildoMenu, 0, "Large White Vibrator $40");
 	AddMenuItem(DildoMenu, 0, "Purple Dildo $50");

 	gunmenu1 = CreateMenu ( "Ammo", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu1, 0, "50 ($100)");
 	AddMenuItem(gunmenu1, 0, "100 ($150)");
 	AddMenuItem(gunmenu1, 0, "200 ($200)");
 	AddMenuItem(gunmenu1, 0, "500 ($300)");

    gunmenu2 = CreateMenu ( "Ammo", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu2, 0, "50 ($50)");
 	AddMenuItem(gunmenu2, 0, "100 ($100)");
 	AddMenuItem(gunmenu2, 0, "200 ($150)");
 	AddMenuItem(gunmenu2, 0, "500 ($250)");

 	gunmenu3 = CreateMenu ( "Ammo", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu3, 0, "50 ($25)");
 	AddMenuItem(gunmenu3, 0, "100 ($50)");
 	AddMenuItem(gunmenu3, 0, "200 ($75)");
 	AddMenuItem(gunmenu3, 0, "500 ($150)");

 	gunmenu4 = CreateMenu ( "Ammo", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu4, 0, "50 ($50)");
 	AddMenuItem(gunmenu4, 0, "100 ($75)");
 	AddMenuItem(gunmenu4, 0, "200 ($150)");
 	AddMenuItem(gunmenu4, 0, "500 ($250)");

 	gunmenu5 = CreateMenu ( "Ammo", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu5, 0, "50 ($50)");
 	AddMenuItem(gunmenu5, 0, "100 ($75)");
 	AddMenuItem(gunmenu5, 0, "200 ($150)");
 	AddMenuItem(gunmenu5, 0, "500 ($250)");

 	gunmenu6 = CreateMenu ( "Ammo", 1, 30.0, 130.0, 150.0, 200.0);
 	AddMenuItem(gunmenu6, 0, "50 ($100)");
 	AddMenuItem(gunmenu6, 0, "100 ($150)");
 	AddMenuItem(gunmenu6, 0, "200 ($250)");
 	AddMenuItem(gunmenu6, 0, "500 ($400)");
  	
  	changeInteriorMenu[0] = CreateMenu ( "Interiors", 1, 10.0, 130.0, 100.0, 80.0);
 	AddMenuItem(changeInteriorMenu[0], 0, "Next");
  	AddMenuItem(changeInteriorMenu[0], 0, "Previous");
  	AddMenuItem(changeInteriorMenu[0], 0, "Done");
  	
  	changeInteriorMenu[1] = CreateMenu ( "Interiors", 1, 10.0, 130.0, 100.0, 80.0);
 	AddMenuItem(changeInteriorMenu[1], 0, "Previous");
  	AddMenuItem(changeInteriorMenu[1], 0, "Next");
  	AddMenuItem(changeInteriorMenu[1], 0, "Done");
  	
  	CluckMenu = CreateMenu("Clucken Bell", 1, 30.0, 130.0, 150.0, 200.0);
    AddMenuItem(CluckMenu, 0, "Chicken Leg 4$");
    AddMenuItem(CluckMenu, 0, "Chicken Wing 4$");
    AddMenuItem(CluckMenu, 0, "Chicken Brest 5$");
    AddMenuItem(CluckMenu, 0, "Chicken Menu 15$");

    BurgerMenu = CreateMenu("Burger Shot", 1, 30.0, 130.0, 150.0, 200.0);
    AddMenuItem(BurgerMenu, 0, "Cola 3$");
    AddMenuItem(BurgerMenu, 0, "Fries 5$");
    AddMenuItem(BurgerMenu, 0, "Hamburger 10$");
    AddMenuItem(BurgerMenu, 0, "Cheeseburger 15$");

    PizzaMenu = CreateMenu("Well Stacked Pizza", 1, 30.0, 130.0, 150.0, 200.0);
    AddMenuItem(PizzaMenu, 0, "Cheese Pizza 20$");
    AddMenuItem(PizzaMenu, 0, "Bacon Pizza 25$");
    AddMenuItem(PizzaMenu, 0, "Large Pizza 35$");
    
    
    
   	ColorMenu1_1 = CreateMenu ( "Color 1", 1, 10.0, 130.0, 100.0, 80.0);
 	AddMenuItem(ColorMenu1_1, 0, "Next");
  	AddMenuItem(ColorMenu1_1, 0, "Back");
  	AddMenuItem(ColorMenu1_1, 0, "Color 2");

  	ColorMenu1_2 = CreateMenu ( "Color 1", 1, 10.0, 130.0, 100.0, 80.0);
 	AddMenuItem(ColorMenu1_2, 0, "Back");
  	AddMenuItem(ColorMenu1_2, 0, "Next");
  	AddMenuItem(ColorMenu1_2, 0, "Color 2");

  	ColorMenu2_1 = CreateMenu ( "Color 2", 1, 10.0, 130.0, 100.0, 80.0);
 	AddMenuItem(ColorMenu2_1, 0, "Next");
  	AddMenuItem(ColorMenu2_1, 0, "Back");
  	AddMenuItem(ColorMenu2_1, 0, "Color 1");

  	ColorMenu2_2 = CreateMenu ( "Color 2", 1, 10.0, 130.0, 100.0, 80.0);
 	AddMenuItem(ColorMenu2_2, 0, "Back");
  	AddMenuItem(ColorMenu2_2, 0, "Next");
  	AddMenuItem(ColorMenu2_2, 0, "Color 1");

	//--------------------------------------pickups-----------------------------------------------------
	reporters1 = CreatePickup(1318, 23, 1817.9104,-1299.3134,114.7723,-1);
	reporters2 = CreatePickup(1318, 23, 1775.0707,-1302.3418,131.7332,-1);
    FBIhealth = CreatePickup(1240, 23, 269.0308,192.4900,1008.1719,-1);
    FBIarmour = CreatePickup(1242, 23, 270.7910,192.4699,1008.1719,-1);
    LSparashut = CreatePickup(371, 23, 1544.2231,-1353.3922,329.4742,-1);
    HitOrderPickup = CreatePickup(1239, 23, 1073.2488,-345.1180,73.9922,-1);
    BuyGunPickupLS1 = CreatePickup(1239, 23, 295.5595,-38.3363,1001.5156,-1);
    BuyGunPickupLS2 = CreatePickup(1239, 23, 291.5370,-83.4359,1001.5156,-1);
    BuyGunPickupSF = CreatePickup(1239, 23, 314.0800,-133.7614,999.6016,-1);
    DildoPickup = CreatePickup(1239, 23, -105.9010,-11.1894,1000.7188,-1);
    ShopPickup = CreatePickup(1239, 23, -28.9472,-184.9986,1003.5469,-1);
    FBIammo = CreatePickup(1239, 23, 2268.139892,2448.333984,3.531250,-1);
    NGammo = CreatePickup(1239, 23, 2748.8118,-2450.6052,13.6484,-1);
    
    HelpGamePickup = CreatePickup(1239, 23, 2271.337158,1642.040527,1084.234375,-1);
    HelpGamePickup2 = CreatePickup(1239, 23, -2031.559448,480.224731,35.171875,-1);

  	yakuzapickup1 = CreatePickup(1318, 23, 725.7070,-1276.2742,13.6484,-1);
    yakuzapickup2 = CreatePickup(1318, 23, 1298.7312,-796.7465,1084.0078,1);
    yakuzapickup3 = CreatePickup(1318, 23, 691.3839,-1276.0283,13.5606,-1);
    yakuzapickup4 = CreatePickup(1318, 23, 1260.6440,-785.3558,1091.9063,1);
    
	entermarket1 = CreatePickup(1318, 23, 1315.4512,-898.3685,39.5781,0);
	entermarket2 = CreatePickup(1318, 23, 1352.2220,-1758.4839,13.5078,0);
	entermarket3 = CreatePickup(1318, 23, 1833.4568,-1842.5432,13.5781,0);
	entermarket4 = CreatePickup(1318, 23, -1562.5619,-2733.0984,48.7435,0);
	
	exitmarket = CreatePickup(1318, 23, -25.9431,-187.8879,1003.5469,-1);
	entermotel = CreatePickup(1318, 23, 2232.999511,-1159.787963,25.890625,0);
	
	entermotel2 = CreatePickup(1318, 23, -2051.260009,459.269012,35.171875,0);
	exitmotel = CreatePickup(1318, 23, 2214.369628,-1150.509521,1025.796875,-1);
	
	entergroove = CreatePickup(1318, 23, 2495.310546,-1690.488647,14.765625,0);
	exitgroove = CreatePickup(1318, 23, 2496.048828,-1692.606323,1014.742187,-1);
	
	enterpriton = CreatePickup(1318, 23, 2166.317382,-1671.611083,15.073940,0);
	exitpriton = CreatePickup(1318, 23, 318.613586,1115.513427,1083.882812,-1);
	
	entergum = CreatePickup(1318, 23, 2228.922363,-1721.958007,13.567499,0);
	exitgum = CreatePickup(1318, 23, 772.264282,-4.963808,1000.728637,-1);
	
	enterlspd = CreatePickup(1318, 23, 1554.581542,-1675.425048,16.195312,0);
	exitlspd = CreatePickup(1318, 23, 246.445220,62.816158,1003.640625,-1);
	
	entermeria = CreatePickup(1318, 23, 1481.172973,-1770.710571,18.795755,0);
	exitmeria = CreatePickup(1318, 23, 389.954864,173.708053,1008.382812,7);
	
	entermeriya2 = CreatePickup(1318, 23, 1485.632324,-1825.701171,13.546875,0);
	exitmeriya2 = CreatePickup(1318, 23, 366.491119,159.368392,1008.382812,7);
	
	enterpigpen = CreatePickup(1318, 23, 2421.329833,-1220.493164,25.481655,0);
	exitpigpen = CreatePickup(1318, 23, 1204.909545,-12.774657,1000.921875,-1);
	
	enterah1 = CreatePickup(1318, 23, -2026.7753,-101.7621,35.1641,0);
	exitah1 = CreatePickup(1318, 23, -2026.962646,-103.757049,1035.171875,-1);
	
	enterah2 = CreatePickup(1318, 23, -2029.7410,-121.4863,35.1805,0);
	exitah2 = CreatePickup(1318, 23, -2029.857177,-119.737976,1035.171875,-1);
	
	enterhitbar = CreatePickup(1318, 23, 1051.7867,-345.8065,73.9922,0);
	enterotel = CreatePickup(1318, 23, 487.210601,-1639.552368,23.703125,-1);
	
	exitotel = CreatePickup(1318, 23, 2266.123291,1647.600952,1084.234375,-1);
	enterkrisha = CreatePickup(1318, 23, 2265.174316,1619.543579,1090.445312,-1);
	exitkrisha = CreatePickup(1318, 23, 473.513031,-1644.226318,58.593750,-1);
	entermayak = CreatePickup(1318, 23, 154.242996,-1946.412597,5.259998,-1);
	exitmayak = CreatePickup(1318, 23, 154.066421,-1953.929077,47.872184,-1);
	enterburger1 = CreatePickup(1318, 23, 810.9327,-1616.2001,13.5469,-1);
	enterburger2 = CreatePickup(1318, 23, 1199.3496,-918.7203,43.1182,-1);
	enterburger3 = CreatePickup(1318, 23, -2336.5461,-166.8837,35.5547,-1);
	enterburger4 = CreatePickup(1318, 23, -1911.5809,828.5219,35.1719,-1);
	enterburger5 = CreatePickup(1318, 23, -2356.3728,1008.1473,50.8984,-1);
	exitburger = CreatePickup(1318, 23, 363.3109,-74.8833,1001.5078,-1);
	enterclucken1 = CreatePickup(1318, 23, 2419.9895,-1508.7998,24.0000,-1);
	enterclucken2 = CreatePickup(1318, 23, 2397.8162,-1898.6080,13.5469,-1);
	enterclucken3 = CreatePickup(1318, 23, 926.5375,-1353.0509,13.3768,-1);
	enterclucken4 = CreatePickup(1318, 23, -2154.7622,-2460.5427,30.8516,-1);
	enterclucken5 = CreatePickup(1318, 23, -1816.7517,617.8959,35.1719,-1);
	enterclucken6 = CreatePickup(1318, 23, -2671.8381,259.1743,4.6328,-1);
	enterclucken7 = CreatePickup(1318, 23, 172.6109,1176.6442,14.7645,-1);
	enterclucken8 = CreatePickup(1318, 23, -1213.3403,1830.8080,41.9297,-1);
	exitclucken = CreatePickup(1318, 23, 365.7095,-11.9247,1001.8516,-1);
	enterpizza1 = CreatePickup(1318, 23, 2105.0952,-1806.5259,13.5547,-1);
	enterpizza2 = CreatePickup(1318, 23, 203.5395,-202.3930,1.5781,-1);
	enterpizza3 = CreatePickup(1318, 23, 2333.0598,75.1422,26.6210,-1);
	enterpizza4 = CreatePickup(1318, 23, -1808.1520,945.5316,24.8906,-1);
	enterpizza5 = CreatePickup(1318, 23, -1721.3602,1359.7861,7.1853,-1);
	exitpizza = CreatePickup(1318, 23, 372.3731,-133.2329,1001.4922,-1);
	pizzamenupickup = CreatePickup(2663, 23, 375.8239,-119.0235,1001.4995,-1);
	burgermenupickup = CreatePickup(2663, 23, 377.1347,-67.6812,1001.5151,-1);
	cluckenmenupickup = CreatePickup(2663, 23, 369.8165,-6.3198,1001.8589,-1);
	RMenter = CreatePickup(1318, 23, -2719.3340,-319.1279,7.8438,-1);
	RMexit = CreatePickup(1318, 23, 966.7971,-53.3281,1001.1246,-1);
	LCNexit = CreatePickup(1318, 23, 2531.8882,-1285.8754,1054.6406,-1);
	LCNenter = CreatePickup(1318, 23, 1122.7075,-2036.9041,69.8942,-1);
	BikersEnter = CreatePickup(1318, 23, 681.5646,-473.5313,16.5363,-1);
	BikersExit = CreatePickup(1318, 23, -229.2910,1401.4465,27.7656,-1);
	fbienter = CreatePickup(1318, 23, 2282.152832,2424.313232,3.476562,-1);
	fbiexit = CreatePickup(1318, 23, 288.8358,167.1759,1007.1719, 4);
	
	fbienter2 = CreatePickup(1318, 23, 2286.999023,2431.543457,10.820312,-1);
	fbiexit2 = CreatePickup(1318, 23, 238.680999,139.859390,1003.023437, 4);
	
	MedicEnter = CreatePickup(1318, 23, 1173.105957,-1323.351684,15.396314,-1);
	MedicExit = CreatePickup(1318, 23, 367.1275,162.2855,1019.9844,-1);
	MedicRoomEnter = CreatePickup(1318, 23, 340.3040,169.3903,1019.9912,-1);
	MedicRoomExit = CreatePickup(1318, 23, 340.3749,168.1544,1019.9912,-1);
	KolhozEnter = CreatePickup(1318, 23, -1061.0630,-1205.4618,129.3565,-1);
	FChotelEnter = CreatePickup(1318, 23, -89.0555,1229.4919,19.7422,-1);
	FChotelExit = CreatePickup(1318, 23, 975.1527,-8.6607,1001.1484,-1);
	FCchurchEnter = CreatePickup(1318, 23, -207.8754,1119.2405,20.4297,-1);
	FCchurchExit = CreatePickup(1318, 23, -213.7304,1151.2462,8.7677,-1);
	
	FixCarPickup[0] = CreatePickup(3096, 23, 2493.9863,-1464.3943,24.0252,-1);
	FixCarPickup[1] = CreatePickup(3096, 23, -1823.196533,1282.240966,16.139249,-1);
	FixCarPickup[2] = CreatePickup(3096, 23, 2782.384521,1448.922363,10.780518,-1);
	
	FCchurchPickup = CreatePickup(2894, 23, -211.6607,1109.6003,4.7443,-1);
	
	WhoreReg = CreatePickup(1239, 23, 1215.1304,-11.8431,1000.9219,0); //Whore Registration
	DrugDealerReg = CreatePickup(1239, 23, 2166.3772,-1675.3829,15.0859,-1); //DrugDealer Registration
	PaperBoyReg = CreatePickup(1239, 23, 1815.6328,-1276.4525,114.7723,-1); //PaperBoy Registration
	ArmsDealerReg = CreatePickup(1239, 23, 1366.4325,-1275.2096,13.5469,-1); //ArmsDealer Registration
	ForemanReg = CreatePickup(1239, 23, -1541.359741,117.920593,3.554687,-1); // работа грузчика

    #if defined LOCALHOST
        SetGameModeText("CS:RPG 6.2 Localhost");
    #endif
    
	#if defined SAMP1
	    SetGameModeText("CS:RPG 6.2 Orange");
	#endif
	
	#if defined SAMP2
		SetGameModeText("CS:RPG 6.2 Green");
	#endif
	
	#if defined SAMP3
		SetGameModeText("CS:RPG 6.2 Teal");
	#endif
	
	
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime) SetWorldTime(wtime);
	
	AllowInteriorWeapons(1);
	
	collectorcars[0] = AddStaticVehicleEx(428,-2429.889160,515.532043,30.053186,214.209793,-1,-1,60); //inkasator
	collectorcars[1] = AddStaticVehicleEx(428,-2425.965087,518.947570,30.092737,222.163604,-1,-1,60); //inkasator
	collectorcars[2] = AddStaticVehicleEx(428,-2422.385009,521.922546,30.053934,227.450454,-1,-1,60); //inkasator
	collectorcars[3] = AddStaticVehicleEx(428,-2419.416259,525.225769,30.064157,232.583953,-1,-1,60); //inkasator
	collectorcars[4] = AddStaticVehicleEx(428,-2416.842773,528.750915,30.045532,239.376525,-1,-1,60); //inkasator
	collectorcars[5] = AddStaticVehicleEx(428,-2415.215820,532.059204,30.050991,249.231475,-1,-1,60); //Collectro1
	collectorcars[6] = AddStaticVehicleEx(428,-2414.257568,535.810302,30.089351,258.111877,-1,-1,60); //Collectro2
	collectorcars[7] = AddStaticVehicleEx(428,-2413.954101,539.914062,30.085494,266.725128,-1,-1,60); //Collectro3
	collectorcars[8] = AddStaticVehicleEx(428,-2437.857177,532.122863,30.027179,179.154571,-1,-1,60); //Collectro4
	collectorcars[9] = AddStaticVehicleEx(428,-2443.425048,532.562561,30.039783,178.268234,-1,-1,60); //Collectro5
    /*_______________________________________________________________________________________________________________*/

   	PoliceCar[0] = AddStaticVehicleEx(596,1558.392000,-1710.859000,5.466783,1.0, -1, -1,300);// Police Patrul Car
	PoliceCar[1] = AddStaticVehicleEx(596,1569.639000,-1710.859000,5.466783,1.0, -1, -1,300);// Police Patrul Car
	PoliceCar[2] = AddStaticVehicleEx(596,1561.860000,-1694.905000,6.139762,222.0,-1, -1,300);// Police Patrul Car
	PoliceCar[3] = AddStaticVehicleEx(596,1545.7845,-1684.4004,5.6342,271.1593, 89, 1,300);//Police Patrul Car White
	PoliceCar[4] = AddStaticVehicleEx(596,1530.1611,-1676.0326,5.4563,231.7766, 89, 1,300);//Police Patrul Car White
	PoliceCar[5] = AddStaticVehicleEx(596,1601.308000,-1621.916000,13.056540,90.0, -1, -1,300);// Police Patrul near gate
	PoliceCar[6] = AddStaticVehicleEx(596,1535.8459,-1668.7560,13.2653,359.7447,-1, -1,300);// Police Patrul Car outside
	PoliceCar[7] = AddStaticVehicleEx(596,1535.8275,-1678.0283,13.1680,359.9876, -1, -1,300);// Police Patrul Car outside
	PoliceCar[8] = AddStaticVehicleEx(427,1544.6221,-1658.9352,6.0194,90.1530,0,0,300); // LSPD Enforcer
	PoliceCar[9] = AddStaticVehicleEx(427,1545.4005,-1672.0621,6.0193,90.7039,0,0,300); // LSPD Enforcer
	PoliceCar[10] = AddStaticVehicleEx(497, 1517.8,-1656.1,13.7,0.0, -1, -1,600);// Police Maveric
	PoliceCar[11] = AddStaticVehicleEx(523,1539.392000,-1646.262000,6.274928,180.0, -1, -1,300);// POLICE bike
	PoliceCar[12] = AddStaticVehicleEx(523,1531.254000,-1647.431000,6.274976,200.0, -1, -1,300);// POLICE bike
	PoliceCar[13] = AddStaticVehicleEx(411,1544.903686,-1654.959350,5.617702,90.516632,1,1,300); //ЛСПД инфернус
	PoliceCar[14] = AddStaticVehicleEx(411,1544.985717,-1650.828613,5.617704,90.201911,1,1,300); //ЛСПД инфернус
	PoliceCar[15] = AddStaticVehicleEx(599,1602.931640,-1695.809082,6.089663,88.878494,-1, -1,300); //Rancher1
	PoliceCar[16] = AddStaticVehicleEx(599,1602.953369,-1704.127197,6.087874,89.793373,-1, -1,300); //Rancher2
	PoliceCar[17] = AddStaticVehicleEx(601,1595.546508,-1710.763793,5.650292,359.841125,-1, -1,300); //SWAT1
	PoliceCar[18] = AddStaticVehicleEx(601,1587.418212,-1710.958007,5.650218,359.658203,-1, -1,300); //SWAT2
	/*_________________________________________________________________________________________________________________*/

	/*_______________________________________________________________________________________________________________*/
	
	FBICar[0] = AddStaticVehicleEx(598,2239.689453,2447.700927,3.015995, 270.0, 0,1,300); //1rank
	FBICar[1] = AddStaticVehicleEx(598,2239.689453,2451.862548,3.021060, 270.0, 0,1,300); //1rank
	FBICar[2] = AddStaticVehicleEx(598,2239.689453,2456.432373,3.020387, 270.0, 0,1,300); //1rank
	FBICar[3] = AddStaticVehicleEx(598,2239.689453,2461.243164,3.027242, 270.0, 0,1,300); //1rank

	FBICar[4] = AddStaticVehicleEx(490,2246.641845,2430.842529,3.404895, 360.0, 0,0,300); //1rank
	FBICar[5] = AddStaticVehicleEx(490,2251.095214,2430.842529,3.405085, 360.0, 0,0,300); //1rank
	FBICar[6] = AddStaticVehicleEx(490,2255.226806,2430.842529,3.321468, 360.0, 0,0,300); //1rank
	FBICar[7] = AddStaticVehicleEx(490,2259.706054,2430.842529,3.298794, 360.0, 0,0,300); //1rank

	FBICar[8] = AddStaticVehicleEx(411,2264.100097,2430.842529,3.270894, 360.0, 0,0,300); //8rank
	FBICar[9] = AddStaticVehicleEx(411,2268.248779,2430.842529,3.243244, 360.0, 0,0,300); //8rank
	FBICar[10] = AddStaticVehicleEx(411,2272.724365,2430.842529,3.400433, 360.0, 0,0,300); //8rank

	FBICar[11] = AddStaticVehicleEx(528,2239.689453,2442.056884,3.318547, 270.0, -1,-1,300); //3rank
	FBICar[12] = AddStaticVehicleEx(528,2239.689453,2437.442138,3.317364, 270.0, -1,-1,300); //3rank

	FBICar[13] = AddStaticVehicleEx(427,2315.216308,2460.266357,3.405499, 90.0, -1,-1,300); //4rank
	FBICar[14] = AddStaticVehicleEx(427,2315.216308,2465.625244,3.405468, 90.0, -1,-1,300); //4rank

	FBICar[15] = AddStaticVehicleEx(601,2315.216308,2470.735107,3.032087, 90.0, -1,-1,300); //8rank
	FBICar[16] = AddStaticVehicleEx(601,2315.216308,2475.336181,3.037192, 90.0, -1,-1,300); //8rank
	
	/*_______________________________________________________________________________________________________________*/

	ArmyCar[0] = AddStaticVehicleEx(596,2748.0654,-2445.2014,13.6410,306.6428, 44, 86,300);//  Army Patrul car
    ArmyCar[1] = AddStaticVehicleEx(596,2741.9866,-2388.9304,13.6235,173.3015, 44, 86,300);//Army Patrul car
	ArmyCar[2] = AddStaticVehicleEx(596,2749.5103,-2389.0337,13.6437,179.0417, 44, 86,300);//Army Patrul car
	ArmyCar[3] = AddStaticVehicleEx(596,2745.8521,-2440.6802,13.6389,297.7873,44, 86,300);//Army Patrul car
	ArmyCar[4] = AddStaticVehicleEx(470,2749.0298,-2459.8870,13.6443,267.9608,65,65,300); //armiya Patriot
	ArmyCar[5] = AddStaticVehicleEx(470,2749.0703,-2464.6067,13.6408,270.0799,65,65,300); //armiya Patriot
	ArmyCar[6] = AddStaticVehicleEx(470,2748.9851,-2470.5537,13.6408,269.4522,65,65,300); //armiya Patriot
	ArmyCar[7] = AddStaticVehicleEx(430,2678.9365,-2312.0979,-0.3203,270.2968,-1, -1,300);//  NG BOAT
	ArmyCar[8] = AddStaticVehicleEx(430,2721.1709,-2312.0095,-0.1630,271.5305,-1, -1,300);//  NG BOAT
	ArmyCar[9] = AddStaticVehicleEx(433,2794.3357,-2494.2292,13.6355,89.4859,65,65,300); //armiya Barracks
	ArmyCar[10] = AddStaticVehicleEx(433,2782.4270,-2493.9734,13.6450,88.8264,65,65,300); //armiya Barracks
	ArmyCar[11] = AddStaticVehicleEx(432,2796.7556,-2417.9419,13.6235,91.2080,65,65,300); //armiya Tank
	ArmyCar[12] = AddStaticVehicleEx(432,2782.6665,-2418.2390,13.6205,91.2091,65,65,300); //armiya Tank
	ArmyCar[13] = AddStaticVehicleEx(427,2796.1057,-2455.3555,13.6248,88.2033,44, 86,300); //armiya Enforcer
	ArmyCar[14] = AddStaticVehicleEx(427,2783.3381,-2455.7114,13.6271,91.3949,44, 86,300); //armiya Enforcer
	ArmyCar[15] = AddStaticVehicleEx(520,2648.8313,-2338.9158,14.6951,267.7382,0,0,300);// army hydra
	ArmyCar[16] = AddStaticVehicleEx(520,2670.6843,-2342.2925,14.9863,267.7382,0,0,300);// army hydra
	ArmyCar[17] = AddStaticVehicleEx(520,2699.8582,-2340.7800,14.6999,270.2156,0,0,300); // army hydra
	ArmyCar[18] = AddStaticVehicleEx(425,2787.1179,-2360.9309,14.3049,42.3610, -1, -1,300);// Hunter
	ArmyCar[19] = AddStaticVehicleEx(425,2770.1790,-2359.4521,14.3020,37.0792, -1, -1,300);//  Hunter
	ArmyCar[20] = AddStaticVehicleEx(563,2793.623535,-2341.141601,14.438180,115.488075,9,10,300); //army helecopter
	ArmyCar[21] = AddStaticVehicleEx(548,2792.602050,-2541.209960,15.272440,352.846099,9,10,300); //army helecopter 2
	ArmyCar[22] = AddStaticVehicleEx(523,2782.4956,-2387.5371,13.1982,182.7486, -1, -1,300);// bike
	ArmyCar[23] = AddStaticVehicleEx(523,2787.5332,-2387.1650,13.2045,181.3002,9,10,300); //bike
	ArmyCar[24] = AddStaticVehicleEx(409,2764.5461,-2386.6609,13.2029,172.3318,44,86,300); //limo
 	/*_______________________________________________________________________________________________________________*/
	
	AmbulanceCar[0] = AddStaticVehicleEx(416,1177.915893,-1338.790283,14.042266,270.000,1,3,300); //ambul
	AmbulanceCar[1] = AddStaticVehicleEx(416,1177.915893,-1308.144409,14.028267,270.000,1,3,300); //ambul2
	AmbulanceCar[2] = AddStaticVehicleEx(599,1146.291625,-1315.357299,13.830185,90.000,1,3,300); //ambul5
	AmbulanceCar[3] = AddStaticVehicleEx(599,1146.291625,-1309.461303,13.855526,90.000,1,3,300); //ambul6
	AmbulanceCar[4] = AddStaticVehicleEx(598,1146.291625,-1304.605468,13.413659,90.000,1,3,300); //ambul7
	AmbulanceCar[8] = AddStaticVehicleEx(598,1146.291625,-1300.213745,13.399256,90.000,1,3,300); //ambul3
	AmbulanceCar[9] = AddStaticVehicleEx(598,1146.291625,-1295.141845,13.391626,90.000,1,3,300); //ambul4
	AmbulanceCar[5] = AddStaticVehicleEx(407,1134.493408,-1341.947509,14.002524,0.873414,1,3,300); //ambul8
	AmbulanceCar[6] = AddStaticVehicleEx(407,1137.961791,-1341.947509,14.002524,0.873414,1,3,300); //ambul9
	AmbulanceCar[7] = AddStaticVehicleEx(487,1158.239624,-1362.417480,26.816074,360.0,1,3,300); //ambul10
	/*_______________________________________________________________________________________________________________*/

	MeriyaCar[0] = AddStaticVehicleEx(579,1431.035644,-1844.027465,13.482490,358.768768,1,1,300);//meriya
	MeriyaCar[1] = AddStaticVehicleEx(579,1435.189819,-1844.161621,13.478088,1.588932,1,1,300);
	MeriyaCar[2] = AddStaticVehicleEx(579,1439.118652,-1844.294921,13.479617,2.444052,1,1,300);
	MeriyaCar[3] = AddStaticVehicleEx(580,1451.736938,-1844.349243,13.342947,1.257488,1,1,300);
	MeriyaCar[4] = AddStaticVehicleEx(580,1456.075439,-1844.774414,13.343003,0.308693,1,1,300);
	MeriyaCar[5] = AddStaticVehicleEx(586,1472.134033,-1831.639648,13.066907,176.646820,1,1,300);
	MeriyaCar[6] = AddStaticVehicleEx(586,1474.830444,-1831.578247,13.066989,178.080352,1,1,300);
	MeriyaCar[7] = AddStaticVehicleEx(586,1477.885864,-1831.556152,13.067181,179.295272,1,1,300);
	MeriyaCar[8] = AddStaticVehicleEx(489,1491.881591,-1845.240722,13.690247,0.653125,1,1,300);
	MeriyaCar[9] = AddStaticVehicleEx(489,1497.082397,-1845.108398,13.690053,1.602067,1,1,300);
	MeriyaCar[10] = AddStaticVehicleEx(409,1507.201049,-1847.750000,13.346708,270.518218,1,1,300);
	MeriyaCar[12] = AddStaticVehicleEx(409,1519.150268,-1847.881225,13.346862,270.469696,1,1,300);//meriya
	MeriyaCar[13] = AddStaticVehicleEx(487, 1504.379516, -1815.391601, 33.600749, 270.0, 1,1, 300); //meriya
	/*_______________________________________________________________________________________________________________*/

	HitmansCar[0] = AddStaticVehicleEx(560,1081.7661,-292.9385,73.5639,138.0217,0,0,300);//Hitman Sultan
	HitmansCar[1] = AddStaticVehicleEx(560,1088.2595,-298.7804,73.5639,138.0216,0,0,300);//Hitman Sultan
	HitmansCar[2] = AddStaticVehicleEx(522,1067.2040,-289.5636,73.5622,177.1383,0,0,300);//Hitman Bike
	HitmansCar[3] = AddStaticVehicleEx(522,1070.8557,-289.9119,73.5580,177.0245,0,0,300); // hitman bike
	HitmansCar[4] = AddStaticVehicleEx(522,1074.1697,-289.8804,73.5520,181.5554,0,0,300); // hitman bike
	HitmansCar[5] = AddStaticVehicleEx(487,1106.7214,-338.8003,73.5604,90.3655, 0, 1,300); //  Hitman Chopper
	/*_______________________________________________________________________________________________________________*/

    SanNewsCar[0] = AddStaticVehicleEx(582,1811.7134,-1277.9507,13.7127,110.5726,14,CAR_COLOR,300); //San News
	SanNewsCar[1] = AddStaticVehicleEx(582,1810.1077,-1286.7697,13.6697,46.2338,14,CAR_COLOR,300); //San News
	SanNewsCar[2] = AddStaticVehicleEx(582,1806.7098,-1290.2946,13.6867,43.0134,14,CAR_COLOR,300); //  news car
	SanNewsCar[3] = AddStaticVehicleEx(582,1802.5642,-1294.1193,13.5415,37.8954,14,CAR_COLOR,300); //  news car
	SanNewsCar[4] = AddStaticVehicleEx(488,1822.6110,-1305.3663,134.7985,47.9500,-1,CAR_COLOR,300); //  news halicopter
	/*_______________________________________________________________________________________________________________*/

	LicenzersCar[0] = AddStaticVehicleEx(504,-2082.372070,-108.233520,35.096435,178.754150,CAR_COLOR,CAR_COLOR,1);// Driving School
	LicenzersCar[1] = AddStaticVehicleEx(504,-2074.945556,-108.282852,35.116703,180.258712,CAR_COLOR,CAR_COLOR,1);// Driving School
	LicenzersCar[2] = AddStaticVehicleEx(504,-2090.088623,-107.555961,35.112789,178.243850,CAR_COLOR,CAR_COLOR,1);// Driving School
	LicenzersCar[3] = AddStaticVehicleEx(525,-2089.722656,-84.273612,35.055294,179.764602, CAR_COLOR,CAR_COLOR,300); //Driving School
	LicenzersCar[4] = AddStaticVehicleEx(487,-2025.2632,-112.1971,39.8168,40.3219,CAR_COLOR,CAR_COLOR,300); //Licenzers maverick
	LicenzersCar[5] = AddStaticVehicleEx(421,-2085.356933,-85.021804,35.046558,178.931365,CAR_COLOR,CAR_COLOR,300); //Licenzers 400
	LicenzersCar[6] = AddStaticVehicleEx(421,-2081.174316,-85.106048,35.046554,179.107360,CAR_COLOR,CAR_COLOR,300); //Licenzers
	LicenzersCar[7] = AddStaticVehicleEx(421,-2076.818359,-84.978462,35.046546,180.219406,CAR_COLOR,CAR_COLOR,300); //Licenzers
	LicenzersCar[8] = AddStaticVehicleEx(421,-2072.627685,-84.886817,35.046558,179.460403,CAR_COLOR,CAR_COLOR,300); //Licenzers
	LicenzersCar[9] = AddStaticVehicleEx(521,-2068.364990,-84.757743,34.734798,177.211410,CAR_COLOR,CAR_COLOR,300); //Licenzers
 	LicenzersCar[10] = AddStaticVehicleEx(521,-2064.226074,-84.708076,34.735370,175.737304,CAR_COLOR,CAR_COLOR,300); //Licenzers
	LicenzersCar[11] = AddStaticVehicleEx(593,-2039.9586,-269.2237,36.5191,0.3117,-1,-1,300); //Licenzers Dodo



  	MehanikCar[0] = AddStaticVehicleEx(525,1632.6459,-1907.0642,13.4264,9.2861,0,0,30); //mexaniki
	MehanikCar[1] = AddStaticVehicleEx(525,1636.9139,-1906.3932,13.4268,13.3795,0,0,30); //mexaniki
	MehanikCar[2] = AddStaticVehicleEx(525,1641.2751,-1905.2960,13.4553,16.3191,0,0,30); //mexaniki
	MehanikCar[3] = AddStaticVehicleEx(525,1647.8096,-1892.1720,13.4296,105.9856,0,0,30); //mexaniki
	MehanikCar[4] = AddStaticVehicleEx(525,1649.8170,-1898.4095,13.4276,107.6232,0,0,30); //mexaniki


	ProdCarInfo[0][prodCar] = AddStaticVehicleEx(482,-2114.998535,-141.322387,35.442558,90.000,6,6,60); //Продукты
	ProdCarInfo[1][prodCar] = AddStaticVehicleEx(482,-2114.998535,-136.014358,35.437271,90.000,6,6,60); //Продукты
	ProdCarInfo[2][prodCar] = AddStaticVehicleEx(482,-2114.998535,-130.367721,35.444744,90.000,6,6,60); //Продукты
	ProdCarInfo[3][prodCar] = AddStaticVehicleEx(482,-2114.998535,-125.031524,35.438941,90.000,6,6,60); //Продукты
	ProdCarInfo[4][prodCar] = AddStaticVehicleEx(482,-2114.998535,-118.359916,35.446846,90.000,6,6,60); //Продукты
	ProdCarInfo[5][prodCar] = AddStaticVehicleEx(414,-2121.105224,-114.893249,35.412303,180.000,3,3,60); //Продукты
	ProdCarInfo[6][prodCar] = AddStaticVehicleEx(414,-2127.180419,-114.893249,35.414516,180.000,3,3,60); //Продукты
	ProdCarInfo[7][prodCar] = AddStaticVehicleEx(414,-2132.666992,-114.893249,35.417869,180.000,3,3,60); //Продукты

	ProdCarInfo[0][prodMax] = 100;
	ProdCarInfo[1][prodMax] = 100;
	ProdCarInfo[2][prodMax] = 100;
	ProdCarInfo[3][prodMax] = 100;
	ProdCarInfo[4][prodMax] = 100;
	ProdCarInfo[5][prodMax] = 200;
	ProdCarInfo[6][prodMax] = 200;
	ProdCarInfo[7][prodMax] = 200;

	for(new i, st[70]; i < sizeof(ProdCarInfo); i ++)
	{
		format(st, sizeof(st), "[Продукты]\n0 / %d", ProdCarInfo[i][prodMax]);
		switch(i)
		{
		    case 0..4:
			{
			    ProdCarInfo[i][prodCar3d] = Create3DTextLabel(st, COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0,0,1);
				Attach3DTextLabelToVehicle(ProdCarInfo[i][prodCar3d], ProdCarInfo[i][prodCar], 0.0, 0.0, 1.3);
			}
			default:
			{
			    ProdCarInfo[i][prodCar3d] = Create3DTextLabel(st, COLOR_LIGHTRED, 0.0, 0.0, 0.0, 20.0,0,1);
				Attach3DTextLabelToVehicle(ProdCarInfo[i][prodCar3d], ProdCarInfo[i][prodCar], 0.0, 0.0, 2.5);
			}
		}
	}
	/*_______________________________________________________________________________________________________________*/

 	KartCar[0] = AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,-1,-1,600); // kart
	KartCar[1] = AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,-1,-1,600); // kart
	KartCar[2] = AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,-1,-1,600); // kart
	KartCar[3] = AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,-1,-1,600); // kart
	KartCar[4] = AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,-1,-1,600); // kart
	KartCar[5] = AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,-1,-1,600); // kart

	HotringBizCar[0] = AddStaticVehicleEx(494,-1401.0436,-210.0052,1042.9913,1.6623,1,0,600); //hotring
	HotringBizCar[1] = AddStaticVehicleEx(494,-1400.4019,-219.9365,1043.0348,5.3554,1,3,600); //hotring
	HotringBizCar[2] = AddStaticVehicleEx(494,-1394.4932,-207.7917,1042.9963,3.6872,0,6,600); //hotring
	HotringBizCar[3] = AddStaticVehicleEx(494,-1393.7854,-217.9354,1043.0325,2.9556,1,2,600); //hotring

	Bike1BizCar[0] = AddStaticVehicleEx(468,-1445.6392,-592.3033,1055.7831,90.2133,-1,-1,600); //bike
	Bike1BizCar[1] = AddStaticVehicleEx(468,-1433.1708,-592.4930,1055.6533,92.4067,-1,-1,600); //bike
	Bike1BizCar[2] = AddStaticVehicleEx(468,-1448.5325,-584.4943,1055.4949,95.5400,-1,-1,600); //bike
	Bike1BizCar[3] = AddStaticVehicleEx(468,-1434.8973,-585.1266,1055.2488,91.1533,-1,-1,600); //bike

	Bike2BizCar[0] = AddStaticVehicleEx(468,-1449.2814,1610.7823,1052.5313,272.9406,-1,-1,600); // bike
	Bike2BizCar[1] = AddStaticVehicleEx(468,-1453.8767,1611.2418,1052.5313,89.0355,-1,-1,600); // bike
	Bike2BizCar[2] = AddStaticVehicleEx(468,-1454.4746,1614.3342,1052.5313,86.8422,-1,-1,600); // bike
	Bike2BizCar[3] = AddStaticVehicleEx(468,-1449.5795,1614.0684,1052.5313,269.2039,-1,-1,600); // bike

	RentLSCar[0] = AddStaticVehicleEx(434,551.7929,-1285.5260,16.9303,0.4147,-1, -1,600);// Rent car LS
	RentLSCar[1] = AddStaticVehicleEx(568,536.9888,-1286.5275,16.9993,359.1704,-1, -1,600); // Rent car LS
	RentLSCar[2] = AddStaticVehicleEx(434,544.1793,-1286.1422,16.9492,7.3116,-1, -1,600);//  Rent car LS

	RentSFCar[0] = AddStaticVehicleEx(451,-1949.2495,272.1418,35.1773,90.3239,-1, -1,600); //  Rent car SF
	RentSFCar[1] = AddStaticVehicleEx(411,-1949.2379,267.6700,35.1781,88.7693,-1, -1,600); //  Rent car SF
	RentSFCar[2] = AddStaticVehicleEx(541,-1949.1146,262.8506,35.1755,89.1814,-1, -1,600); //  Rent car SF


// Свалка
	DumpCar[0][dMaincar] = AddStaticVehicleEx(440, 2078.875976, -2009.397705, 14.0, 270.0, 1,1, 20); // Авто на свалке для развозки железа 1
	DumpCar[1][dMaincar] = AddStaticVehicleEx(440, 2078.875976, -2013.356811, 14.0, 270.0, 1,1, 20); // Авто на свалке для развозки железа 2
	DumpCar[2][dMaincar] = AddStaticVehicleEx(440, 2078.875976, -2017.877929, 14.0, 270.0, 1,1, 20); // Авто на свалке для развозки железа 3
	DumpCar[3][dMaincar] = AddStaticVehicleEx(440, 2078.875976, -2022.547119, 14.0, 270.0, 1,1, 20); // Авто на свалке для развозки железа 4
	DumpCar[4][dMaincar] = AddStaticVehicleEx(440, 2078.875976, -2027.167236, 14.0, 270.0, 1,1, 20); // Авто на свалке для развозки железа 5

	DumpCar[0][dText] = Create3DTextLabel("[Металл]\n0 / 400", COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0, 0, 1);
	DumpCar[1][dText] = Create3DTextLabel("[Металл]\n0 / 400", COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0, 0, 1);
	DumpCar[2][dText] = Create3DTextLabel("[Металл]\n0 / 400", COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0, 0, 1);
	DumpCar[3][dText] = Create3DTextLabel("[Металл]\n0 / 400", COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0, 0, 1);
	DumpCar[4][dText] = Create3DTextLabel("[Металл]\n0 / 400", COLOR_YELLOW, 0.0, 0.0, 0.0, 20.0, 0, 1);

	Attach3DTextLabelToVehicle(DumpCar[0][dText], DumpCar[0][dMaincar], 0.0, 0.0, 1.3);
	Attach3DTextLabelToVehicle(DumpCar[1][dText], DumpCar[1][dMaincar], 0.0, 0.0, 1.3);
	Attach3DTextLabelToVehicle(DumpCar[2][dText], DumpCar[2][dMaincar], 0.0, 0.0, 1.3);
	Attach3DTextLabelToVehicle(DumpCar[3][dText], DumpCar[3][dMaincar], 0.0, 0.0, 1.3);
	Attach3DTextLabelToVehicle(DumpCar[4][dText], DumpCar[4][dMaincar], 0.0, 0.0, 1.3);

	Dump3dText = Create3DTextLabel("Склад свалки:\n - кг. железа", COLOR_YELLOW, 2115.69995117,-2012.69995117, 15.5, 30.0, 0, 1);
	LoadDump = Create3DTextLabel("Склад свалки:\n - кг. железа\n\nЗакупка металла: /buym\nПродажа: /sellm\nМатериалы: /buymats", COLOR_YELLOW, 2105.302490, -2005.581787, 16.905874, 30.0, 0, 1);

	PickupJobDump = CreatePickup(1275, 23, 2199.009033,-1973.465942,13.558123 ,-1);
	Create3DTextLabel("Устроиться рабочим\nна свалку",0x50A3DAFF, 2199.009033, -1973.465942, 14.2 , 20.0, 0, 1);

	PickupDriverDump = CreatePickup(1275, 23, 2078.231933,-2003.258422,13.546875 ,-1);
	Create3DTextLabel("Устроиться развозчиком\nна свалку",0x50A3DAFF, 2078.231933,-2003.258422,14.2 , 20.0, 0, 1);

	PickupDumpInfo = CreatePickup(1239, 23, 2207.061523,-1969.227294,13.546875 ,-1);
	Create3DTextLabel("Информация о\nсвалке",COLOR_YELLOW, 2207.061523,-1969.227294,14.3 , 20.0, 0, 1);
// -------
	
	
	AddStaticVehicleEx(452,720.1,-1694.0,-0.4,179.4,-1,-1,600);//  Fishboat/*Speeder*/
	AddStaticVehicleEx(452,721.2,-1629.4,-0.4,180.9,-1,-1,600);//  Fishboat/*Speeder*/
	AddStaticVehicleEx(452,739.5,-1670.5,-0.6,177.5,-1,-1,600);//  Fishboat/*Speeder*/
	AddStaticVehicleEx(452,-1474.4949,693.0169,0.1996,0.0751,-1,-1,600);//  Fishboat SF/*Speeder*/
	AddStaticVehicleEx(452,-1720.0717,1439.6177,-0.4913,357.6789,-1,-1,600);//  Fishboat SF/*Speeder*/
	AddStaticVehicleEx(522,510.0554,-1670.1398,18.4009,232.4957,-1,-1,600); //Civilian
	AddStaticVehicleEx(522,507.7443,-1670.1136,18.5623,226.9444,-1,-1,600); //Civilian
	AddStaticVehicleEx(566,456.4489,-1662.8346,25.3000,266.5353,-1,-1,600); //Civilian
	AddStaticVehicleEx(566,465.0759,-1663.5051,24.8432,262.9745,-1,-1,600); //Civilian
	AddStaticVehicleEx(550,473.1018,-1664.4036,24.2175,262.5009,-1,-1,600); //Civilian
	AddStaticVehicleEx(551,523.3051,-1639.0876,17.3105,52.0054,-1,-1,600); //Civilian
	AddStaticVehicleEx(547,523.3530,-1632.8403,16.9283,52.7630,-1,-1,600); //Civilian
	AddStaticVehicleEx(546,524.1045,-1627.0927,16.6391,49.9733,-1,-1,600); //Civilian
	AddStaticVehicleEx(462,490.9986,-1648.6233,20.8295,349.7057,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(462,492.6526,-1648.8660,20.4865,341.6450,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(462,494.5615,-1649.3923,20.1161,337.4634,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(462,496.2277,-1649.9010,19.7942,329.3047,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(462,515.2543,-1645.7312,17.5304,267.8578,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(462,515.3282,-1644.3658,17.4451,269.9651,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(462,515.3030,-1642.5837,17.3314,263.5999,-1,-1,600); //Civilian  foggio
	AddStaticVehicleEx(481,464.2664,-1651.0801,24.8580,206.3010,-1,-1,600); //Civilian  BMX
	AddStaticVehicleEx(481,466.2944,-1651.1046,24.7077,197.6950,-1,-1,600); //Civilian  BMX
	AddStaticVehicleEx(481,468.2113,-1650.9976,24.5572,192.5075,-1,-1,600); //Civilian  BMX

	AddStaticVehicleEx(487,1873.4508,-2297.6816,14.4354,267.2892,-1,-1,200);//  Airport LS Maveric
	AddStaticVehicleEx(487,1874.5907,-2273.6152,14.4354,267.2892,-1,-1,200);//  Airport LS Maveric
	AddStaticVehicleEx(593,1907.7614,-2624.4097,13.5416,53.1810,-1,-1,100);//  Airport LS
	AddStaticVehicleEx(593,1887.0736,-2627.6543,13.5394,52.6116,-1,-1,100);//  Airport LS
	AddStaticVehicleEx(519,1807.1860,-2422.8118,14.4765,199.2664,-1,-1,10);//  Airport LS shamal
	AddStaticVehicleEx(519,1849.4150,-2408.0503,14.4752,199.2666,-1,-1,10);//  Airport LS shamal
	AddStaticVehicleEx(513,1835.3215,-2624.1938,13.5405,56.0569,-1,-1,10);//  Airport LS
	AddStaticVehicleEx(513,1813.2893,-2625.6296,13.5394,53.2858,-1,-1,10);//  Airport LS
    AddStaticVehicleEx(485,-1561.5775,-247.4698,14.1977,71.7823,-1,-1,600); //sf aero Baggage
	AddStaticVehicleEx(485,-1564.5059,-253.7084,14.2004,76.7856,-1,-1,600); //
	AddStaticVehicleEx(607,-1578.4683,-267.4833,14.2022,45.0880,-1,-1,600); //
	AddStaticVehicleEx(606,-1582.2810,-271.2352,14.2039,41.9268,-1,-1,600); //
	AddStaticVehicleEx(607,-1585.1707,-274.3304,14.2090,42.8437,-1,-1,600); //
	AddStaticVehicleEx(608,-1595.5560,-287.7863,14.1982,344.5401,-1,-1,600); //
	AddStaticVehicleEx(608,-1605.4204,-289.3177,14.1967,352.3698,-1,-1,600); // sf aero Baggage
	AddStaticVehicleEx(593,-1389.5063,-484.0412,14.2343,244.0577,-1,-1,10); // dodo
	AddStaticVehicleEx(593,-1355.7578,-468.8893,14.2264,160.9729,-1,-1,10); // dodo
	AddStaticVehicleEx(513,-1462.4144,-522.4224,14.2310,249.6110,-1,-1,10); // Stuntplane
	AddStaticVehicleEx(513,-1432.0225,-509.6197,14.2258,158.0284,-1,-1,10); // Stuntplane
	AddStaticVehicleEx(577,-1657.9160,-263.3477,14.1968,311.8167,-1,-1,10); // AT 400
	AddStaticVehicleEx(592,-1696.0488,-221.1076,14.1923,314.9405,-1,-1,10); // Andromada
	AddStaticVehicleEx(487,-1366.7427,-200.3010,14.1919,293.3734,-1,-1,200); // Maverick
	AddStaticVehicleEx(487,-1365.0106,-222.0950,14.1995,279.6068,-1,-1,200); // Maverick
	AddStaticVehicleEx(519,-1168.5463,-214.8890,14.1977,42.2144,-1,-1,10); // shamal
	AddStaticVehicleEx(519,-1186.3478,-234.8677,14.1917,45.0744,-1,-1,10); // shamal
	AddStaticVehicleEx(553,-1400.1162,-12.8270,16.1306,11.7763,-1,-1,10); // Nevada |sf aero|

	AddStaticVehicleEx(511,1589.166259,1630.958007,12.192847,180.0,-1,-1,10); //LVSamolet
	AddStaticVehicleEx(511,1615.455444,1630.958007,12.194235,180.0,-1,-1,10); //LVSamolet2
	AddStaticVehicleEx(487,1332.232177,1500.157714,10.996966,270.0,-1,-1,10); //LVvert1
	AddStaticVehicleEx(519,1275.659057,1324.408325,11.734013,270.0,-1,-1,10); //LVSamolet3
	
 	AddStaticVehicleEx(462,-2052.084472,476.562164,34.771911,303.647033,-1,-1,70); //отель СФ
	AddStaticVehicleEx(462,-2051.806640,478.738250,34.758827,303.647094,-1,-1,70); //отель СФ
	AddStaticVehicleEx(462,-2051.801025,481.831817,34.740203,303.647094,-1,-1,70); //отель СФ
	AddStaticVehicleEx(462,-2040.296264,460.234771,34.772506,328.597198,-1,-1,70); //отель СФ
	AddStaticVehicleEx(462,-2042.601074,460.234771,34.783252,328.597198,-1,-1,70); //отель СФ
	AddStaticVehicleEx(462,-2026.053955,454.611267,34.758968,265.022308,-1,-1,70); //отель СФ
	AddStaticVehicleEx(462,-2025.416381,460.234771,34.772113,328.597198,-1,-1,70); //отель СФ
	AddStaticVehicleEx(481,-2056.904785,470.576538,34.683570,238.703994,-1,-1,70); //отель СФ
	AddStaticVehicleEx(481,-2056.851562,468.970123,34.663745,238.704376,-1,-1,70); //отель СФ
	AddStaticVehicleEx(481,-2056.562255,472.895263,34.711566,238.704284,-1,-1,70); //отель СФ
	AddStaticVehicleEx(481,-2038.971679,452.503753,34.681446,212.788253,-1,-1,70); //отель СФ
	AddStaticVehicleEx(481,-2041.325439,452.236145,34.705146,212.788284,-1,-1,70); //отель СФ
	AddStaticVehicleEx(481,-2042.910278,452.508392,34.724494,212.788269,-1,-1,70); //отель СФ

	AddStaticVehicleEx(462,-2033.997436, 460.234771,34.771053, 328.597198,-1,-1,60); //otel
	AddStaticVehicleEx(462,-2032.396362, 460.234771,34.771587, 328.597198,-1,-1,60); //otel2
	AddStaticVehicleEx(462,-2030.961425, 460.234771,34.770877, 328.597198,-1,-1,60); //otel3
	AddStaticVehicleEx(462,-2028.944458, 460.234771,34.771415, 328.597198,-1,-1,60); //otel4
	AddStaticVehicleEx(462,-2023.964355, 460.234771,34.770946, 328.597198,-1,-1,60); //otel5
	AddStaticVehicleEx(462,-2022.253417, 460.234771,34.771663, 328.597198,-1,-1,60); //otel6
	AddStaticVehicleEx(462,-2020.530273, 460.234771,34.772384, 328.597198,-1,-1,60); //otel7

	AutoSchoolMoped[0] = AddStaticVehicleEx(462,-2015.038085,-99.695899,35.043121,271.679046,CAR_COLOR,CAR_COLOR,60); //moped1
	AutoSchoolMoped[1] = AddStaticVehicleEx(462,-2015.019653,-97.436271,35.041965,271.679046,CAR_COLOR,CAR_COLOR,60); //moped2
	AutoSchoolMoped[2] = AddStaticVehicleEx(462,-2015.273315,-95.118659,35.021007,271.679046,CAR_COLOR,CAR_COLOR,60); //moped3
	AutoSchoolMoped[3] = AddStaticVehicleEx(462,-2015.298339,-92.592994,35.008106,271.679046,CAR_COLOR,CAR_COLOR,60); //moped4
	AutoSchoolMoped[4] = AddStaticVehicleEx(462,-2015.447998,-89.856590,35.002208,271.679046,CAR_COLOR,CAR_COLOR,60); //moped5

	AddStaticVehicleEx(521, 2764.987060, 1265.601318, 10.314075, 270.000000,-1,-1,30); //motik
	AddStaticVehicleEx(521, 2764.987060, 1268.640991, 10.314952, 270.000000,-1,-1,30); //motik
	AddStaticVehicleEx(521, 2764.987060, 1271.845825, 10.318172, 270.000000,-1,-1,30); //motik
	AddStaticVehicleEx(521, 2764.987060, 1274.824829, 10.322001, 270.000000,-1,-1,30); //motik
	AddStaticVehicleEx(521, 2764.987060, 1278.174438, 10.314328, 270.000000,-1,-1,30); //motik
	AddStaticVehicleEx(521, 2764.987060, 1281.534179, 10.309111, 270.000000,-1,-1,30); //motik
	AddStaticVehicleEx(462, 2764.987060, 1284.812622, 10.346911, 270.000000,-1,-1,30); //moped
	AddStaticVehicleEx(462, 2764.987060, 1288.192626, 10.343460, 270.000000,-1,-1,30); //moped
	AddStaticVehicleEx(462, 2764.987060, 1291.254394, 10.340922, 270.000000,-1,-1,30); //moped
	AddStaticVehicleEx(510, 2778.879638, 1295.017578, 10.358068, 180.000000,-1,-1,30); //velik
	AddStaticVehicleEx(510, 2781.850097, 1295.017578, 10.331580, 180.000000,-1,-1,30); //velik
	AddStaticVehicleEx(510, 2785.148681, 1295.017578, 10.343436, 180.000000,-1,-1,30); //velik
	AddStaticVehicleEx(510, 2788.289794, 1295.017578, 10.328954, 180.000000,-1,-1,30); //velik
	AddStaticVehicleEx(510, 2791.627685, 1295.017578, 10.306427, 180.000000,-1,-1,30); //velik
	AddStaticVehicleEx(510, 2794.843017, 1295.017578, 10.350701, 180.000000,-1,-1,30); //velik
	AddStaticVehicleEx(462,-77.1214,1222.2167,19.3671,178.9361,-1,-1,70); // FC hotel
	AddStaticVehicleEx(462,-79.4019,1221.9907,19.3824,179.6165,-1,-1,70); // FC hotel
	AddStaticVehicleEx(462,-81.9812,1222.0081,19.3888,179.6188,-1,-1,70); // FC hotel
	AddStaticVehicleEx(462,-84.4153,1222.0242,19.3999,179.6216,-1,-1,70); // FC hotel
	AddStaticVehicleEx(481,-103.9784,1222.1531,19.4000,179.6216,-1,-1,70); // FC hotel
	AddStaticVehicleEx(481,-101.3205,1222.1351,19.4092,179.6243,-1,-1,70); // FC hotel
	AddStaticVehicleEx(481,-99.1059,1222.1205,19.3683,179.6249,-1,-1,70); // FC hotel
	AddStaticVehicleEx(481,-96.7082,1222.1047,19.3818,179.6226,-1,-1,70); // FC hotel

	AddRandomVehicleEx(2120.264404,-1783.338500,12.783883,0.154507); //LS
	AddRandomVehicleEx(2102.865722,-1777.087280,12.788291,82.148506); //LS
	AddRandomVehicleEx(2052.923095,-1902.985595,12.942940,179.744720); //LS
	AddRandomVehicleEx(1938.160400,-2089.680175,12.958324,91.200042); //LS
	AddRandomVehicleEx(1938.484985,-2080.052001,12.955655,269.783843); //LS
	AddRandomVehicleEx(2292.838623,-1683.344604,13.276732,357.834533); //LS
	AddRandomVehicleEx(2297.627685,-1646.986694,14.163272,88.210029); //LS
	AddRandomVehicleEx(2435.864746,-1242.438598,23.723733,177.605270); //LS
	AddRandomVehicleEx(2426.381591,-1243.342163,23.515850,356.245666); //LS
	AddRandomVehicleEx(1498.025634,-1487.418701,12.948265,178.398941); //LS
	AddRandomVehicleEx(1509.570556,-1486.453613,12.947292,357.051940); //LS
	AddRandomVehicleEx(1179.802490,-911.359741,42.650054,185.120819); //LS
	AddRandomVehicleEx(350.509155,-1809.788330,3.908611,179.919082); //LS
	AddRandomVehicleEx(340.890930,-1809.374145,3.912203,1.082037); //LS
	AddRandomVehicleEx(328.038269,-1809.147949,3.882390,179.852813); //LS
	AddRandomVehicleEx(-80.768562,-1584.450439,2.006771,225.762329); //LS
	AddRandomVehicleEx(-44.285949,-1568.846557,1.978734,337.046417); //LS
	AddRandomVehicleEx(854.990844,-1528.046020,13.046046,269.565521); //LS
	AddRandomVehicleEx(855.314208,-1513.125366,12.954198,265.507934); //LS
	AddRandomVehicleEx(871.896301,-1505.296508,12.816658,89.646423); //LS
	AddRandomVehicleEx(893.396301,-1518.714843,12.805695,179.705932); //LS
	AddRandomVehicleEx(809.632934,-1464.788085,12.765945,87.390380); //LS
	AddRandomVehicleEx(2801.834960,-1287.610351,42.180244,178.378616); //LS
	AddRandomVehicleEx(2777.733642,-1319.969726,38.158710,269.390258); //LS
	AddRandomVehicleEx(2784.908203,-1365.491333,24.070867,276.102386); //LS
	AddRandomVehicleEx(2782.707031,-1373.193237,23.289453,272.856506); //LS
	AddRandomVehicleEx(-81.261947,-1198.480224,1.710202,165.656982); //DB
	AddRandomVehicleEx(-90.202270,-1196.350341,1.724226,163.424163); //DB
	AddRandomVehicleEx(-2124.078857,-403.780914,34.731887,245.947463); //SF
	AddRandomVehicleEx(-2623.998535,-35.486797,3.731982,0.167860); //SF
	AddRandomVehicleEx(-2633.451171,-35.446784,3.732043,180.619461); //SF
	AddRandomVehicleEx(-2635.311523,87.309783,3.489626,271.000732); //SF
	AddRandomVehicleEx(-2645.446533,1341.358032,6.561798,274.146270); //SF
	AddRandomVehicleEx(-2645.322509,1353.056152,6.561193,88.981483); //SF
	AddRandomVehicleEx(-1708.380249,1349.259155,6.575656,136.209274); //SF
	AddRandomVehicleEx(-2217.110595,-118.979148,34.716430,89.873352); //SF
	AddRandomVehicleEx(-2265.873291,120.985771,34.567821,271.899566); //SF
	AddRandomVehicleEx(-2265.793701,129.541610,34.567897,90.920822); //SF
	AddRandomVehicleEx(-2265.367675,141.164245,34.554397,272.356384); //SF
	AddRandomVehicleEx(-2265.612792,212.695632,34.559989,269.366607); //SF
	AddRandomVehicleEx(-2253.465576,2336.169189,4.208636,267.936706); //XZ
	AddRandomVehicleEx(-2252.790527,2327.079833,4.208630,87.604003); //XZ
	AddRandomVehicleEx(-2252.257324,2320.860351,4.208538,88.154426); //XZ
	AddRandomVehicleEx(-2271.730468,2309.322753,4.216120,90.190193); //XZ
	AddRandomVehicleEx(-2449.743896,2224.673583,4.239623,181.043823); //XZ
	AddRandomVehicleEx(-2473.501953,2225.206787,4.239712,179.472488); //XZ
	AddRandomVehicleEx(44.976486,1175.790649,18.060073,88.116363); //XZ
	AddRandomVehicleEx(47.648277,1156.325439,18.059947,179.798248); //XZ
	AddRandomVehicleEx(-13.115037,1219.372070,18.748857,90.438858); //XZ
	AddRandomVehicleEx(-33.930362,1165.604003,18.837703,179.983261); //XZ
	AddRandomVehicleEx(-177.387908,1222.526123,19.138317,90.235244); //XZ
	AddRandomVehicleEx(-177.982116,1011.672668,19.138292,181.574981); //XZ
	AddRandomVehicleEx(1915.858032,708.728088,10.216285,180.374053); //LV
	AddRandomVehicleEx(1926.020629,708.754516,10.216436,178.998077); //LV
	AddRandomVehicleEx(1938.474365,697.623779,10.216416,180.524337); //LV
	AddRandomVehicleEx(2578.808593,745.909545,10.216424,3.496520); //LV
	AddRandomVehicleEx(2632.862792,746.752014,10.216415,177.811447); //LV
	AddRandomVehicleEx(2633.215820,1239.062377,10.216474,92.872558); //LV
	AddRandomVehicleEx(2142.562011,1009.340087,10.216455,89.759727); //LV
	AddRandomVehicleEx(2162.953613,1019.168151,10.216376,89.723609); //LV
	AddRandomVehicleEx(2074.757568,1077.531127,10.067834,359.766754); //LV
	AddRandomVehicleEx(2039.406738,1206.059448,10.067840,0.000000); //LV
	AddRandomVehicleEx(2107.194824,1397.772460,10.216733,359.577087); //LV
	AddRandomVehicleEx(2126.117919,1408.865600,10.216294,178.827774); //LV
	AddRandomVehicleEx(2104.973632,2039.841186,10.216373,90.412376); //LV
	AddRandomVehicleEx(-234.961502,2595.546630,62.099269,181.087081); //XZ
	AddRandomVehicleEx(-225.800201,2595.592773,62.099052,1.542833); //XZ
	AddRandomVehicleEx(-883.265441,2754.086914,45.247993,272.677551); //XZ
	AddRandomVehicleEx(-1400.258300,2634.037353,55.123828,91.719429); //XZ
	AddRandomVehicleEx(-1440.059082,2626.345703,55.231884,88.624435); //XZ
	AddRandomVehicleEx(328.326629,-53.733966,0.907213,88.255363); //XZ
	AddRandomVehicleEx(314.979858,-47.318298,0.974174,178.689529); //XZ
	AddRandomVehicleEx(355.815063,-82.506896,0.746739,0.486312); //XZ
	AddRandomVehicleEx(2148.506347,-1157.510131,23.240447,269.995849); //LS
	AddRandomVehicleEx(2148.067382,-1170.568847,23.216236,96.219718); //LS
	AddRandomVehicleEx(1704.621337,-1059.554077,23.302240,181.577026); //LS
	AddRandomVehicleEx(1658.152709,-1084.695678,23.302167,91.344818); //LS
	AddRandomVehicleEx(1629.803710,-1098.299560,23.302185,90.462905); //LS
	AddRandomVehicleEx(1627.823730,-1012.012512,23.294569,343.694183); //LS
	AddRandomVehicleEx(201.201156,-1443.763916,12.468769,138.147384); //LS
	AddRandomVehicleEx(1228.395385,298.229278,18.950798,152.839157); //XZ
	AddRandomVehicleEx(1218.433593,306.132324,18.986309,336.086730); //XZ
	AddRandomVehicleEx(1367.014648,365.743286,19.950634,246.234100); //XZ
	AddRandomVehicleEx(1381.429565,268.674865,18.962881,152.853424); //XZ
	AddRandomVehicleEx(2435.676269,35.297542,25.880470,269.634887); //XZ
	AddRandomVehicleEx(2470.128662,89.050865,25.880237,359.231536); //XZ
	AddRandomVehicleEx(2555.572753,103.633796,25.607210,93.529098); //XZ
	AddRandomVehicleEx(2538.212402,-15.753849,25.880388,88.886489); //XZ
	AddRandomVehicleEx(667.551025,-586.746032,15.731852,272.527313); //XZ
	AddRandomVehicleEx(667.756286,-546.109191,15.731868,271.159576); //XZ
	AddRandomVehicleEx(646.295898,-501.648651,15.731887,1.139192); //XZ
	AddRandomVehicleEx(709.039062,-442.433624,15.731854,0.891322); //XZ
	AddRandomVehicleEx(-2191.134033,-2269.774414,30.021131,231.349044); //XZ
	AddRandomVehicleEx(-2139.904296,-2256.770751,30.024541,329.172241); //XZ
	AddRandomVehicleEx(-2112.368896,-2241.855224,30.021133,229.184280); //XZ
	AddRandomVehicleEx(-2069.703613,-2455.885742,30.020944,142.565582); //XZ
	AddRandomVehicleEx(-2113.402343,-2490.628417,30.020952,228.954544); //XZ
	AddRandomVehicleEx(2205.952148,-1164.924194,25.126909,91.424110); //LS
	AddRandomVehicleEx(2228.141601,-1166.244628,25.146190,269.581451); //LS
	AddRandomVehicleEx(2217.984619,-1170.272094,25.122478,270.397827); //LS
	AddRandomVehicleEx(1996.337036,-1275.191772,23.216405,359.972015); //LS
	AddRandomVehicleEx(1098.576538,-1775.657958,12.740572,89.568389); //LS
	AddRandomVehicleEx(1098.348510,-1769.586059,12.744853,88.452919); //LS
	AddRandomVehicleEx(-2043.060302,-503.032440,34.731861,346.933441); //SF
	AddRandomVehicleEx(-2348.506347,-125.610099,34.708446,359.766754); //SF
	AddRandomVehicleEx(-2337.577148,-125.174308,34.708644,178.503646); //SF
	AddRandomVehicleEx(-1932.255126,584.866027,34.524921,358.707824); //SF
	AddRandomVehicleEx(-1938.491333,585.381530,34.514469,359.139160); //SF
	AddRandomVehicleEx(1614.733154,-1119.148437,23.479417,267.482757); //LS
	AddRandomVehicleEx(1652.752563,-1137.221069,23.478153,3.636717); //LS
	AddRandomVehicleEx(1674.393188,-1102.597534,23.472961,270.747070); //LS
	AddRandomVehicleEx(1697.177734,-1086.725952,23.479782,0.457193); //LS
	AddRandomVehicleEx(1756.965454,-1015.017822,23.523626,347.081390); //LS
	AddRandomVehicleEx(1660.670532,-1014.699157,23.467407,189.939773); //LS
	AddRandomVehicleEx(1547.251708,-1025.989135,23.469388,161.563461); //LS



	AddStaticVehicleEx(522,171.8522,-1339.4788,69.8443,180.5183,-1,-1,600); //car id 84

	HouseCar172[0] = AddStaticVehicleEx(411,253.535842,2877.339599,15.182428,229.590316,-1,-1,600); //house 172
	HouseCar172[1] = AddStaticVehicleEx(444,267.980072,2875.959228,13.838186,123.292190,-1,-1,600); //house 172
	AddStaticVehicleEx(446,253.841049,2930.491699,2.394440,1.897995,-1,-1,600); //house 172
	AddStaticVehicleEx(452,262.867889,2930.791259,2.376034,1.897884,-1,-1,600); //house 172
	AddStaticVehicleEx(451,256.349060,2860.979492,18.870584,246.535522,-1,-1,600); //house 172

	AddStaticVehicleEx(487,-295.1010,1734.2400,42.8643,36.9022,0,1, 600);//house34 vert

	rastamob0 = AddStaticVehicleEx(483,-703.159606,977.909973,12.397580,124.543045,1,1,300);		ChangeVehiclePaintjob(rastamob0, 0); 	//rastamobil l
	rastamob1 = AddStaticVehicleEx(483,-2806.923339,-1497.373046,139.281463,187.601852,1,1,300); ChangeVehiclePaintjob(rastamob1, 0);	//rastamobil 2
	rastamob2 = AddStaticVehicleEx(483,-513.845153,-1470.689575,11.781765,82.475997,1,1,300); 	ChangeVehiclePaintjob(rastamob2, 0);	//rastamobil 3
	rastamob3 = AddStaticVehicleEx(483,-1100.319213,-1631.418457,76.364654,269.547912,1,1,300); 	ChangeVehiclePaintjob(rastamob3, 0);	//rastamobil 4
	rastamob4 = AddStaticVehicleEx(483,-1083.274780,-1664.116821,76.362838,0.367443,1,1,300); 	ChangeVehiclePaintjob(rastamob4, 0);	//rastamobil 5
	rastamob5 = AddStaticVehicleEx(483,-366.594940,-1038.762817,59.019649,186.239440,1,1,300);	ChangeVehiclePaintjob(rastamob5, 0);	//rastamobil 6

	AddStaticVehicleEx(470,-1300.1213,2513.5549,86.6217,175.5408,-1,-1,600); /*h173patriot = */
	AddStaticVehicleEx(563,-1337.0082,2512.6208,86.4972,180.7441,-1,-1,600); /*h173raindance = */
	AddStaticVehicleEx(495,684.7805,-1063.2483,49.7275,327.4419,144,1,600); /*h91SandKing = */

//=================================[БОТЫ]======================================================================
	MyBotVehicle = AddStaticVehicleEx(437, 0.0, 0.0, 5.0, 0.0, 3, 3, 5000);
	vehicle3Dtext = Create3DTextLabel( "Bobbi\nLos Santos <> San Fierro", COLOR_GREEN3D, 0.0, 0.0, 0.0, 50.0, 0, 2 );
	Attach3DTextLabelToVehicle( vehicle3Dtext, MyBotVehicle, 0.0, 0.0, 3.0);

	TramVehicle = AddStaticVehicle(449, -2139.2524, 30.7945, 35.1719, 260.6744, -1, -1);
	vehicle3Dtext = Create3DTextLabel( "Трамвай\n Сан Фиерро: маршрут № 1", COLOR_GREEN3D, 0.0, 0.0, 0.0, 50.0, 0, 2 );
	Attach3DTextLabelToVehicle( vehicle3Dtext, TramVehicle, 0.0, 0.0, 2.0);

	TrainNPCVehicle = AddStaticVehicleEx(537, 0.0, 0.0, 5.0, 0.0, -1,-1,5000);
	vehicle3Dtext = Create3DTextLabel( "Поезд\nЛос Сантос >> Лас Вентурас >> Сан Фиерро", COLOR_GREEN3D, 0.0, 0.0, 0.0, 50.0, 0, 2 );
	Attach3DTextLabelToVehicle( vehicle3Dtext, TrainNPCVehicle, 0.0, 0.0, 2.0);

//=================================================================================================================
	LinkVehicleToInterior(HotringBizCar[0], 7); SetVehicleVirtualWorld(HotringBizCar[0], 1);
	LinkVehicleToInterior(HotringBizCar[1], 7); SetVehicleVirtualWorld(HotringBizCar[1], 1);
	LinkVehicleToInterior(HotringBizCar[2], 7); SetVehicleVirtualWorld(HotringBizCar[2], 1);
	LinkVehicleToInterior(HotringBizCar[3], 7); SetVehicleVirtualWorld(HotringBizCar[3], 1);
	LinkVehicleToInterior(Bike1BizCar[0], 4); SetVehicleVirtualWorld(Bike1BizCar[0], 1);
	LinkVehicleToInterior(Bike1BizCar[1], 4); SetVehicleVirtualWorld(Bike1BizCar[1], 1);
	LinkVehicleToInterior(Bike1BizCar[2], 4); SetVehicleVirtualWorld(Bike1BizCar[2], 1);
	LinkVehicleToInterior(Bike1BizCar[3], 4); SetVehicleVirtualWorld(Bike1BizCar[3], 1);
	LinkVehicleToInterior(Bike2BizCar[0], 14); SetVehicleVirtualWorld(Bike2BizCar[0], 1);
	LinkVehicleToInterior(Bike2BizCar[1], 14); SetVehicleVirtualWorld(Bike2BizCar[1], 1);
	LinkVehicleToInterior(Bike2BizCar[2], 14); SetVehicleVirtualWorld(Bike2BizCar[2], 1);
	LinkVehicleToInterior(Bike2BizCar[3], 14); SetVehicleVirtualWorld(Bike2BizCar[3], 1);



    Create3DTextLabel(" >> Работа: Проститутка <<",0x50A3DAFF,1215.1304,-11.8431,1001.9219,20.0,0,1);
    Create3DTextLabel(" >> Работа: Наркодилер <<",0x50A3DAFF,2166.3772,-1675.3829,16.0859,20.0,0,1);
    Create3DTextLabel(" >> Работа: Разнощик газет <<",0x50A3DAFF,1815.6328,-1276.4525,115.7723,20.0,0,1);
    Create3DTextLabel(" >> Работа: Продавец оружия <<",0x50A3DAFF,1366.4325,-1275.2096,14.5469,20.0,0,1);
	Create3DTextLabel( " >> Работа: Грузчик <<" , 0x50A3DAFF, -1541.359741,117.920593,4.1,20.0,0,1);
	
    Create3DTextLabel(" > Газеты <\nРепортеру: /paper - написать газету\nРазносчику газет: /papers - список газет",COLOR_GREEN3D,1804.8960,-1303.5201,115.7723,20.0,0,1);
    Create3DTextLabel(" > Наркотики <\nИспользуйте /get drugs\nчтобы взять наркотики",COLOR_GREEN3D,323.0342,1118.5804,1084.8828,20.0,0,1);
    Create3DTextLabel(" > Выход на крышу < ",COLOR_GREEN3D,1817.9104,-1299.3134,115.7723,20.0,0,1); //reporters
	Create3DTextLabel("> Объявление заключенным < \n* Запрещены оскорбления\n* Запрещен ДМ и драки\n\nЗа несоблюдение правил\n вы будете наказаны",COLOR_CGREEN3d,265.735778,79.276184,1003.170,6.0,0,1);
	Create3DTextLabel("Задавать вопросы по игре\nвы можете командой /ask\n\nЛицензиары и лидеры онлайн /online",COLOR_CGREEN3d,2215.922363,-1153.455078,1026.351562,7.0,2,1);
	Create3DTextLabel("Задавать вопросы по игре\nвы можете командой /ask\n\nЛицензиары и лидеры онлайн /online",COLOR_CGREEN3d,2266.676269,1639.436523,1086.476684,7.0,0,1);

	Create3DTextLabel("{fdff00}Список инструкторов можно посмотреть\nкомандой {ff7a00}/online",0xFF8000FF, -2029.219238,-102.016822,36.289363, 20.0, 0,1 );

	Create3DTextLabel("Помощь новичкам\nпо игре на сервере",COLOR_GREEN3D,2271.337158,1642.040527,1085.634375,10.0,0,1);//
	Create3DTextLabel("Помощь новичкам\nпо игре на сервере",COLOR_GREEN3D,-2031.559448,480.224731,36.471875,30.0,0,1);//

	Create3DTextLabel("Здание регистрации на гонки",0xFF8000FF, -1544.135253,-441.174926,7.000000, 20.0, 0,1 );
    Create3DTextLabel("{ffffff}_____________________________\n{FF8000}Встаньте на пикап, чтобы\nзарегистрироваться на гонку\n{ffffff}_____________________________",0xFF8000FF, 822.046569,1.812449,1005.579687, 20.0, 1,1 );
    Create3DTextLabel("Создать гонку", COLOR_GREEN3D, -1663.788330, 1207.899780, 8.0, 20.0, 0,1 );


	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 834.554138,3.19,1005.179687, 10.0, 2, 1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 830.57,-1.150254,1005.179687, 10.0, 2, 1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 834.554138,3.19,1005.179687, 10.0, 1, 1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 830.57,-1.150254,1005.179687, 10.0, 1, 1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF,-2033.0284423, -57.4361305200, 35.77579956, 10.0, 0,1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 1540.1967773, -1618.22351074, 13.99746113, 10.0, 0,1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 475.04376221, -1647.71386719, 24.90574722, 10.0, 0,1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 717.04113770, -1440.43103027, 13.98196201, 10.0, 0,1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 1834.3392000, -1851.03900000, 13.83264000, 10.0, 0,1 );
	Create3DTextLabel("Банкомат\nнажмите [F]",0xFF8000FF, 2837.1000976,  1283.80004883, 11.5, 10.0, 0,1 );



    CarColorPickup = CreatePickup(19130, 14, 1697.713134,-1473.033325,13.546875,-1);
    Create3DTextLabel( "{ffffff}______________________\n{ff3500}Покраска\n{9df009}Чтобы покрасить авто\nзаедьте на пикап\n{ffffff}______________________", COLOR_GREEN3D, 1697.713134,-1473.033325,15.000000, 30.0, 0, 2 );
	


	KolhozText = Create3DTextLabel(">> Склад фермы: 0/15000 <<\n>> Склад притона: 0/5000 <<", 0xFF8000FF, -1066.9712,-1245.6775,130.2188, 50.0, 0, 1);
	PritonText = Create3DTextLabel(">> Склад притона: 0/5000 <<", 0xFF8000FF, 2161.9656,-1659.5684,15.0859, 50.0, 0,1 );
	RifaText = Create3DTextLabel("Склад материалов: 0/50000\nПродать мат-ы на склад /sellmats",0xFF8000FF, 1708.983764,757.699035,12.820312, 40.0, 0,1 );
	UpdateMatsDrugsTexts();
	
	WantedCarsText = Create3DTextLabel(">> Wanted Cars <<",0xFF8000FF, -1569.04272461,132.36479187,5.55468750, 25.0, 0,0 );
	Create3DTextLabel(RGB_WHITE">> Используйте " RGB_GREEN"/dropcar " RGB_WHITE"чтобы продать автомобиль <<",0x50A3DAFF,-1547.9330,124.6081,4.5547,20.0,0,0);


    
 	if (realtime)
	{
		new tmphour,tmpminute,tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
    
	ConnectNPC("[BOT]Tram","tram");
   	ConnectNPC("[BOT]Bobbi","mybot");
   	ConnectNPC("[BOT]Train","train");
   	
    CreateBizz3DLabels();
    
	for(new c=0; c< 100; c++)
	{
	    CannabisDeleted[c] = 0;
 		CreateCannabisPickup(c+1);
 		CreateCannabisObject(c+1);
 	}
	UpdateWantedCars();
	
	return 1;
}

public OnGameModeExit()
{
	Elevator_Destroy();
	mysql_close();
	return 1;
}

public OnObjectMoved(objectid)
{
    new Float:x, Float:y, Float:z;
	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
		if(objectid == Obj_FloorDoors[i][0])
		{
		    GetObjectPos(Obj_FloorDoors[i][0], x, y, z);

		    if(x < X_DOOR_L_OPENED - 0.5)   // Some floor doors have shut, move the elevator to next floor in queue:
		    {
				Elevator_MoveToFloor(ElevatorQueue[0]);
				RemoveFirstQueueFloor();
			}
		}
	}

	if(objectid == Obj_Elevator)   // The elevator reached the specified floor.
	{
	    KillTimer(ElevatorBoostTimer);  // Kills the timer, in case the elevator reached the floor before boost.

	    FloorRequestedBy[ElevatorFloor] = INVALID_PLAYER_ID;

	    Elevator_OpenDoors();
	    Floor_OpenDoors(ElevatorFloor);

	    GetObjectPos(Obj_Elevator, x, y, z);
	    Label_Elevator	= Create3DTextLabel("Нажмите 'F' чтобы выбрать этаж", 0xFFFFDD, 1784.9822, -1302.0426, z - 0.9, 4.0, 0, 1);

	    ElevatorState 	= ELEVATOR_STATE_WAITING;
	    SetTimer("Elevator_TurnToIdle", ELEVATOR_WAIT_TIME, 0);
	}

	return 1;
}

public SyncUp()
{
	new string[128];
	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;

	if(tmpminute == 15)
	{
	    switch(tmphour)
	    {
	        case 0, 3, 6, 9, 12, 15, 18, 21:
	        {
				for ( new cc; cc < 24; cc++) if(RaceCar[cc] != 0) DestroyVehicle(RaceCar[cc]), RaceCar[cc] = 0;
				for ( new d; d < 5; d ++ ) strmid(racersdialog[d], "none" , 0, strlen("none"), 255);

				SendClientMessageToAll(COLOR_INFO, "Начало гонок через 7 минут, регистрация у аэропорта San Fierro");

				switch(random(6))
		   		{
		     		case 0: RaceTrack = 0;
		       		case 1: RaceTrack = 1;
		       		case 2: RaceTrack = 2;
		       		case 3: RaceTrack = 3;
		       		case 4: RaceTrack = 4;
		         	default: RaceTrack = 5;
				}
				RaceOpen = true;
				RacePrize = 0;
				RacersReg = 0;
				CountRace = 0;
				TimerRace = SetTimer("CountRaceSF", 60000, 1);
	        }
	        case 1, 7, 10, 13, 16, 19, 22:
	        {
				SendClientMessageToAll(COLOR_INFO, "Начало пейнтболла через 10 минут, регистрация у колеса обозрения в Los Santos");
				PaintOpenReg = true;
				PeintMoney = 0;
				for(new i; i < 15; i ++)
				{
					strmid(PaintList[i][Killername], "Нет", 0, strlen("Нет"), 255);
					PaintList[i][KillsPoint] = 0;
					PaintList[i][DeathsPoint] = 0;
					PaintList[i][PlayerID] = -1;
					PaintList[i][Sortirovan] = 0;
					PaintList[i][DamagePoint] = 0;
				}
				PeintTimer = SetTimerEx("PeintTim", 6*1000*60, 0, "d", 4);
	        }
			case 2, 5, 8, 11, 14, 17, 20, 23:
			{
				SendClientMessageToAll(COLOR_INFO, "Начало ТДМ через 10 минут, регистрация на заводе К.А.С.С.");
                TDM_Money = 0;
                TDM_Players = 0;
                OpenTDM = true;
                TextDrawSetString(TDM_Count, "~r~Red:~w~0~n~~b~Blue:~w~0");
				for(new i; i < sizeof(TDM_Info); i ++)
				{
                    strmid(TDM_Info[i][0][TDM_Name], "Нет", 0, strlen("Нет"), 255);
                    TDM_Info[i][0][TDM_On] = 0;
                    TDM_Info[i][0][TDM_Kills] = 0;
                    TDM_Info[i][0][TDM_Playerid] = -1;

                    strmid(TDM_Info[i][1][TDM_Name], "Нет", 0, strlen("Нет"), 255);
                    TDM_Info[i][1][TDM_On] = 0;
                    TDM_Info[i][1][TDM_Kills] = 0;
                    TDM_Info[i][1][TDM_Playerid] = -1;
				}
				TDM_Timer = SetTimerEx("TdmTim", 6*1000*60, 0, "d", 4);
			}
		}
	}

	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		switch(tmphour)
		{
			case 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20:
	  		{
				switch(random(9))
				{
					case 1: SetWeather(2);
					case 2: SetWeather(3);
					case 3: SetWeather(4);
					case 4: SetWeather(5);
					case 5: SetWeather(10);
					case 6: SetWeather(12);
					case 7: SetWeather(14);
					default: SetWeather(15);
				}
			}
		}

		format(string, sizeof(string), "~ Сейчас %d:00 часов",tmphour);
		SendClientMessageToAll(COLOR_WHITE, string);

		
		ghour = tmphour;
		PayDay();
		MySQL_UpdateBans();
		MySQL_UpdateBansIp();
		UpdateWantedCars();
		SaveAllSBizzes();
		SaveAllBizzes();
		SetWorldTime(tmphour);
		
		switch(tmphour)
		{
		    case 4:
		    {
				SetTimerEx("KickAll", 10000, 0, "d", 0);
				Restart = 1;
				SendClientMessageToAll(COLOR_RED, "Внимание! В 04:05 будет рестарт сервера, просьба всем выйти, вы сможете продолжить игру после рестарта!");
				SetGameModeText("RESTART");
				MySQL_UpdateVips();
				
				SetTimer("GModeExit", 300000, 0);
		    }
		    case 20:
		    {
   				format(string, sizeof(string), "~ Лучший хелпер за день: "RGB_GREEN"%s", besthelper);
				SendClientMessageToAll(COLOR_WHITE, string);
			}
			case 21: CheckHouses();
			case 7:  CheckBizs();
			case 8:  CheckSBizs();
		}
	}
	
	/*	#if !defined LOCALHOST
	new players_online;
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i)) players_online++;
	}
	
	format(string, sizeof(string), "crime-streets.ru/online_update.php?id=%d&online=%d&checkpass=littledick1321", SERVER_ID, players_online);
	HTTP(0, 1, string, "", "Online_Update");
	#endif*/
}
/*
forward Online_Update(id, code, data[]);
public Online_Update(id, code, data[])
{
	if(code != 200) return printf("Ошибка при обновлении онлайна %d", code);
	if(strval(data) != 0) return printf("Ошибка при обновлении онлайна_2 %d", strval(data));
	return 1;
}*/

stock GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public Production()
{
    printf("Кикнуто: %d | Выходов: %d | Обрывов: %d", dsc_kick, dsc_exit, dsc_timeout);
    
  	new string[256];
   	switch(random(6))
	{
		case 1:
		{
		    for(new i; i < MAX_PLAYERS; i ++)
		    {
		        if(!IsPlayerConnected(i) || GetPVarInt(i, "Level") > 3) continue;
	  			SendClientMessage(i, COLOR_INFO2, "На сервере запрещены ДМ, ДБ, Флуд, любого рода читы, оскорбления и т.д. Команды сервера /help");
				SendClientMessage(i, COLOR_INFO3, "Увидели читера? Используйте /report id жалоба и его накажут");
			}
		}
		case 2:
		{
		    for(new i; i < MAX_PLAYERS; i ++)
		    {
		        if(!IsPlayerConnected(i) || GetPVarInt(i, "Level") > 3) continue;
				SendClientMessage(i, COLOR_INFO2, "Списки инструкторов, адвокатов и лидеров онлайн - /online");
				SendClientMessage(i, COLOR_INFO3, "Посетите сайт сервера www.crime-streets.ru, раздел FAQ поможет найти ответы на интересующие вас вопросы");
			}
		}
		case 3:
		{
		    for(new i; i < MAX_PLAYERS; i ++)
		    {
		        if(!IsPlayerConnected(i) || GetPVarInt(i, "Level") > 3) continue;
				SendClientMessage(i, COLOR_INFO2, "Хотите приобрести дом, машину или вступить в организацию? Просмотрите объявления командой /ad");
				SendClientMessage(i, COLOR_INFO3, "Подать объявление можно в любом банкомате");
			}
		}
		case 4:
		{
		    for(new i; i < MAX_PLAYERS; i ++)
		    {
		        if(!IsPlayerConnected(i) || GetPVarInt(i, "Level") > 3) continue;
				SendClientMessage(i, COLOR_INFO2, "Нужен телефон? Купите его в магазине 24/7. В магазине вы также сможете найти много интересующих Вас товаров");
				SendClientMessage(i, COLOR_INFO3, "Не знаете куда идти? Система /gps всегда поможет Вам");
			}
		}
		case 5:
		{
		    for(new i; i < MAX_PLAYERS; i ++)
		    {
		        if(!IsPlayerConnected(i) || GetPVarInt(i, "Level") > 3) continue;
				SendClientMessage(i, COLOR_INFO2, "Надоели скучные радиостанции в машине? Купите mp3 плеер в 24/7 и слушайте интернет радио");
				SendClientMessage(i, COLOR_INFO3, "Магазин 24/7 можно найти при помощи /gps");
			}
		}
	}
	SendClientMessageToAll(COLOR_INFO2, "Хочешь быть крутым? Получай +1 уровень к админке за каждые задоначенные 1000 руб одним платежом");
	SendClientMessageToAll(COLOR_INFO2, "Покажи поцонам со двора, кто решает на крайме");
	
	new h, m, s;
	gettime(h, m, s);
	if(h < sizeof(HoursOnline) && h >= 0 && m > 25 && m < 35)
	{
		if(HoursOnline[h] == 0)
		{
			for(new i; i < MAX_PLAYERS; i ++)
			{
			    if(!IsPlayerConnected(i)) continue;
			    if(IsPlayerNPC(i)) continue;

			    HoursOnline[h] ++;
			}
		}
	}
	
	for(new z=0; z< 100; z++)
	{
 		if(CannabisDeleted[z] == 1)
 		{
	 		CreateCannabisPickup(z+1);
		 	CreateCannabisObject(z+1);
		  	CannabisDeleted[z] = 0;
	  	}
 	}
 	new Float:hp;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;

	    if(GetPVarInt(i,"PayDay") < 6) GivePVarInt(i,"PayDay",1); //+ 5 min to PayDay anti-abuse

		if(AFKText[i] < 5)
		{
	       	if(random(100)+1 <= GetPVarInt(i, "Drugs_Ad") && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
			{
			    ApplyAnimation(i, "CRACK", "crckdeth2", 4.1, 0, 0, 0, 0, 15000, 1);
			    SetTimerEx("CrackAnim", 150, 0, "d", i);
			    GetPlayerHealth(i, hp);
			    if(hp > 10.0) SetPlayerHealthUAC(i, hp-7.0);
			}

		    if(WantedLevel[i])
		    {
			    WantedLevel[i]--;
	            SetPlayerWantedLevel(i, WantedLevel[i]);
				format(string, sizeof(string), "Текущий уровень розыска: %d", WantedLevel[i]);
				SendClientMessage(i, COLOR_YELLOW, string);
				SetPlayerWantedLevel(i, WantedLevel[i]);
			}
		}
	}
	
	new minobject = 100;
	new ThisPlace;

	for(new i; i < sizeof(TrashObject); i ++)
	{
		new obj = GetTotalTrash(i);
		if(obj < minobject)
		{
  			minobject = obj;
	    	ThisPlace = i;
		}
	}

	if(GetTotalTrash(ThisPlace) > 6) return 1;


	new ro[10];
	ro[0] = rand(0, 3);
	ro[1] = rand(3, 7);
	ro[2] = rand(7, 10);
	ro[3] = rand(10, 13);
	ro[4] = rand(13, 15);
	ro[5] = rand(15, 18);
	ro[6] = rand(18, 21);
	ro[7] = rand(21, 24);
	ro[8] = rand(24, 27);
	ro[9] = rand(27, 29);

	for(new b; b < sizeof(TrashObject[]); b ++)
	{
		if(TrashObject[ThisPlace][b] != 0) DestroyObject(TrashObject[ThisPlace][b]);

		switch(ThisPlace)
		{
			case 0:
			{
				TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], BusBaseTrash[ro[b]][0], 		BusBaseTrash[ro[b]][1], 	BusBaseTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
    			TrashCoords[ThisPlace][b][0] = BusBaseTrash[ro[b]][0];
       			TrashCoords[ThisPlace][b][1] = BusBaseTrash[ro[b]][1];
          		TrashCoords[ThisPlace][b][2] = BusBaseTrash[ro[b]][2];
			}
			case 1:
			{
				TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], BankLSTrash[ro[b]][0], 		BankLSTrash[ro[b]][1], 		BankLSTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
				TrashCoords[ThisPlace][b][0] = BankLSTrash[ro[b]][0];
   				TrashCoords[ThisPlace][b][1] = BankLSTrash[ro[b]][1];
   				TrashCoords[ThisPlace][b][2] = BankLSTrash[ro[b]][2];
			}
			case 2:
			{
				TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], CentrLSTrash[ro[b]][0], 		CentrLSTrash[ro[b]][1], 	CentrLSTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
				TrashCoords[ThisPlace][b][0] = CentrLSTrash[ro[b]][0];
                TrashCoords[ThisPlace][b][1] = CentrLSTrash[ro[b]][1];
                TrashCoords[ThisPlace][b][2] = CentrLSTrash[ro[b]][2];
			}
			case 3:
			{
				TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], HotelLSTrash[ro[b]][0],		HotelLSTrash[ro[b]][1],		HotelLSTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
				TrashCoords[ThisPlace][b][0] = HotelLSTrash[ro[b]][0];
    			TrashCoords[ThisPlace][b][1] = HotelLSTrash[ro[b]][1];
       			TrashCoords[ThisPlace][b][2] = HotelLSTrash[ro[b]][2];
			}
			case 4:
			{
				TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], AutoSchoolTrash[ro[b]][0], 	AutoSchoolTrash[ro[b]][1], 	AutoSchoolTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
   				TrashCoords[ThisPlace][b][0] = AutoSchoolTrash[ro[b]][0];
       			TrashCoords[ThisPlace][b][1] = AutoSchoolTrash[ro[b]][1];
          		TrashCoords[ThisPlace][b][2] = AutoSchoolTrash[ro[b]][2];
			}
			case 5:
		 	{
		 		TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], HotelSFTrash[ro[b]][0], 		HotelSFTrash[ro[b]][1], 	HotelSFTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
    			TrashCoords[ThisPlace][b][0] = HotelSFTrash[ro[b]][0];
       			TrashCoords[ThisPlace][b][1] = HotelSFTrash[ro[b]][1];
          		TrashCoords[ThisPlace][b][2] = HotelSFTrash[ro[b]][2];
			}
			case 6:
			{
				TrashObject[ThisPlace][b] = CreateObject(RandomObectTrash[random(sizeof(RandomObectTrash))], DepoSFTrash[ro[b]][0], 		DepoSFTrash[ro[b]][1], 		DepoSFTrash[ro[b]][2], 0.0, 0.0, 0.0, 40.0);
   				TrashCoords[ThisPlace][b][0] = DepoSFTrash[ro[b]][0];
       			TrashCoords[ThisPlace][b][1] = DepoSFTrash[ro[b]][1];
          		TrashCoords[ThisPlace][b][2] = DepoSFTrash[ro[b]][2];
			}
		}
	}
	return 1;
}

stock CheckHouses()
{
    new count = GetTickCount();
    new string[128], idstr[32], Query[700], id;
	mysql_query("SELECT id FROM `"HousesTable"` WHERE DATE_ADD(`LastVisit`,INTERVAL 20 DAY) <= NOW() AND `Owned` = 1");
	mysql_store_result();
	if(mysql_num_rows())
	{
		for(new i=0; mysql_fetch_row(Query, "|"); i++)
		{
		    mysql_fetch_field("id", idstr);
            id = strval(idstr);
		    HouseInfo[id][hHel] = 0;
			HouseInfo[id][hArm] = 0;
			HouseInfo[id][hSignal] = 0;
			HouseInfo[id][hLock] = 0;
			HouseInfo[id][hOwned] = 0;
			strmid(HouseInfo[id][hOwner], "The State", 0, strlen("The State"), 255);
			UpdateHousePickup(id);
			SetTimerEx("SaveHouse", 3000, false, "i", id);
		    format(string, sizeof(string), "Доступны новые дома! Стоимость: $%d",HouseInfo[id][hPrice]);
			SendClientMessageToAll(COLOR_INFO, string);
		}
	}
	mysql_free_result();
	printf("CheckHouses: %d", GetTickCount() - count);
	return 1;
}

stock CheckBizs()
{
    new count = GetTickCount();
    new string[128], idstr[32], Query[700], id;
	mysql_query("SELECT id FROM `"BizzesTable"` WHERE DATE_ADD(`LastVisit`,INTERVAL 20 DAY) <= NOW() AND `Owned` = 1");
	mysql_store_result();
	if(mysql_num_rows())
	{
		for(new i=0; mysql_fetch_row(Query, "|"); i++)
		{
		    mysql_fetch_field("id", idstr);
            id = strval(idstr);
            
			BizzInfo[id][bLocked] = 0;
			BizzInfo[id][bOwned] = 0;
			BizzInfo[id][bMoney] = 0;

			strmid(BizzInfo[id][bOwner], "The State", 0, strlen("The State"), 255);
			BizzInfo[id][bExtortion] = 0;
			strmid(BizzInfo[id][bDiscription], "Продается", 0, strlen("Продается"), 255);
			
			OnBizz3DLabelUpdate(id);
			UpdateBizzPickup(id);
			SetTimerEx("SaveBizz", 3000, false, "i", id);
		    format(string, sizeof(string), "Доступны новые бизнесы! Стоимость: $%d", BizzInfo[id][bPrice]);
			SendClientMessageToAll(COLOR_INFO, string);
		}
	}
	mysql_free_result();
	printf("CheckBizzes: %d", GetTickCount() - count);
	return 1;
}

stock CheckSBizs()
{
    new count = GetTickCount();
    new string[128], idstr[32], Query[700], id;
	mysql_query("SELECT id FROM `"SBizzesTable"` WHERE DATE_ADD(`LastVisit`,INTERVAL 20 DAY) <= NOW() AND `Owned` = 1");
	mysql_store_result();
	if(mysql_num_rows())
	{
		for(new i=0; mysql_fetch_row(Query, "|"); i++)
		{
		    mysql_fetch_field("id", idstr);
            id = strval(idstr);

			SBizzInfo[id][sbLocked] = 0;
			SBizzInfo[id][sbOwned] = 0;
			SBizzInfo[id][sbMoney] = 0;
			
			strmid(SBizzInfo[id][sbOwner], "The State", 0, strlen("The State"), 255);
			SBizzInfo[id][sbExtortion] = 0;
			strmid(SBizzInfo[id][sbDiscription], "Продается", 0, strlen("Продается"), 255);

			SetTimerEx("SaveSBizz", 3000, false, "i", id);
		    format(string, sizeof(string), "Доступны новые бизнесы! Стоимость: $%d", SBizzInfo[id][sbPrice]);
			SendClientMessageToAll(COLOR_INFO, string);
		}
	}
	mysql_free_result();
	printf("CheckSBizzes: %d", GetTickCount() - count);
	return 1;
}


public PayDay()
{
	if(dodebug == true) print("DEBUG LOG: PayDay();");

	new string[256];
	new key;
	new rent = 0;
	new factiononline[19];
	new pname[MAX_PLAYER_NAME+1];

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(GetPVarInt(i, "Team") > 0 && GetPVarInt(i, "Team") < sizeof(factiononline))
			{
		 		factiononline[GetPVarInt(i, "Team")] ++;
		    }
		    if(GetPVarInt(i,"Level") > 0)
		    {
			    if(GetPlayerPCash(i) < 0 && GetPVarInt(i,"Jailed") == 0)
				{
				    SendClientMessage(i, COLOR_YELLOW, "Вас посадили за денежный долг штату");
				    GameTextForPlayer(i, "~r~Jailed!", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		oSetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            SetPVarInt(i,"Jailed",1);
		            ResetPlayerWeaponsUAC(i);
					WantedPoints[i] = 0;
					SetPVarInt(i,"JailTime", 120);
					if(GetPVarInt(i,"Sex") == 1) SetPlayerSkinEx(i, 268);
					Pobegtime[i] = 1;
				}

				GetPlayerName(i, pname, sizeof(pname));

				key = GetPVarInt(i,"House");

				if(key != -1 && key < sizeof(HouseInfo))
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(pname, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerPCash(i))
					{
						SetPVarInt(i, "House", -1);
						MySQL_UpdateInt(i, "House");
						SendClientMessage(i, COLOR_YELLOW, "Вы не можете оплатить аренду дома, Вы выселены");
						rent = 0;
					}
					HouseInfo[key][hMoney] += rent;
				}

				if(DelayPayCheck[i] < 2500)
				{
					if(GetPVarInt(i, "PayDay") >= 5)
					{
					    if(GetPVarInt(i, "VipLevel") > 0)
						{
						    new bonus = GetPVarInt(i, "Paycheck") / 4;
						    GivePVarInt(i, "Paycheck", bonus);
						}


						new checks = GetPVarInt(i, "Paycheck") / 7;
					    new ebill = 10 + random(30);
					    new bbill = 20 + random(40);

					    GivePlayerPCash(i, checks);

					    moneypaydays += checks;

					    if(GetPVarInt(i, "House") != -1 && GetPVarInt(i, "BankMoney") > 0)
					    {
					        GivePVarInt(i, "BankMoney", -ebill);
					    	GiveSBizMoney(4, ebill);
						}
						else ebill = 0;

						if(GetPVarInt(i, "Bizz") != 255 && GetPVarInt(i, "BankMoney") > 0)
					    {
					    	GivePVarInt(i, "BankMoney", -bbill);
					    	GiveSBizMoney(4, ebill);
						}
						else bbill = 0;

						PlayerPlayMusic(i);

// -----------------------------------------------------------------------------

		    			format(string, sizeof(string), "~ Чек:{9CFF00} $%d", checks);
						SendClientMessage(i, COLOR_WHITE, string);

						if(GetPVarInt(i, "Level") > 4)
						{
							format(string, sizeof(string), "~ Налог мэрии:{9CFF00} $%d", Tax);
							SendClientMessage(i, COLOR_WHITE, string);
							TaxValue += Tax;
							From_Tax_Nalog += Tax;
							GivePlayerPCash(i, -Tax);
							GiveAchievement(i, 12, Tax);
						}

						format(string, sizeof(string), "~ Баланс:{9CFF00} $%d", GetPVarInt(i, "BankMoney")+GetPVarInt(i, "Money"));
						SendClientMessage(i, COLOR_WHITE, string);

						format(string, sizeof(string), "~ Банковский счет:{9CFF00} $%d", GetPVarInt(i, "BankMoney"));
						SendClientMessage(i, COLOR_WHITE, string);

                        if(key > -1 && key < sizeof(HouseInfo))
                        {
                            if(strcmp(pname, HouseInfo[key][hOwner], true) != 0)
                            {
								format(string, sizeof(string), "~ Плата за аренду:{9CFF00} $%d", rent);
								SendClientMessage(i, COLOR_WHITE, string);
							}
						}

						if(key != -1 || GetPVarInt(i, "Bizz") != 255)
						{
		    				format(string, sizeof(string), "~ Плата за электричество:{9CFF00} $%d", ebill + bbill);
							SendClientMessage(i, COLOR_WHITE, string);
						}
// -----------------------------------------------------------------------------

						GameTextForPlayer(i, "~r~Pay Day~n~~w~", 5000, 1);
						rent = 0;
						SetPVarInt(i, "PayDay", 0);
						SetPVarInt(i, "Paycheck", 0);
						GivePVarInt(i, "ConnectedTime", 1);

						if(GetPVarInt(i,"VipLevel") >= 2) GivePVarInt(i, "Respect", 2);
						else GivePVarInt(i, "Respect", 1);
						
					}
					else
					{
						SendClientMessage(i, COLOR_YELLOW, "~ Вы не получили зарплату за прошлый час, так как слишком мало играли");
					}
				}
				else
				{
					SendClientMessage(i, COLOR_YELLOW, "~ Вы не получили зарплату за прошлый час, так как слишком долго находились AFK");
				}
			}
			DelayPayCheck[i] = 0;
		}
	}
	SaveOther();


	for(new i, fid; i < sizeof(ZoneInfo); i++)
	{
	    if(ZoneInfo[i][zOwner] > 0 && ZoneInfo[i][zOwner] < sizeof(factiononline))
	    {
		    if(factiononline[ZoneInfo[i][zOwner]] >= 20)
		    {
				switch(ZoneInfo[i][zOwner])
				{
    				case 5: fid = 0;
	    			case 6: fid = 1;
				    case 10: fid = 2;
				    case 12: fid = 3;
				    case 13: fid = 4;
				    case 14: fid = 5;
				    case 15: fid = 6;
				    case 16: fid = 7;
				    case 17: fid = 8;
				    case 18: fid = 9;
				    default: continue;
			    }

				CommonInfo[fid][Cash] += 1000;
				To_Zones_money += 1000;
			}
		}
	}

	return 1;
}


strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' ')) index++;
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}



stock ABroadCast(string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if (!IsPlayerConnected(i)) continue;
		if (GetPVarInt(i, "AdminLevel") < 1) continue;
		
		SendClientMessage(i, COLOR_ADMIN, string);
	}
	return 1;
}

public OOCOff(color, const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(!gOoc[i]) SendClientMessage(i, color, string);
		}
	}
}
public OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(!gNews[i]) SendClientMessage(i, color, string);
		}
	}
}

stock SendTeamMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;

		switch(GetPVarInt(i,"Team"))
		{
  			case 1..4, 7:
	    	{
      			if(GetPVarInt(i, "TogDepo") == 0)
	        	{
          			SendClientMessage(i, color, string);
		        }
		    }
		}
	}
	return 1;
}


public SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(GetPVarInt(i,"Team") == member) SendClientMessage(i, color, string);
		}
	}
}

public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(GetPVarInt(i,"Job") == job) SendClientMessage(i, color, string);
		}
	}
}

public SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(GetPVarInt(i,"Team") == family)
		    {
                if(!gFam[i]) SendClientMessage(i, color, string);
			}
		}
	}
}

public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(GetPVarInt(i,"AdminLevel") >= 1) SendClientMessage(i, color, string);
		}
	}
}


public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i)) PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
	}
}

stock PlayerFixRadio(playerid)
{
    PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
    return 1;
}

//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------

public OnPlayerCommandText(playerid, cmdtext[])
{
	if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerCommandText(%d, %s);", GetName(playerid), playerid, cmdtext);
	new string[256];
  	new playermoneys;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);

	switch(GetPVarInt(playerid, "AntiFlood"))
	{
		case 0: SetTimerEx("UnMutedX", 3500, 0, "d", playerid);
		case 4..5:
		{
		    GivePVarInt(playerid, "AntiFlood", 1);
			return SendClientMessage(playerid, COLOR_RED, "Не флуди!");
		}
		case 6:
		{
			SendClientMessage(playerid, COLOR_RED, "Вы кикнуты за флуд!");
			Kick_(playerid);
			return 1;
		}
	}
	GivePVarInt(playerid, "AntiFlood", 1);
  	
	if(GetPVarInt(playerid,"Logged") == 0 || GetPVarInt(playerid, "Registered") == 0 || GetPVarInt(playerid, "CantUseCommand") == 1) return 1;

 // 	if (strcmp("/tv", cmdtext, true) != 0  && GetPVarInt(playerid, "SpecTV") != -1 && GetPVarInt(playerid, "AdminLevel") < 1) return 1;
    if (strcmp("/colorhelp", cmdtext, true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "/red , /grey , /green , /yellow , /white, /blue , /lightblue , /orange , /lime , /magenta");
		SendClientMessage(playerid, COLOR_WHITE, "/navy , /aqua , /crimson , /flblue , /bisque, /chartreuse , /brown , /coral , /gold");
		SendClientMessage(playerid, COLOR_WHITE, "/greenyellow , /indigo , /ivory , /lawngreen , /limegreen , /maroon , /olive , /orangered , /pink");
		SendClientMessage(playerid, COLOR_WHITE, "/springgreen , /tomato , /yellowgreen , /mediumaqua, /mediummagenta , /brightred , /system , /purple");
		return 1;
	}
	if(GetPVarInt(playerid, "RegOnTDM") == 0)
	{
		if (strcmp("/inv", cmdtext, true) == 0)
		{
	        SetPlayerToTeamColor(playerid);
	        SendClientMessage(playerid, COLOR_WHITE, "Цвет отключён");
			return 1;
		}
		if (strcmp("/red", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_RED);
		if (strcmp("/grey", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_GREY);
		if (strcmp("/green", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_GREEN);
		if (strcmp("/yellow", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_YELLOW);
		if (strcmp("/white", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_WHITE);
		if (strcmp("/blue", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_BLUE);
		if (strcmp("/lightblue", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_LIGHTBLUE);
		if (strcmp("/orange", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_ORANGE);
		if (strcmp("/lime", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_LIME);
		if (strcmp("/magenta", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_MAGENTA);
		if (strcmp("/navy", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_NAVY);
		if (strcmp("/aqua", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_AQUA);
		if (strcmp("/crimson", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_CRIMSON);
		if (strcmp("/flblue", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_FLBLUE);
		if (strcmp("/bisque", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_BISQUE);
		if (strcmp("/chartreuse", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_CHARTREUSE);
		if (strcmp("/brown", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_BROWN);
		if (strcmp("/coral", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_CORAL);
		if (strcmp("/gold", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_GOLD);
		if (strcmp("/greenyellow", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_GREENYELLOW);
		if (strcmp("/indigo", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_INDIGO);
		if (strcmp("/ivory", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_IVORY);
		if (strcmp("/lawngreen", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_LAWNGREEN);
		if (strcmp("/limegreen", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_LIMEGREEN);
		if (strcmp("/maroon", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_MAROON);
		if (strcmp("/olive", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_OLIVE);
		if (strcmp("/orangered", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_ORANGERED);
		if (strcmp("/pink", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_PINK);
		if (strcmp("/springgreen", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_SPRINGGREEN);
		if (strcmp("/tomato", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_TOMATO);
		if (strcmp("/yellowgreen", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_YELLOWGREEN);
		if (strcmp("/mediumaqua", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_MEDIUMAQUA);
		if (strcmp("/mediummagenta", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_MEDIUMMAGENTA);
		if (strcmp("/brightred", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_BRIGHTRED);
		if (strcmp("/system", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_SYSTEM);
		if (strcmp("/purple", cmdtext, true) == 0) return SetPlayerColor(playerid,COLOR_PURPLE);
	}
	if(strcmp(cmd, "/piss", true) == 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid,5.0,264.6288,77.5742,1001.0391) || IsPlayerInRangeOfPoint(playerid,30.5, 2144.056152,1615.458618,993.68817)) return SendClientMessage(playerid, COLOR_GREY, "Соблюдайте порядок в камере");

        if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID)
        {
			new Float:sp[3];
			GetPlayerVelocity(playerid, sp[0], sp[1], sp[2]);
			
			if(sp[0] != 0.0 || sp[1] != 0.0 || sp[2] != 0.0) return 1;
		}
		return SetPlayerSpecialAction(playerid,68);
	}
	if(!strcmp(cmd, "/wank", true)) return ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,0,0,0,0,1);
	if(strcmp(cmd, "/facepalm", true) == 0) return ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
	if(strcmp(cmd, "/pay", true) == 0)
	{
        if(GetPVarInt(playerid,"ConnectedTime") < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны поиграть хотябы 2 часа чтобы передавать деньги");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /pay [id игрока/часть имени] [деньги]");
        giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /pay [id игрока/часть имени] [деньги]");
		moneys = strval(tmp);
		if(GetPVarInt(giveplayerid,"Level") < 3 && moneys > 200) return SendClientMessage(playerid, COLOR_GREY, "Этому игроку нельзя перечислить такую сумму (только по 200$)");
		if(moneys < 1 || moneys > 100000) return SendClientMessage(playerid, COLOR_GREY, "За один раз Вы можете передать не больше 100000");
		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		playermoneys = GetPlayerPCash(playerid);
		if (moneys > 0 && playermoneys < moneys) return SendClientMessage(playerid, COLOR_GREY, "Неправильное количество");
		GivePlayerPCash(playerid, -moneys, "pay");
		GivePlayerPCash(giveplayerid, moneys, "pay");
		format(string, sizeof(string), "Вы передали %s $%d", giveplayer, moneys);
		SendClientMessage(playerid, COLOR_WHITE, string);
		
		format(string, sizeof(string), "Вы получили $%d от %s", moneys, sendername);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
		
		format(string, sizeof(string), "%s передал деньги %s", sendername ,giveplayer);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
    if(!strcmp(cmd, "/iznas", true))
	{
		tmp = strtok(cmdtext,idx);
		new otherplayer = ReturnUser(tmp);
		if((GetPVarInt(otherplayer,"VipLevel") > 0 && GetPVarInt(playerid,"AdminLevel") < 1) || (GetPVarInt(playerid, "AdminLevel") < GetPVarInt(otherplayer, "AdminLevel"))) return SendClientMessage(playerid, COLOR_GREY, "Жопа слишком тугая, ищите шире");
		if(IsPlayerInRangeOfPoint(playerid,5.0,264.6288,77.5742,1001.0391) || IsPlayerInRangeOfPoint(playerid,30.5, 2144.056152,1615.458618,993.68817)) return SendClientMessage(playerid, COLOR_GREY, "Соблюдайте порядок в камере");
		if(GetDistanceBetweenPlayers(playerid, otherplayer) < 2)
		{
			SendClientMessage(playerid, COLOR_GREEN, "Вы изнасиловали игрока");
			SendClientMessage(otherplayer, COLOR_GREEN, "Вас изнасиловали");
			
			ApplyAnimation(otherplayer,"SNM","SPANKINGW",4.1,0,1,1,1,1,1);
			ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1,1);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		return 1;
	}
	if(!strcmp(cmd, "/sexon", true))
	{
		new PlayerName[30];
		tmp = strtok(cmdtext,idx);
		new otherplayer = strval(tmp);
		if(GetDistanceBetweenPlayers(playerid, otherplayer) > 2) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		wantsex[playerid]=1;
		wantsex[otherplayer]=1;
		GetPlayerName(playerid,PlayerName,sizeof(PlayerName));
		format(string,sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает вам заняться сексом (/accsex [id] - принять, /dissex [id] - отказать)",PlayerName);
		SendClientMessage(otherplayer, COLOR_WHITE, string);
		return 1;
	}
	if(!strcmp(cmd, "/accsex", true))
	{
		tmp = strtok(cmdtext,idx);
		new otherplayer = strval(tmp);
		
		if(GetDistanceBetweenPlayers(playerid, otherplayer) > 2) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		if(wantsex[playerid]==0 || wantsex[otherplayer]==0) return SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали заняться сексом");
		SendClientMessage(playerid, COLOR_WHITE, "Вы занялись сексом");
		SendClientMessage(otherplayer, COLOR_WHITE, "Вы занялись сексом");
		
		wantsex[playerid]=0;
		wantsex[otherplayer]=0;
		ApplyAnimation(otherplayer,"SNM","SPANKING_IDLEW",4.1,0,1,1,1,1);
		ApplyAnimation(playerid,"SNM","SPANKINGP",4.1,0,1,1,1,1);
		return 1;
	}
	if(!strcmp(cmd, "/dissex ", true))
	{
		tmp = strtok(cmdtext,idx);
		new otherplayer = strval(tmp);
		if(GetDistanceBetweenPlayers(playerid, otherplayer) > 2) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		if(wantsex[playerid]==0 || wantsex[otherplayer]==0) return SendClientMessage(playerid, COLOR_GREY, "Вам не предлагали заняться сексом");
		
		SendClientMessage(playerid, COLOR_WHITE, "Вы отказались заняться сексом");
		SendClientMessage(otherplayer, COLOR_WHITE, "С вами отказались заняться сексом");
		wantsex[playerid]=0;
		wantsex[otherplayer]=0;
		return 1;
	}
	if(strcmp(cmd, "/charity", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /charity [деньги]");
		moneys = strval(tmp);
		if(moneys < 0) return SendClientMessage(playerid, COLOR_GREY, "Укажите сумму более $0");
		if(GetPlayerPCash(playerid) < moneys) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
		GivePlayerPCash(playerid, -moneys, "charity");
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		return 1;
	}
	if (strcmp(cmd, "/stats", true) == 0)
	{
		ShowStats(playerid, playerid);
		return 1;
	}
	if(strcmp(cmd,"/setage",true)==0)
    {
    	tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /setage [возраст]");
		new age;
		age = strval(tmp);
		if(age < 1 || age > 100) return SendClientMessage(playerid, COLOR_GREY, "Укажите возраст от 1 года до 100 лет");
        SendClientMessage(playerid, COLOR_WHITE, "Возраст Вашего персонажа успешно изменен");
		SetPVarInt(playerid,"Age",age);
		MySQL_UpdateInt(playerid,"Age");
		return 1;
 	}
 	if(strcmp(cmd,"/setorigin",true)==0)
    {
		ShowPlayerDialog(playerid,23,2, RGB_SERVER"Выбор родного города","Los Santos\nLas Venturas","Готово","Назад");
		return 1;
 	}

	if(strcmp(cmd,"/setsex",true)==0)
    {
    	tmp = strtok(cmdtext, idx);
 		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /setsex 1 если Вы парень, /setsex 2 если девушка");
		new sex;
		sex = strval(tmp);
		if(sex < 1 || sex > 2) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /setsex 1 если Вы парень, /setsex 2 если девушка");
        SendClientMessage(playerid, COLOR_WHITE, "Пол Вашего персонажа успешно изменен");
		SetPVarInt(playerid,"Sex", sex);
		MySQL_UpdateInt(playerid, "Sex");
		return 1;
	}
 	if (strcmp(cmd, "/changename", true)==0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);
        giveplayerid = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
        
        new year, month,day, Hour, Minute, Second;
        getdate(year, month, day);
        gettime(Hour, Minute, Second);
        if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере");
        if(IsPlayerNPC(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Боту нельзя менять ник");
        if(IsContainsBadSymbol(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Вы используете запрещенные символы");
		if(strlen(tmp) < 3 || strlen(tmp) > 20) return SendClientMessage(playerid, COLOR_GREY, "Использование: /changename [id/часть ника] [новый_ник(3-21 символ)]");


		new oldname[24];
		GetPlayerName(giveplayerid, oldname, sizeof(oldname));
		
		if(MySQL_Exist_Name(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Этот ник уже зарегистрирован");
		
		for(new i; i < 20; i ++) SendClientMessage(giveplayerid, COLOR_WHITE, "    ");
		
		format(string, sizeof(string), "Ваш новый ник (%s), не забудьте сменить его в окне мультиплеера!", tmp);
		SendClientMessage(giveplayerid, COLOR_YELLOW, string);
		SendClientMessage(giveplayerid, COLOR_YELLOW, "Обязательно сделайте скриншот с этим сообщением! (Клавиша F8)");
		
		
		SetPlayerName(giveplayerid, tmp);
		MySQL_Update_Name(giveplayerid);
		
		new newname[24];
		GetPlayerName(giveplayerid, newname, sizeof(newname));


        new admname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, admname, sizeof(admname));
		format(string, sizeof(string), "Crime Streets: %s теперь известен как %s, ник менял %s",oldname,tmp,admname);
		ABroadCast(string);
		
		new key = GetPVarInt(giveplayerid,"House");
		
		if (key != -1 && strcmp(oldname, HouseInfo[key][hOwner], false) == 0)
		{
			strmid(HouseInfo[key][hOwner], newname, 0, strlen(newname), 255);
			SaveHouse(key);
		}

		UpdatePlayerVehicleText(giveplayerid);
	
		new bkey = GetPVarInt(giveplayerid,"Bizz");
		if (bkey != 255)
		{
			if (bkey > 99 && bkey < 999 && strcmp(oldname, SBizzInfo[bkey-100][sbOwner], true) == 0) { strmid(SBizzInfo[bkey-100][sbOwner], newname, 0, strlen(newname), 255); SaveSBizz(bkey-100); }
			if (bkey < 100 && strcmp(oldname, BizzInfo[bkey][bOwner], true) == 0) { strmid(BizzInfo[bkey][bOwner], newname, 0, strlen(newname), 255); SaveBizz(bkey); }
		}
	/*	for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
		    if (strcmp(oldname, SBizzInfo[i][sbExtortion], true) == 0) { strmid(SBizzInfo[i][sbExtortion], newname, 0, strlen(newname), 255); SaveSBizz(i); }
		}
		for(new i = 0; i < sizeof(BizzInfo); i++)
		{
		    if (strcmp(oldname, BizzInfo[i][bExtortion], true) == 0) { strmid(BizzInfo[i][bExtortion], newname, 0, strlen(newname), 255); SaveBizz(i); }
		}*/
  		return 1;
 	}
/*	if(strcmp(cmd, "/production", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD1, "   Вы не админ !");
	    Production();
		SendClientMessage(playerid, COLOR_GRAD1, "Паблик запущен");
		return 1;
	}*/
	if(strcmp(cmd, "/world", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
	    new vworld = GetPlayerVirtualWorld(playerid);
		format(string, 256, "Virtual World %d",vworld);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if (strcmp(cmd, "/check", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /check [id/часть ника]");
        giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере");
	 	ShowStats(playerid,giveplayerid);
		return 1;
	}
	if (strcmp(cmd, "/checkirc", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 1338) return 1;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
			if(!GetPVarInt(i, "IrcChannel")) continue;
			GetPlayerName(i, sendername, sizeof(sendername));
			
			format(string, sizeof(string), "%s, канал: %d", sendername, GetPVarInt(i, "IrcChannel"));
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/number", true) == 0)
	{
		if(!GetPVarInt(playerid,"Phonebook")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефонной книги");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /number [id/часть ника]");
		//giveplayerid = strval(tmp);
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере");
		GetPlayerName(giveplayerid, sendername, sizeof(sendername));
		format(string, 256, "Имя: %s, телефон: %d",sendername,GetPVarInt(giveplayerid,"PhoneNumber"));
		SendClientMessage(playerid, COLOR_GRAD1, string);
		return 1;
	}
	if (strcmp(cmd, "/buylevel", true) == 0)
	{
		new nxtlevel = GetPVarInt(playerid,"Level")+1;
		
		
		new costlevel;
		if(GetPVarInt(playerid,"Level") == 1) costlevel = 0;
		else costlevel = nxtlevel*levelcost;
		new expamount = nxtlevel*levelexp;
		new infostring[256];
		if(GetPlayerPCash(playerid) < costlevel)
		{
			format(infostring, 256, "У Вас нет $%d",costlevel);
			return SendClientMessage(playerid, COLOR_GRAD1, infostring);
		}
		if (GetPVarInt(playerid,"Respect") < expamount)
		{
			format(infostring, 256, "Вам нужно %d респектов, у Вас только %d",expamount,GetPVarInt(playerid,"Respect"));
			return SendClientMessage(playerid, COLOR_GRAD1, infostring);
		}
		
		#if defined LOCALHOST
		if(GetPVarInt(playerid, "CarKey") == 0 && nxtlevel == 5)
		{
		    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Выйдите из здания на улицу");
		    

			new Query[128];
			mysql_query("SELECT COUNT(*) FROM `Cars`");
			mysql_store_result();
			mysql_fetch_row(Query, "|");
			mysql_free_result();
			new id = strval(Query);
    		if(id < 100)
    		{
				new Float:pos[4];
				GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
				GetPlayerFacingAngle(playerid, pos[3]);

				new carmodel = 560;
				switch(random(10))
				{
				    case 0: carmodel = 400;
				    case 1: carmodel = 402;
				    case 2: carmodel = 405;
				    case 3: carmodel = 429;
				    case 4: carmodel = 451;
				    case 5: carmodel = 475;
				    case 6: carmodel = 480;
				    case 7: carmodel = 496;
				    case 8: carmodel = 411;
				    default: carmodel = 560;
				}
				
				CreatePlayerCar(playerid, carmodel, pos[0]+1.5, pos[1], pos[2], pos[3]);
				SendClientMessage(playerid, COLOR_YELLOW, "Вы получили автомобиль по акции, достигнув 5-го уровеня!");
			}
		}
		#endif
		
		format(string, sizeof(string), "~g~Congratulation!~n~~w~You now level %d", nxtlevel);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		PlayerPlayMusic(playerid);
		GivePlayerPCash(playerid, (-costlevel), "buylevel");
		GivePVarInt(playerid,"Level",1);
		MySQL_UpdateInt(playerid,"Level");
		GivePVarInt(playerid,"Respect", -expamount);
		GameTextForPlayer(playerid, string, 5000, 1);
		format(infostring, 256, "Вы купили %d уровень за $%d", nxtlevel, costlevel);
		SendClientMessage(playerid, COLOR_WHITE, infostring);
		SetPlayerScore(playerid, nxtlevel);
		
		return 1;
	}

	if (strcmp(cmd, "/buydildo", true) == 0)
	{
        if(GetPlayerPCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		if(GetPVarInt(playerid,"GunLic") == 0) return SendClientMessage(playerid, COLOR_GREY, "Продавец: Я не могу продать вам оружие без лицензии");
		new location = GetPVarInt(playerid, "Local");
		if(location == 107 || location == 108)
		{
		    if(BizzInfo[location-99][bProducts] <= 0) return GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
		    ShowMenuForPlayer(DildoMenu,playerid); TogglePlayerControllable(playerid, 0); order[playerid] = 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не в магазине");
		return 1;
	}
	if (strcmp(cmd, "/buygun", true) == 0)
	{
	    if(GetPVarInt(playerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Пока Вы не достигли 3 уровня, Вы не можете купить оружие");
        if(GetPlayerPCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		if(GetPVarInt(playerid,"GunLic") == 0) return SendClientMessage(playerid, COLOR_GREY, "Продавец: Я не могу продать вам оружие без лицензии");
		new location = GetPVarInt(playerid, "Local");
		switch(location)
		{
		    case 99,100,102,106,113..116:
		    {
		        if(BizzInfo[location-99][bProducts] <= 0) return GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
   		 		ShowMenuForPlayer(gunmenu,playerid); TogglePlayerControllable(playerid, 0); order[playerid] = 1;
			}
		    default: SendClientMessage(playerid, COLOR_GREY, "Вы не в оружейном магазине");
		}
		return 1;
	}
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
		if ((noooc) && GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GREY, "Общий чат отключён");

		if(GetPVarInt(playerid,"MuteTime") > gettime() && GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GREY , "У Вас молчанка");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: (/o)oc [ooc chat]");
		if(containsAnyIP(cmdtext) && GetPVarInt(playerid,"AdminLevel") < 1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "(( %s[%d]: %s ))", sendername, playerid, result);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "Warn(/оос): %s[%d] %s", sendername, playerid, result);
			ABroadCast(string);
		 	return 1;
		}
		if (GetPVarInt(playerid,"AdminLevel") >= 1 && GetPVarInt(playerid,"AdminLevel") <= 1338)
		{
			format(string, sizeof(string), "(( %s[%d]: %s ))", sendername, playerid, result);
			OOCOff(OOC_MESSAGE,string);
		}
		else if (GetPVarInt(playerid,"AdminLevel") < 1 || GetPVarInt(playerid,"AdminLevel") > 1338)
		{
			format(string, sizeof(string), "(( %s[%d]: %s ))", sendername, playerid, result);
			OOCOff(COLOR_WHITE, string);
		}
		
		
		return 1;
	}
	if(strcmp(cmd, "/noooc", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") >= 5 && (!noooc))
		{
			noooc = 1;
			SendClientMessageToAll(COLOR_WHITE, "Общий чат отключён");
		}
		else if (GetPVarInt(playerid,"AdminLevel") >= 5 && (noooc))
		{
			noooc = 0;
			SendClientMessageToAll(COLOR_WHITE, "Общий чат включен админом  !");
		}
		return 1;
	}
	if(strcmp(cmd, "/writenews", true) == 0)
	{

		if(GetPVarInt(playerid,"Leader") < 1 ) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /writenews [номер строки 1-10] [текст до 60 символов]");
		new line = strval(tmp);
		if(line < 1 || line > 10)  return SendClientMessage(playerid, COLOR_GREY, "Используйте: /writenews [номер строки 1-10] [текст до 60 символов]");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result) || strlen(result) > 59)  return SendClientMessage(playerid, COLOR_GREY, "Используйте: /writenews [номер строки 1-10] [текст до 60 символов]");
  		new mtext[12], data[128],
  			month, day, year,
  		 	hour, minuite;
   		gettime(hour,minuite,_);
  		getdate(year, month, day);
  		switch(month)
  		{
   			case 1: mtext = "января";   case 2: mtext = "февраля";  case 10: mtext = "октября";
   			case 3: mtext = "марта";    case 4: mtext = "апреля";   case 5: mtext = "мая";
			case 6: mtext = "июня";     case 7: mtext = "июля";     case 8: mtext = "августа";
   			case 9: mtext = "сентября"; case 12: mtext = "декабря"; case 11: mtext = "ноября";

  		}
  		new name[24], var[65];
  		GetPlayerName(playerid, name, sizeof(name));
	    strmid(GangDialogNews[GetPVarInt(playerid,"Team")-1][line-1], result , 0, strlen(result), 255);
	    format(var, sizeof(var), "\n\n\t\t\t\t\t by %s, %d/%d/%d, %d:%d", name, day, month,year, hour, minuite);

	    strmid(GangDialogNews[GetPVarInt(playerid,"Team")-1][10], var , 0, strlen(var), 255);
	    format(data, sizeof(data), "Новости организации\nОбновлено: %d %s, в %d:%d", day, mtext, hour, minuite);
	    Update3DTextLabelText(Gang3dTextNews[GetPVarInt(playerid,"Team")-1],0xFF8000FF,data);

		return 1;
	}

//----------------------------------[advertise]-----------------------------------------------
	
	if(strcmp(cmd, "/ad", true) == 0)
	{

		if (!GetPVarInt(playerid,"PhoneNumber")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона. Купите его в 24/7 (( используйте /gps ))");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;


		if (!strlen(result))
		{
			SetPVarInt(playerid, "OnPhone", 1);
			ShowPAdvs(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Подать объявление можно в любом банкомате");
			return SendClientMessage(playerid, COLOR_WHITE, "Чтобы подать глобальное объявление, используйте: /ad [ваш текст]");
		}
		
		if (strlen(result) > 40 || strlen(result) < 10) return SendClientMessage(playerid, COLOR_GREY, "Объявление должно содержать от 10 до 40 символов");

		if (GetPVarInt(playerid, "Jailed") == 2) return SendClientMessage(playerid, COLOR_GREY, "Нельзя писать объявления находясь в присоне");

		static OffAds;
		if (OffAds > gettime() && GetPVarInt(playerid, "AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GREY, "Подавать объявления можно раз в 2 минуты");

		if (canAD == 0) return SendClientMessage(playerid, COLOR_GREY, "Данный чат отключен");

		if (GetPVarInt(playerid,"Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна с 3 уровня");

		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if (GetPVarInt(playerid, "Warnings") > 0)  return SendClientMessage(playerid, COLOR_GREY, "На Вашем аккаунте имеется Warn, команда недоступна");

		new payout = idx * 10;

		if (GetPlayerPCash(playerid) < payout)
        {
            format(string, sizeof(string), "Недостаточно денег. Требуется %d$ ", payout);
            return SendClientMessage(playerid, COLOR_GREY, string);
        }
        GivePlayerPCash(playerid, - payout, "ad");

		AntiCaps(result);

		GetPlayerName(playerid, sendername, sizeof(sendername));

		if (containsAnyIP(cmdtext))
		{
			format(string, sizeof(string), "{f9a133}Объявление: {83f919}%s. {f9a133}Автор: %s[%d], Тел: %d",  result, sendername, playerid, GetPVarInt(playerid,"PhoneNumber"));
			SendClientMessage(playerid, COLOR_AD, string);


			format(string, sizeof(string), "Объявление подано! С Вас "RGB_GREEN"%d$", payout);
			SendClientMessage(playerid, COLOR_WHITE, string);
			//--------------------------------
			format(string, sizeof(string), "WARN(/ad): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
			//--------------------------------
    		return 1;
		}

		GiveSBizMoney(7, payout);
		
		format(string, sizeof(string), "{f9a133}Объявление: {83f919}%s. {f9a133}Автор: %s[%d], Тел: %d",  result, sendername, playerid, GetPVarInt(playerid,"PhoneNumber"));
		OOCNews(COLOR_AD, string);


		format(string, sizeof(string), "Объявление подано! С Вас "RGB_GREEN"%d$", payout);
		SendClientMessage(playerid, COLOR_WHITE, string);


		if (GetPVarInt(playerid,"AdminLevel")) return 1; // если админ то хуй

		OffAds = gettime()+120; // отключили
		return 1;
	}
//----------------------------------[government]-----------------------------------------------

//----------------------------------[togooc]-----------------------------------------------

	if(strcmp(cmd, "/togooc", true) == 0)
	{
		if (!gOoc[playerid]) { gOoc[playerid] = 1; SendClientMessage(playerid, COLOR_WHITE, "OOC чат отключен"); }
		else { gOoc[playerid] = 0; SendClientMessage(playerid, COLOR_WHITE, "OOC чат включен"); }
		return 1;
	}
	if(strcmp(cmd, "/tognews", true) == 0)
	{
		if (!gNews[playerid]) { gNews[playerid] = 1; SendClientMessage(playerid, COLOR_WHITE, "Чат новостей отключен"); }
		else { gNews[playerid] = 0;	SendClientMessage(playerid, COLOR_WHITE, "Чат новостей включен"); }
		return 1;
	}
	if(strcmp(cmd, "/togfam", true) == 0)
	{
		if (!gFam[playerid]) { gFam[playerid] = 1; SendClientMessage(playerid, COLOR_WHITE, "Family чат отключен"); }
		else { gFam[playerid] = 0; SendClientMessage(playerid, COLOR_WHITE, "Family  чат включен"); }
		return 1;
	}
	if(strcmp(cmd, "/togwhisper", true) == 0)
	{
        if(GetPVarInt(playerid,"VipLevel") > 0 || GetPVarInt(playerid,"AdminLevel") > 1 || GetPVarInt(playerid,"Leader") > 0)
        {
			if (!GetPVarInt(playerid, "TogWhisper")) SetPVarInt(playerid, "TogWhisper",1),SendClientMessage(playerid, COLOR_WHITE, "ПМ отключен");
			else DeletePVar(playerid, "TogWhisper"), SendClientMessage(playerid, COLOR_WHITE, "ПМ включен");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не админ / VIP игрок / лидер ");
		return 1;
	}
	if(strcmp(cmd, "/togphone", true) == 0)
	{
        if(GetPVarInt(playerid,"VipLevel") > 0 || GetPVarInt(playerid,"AdminLevel") > 1 || GetPVarInt(playerid,"Leader"))
        {
			if (!GetPVarInt(playerid, "TogPhone")) SetPVarInt(playerid, "TogPhone",1), SendClientMessage(playerid, COLOR_WHITE, "Телефон отключен");
			else DeletePVar(playerid, "TogPhone"), SendClientMessage(playerid, COLOR_WHITE, "Телефон включен");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не админ / VIP игрок / лидер ");
		return 1;
	}
	if(strcmp(cmd, "/pass", true) == 0) //
 	{
   		tmp = strtok(cmdtext, idx);
  		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /pass [id/часть ника]");
	   	giveplayerid = ReturnUser(tmp);
	   	if(!IsPlayerConnected(giveplayerid)) return 1;
 		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return 1;
   	    new atext[50], /*otext[50], */ttext[50], jtext[50];
       	GetPlayerName(playerid, sendername, sizeof(sendername));
       	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
       	
     	format(string, sizeof(string), "Вы показали свой паспорт %s", giveplayer);
       	SendClientMessage(playerid, COLOR_WHITE, string);
       	
 		SendClientMessage(giveplayerid, COLOR_GREEN, "__________________");
      	format(string, sizeof(string), "   Паспорт гражданина %s:", sendername);
       	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
       	
      	format(string, sizeof(string), "   Номер паспорта: %d", GetPVarInt(playerid, "MySQL_id"));
       	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
       	
       	format(string, sizeof(string), "   Возраст: %d", GetPVarInt(playerid,"Age"));
       	SendClientMessage(giveplayerid, COLOR_WHITE, string);
       	if(GetPVarInt(playerid,"Sex") == 1) atext = "Мужчина";
		else atext = "Женщина";
		format(string, sizeof(string), "   Пол: %s", atext);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);

		switch(GetPVarInt(playerid, "ConnectedTime"))
		{
		    case 0..50:     SendClientMessage(giveplayerid, COLOR_WHITE, "   Статус: Новичок");
		    case 51..100:   SendClientMessage(giveplayerid, COLOR_WHITE, "   Статус: Освоившийся");
		    case 101..250:  SendClientMessage(giveplayerid, COLOR_WHITE, "   Статус: Проверенный");
		    case 251..500:  SendClientMessage(giveplayerid, COLOR_WHITE, "   Статус: Старый игрок");
		    case 501..1000: SendClientMessage(giveplayerid, COLOR_WHITE, "   Статус: Очень старый игрок");
			default:        SendClientMessage(giveplayerid, COLOR_WHITE, "   Статус: Уважаемый");
		}
	  	new team = GetPVarInt(playerid,"Team");
		switch(team)
		{
			case 0: ttext = "Гражданин";
			case 1: ttext = "Полицейский";
			case 2: ttext = "Агент ФБР";
			case 3: ttext = "Военный";
			case 4: ttext = "Медик";
			case 5: ttext = "LCN";
			case 6: ttext = "Yakuza";
			case 7: ttext = "Член Мэрии";
			case 8: ttext = "Гражданин";
			case 9: ttext = "Репортёр";
			case 10: ttext = "Байкер";
			case 11: ttext = "Лицензиар";
			case 12: ttext = "Русская Мафия";
		    case 13: ttext = "The Ballas Gang";
		    case 14: ttext = "Grove Street";
			case 15: ttext = "LS Vagos";
		   	case 16: ttext = "El Coronos";
		    case 17: ttext = "The Rifa Gang";
		    case 18: ttext = "Колхоз";
		}
        format(string, sizeof(string), "   Организация: %s", ttext);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
       	if(GetPVarInt(playerid,"Married") != 0)
       	{
			new married[24];
    		GetPVarString(playerid, "MarriedTo", married, 24);
     		if(GetPVarInt(playerid,"Sex") == 1) format(string, sizeof(string), "   Женат на: %s", married);
			else format(string, sizeof(string), "   Замужем за: %s", married);
			SendClientMessage(giveplayerid, COLOR_WHITE, string);
		}
		new job = GetPVarInt(playerid,"Job");
		switch(job)
		{
	        case 1: jtext = "Детектив";
	        case 2: jtext = "Юрист";
	        case 3: jtext = "Проститутка";
	        case 4: jtext = "Наркодилер";
	        case 5: jtext = "Автоугонщик";
	        case 6: jtext = "Репортёр новостей";
	        case 7: jtext = "Механик";
	        case 9: jtext = "Продавец оружия";
	        case 10: jtext = "Оформитель";
	        case 11: jtext = "Медик";
			case 12: jtext = "Тренер";
	        case 14: jtext = "Водитель автобуса";
	        case 15: jtext = "Разносчик газет";
	        case 17: jtext = "Таксист";
	        default: jtext = "Нет";
		}
		format(string, sizeof(string), "   Работа: %s", jtext);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
       	SendClientMessage(giveplayerid, COLOR_GREEN, "_______________________");
       	format(string, sizeof(string), "%s показал Вам свой паспорт", sendername);
       	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
       	return 1;
 	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/me", true) == 0)
	{
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);

		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /me [действие]");

		if(Text_Flood(playerid, result))
		{
		    SendClientMessage(playerid, COLOR_RED, "Не флуди!");
		    return 1;
		}
		if(containsAnyIP(cmdtext) || strfind(cmdtext, "/sellexp", true) != -1 || strfind(cmdtext, "/pay", true) != -1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s %s", sendername, result);
			SendClientMessage(playerid, COLOR_PURPLE, string);
			format(string, sizeof(string), "WARN(/me): %s[%d] %s", sendername, playerid, result);
			ABroadCast(string);
    		return 1;
		}
		format(string, sizeof(string), "%s %s", sendername, result);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
 	if(strcmp(cmd, "/try", true) == 0)
 	{
   		GetPlayerName(playerid, sendername, sizeof(sendername));


   		new length = strlen(cmdtext);
   		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
   		new offset = idx;
   		new result[64];
   		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
   		{
    		result[idx - offset] = cmdtext[idx];
    		idx++;
   		}
   		result[idx - offset] = EOS;
   		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /try [действие]");
   		

 		if(containsAnyIP(cmdtext))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s пробует %s (удачно)", sendername, result);
			SendClientMessage(playerid, COLOR_PURPLE, string);
			format(string, sizeof(string), "WARN(/try): %s[%d] %s", sendername, playerid, result);
			ABroadCast(string);

    		return 1;
		}
		
   		switch(random(2))
		{
		    case 0: format(string, sizeof(string), "%s пробует %s (удачно)", sendername, result);
		    default: format(string, sizeof(string), "%s пробует %s (неудачно)", sendername, result);
		}

   		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
 	}

	if(strcmp(cmd, "/b", true) == 0)//local ooc
	{
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}

		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /b [local ooc chat]");


		if(Text_Flood(playerid, result))
		{
		    SendClientMessage(playerid, COLOR_RED, "Не флуди!");
		    return 1;
		}
		if(containsAnyIP(result))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "- %s сказал: (( %s ))", sendername, result);
			SendClientMessage(playerid, COLOR_FADE1, string);
			format(string, sizeof(string), "WARN(/b): %s[%d] %s", sendername, playerid, result);
			ABroadCast(string);
		//	format(string, sizeof(string), "%s (/b): %s", sendername,result);
		//	ReklamsLog(string);
    		return 1;
		}
		format(string, sizeof(string), "- %s сказал: (( %s ))", sendername, result);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return 1;
	}

//----------------------------------[Shout]-----------------------------------------------


	if(strcmp(cmd, "/s", true) == 0)
	{
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}

		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /s [текст]");


		if(Text_Flood(playerid, result))
		{
		    SendClientMessage(playerid, COLOR_RED, "Не флуди!");
		    return 1;
		}
		if(containsAnyIP(cmdtext))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "- %s[%d] крикнул: %s!!", sendername, playerid, result);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "WARN(/s): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
		//	format(string, sizeof(string), "%s (/s): %s",sendername,result);
		//	ReklamsLog(string);
    		return 1;
		}
		format(string, sizeof(string), "- %s[%d] крикнул: %s!!", sendername, playerid, result);
		ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
		return 1;
	}
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid, sendername, sizeof(sendername));


		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /m [текст]");


		if(containsAnyIP(cmdtext))
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "[%s:o< %s]", sendername, result);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "WARN(/m): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
    		return 1;
		}
		if(GetPVarInt(playerid,"Team") == 4 || IsACop(playerid))
		{
			if(IsACopCar(tmpcar) || IsAnAmbulance(tmpcar))
			{
				if(Text_Flood(playerid, result))
				{
				    SendClientMessage(playerid, COLOR_RED, "Не флуди!");
				    return 1;
				}
			    switch(GetPVarInt(playerid,"Team"))
			    {
					case 1:format(string, sizeof(string), "[Офицер %s:o< %s]", sendername, result);
					case 2:format(string, sizeof(string), "[Агент ФБР %s:o< %s]", sendername, result);
					case 3:format(string, sizeof(string), "[Солдат %s:o< %s]", sendername, result);
					case 4:format(string, sizeof(string), "[Работник МЧС %s:o< %s]", sendername, result);
				}
				ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
			}
			else SendClientMessage(playerid, COLOR_GREY, "Вы не в служебном автомобиле");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта команда");
		return 1;
	}
	
//==============================================================================
	if(strcmp(cmd, "/f", true) == 0)
	{
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if(GetPVarInt(playerid, "fMute") > gettime())
		{
		    format(string, 256, "У Вас молчанка на /f чат (Осталось: %d сек.)", GetPVarInt(playerid,"fMute") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /f [текст]");



/*		if(Text_Flood(playerid, result))
		{
		    SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"Не флуди!");
		    return 1;
		}*/
        new Team = GetPVarInt(playerid, "Team");
        new Rank = GetPVarInt(playerid, "Rank");

        if(Rank < 1 || Rank > 20) return 1;
		if(Team == 0) return 1;

		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "[F] %s %s: %s", FactionRanks[Team][Rank-1], sendername, result);

		if(containsAnyIP(result))
		{
		    SendClientMessage(playerid, COLOR_BLUE, string);
			format(string, sizeof(string), "WARN(/f): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
			return 1;
		}
		SendFamilyMessage(Team, COLOR_BLUE, string);

		return 1;
	}

	if(strcmp(cmd, "/d", true) == 0)
	{
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if(GetPVarInt(playerid, "fMute") > gettime())
		{
		    format(string, 256, "У Вас молчанка на /d чат (Осталось: %d сек.)", GetPVarInt(playerid,"fMute") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /d [текст]");




        new Team = GetPVarInt(playerid, "Team");
        new Rank = GetPVarInt(playerid, "Rank");

        if(Rank < 1 || Rank > 20) return 1;

		switch(Team)
		{
		    case 1..4, 7:
		    {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "[D] %s %s: %s", FactionRanks[Team][Rank-1], sendername, result);

				if(containsAnyIP(result))
				{
				    SendClientMessage(playerid, COLOR_ALLDEPT, string);
					format(string, sizeof(string), "WARN(/d): %s[id: %d] %s", sendername, playerid, result);
					ABroadCast(string);
					return 1;
				}
				SendTeamMessage(COLOR_ALLDEPT, string);

		    }
			default:
			{
				SendClientMessage(playerid, COLOR_GREY, "Вам недоступна данная команда");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/giverank", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /giverank [id/часть ника] [ранг]");

		new para1 = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);

		new level = strval(tmp);
		new Leader = GetPVarInt(playerid,"Leader");
		new Leader2 = GetPVarInt(para1,"Leader");
		new Member = GetPVarInt(para1,"Member");

		if(Leader == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не лидер");
		if(level < 1 || level > 20) return SendClientMessage(playerid, COLOR_GREY, "Укажите ранг от 1 до 20");
		if(!IsPlayerConnected(para1)) return 1;
		if (Leader == Member || Leader == Leader2)
		{
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			SetPVarInt(para1,"Rank", level);
			format(string, sizeof(string), "Вы были повышены/понижены в ранге лидером %s, Ваш ранг: %d", sendername,level);
			SendClientMessage(para1, COLOR_BLUE, string);
			format(string, sizeof(string), "Вы дали %s ранг %d", giveplayer,level);
			SendClientMessage(playerid, COLOR_BLUE, string);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей организации");
		return 1;
	}

	if(strcmp(cmd, "/editrank", true) == 0)
	{
	    new Leader = GetPVarInt(playerid, "Leader");
	    if(Leader == 0) return 1;

	    tmp = strtok(cmdtext, idx);
	    new Rankid = strval(tmp);

		switch(Leader)
		{
			case 1..4, 7, 11:
			{
	    		if(GetPVarInt(playerid, "AdminLevel") < 1338)
	    		{
		    		if(Rankid < 1 || Rankid > 16) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editrank [номер ранга(1-17)] [название]");
				}
				else
				{
			    	if(Rankid < 1 || Rankid > 20) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editrank [номер ранга(1-20)] [название]");
				}
			}
			default:
			{
			    if(Rankid < 1 || Rankid > 20) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editrank [номер ранга(1-20)] [название]");
			}
		}
		
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editrank [номер ранга] [название]");
		for(new i; i < strlen(result); i++)
		{
		    switch(result[i])
		    {
		        case '0'..'9', 'a'..'z', 'A'..'Z', 'а'..'я', 'А'..'Я', ' ', '.': {}
		        default: return SendClientMessage(playerid, COLOR_GREY, "Используйте символы алфавита и цифры");
			}
		}

		if(strlen(result) > 20 || strlen(result) < 3) return SendClientMessage(playerid, COLOR_GREY, "Название ранга должно состоять из 3-20 символов");

		strmid(FactionRanks[Leader][Rankid-1], result, 0, strlen(result), 255);
		MySQL_SaveRank(Leader, Rankid-1);

		format(string, sizeof(string), "Название ранга %d теперь: %s", Rankid, result);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}



	if(strcmp(cmd, "/gov", true) == 0)
	{
	    if(toggow == 0) return SendClientMessage(playerid, COLOR_GREY, "Команда отключена администратором");

		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}

		new Team = GetPVarInt(playerid, "Team");
		switch(Team)
		{
		    case 1..4, 7, 11: {}
			default: return 1;
		}
		new Rank = GetPVarInt(playerid, "Rank");
		if(Rank > 20 || Rank < 17) return 1;


		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /gov [текст]");
        GetPlayerName(playerid, sendername, sizeof(sendername));


        if(!containsAnyIP(result))
		{
			SendClientMessageToAll(COLOR_WHITE, "|_______________ Новости Штата _______________|");
			format(string, sizeof(string), "{008B00}%s %s:{FFFFFF} %s", FactionRanks[Team][Rank-1], sendername, result);
			SendClientMessageToAll(COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "|_______________ Новости Штата _______________|");
			format(string, sizeof(string), "{008B00}%s %s:{FFFFFF} %s", FactionRanks[Team][Rank-1], sendername, result);
			SendClientMessage(playerid, COLOR_WHITE, string);

			format(string, sizeof(string), "WARN(/gov): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
		}
		return 1;
	}
//----------------------------------[offduty]-----------------------------------------------

	if(strcmp(cmd,"/members",true)==0)
	{
        if (GetPVarInt(playerid,"Team") < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не состоите");

		new count;

		new teamnumber = GetPVarInt(playerid,"Team");
    	SendClientMessage(playerid, COLOR_YELLOW, "Организация:");

		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if (!IsPlayerConnected(i)) continue;

			if (GetPVarInt(i,"Leader") == teamnumber)
			{
			    GetPlayerName(i, sendername, sizeof(sendername));
			    
   				if(AFKText[i] > 4) format(string, sizeof(string), "%s[%d] (LEADER) {bbbbbb}[AFK: %d сек.]",sendername, i, AFKText[i]-4);
			    else format(string, sizeof(string), "%s[%d] (LEADER)",sendername, i);
			    
				SendClientMessage(playerid, COLOR_YELLOW, string);
                count ++;
			}
			else if (GetPVarInt(i,"Member") == teamnumber)
			{
			    GetPlayerName(i, sendername, sizeof(sendername));
			    
				if(AFKText[i] > 4) format(string, sizeof(string), "%s[%d], Rank: %d, Warns: %d, {bbbbbb}[AFK: %d сек.]",sendername, i, GetPVarInt(i,"Rank"), GetPVarInt(i, "FWarns"), AFKText[i]-4);
				else format(string, sizeof(string), "%s[%d], Rank: %d, Warns: %d", sendername, i, GetPVarInt(i,"Rank"), GetPVarInt(i, "FWarns"));
				
    			SendClientMessage(playerid, COLOR_YELLOW, string);
    			count ++;
			}
		}
		
		format(string, sizeof(string), "Итого: %d человек(а) онлайн", count);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		return 1;
	}
    
    if(strcmp(cmd, "/togd", true) == 0)
    {
        if(!IsACop(playerid) && GetPVarInt(playerid,"Team") != 4 && GetPVarInt(playerid,"Team") != 7) return 1;
		if(!GetPVarInt(playerid, "TogDepo"))
		{
		    SetPVarInt(playerid, "TogDepo", 1);
		    SendClientMessage(playerid, COLOR_GREY, "Чат департамента /d отключен");
		}
		else
		{
		    DeletePVar(playerid, "TogDepo");
		    SendClientMessage(playerid, COLOR_GREY, "Чат департамента /d включен");
		}
		return 1;
    
	}


	if(strcmp(cmd, "/su", true) == 0)
	{
	    if (GetPVarInt(playerid, "RegOnPaint") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время пейнтболла");
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не законник");

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /su [id/часть ника] [кол-во звезд] [причина]");
		giveplayerid = ReturnUser(tmp);

		if (PlayerInGangZone(playerid) != -1 && PlayerInGangZone(giveplayerid) != -1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя давать розыск на территории банд");
		if (!IsPlayerConnected(giveplayerid)) 		return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (GetPVarInt(giveplayerid,"Jailed")) 		return SendClientMessage(playerid, COLOR_GREY, "Нельзя дать розыск игроку, который уже в тюрьме");
		if (IsACop(giveplayerid)) 					return SendClientMessage(playerid, COLOR_GREY, "Нельзя дать розыск законнику");
		if (GetPVarInt(giveplayerid, "Level") < 3) 	return SendClientMessage(playerid, COLOR_GREY, "Нельзя дать розыск новичку");


		tmp = strtok(cmdtext, idx);
		if(!strval(tmp) || strval(tmp) > 10) return SendClientMessage(playerid, COLOR_GREY, "Количество звезд от 1 до 10");
		new wlevel = strval(tmp);

		if(wlevel <= WantedLevel[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Нельзя дать розыск ниже, чем у игрока на данный момент");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')){idx++;}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))){result[idx - offset] = cmdtext[idx];idx++;}
		result[idx - offset] = EOS;

		if(strlen(result) < 1 || strlen(result) > 29) return SendClientMessage(playerid, COLOR_GREY, "Укажите причину розыска");

        GiveAchievement(giveplayerid, 14, wlevel);
		GivePVarInt(giveplayerid, "Crimes", wlevel); // сколько всего преступлений совершил

		SetPlayerWantedLevel(giveplayerid, wlevel); // дали розыск
		WantedLevel[giveplayerid] = wlevel;
		WantedPoints[giveplayerid] = wlevel;

		PlayCrimeReportForPlayer(giveplayerid, playerid, 4);

		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];

		GetPlayerName(playerid, turner, sizeof(turner));
		GetPlayerName(giveplayerid, turned, sizeof(turned));

		strmid(PlayerCrime[giveplayerid][Cop], turner, 0, strlen(turner), 255);
		strmid(PlayerCrime[giveplayerid][Reason], result, 0, strlen(result), 255);


		format(string, sizeof(string), "Вы совершили преступление: %s; Обвинил: %s[%d]", result, turner, playerid);
		SendClientMessage(giveplayerid, COLOR_RED, string);

		format(string, sizeof(string), "Ваш текущий уровень розыска: "RGB_GREEN"%d", WantedLevel[giveplayerid]);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);


		format(string, sizeof(string), "%s[%d] рация: %s[%d] - %s, уровень розыска: %d", turner, playerid, turned, giveplayerid, result, WantedLevel[giveplayerid]);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || !IsACop(i)) continue;
			SendClientMessage(i, COLOR_DBLUE, string);
		}
		return 1;
	}
//----------------------------------[LOCK]-----------------------------------------------


//----------------------------------[Wisper]-----------------------------------------------
	if(strcmp(cmd, "/w", true) == 0)
	{
        if(GetPVarInt(playerid,"ConnectedTime") < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны поиграть хотябы 2 часа чтобы писать ПМ");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /w [id/часть ника] [текст]");
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}

		
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY , "Игрока нет в сети");
        if (GetPVarInt(giveplayerid, "TogWhisper")) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок отключил личные сообщения");

		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /w [id/часть ника] [текст]");
		
		
		
/*		if(Text_Flood(playerid, result))
		{
		    SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"Не флуди!");
		    return 1;
		}*/
		if(giveplayerid > GetPVarInt(playerid, "PM_Spam_ID"))
		{
			GivePVarInt(playerid, "PM_Spam", 1);
			SetPVarInt(playerid, "PM_Spam_ID", giveplayerid);
		}
		else
		{
		    DeletePVar(playerid, "PM_Spam");
		    DeletePVar(playerid, "PM_Spam_ID");
		}
		if(containsAnyIP(result))
		{
			format(string, sizeof(string), "(( PM к %s(ID: %d): %s ))", giveplayer, giveplayerid, result);
			SendClientMessage(playerid, COLOR_ORANGE, string);
			format(string, sizeof(string), "WARN(/w): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
    		return 1;
		}
		if(GetPVarInt(playerid, "PM_Spam") > 10)
		{
			format(string, sizeof(string), "(( PM к %s(ID: %d): %s ))", giveplayer, giveplayerid, result);
			SendClientMessage(playerid, COLOR_ORANGE, string);
			format(string, sizeof(string), "SPAM(/w): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
    		return 1;
		}
		format(string, sizeof(string), "(( PM от %s(ID: %d): %s ))", sendername, playerid, result);
		SendClientMessage(giveplayerid, COLOR_ORANGE, string);
		
		format(string, sizeof(string), "(( PM к %s(ID: %d): %s ))", giveplayer, giveplayerid, result);
		SendClientMessage(playerid,  COLOR_ORANGE, string);
		//=========читать личку===========
		format(string, sizeof(string), "PM от %s(ID: %d) к %s(ID: %d): %s", sendername, playerid, giveplayer, giveplayerid, result);
		SendPmMessage(COLOR_GREEN, string, playerid, giveplayerid);
		//================================
		return 1;
	}
	if(strcmp(cmd, "/rr", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: Используйте /rr [id/часть ника] [текст]");
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid)) return 1;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: Используйте /rr [id/часть ника] [текст]");
		format(string, sizeof(string), "REPORT REPLY(%s): %s ", sendername, (result));
		SendClientMessage(giveplayerid, COLOR_RED, string);
		
		format(string, sizeof(string), "REPORT REPLY(%s): %s", giveplayer, (result));
		SendClientMessage(playerid,  COLOR_ADMIN, string);
		format(string, sizeof(string), "%s ответил(а) на репорт %d ", sendername, giveplayerid);
		ABroadCast(string);
		return 1;
	}
//----------------------------------[Bank System]-----------------------------------------------
    if(strcmp(cmd, "/withdraw", true) == 0)
	{
        switch(GetPVarInt(playerid, "Local"))
        {
            case 103,111,112: tmp = strtok(cmdtext, idx);
		    default: return SendClientMessage(playerid, COLOR_GREY, "Вы не в банке");
		}
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GREY, "Используйте: /withdraw [сумма]");
			format(string, sizeof(string), "На Вашем счету: $%d", GetPVarInt(playerid,"BankMoney"));
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
		new cashdeposit = strval(tmp);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GREY, "Используйте: /withdraw [сумма]");
			format(string, sizeof(string), "На Вашем счету: $%d", GetPVarInt(playerid,"BankMoney"));
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
		if (cashdeposit > GetPVarInt(playerid,"BankMoney") || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег в банке");
		GivePlayerPCash(playerid, cashdeposit, "withdraw");
		GivePVarInt(playerid, "BankMoney", -cashdeposit);
		format(string, sizeof(string), "Вы сняли $%d с вашего счета. Остаток: $%d ", cashdeposit,GetPVarInt(playerid,"BankMoney"));
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/bank", true) == 0)
	{
        switch(GetPVarInt(playerid, "Local"))
        {
            case 103,111,112: tmp = strtok(cmdtext, idx);
		    default: return SendClientMessage(playerid, COLOR_GREY, "Вы не в банке");
		}
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /bank [сумма]");
			format(string, sizeof(string), "На Вашем счету: $%d", GetPVarInt(playerid,"BankMoney"));
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
		new cashdeposit = strval(tmp);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /bank [сумма]");
			format(string, sizeof(string), "На Вашем счету: $%d", GetPVarInt(playerid,"BankMoney"));
			SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
		if (cashdeposit > GetPlayerPCash(playerid) || cashdeposit < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег");
		GivePlayerPCash(playerid,-cashdeposit, "bank");
		new curfunds = GetPVarInt(playerid,"BankMoney");
		GivePVarInt(playerid,"BankMoney",cashdeposit);
		SendClientMessage(playerid, COLOR_GREEN, "|___ BANK STATMENT ___|");
		format(string, sizeof(string), "Старый баланс: $%d", curfunds);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Депозит: $%d",cashdeposit);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SendClientMessage(playerid, COLOR_WHITE, "|-----------------------------------------|");
		format(string, sizeof(string), "Новый баланс: $%d", GetPVarInt(playerid,"BankMoney"));
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/transfer", true) == 0)
	{
		if(GetPVarInt(playerid,"Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна с 3 уровня");
		switch(GetPVarInt(playerid, "Local"))
        {
            case 103,111,112: tmp = strtok(cmdtext, idx);
		    default: return SendClientMessage(playerid, COLOR_GREY, "Вы не в банке");
		}
		if(GetPlayerPCash(playerid) < 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете переводить деньги, когда имеете задолженность");
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /transfer [id/часть ника] [сумма]");
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /transfer [id/часть ника] [сумма]");
		moneys = strval(tmp);
		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(GetPVarInt(giveplayerid,"Level") < 4 && moneys > 200) return SendClientMessage(playerid, COLOR_GREY, "Этому игроку нельзя перечислить более $200 за раз");

		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		playermoneys = GetPVarInt(playerid,"BankMoney");
		if (moneys < 0 || playermoneys <= moneys) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько денег в банке");
		GivePVarInt(playerid,"BankMoney",-moneys);
		GivePVarInt(giveplayerid,"BankMoney", moneys);
		
		format(string, sizeof(string), "Вы перевели $%d на счет %s", moneys, giveplayer,giveplayerid);
		SendClientMessage(playerid, COLOR_WHITE, string);
		
		format(string, sizeof(string), "Вы получили $%d на свой счет от %s", moneys, sendername, playerid);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);


		PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		return 1;
	}
	if(strcmp(cmd, "/balance", true) == 0)
	{
		switch(GetPVarInt(playerid, "Local"))
        {
            case 103,111,112:
			{
				format(string, sizeof(string), "На Вашем счету: $%d",GetPVarInt(playerid,"BankMoney"));
				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		    default: SendClientMessage(playerid, COLOR_GREY, "Вы не в банке");
		}
		return 1;
	}
 	if (strcmp("/gps", cmdtext, true) == 0)
	{
	    if(JobDuty[playerid] || GetPVarInt(playerid, "DrugsDelivery") ||
		GetPVarInt(playerid, "Course") || GetPVarInt(playerid, "IDroute")) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать GPS во время работы");
		ShowGPS(playerid);
		return 1;
	}
	if(strcmp(cmd, "/dcar", true) == 0)
	{
	    if( GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /dcar [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрока нет на сервере");
		if(!IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в машине");

		SetVehicleHealth(GetPlayerVehicleID(giveplayerid), 400.0);
    	GetPlayerName(giveplayerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы повредили машину %s[%d] ",sendername, giveplayerid);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/dice", true) == 0)
	{
		new dice = random(6)+1;
		if (!gDice[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет игральных костей");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s бросил кости, выпало число: %d", sendername,dice);
		ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
		return 1;
	}
	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0,  HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
			{
				if(GetPVarInt(playerid,"Level") < HouseInfo[h][hLevel])
				{
					format(string, sizeof(string), "Этот дом только для игроков %d уровня и выше", HouseInfo[h][hLevel]);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				if(GetPVarInt(playerid,"House") != -1 && strcmp(playername, HouseInfo[GetPVarInt(playerid,"House")][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть дом, введите /sellhouse если хотите продать его");
				if(GetPlayerPCash(playerid) < HouseInfo[h][hPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег для покупки этого дома");
				if(GetPVarInt(playerid, "DonateMoney") < HouseInfo[h][hDonatePrice]) return SendClientMessage(playerid, COLOR_GREY, "Вам не хватает Donate денег для покупки этого дома");
				SetPVarInt(playerid,"House", h);
				HouseInfo[h][hOwned] = 1;
				if(HouseInfo[h][hDonatePrice] > 0)
			    {
				    GivePVarInt(playerid, "DonateMoney", -HouseInfo[h][hDonatePrice]);
					MySQL_UpdateInt(playerid,"DonateMoney");
					HouseInfo[h][hDonatePrice] = 0;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
				GivePlayerPCash(playerid,-HouseInfo[h][hPrice], "buyhouse");
				PlayerPlayMusic(playerid);
				SetPlayerInterior(playerid,HouseInfo[h][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
				oSetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
				GameTextForPlayer(playerid, "~w~Welcome to your new house!~n~For exit move to this door and type /exit", 5000, 3);
				SetPVarInt(playerid, "Local", h+1000);
				SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с покупкой !");
				SendClientMessage(playerid, COLOR_WHITE, "Управление домом: /hpanel");
				new year, month,day;
				getdate(year, month, day);
				new hour, minute;
				gettime(hour, minute);
				
				SaveHouse(h);
				MySQL_UpdateInt(playerid, "House");
		//		UpdateHouseMapIcon(h);
				UpdateHousePickup(h);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentroom", true) == 0)
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		if(GetPVarInt(playerid,"ConnectedTime") < 2) return SendClientMessage(playerid, COLOR_GREY, "Вы должны отыграть хотя бы 2 часа, чтобы арендовать дом");
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
			{
				if(GetPVarInt(playerid,"House") != -1 && strcmp(playername, HouseInfo[GetPVarInt(playerid,"House")][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть дом");
				if(GetPlayerPCash(playerid) < HouseInfo[h][hRent]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				SetPVarInt(playerid,"House",h);
				GivePlayerPCash(playerid,-HouseInfo[h][hRent], "rentroom");
				HouseInfo[h][hMoney] = HouseInfo[h][hMoney]+HouseInfo[h][hRent];
				PlayerPlayMusic(playerid);
				SetPlayerInterior(playerid,HouseInfo[h][hInt]);
				oSetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
				SetPlayerVirtualWorld(playerid,HouseInfo[h][hWorld]);
				SetPVarInt(playerid, "Local", h+1000);
				SendClientMessage(playerid, COLOR_WHITE, "Вы арендовали комнату в этом доме, теперь Вы будете возрождаться здесь");
				MySQL_UpdateInt(playerid, "House");
				
				SetPlayerMapIcon(playerid, HOUSE_ICON, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 35, 0, 1 );
				return 1;
			}
		}
		return SendClientMessage(playerid, COLOR_GREY, "Нужно находиться рядом с иконкой входа в дом");
	}
	if(strcmp(cmd, "/rentcar", true) == 0)
	{
 		new newcar = GetPlayerVehicleID(playerid);
 		if(newcar == RentLSCar[0] || newcar == RentLSCar[1] || newcar == RentLSCar[2] || newcar == RentSFCar[0] || newcar == RentSFCar[1] || newcar == RentSFCar[2])
		{
			if(newcar == RentLSCar[0] || newcar == RentLSCar[1] || newcar == RentLSCar[2])
			{
				if(SBizzInfo[0][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
				if(GetPVarInt(playerid,"Bizz") == 0) return TogglePlayerControllable(playerid, 1);
				if (GetPlayerPCash(playerid) <  SBizzInfo[0][sbEntranceCost]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				GivePlayerPCash(playerid,-SBizzInfo[0][sbEntranceCost], "rentcar ls");
				GiveSBizMoney(0, SBizzInfo[0][sbEntranceCost]);
				SBizzInfo[0][sbProducts]--;
				SaveSBizz(0);
			}
			if(newcar == RentSFCar[0] || newcar == RentSFCar[1] || newcar == RentSFCar[2])
			{
				if(SBizzInfo[1][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~ Out of stock", 5000, 1);
				if(GetPVarInt(playerid,"Bizz") == 1) return TogglePlayerControllable(playerid, 1);
				if (GetPlayerPCash(playerid) <  SBizzInfo[1][sbEntranceCost]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
				GivePlayerPCash(playerid,-SBizzInfo[1][sbEntranceCost], "rentcar sf");
				GiveSBizMoney(1, SBizzInfo[1][sbEntranceCost]);
				SaveSBizz(1);
			}
			if(HireCar[playerid] != 99999)
			{
			//	gCarLock[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
			}
			HireCar[playerid] = GetPlayerVehicleID(playerid);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_WHITE, "Вы арендовали машину, используйте "RGB_BLUE"/lock"RGB_WHITE", чтобы запирать её");
			TogglePlayerControllable(playerid, 1);
		}
		return 1;
	}

	if(strcmp(cmd, "/hirecar", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 7) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /hirecar [id]");
		new car = strval(tmp);
		HireCar[playerid] = car;
		format(string, sizeof(string), "Слепок ключа сделан, можно закрыть автомобиль %d",car);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/givekey", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		new car;
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givekey [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		
		if (!IsPlayerConnected(giveplayerid)) return 1;
		if(!ProxDetectorS(5.0, playerid, giveplayerid)) return 1;
		
		if(HireCar[playerid] == 99999) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет ключей");
		else
		{
			if(HireCar[playerid] != 99999)
			{
				car = HireCar[playerid];
				UnLockCar(car);
				HireCar[playerid] = 99999;
			}
			else return 1;
		}
		if(HireCar[giveplayerid] != 99999)
		{
			UnLockCar(HireCar[giveplayerid]);
		}
		HireCar[giveplayerid] = car;
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		
		format(string, sizeof(string), "%s вынимает ключи и передает их %s", sendername ,giveplayer);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		
		format(string, sizeof(string), "Вы передали ключи от машины %s", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);
		
		format(string, sizeof(string), "Вы получили ключи для машины от %s", sendername);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		

		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		return 1;
	}
	if(strcmp(cmd, "/unrentcar", true) == 0)
	{
		if(HireCar[playerid] == 99999) return 1;
		UnLockCar(HireCar[playerid]);
		HireCar[playerid] = 99999;
		GameTextForPlayer(playerid, "~w~ You stopped your carrent", 5000, 3);
		return 1;
	}
	if(strcmp(cmd, "/unrent", true) == 0)
	{
		GetPlayerName(playerid, playername, sizeof(playername));
		if(GetPVarInt(playerid,"House") != -1 && strcmp(playername, HouseInfo[GetPVarInt(playerid,"House")][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_GREY, "Это Ваш дом");
		SetPVarInt(playerid,"House", -1);
		MySQL_UpdateInt(playerid, "House");
		SendClientMessage(playerid, COLOR_WHITE, "Теперь Вы бомж");
		RemovePlayerMapIcon( playerid, HOUSE_ICON);
		return 1;
	}

	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
        GetPlayerName(playerid, playername, sizeof(playername));
		if(GetPVarInt(playerid,"House") != -1 && strcmp(playername, HouseInfo[GetPVarInt(playerid,"House")][hOwner], false) == 0)
		{
		    new hid = GetPVarInt(playerid, "House");
		    
		    if(!IsPlayerInRangeOfPoint(playerid, 10.0, HouseInfo[hid][hEntrancex], HouseInfo[hid][hEntrancey], HouseInfo[hid][hEntrancez]))
		    {
		        return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться около своего дома");
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellhouse [id/часть ника] [цена]");
			new playa,money;
			playa = ReturnUser(tmp);
			if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellhouse [id/часть ника] [цена]");
			money = strval(tmp);
			if(money < 1 || money > 10000000) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $1 до $10000000");
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Цена указана неверно! Пишите сумму слитно, пример: 100000, а не 100 000");

			if (!ProxDetectorS(5.0, playerid, playa)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами");
		    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продавать самому себе");
		    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

			if(GetPVarInt(playa,"House") != -1 && strcmp(giveplayer, HouseInfo[GetPVarInt(playa,"House")][hOwner], true) == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока есть свой дом");

			if(GetPVarInt(playa, "CantUseHouse")) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже покупается / меняется домами");
			if(GetPVarInt(playerid, "CantUseHouse")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже меняете / продаете дом");

			format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" купить Ваш дом за %d$", giveplayer, money);
			SendClientMessage(playerid, COLOR_WHITE, string);

			SetPVarInt(playerid, "CantUseHouse", 1);
			SetPVarInt(playa, "CantUseHouse", 1);

            GetPlayerName(playerid, playername, sizeof(playername));

			format(string, 128, RGB_GREEN"%s"RGB_WHITE" предлагает Вам купить его дом %d за %d$, "RGB_BLUE"/accepthouse"RGB_WHITE" если Вы согласны", playername, GetPVarInt(playerid,"House"), money);
			SendClientMessage(playa, COLOR_WHITE, string);

			SetPVarInt(playa, "SellHouseID", hid);
			SetPVarInt(playa, "SellHousePrice", money);
			SetPVarInt(playa, "SellHouseSeller", playerid);
			
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
	}



	if(strcmp(cmd, "/accepthouse", true) == 0)
	{
		new SellerID = GetPVarInt(playerid, "SellHouseSeller");
		new SellHPrice = GetPVarInt(playerid, "SellHousePrice");
		new SellHouseID = GetPVarInt(playerid, "SellHouseID");

		DeletePVar(playerid, "SellHouseSeller");
		DeletePVar(playerid, "SellHousePrice");
		DeletePVar(playerid, "SellHouseID");

		if(GetPVarInt(SellerID, "CantUseHouse") != 1) return 1;
		if(SellHouseID < 0 || SellHouseID > sizeof(HouseInfo)) return 1;
		
		if(!SellHPrice || !SellerID) return 1;
		if(!IsPlayerConnected(SellerID)) return 1;
		if(!ProxDetectorS(5.0, playerid, SellerID)) return 1;

		if(GetPlayerPCash(playerid) < SellHPrice)
  		{
    		SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег");
      		SendClientMessage(SellerID, COLOR_GREY, "У игрока недостаточно денег");
        	return 1;
  		}
		if(GetPVarInt(playerid, "Level") < HouseInfo[SellHouseID][hLevel])
		{
  			SendClientMessage(playerid, COLOR_GREY, "Слишком маленький уровень для покупки");
     		SendClientMessage(SellerID, COLOR_GREY, "У игрока мал уровень для этой покупки");
       		return 1;
		}

		DeletePVar(SellerID, "CantUseHouse");
		DeletePVar(playerid, "CantUseHouse");
		new name[24];

		GetPlayerName(playerid, name, sizeof(name));
		strmid(HouseInfo[SellHouseID][hOwner], name, 0, strlen(name), 255);

		GivePlayerPCash(playerid, -SellHPrice, "SellHPrice");
		GivePlayerPCash(SellerID, SellHPrice, "SellHPrice");

		SetPVarInt(playerid, "House", SellHouseID);
		SetPVarInt(SellerID, "House", -1);

		SaveHouse(SellHouseID);

		MySQL_UpdateInt(playerid, "House");
		MySQL_UpdateInt(SellerID, "House");
		MySQL_UpdateInt(playerid, "Money");
		MySQL_UpdateInt(SellerID, "Money");

		format(string, 128, "Вы приобрели дом за %d$", SellHPrice);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		SendClientMessage(playerid, COLOR_YELLOW, "Панель управления домом: /hpanel");

		format(string, 128, "Вы продали свой дом за %d$", SellHPrice);
		SendClientMessage(SellerID, COLOR_WHITE, string);
		
		From_Chanhe_Nalog += SellHPrice/30;
		
		RemovePlayerMapIcon( SellerID, HOUSE_ICON);
		SetPlayerMapIcon(playerid, HOUSE_ICON, HouseInfo[SellHouseID][hEntrancex], HouseInfo[SellHouseID][hEntrancey], HouseInfo[SellHouseID][hEntrancez], 35, 0, 1 );

		return 1;
	}

	if(strcmp(cmd, "/changehouse", true) == 0)
	{
	   	GetPlayerName(playerid, playername, sizeof(playername));
		if(GetPVarInt(playerid,"House") != -1 && strcmp(playername, HouseInfo[GetPVarInt(playerid,"House")][hOwner], false) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /changehouse [id/часть ника] [цена]");
			new playa,money;
			playa = ReturnUser(tmp);
			if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /changehouse [id/часть ника] [цена]");
			money = strval(tmp);
			if(money < 1 || money > 10000000) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $1 до $10000000");
			tmp = strtok(cmdtext, idx);
			if(strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Цена указана неверно! Пишите сумму слитно, пример: 100000, а не 100 000");
			if (!ProxDetectorS(5.0, playerid, playa)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами");
		    if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продавать самому себе");
		    GetPlayerName(playa, giveplayer, sizeof(giveplayer));

			if(GetPVarInt(playa,"House") == -1 || strcmp(giveplayer, HouseInfo[GetPVarInt(playa,"House")][hOwner], false) != 0) return SendClientMessage(playerid, COLOR_GRAD2, "У этого игрока нет своего дома");

			if(GetPVarInt(playa, "ChangeHousePrice")) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже меняется / покупает дом");
			if(GetPVarInt(playerid, "CantUseHouse")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже предлагали кому-то обмен/продажу");

			format(string, sizeof(string), "Вы предложили %s обменять свой дом %d на его %d с доплатой %d$", giveplayer, GetPVarInt(playerid,"House"), GetPVarInt(playa,"House"), money);
			SendClientMessage(playerid, COLOR_WHITE, string);

            GetPlayerName(playerid, playername, sizeof(playername));

			format(string, 128, RGB_GREEN"%s"RGB_WHITE" предлагает Вам обменять свой дом на его %d с доплатой %d$, "RGB_BLUE"/accepthchange"RGB_WHITE" если Вы согласны", playername, GetPVarInt(playerid,"House"), money);
			SendClientMessage(playa, COLOR_LIGHTBLUE, string);

			SetPVarInt(playa, "ChangeHouseID", GetPVarInt(playerid,"House"));
			SetPVarInt(playa, "ChangeHousePrice", money);
			SetPVarInt(playa, "ChangeHouseSeller", playerid);
			
			SetPVarInt(playerid, "CantUseHouse", 1);
			SetPVarInt(playa, "CantUseHouse", 1);
			
			new name1[24], name2[24];
			GetPlayerName(playerid, name1, 24);
			GetPlayerName(playa, name2, 24);

			return 1;
		}
		else SendClientMessage(playerid, COLOR_WHITE, "Вы не владелец дома");
	}

	if(strcmp(cmd, "/accepthchange", true) == 0)
	{
		new ChangerID = GetPVarInt(playerid, "ChangeHouseSeller");
		new ChangeHPrice = GetPVarInt(playerid, "ChangeHousePrice");
		new ChangeHouseID = GetPVarInt(playerid, "ChangeHouseID");

		new HouseP2 = GetPVarInt(playerid, "House");

		DeletePVar(playerid, "ChangeHouseSeller");
		DeletePVar(playerid, "ChangeHousePrice");
		DeletePVar(playerid, "ChangeHouseID");
		
		if(GetPVarInt(ChangerID, "CantUseHouse") != 1) return 1;
		if(ChangeHouseID < 0 || ChangeHouseID > sizeof(HouseInfo)) return 1;

		if(!ChangerID || !ChangeHouseID) return 1;
		if(!IsPlayerConnected(ChangerID)) return 1;
		if(!ProxDetectorS(5.0, playerid, ChangerID)) return 1;


		if(GetPlayerPCash(playerid) < ChangeHPrice)
		{
  			SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег");
     		SendClientMessage(ChangerID, COLOR_GREY, "У игрока недостаточно денег");
       		return 1;
		}

		DeletePVar(playerid, "CantUseHouse");
		DeletePVar(ChangerID, "CantUseHouse");
		
		new name[24];
		GetPlayerName(ChangerID, name, sizeof(sendername));
		strmid(HouseInfo[HouseP2][hOwner], name, 0, strlen(name), 255);

		GetPlayerName(playerid, name, sizeof(sendername));
		strmid(HouseInfo[ChangeHouseID][hOwner], name, 0, strlen(name), 255);

		GivePlayerPCash(playerid, -ChangeHPrice, "ChangeHPrice");
		GivePlayerPCash(ChangerID, ChangeHPrice, "ChangeHPrice");

		SetPVarInt(playerid, "House", ChangeHouseID);
		SetPVarInt(ChangerID, "House", HouseP2);

		SaveHouse(ChangeHouseID);
		SaveHouse(HouseP2);

		MySQL_UpdateInt(playerid, "House");
		MySQL_UpdateInt(ChangerID, "House");

		format(string, 128, "Вы обменяли свой дом и доплатили %d$", ChangeHPrice);
		SendClientMessage(playerid, COLOR_YELLOW, string);

		format(string, 128, "Вы обменяли свой дом и получили %d$", ChangeHPrice);
		SendClientMessage(ChangerID, COLOR_YELLOW, string);
		
		From_Chanhe_Nalog += ChangeHPrice/30;
		
		SetPlayerMapIcon(playerid, HOUSE_ICON, HouseInfo[ChangeHouseID][hEntrancex], HouseInfo[ChangeHouseID][hEntrancey], HouseInfo[ChangeHouseID][hEntrancez], 35, 0, 1 );
		SetPlayerMapIcon(ChangerID, HOUSE_ICON, HouseInfo[HouseP2][hEntrancex], HouseInfo[HouseP2][hEntrancey], HouseInfo[HouseP2][hEntrancez], 35, 0, 1 );

		return 1;
	}



	if(strcmp(cmd, "/evictall", true) == 0)
	{
		new bouse = GetPVarInt(playerid,"House");
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != -1 && strcmp(playername, HouseInfo[bouse][hOwner], false) == 0)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) && !IsPlayerNPC(i))
				{
					if(i != playerid)
					{
						if (GetPVarInt(i,"House") == bouse )
						{
							SendClientMessage(i, COLOR_WHITE, "Владелец дома выселил Вас");
							SendClientMessage(playerid, COLOR_WHITE, "Все жители выселены из вашего дома");
							SetPVarInt(i,"House",-1);
							MySQL_UpdateInt(i, "House");
						}
					}
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
		return 1;
	}
	if(strcmp(cmd, "/evict", true) == 0)
	{
		new bouse = GetPVarInt(playerid,"House");
		GetPlayerName(playerid, playername, sizeof(playername));
		if (bouse != -1 && strcmp(playername, HouseInfo[bouse][hOwner], false) == 0)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /evict [id/часть ника]");
			new target;
			//target = strval(tmp);
			target = ReturnUser(tmp);
			if (target == playerid) return SendClientMessage(target, COLOR_GREY, "Вы не можете выселить себя");
			if(!IsPlayerConnected(target)) return 1;
			if(GetPVarInt(target,"House") != GetPVarInt(playerid,"House")) return SendClientMessage(playerid, COLOR_GREY, "Игрок не арендует Ваш дом");
			SendClientMessage(target, COLOR_WHITE, "Владелец дома выселил Вас");
			SendClientMessage(playerid, COLOR_WHITE, "Игрок выселен");
			SetPVarInt(target,"House",-1);
			MySQL_UpdateInt(target, "House");
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не владелец дома");
		return 1;
	}


	if(strcmp(cmd, "/time", true) == 0)
	{
	    if(TimeShowTimer[playerid] != -1) KillTimer(TimeShowTimer[playerid]);
		ShowTime(playerid, 10);
		return 1;
	}
	if(strcmp(cmd, "/createhouse", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1338) return 1;
		new Float:EnterPos[3];
		new inter, Float:IntPos[3], price, level;
		GetPlayerPos(playerid, EnterPos[0], EnterPos[1], EnterPos[2]);
		
		mysql_query("SELECT MAX(id) FROM `"HousesTable"`");
        mysql_store_result();
        new SQL[20];
        mysql_fetch_row(SQL, "|");
        new id = strval(SQL);
        mysql_free_result();
        
        new interior = random(15)+1;
        switch(interior)
        {
            case 0: { inter = 1; IntPos[0] = (2217.62); IntPos[1] = (-1076.04); IntPos[2] = (1050.48); }
            case 1: { inter = 1; IntPos[0] = (223.09); IntPos[1] = (1287.74); IntPos[2] = (1082.14); }
            case 2: { inter = 6; IntPos[0] = (2195.35); IntPos[1] = (-1204.16); IntPos[2] = (1049.02); }
            case 3: { inter = 1; IntPos[0] = (244.23); IntPos[1] = (304.94); IntPos[2] = (999.15); }
            case 4: { inter = 3; IntPos[0] = (234.95); IntPos[1] = (1187.91); IntPos[2] = (1080.26); }
            case 5: { inter = 4; IntPos[0] = (260.95); IntPos[1] = (1285.09); IntPos[2] = (1080.26); }
            case 6: { inter = 8; IntPos[0] = (2807.48); IntPos[1] = (-1173.98); IntPos[2] = (1025.57); }
            case 7: { inter = 6; IntPos[0] = (2308.68); IntPos[1] = (-1212.24); IntPos[2] = (1049.02); }
            case 8: { inter = 2; IntPos[0] = (2237.56); IntPos[1] = (-1080.45); IntPos[2] = (1049.02); }
            case 9: { inter = 15; IntPos[0] = (294.99); IntPos[1] = (1472.80); IntPos[2] = (1080.26); }
            case 10: { inter = 10; IntPos[0] = (2269.08); IntPos[1] = (-1210.73); IntPos[2] = (1047.56); }
            case 11: { inter = 5; IntPos[0] = (226.96); IntPos[1] = (1114.44); IntPos[2] = (1081.00); }
           	case 12: { inter = 4; IntPos[0] = (-261.27); IntPos[1] = (1456.57); IntPos[2] = (1084.37); }
            case 13: { inter = 3; IntPos[0] = (234.95); IntPos[1] = (1187.91); IntPos[2] = (1080.26); }
            case 14: { inter = 12; IntPos[0] = (2324.47); IntPos[1] = (-1148.81); IntPos[2] = (1050.71); }
            case 15: { inter = 5; IntPos[0] = (22.51); IntPos[1] = (1404.36); IntPos[2] = (1084.43); }
            
        }
        new pricerand = random(10)+1;
        switch(pricerand)
        {
            case 0: price = 90000;
            case 1: price = 120000;
            case 2: price = 137000;
            case 3: price = 85000;
            case 4: price = 155000;
            case 5: price = 126000;
            case 6: price = 113000;
            case 7: price = 210000;
            case 8: price = 176000;
            case 9: price = 223000;
            case 10: price = 149000;

        }
        new levelrand = random(5)+1;
        switch(levelrand)
        {
           	case 0: level = 5;
            case 1: level = 5;
            case 2: level = 7;
            case 3: level = 8;
            case 4: level = 9;
            case 5: level = 10;

        }
       	new query[700];
    	format(query,sizeof(query), "INSERT INTO `"HousesTable"` (`id`, `Owner`, `Price`, `Level`, `EntranceX`, `EntranceY`, `EntranceZ`,\
		`Interior`, `ExitX`, `ExitY`, `ExitZ`, `World`) VALUES (%d, 'The State', %d, %d, '%f', '%f', '%f', %d, '%f', '%f', '%f', %d)",
		id+1,
		price,
		level,
		EnterPos[0],
		EnterPos[1],
		EnterPos[2],
		inter,
		IntPos[0],
		IntPos[1],
		IntPos[2],
		id+2);
    	mysql_query(query);
    	format(string, sizeof(string), RGB_GREEN">> " RGB_WHITE" Дом id " RGB_GREEN"%d " RGB_WHITE"создан !", id+1);
		SendClientMessage(playerid, COLOR_GRAD2, string);
		CreatePickup(1273, 23, EnterPos[0], EnterPos[1], EnterPos[2],-1);
		//CreateMapIcon(31,COLOR_LIGHTRED,EnterPos[0],EnterPos[1],EnterPos[2]);
		return 1;
	}

//----------------------{HOUSES}-------------------
	if(strcmp(cmd, "/house", true) == 0)
	{
    	if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /house [номер дома]");
		new housenum = strval(tmp);
		SetPlayerInterior(playerid,HouseInfo[housenum][hInt]);
		SetPlayerVirtualWorld(playerid,HouseInfo[housenum][hWorld]);
		oSetPlayerPos(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
		SetPVarInt(playerid, "Local", housenum+1000);
		return 1;
	}
	if(strcmp(cmd, "/houseo", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 6) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /houseo [номер дома]");
		new housenum = strval(tmp);
		oSetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
		return 1;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 6) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /biz [номер бизнеса]");
		new housenum = strval(tmp);
		SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
		oSetPlayerPos(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
		SetPVarInt(playerid, "Local", housenum+99);
		SetPlayerVirtualWorld(playerid,BizzInfo[housenum][bWorld]);
		return 1;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 6) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /sbiz [номер бизнеса]");
		new housenum = strval(tmp);
		oSetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
		return 1;
	}

	if(strcmp(cmd, "/editgang", true) == 0)
	{
	    new factionid;
	   	switch(GetPVarInt(playerid, "Leader"))
	   	{
	   	    case 5,6,10,12..18: factionid = ReturnFractionID(playerid);
	   	    default: return SendClientMessage(playerid, COLOR_GREY, "Вам недоступна эта команда");
	    }
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang [spawn/carpos/carmodel/carcolor(1-2)/carrank/cardelay/newspickup]");
		//new id, ammount, editname[24];

        if(strcmp(tmp,"spawn",true) == 0)
        {
            GetPlayerPos(playerid,  GangSpawn[factionid][gSpawnX], GangSpawn[factionid][gSpawnY], GangSpawn[factionid][gSpawnZ]);
			GetPlayerFacingAngle(playerid, GangSpawn[factionid][gSpawnA]);
			GangSpawn[factionid][gInterior]  = GetPlayerInterior(playerid);
			GangSpawn[factionid][gVirtWorld] = GetPlayerVirtualWorld(playerid);
			SaveFractionSpawn(factionid);
			return SendClientMessage(playerid, COLOR_WHITE, "Место спавна для Вашей организации успешно изменено");
		}
		if(strcmp(tmp,"newspickup",true) == 0)
        {
            new leader = GetPVarInt(playerid, "Leader");
            new Float:x,Float:y,Float:z;
            GetPlayerPos(playerid,  x, y, z);
			Delete3DTextLabel(Gang3dTextNews[leader-1]);
			DestroyPickup(GangNewsPickup[leader-1]);
			
			GangNewsPickup[leader-1] = CreatePickup(1239, 23,x,y,z,-1);
			Gang3dTextNews[leader-1] = Create3DTextLabel( "Новости организации\nОбновлено: none", COLOR_GREEN3D, x,y,z+1, 30.0, 0, 2 );
			
			SaveFactionNewsPickup(leader,x,y,z);
			return SendClientMessage(playerid, COLOR_WHITE, "Место пикапа новостей для Вашей организации успешно изменено");
		}
		if(strcmp(tmp,"carpos",true) == 0)
        {
            tmp = strtok(cmdtext, idx);
			new caridd = strval(tmp);
			if(caridd < 1 || caridd > 15) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carpos [id автомобиля (1-15)]");
			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Необходимо находиться в какой-нибудь машине");

			new Float:cpos[4],
			 	vehicle = GetPlayerVehicleID(playerid);

			GetVehiclePos   (vehicle, cpos[0], cpos[1], cpos[2]);
			GetVehicleZAngle(vehicle, cpos[3]);

			DestroyVehicle(GangCarInfo[factionid][caridd-1][gVehId]);

			GangCarInfo[factionid][caridd-1][gVehId] = CreateVehicle(
				GangCarInfo[factionid][caridd-1][gCarModel],
				cpos[0],
				cpos[1],
				cpos[2],
				cpos[3],
				GangCarInfo[factionid][caridd-1][gCarColor1],
				GangCarInfo[factionid][caridd-1][gCarColor2],
				GangCarInfo[factionid][caridd-1][gRespDelay]
			);

			GangCarInfo[factionid][caridd-1][gCarSpawnX] = cpos[0];
			GangCarInfo[factionid][caridd-1][gCarSpawnY] = cpos[1];
			GangCarInfo[factionid][caridd-1][gCarSpawnZ] = cpos[2];
			GangCarInfo[factionid][caridd-1][gCarSpawnA] = cpos[3];
			SaveFractionCar(factionid,caridd-1);

			format(string, sizeof(string), "Место спавна автомобиля %d успешно изменено", caridd);
			return SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(strcmp(tmp, "carcolor", true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			new caridd = strval(tmp);
		    if(caridd < 1 || caridd > 15) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carcolor [id автомобиля (1-15)] [цвет 1 (0-126)] [цвет 2 (0-126)]");
		    tmp = strtok(cmdtext, idx);
			new colorc1 = strval(tmp);
			if(colorc1 < 0 || colorc1 > 126) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carcolor [id автомобиля (1-15)] [цвет 1 (0-126)] [цвет 2 (0-126)]");
		    tmp = strtok(cmdtext, idx);
		    new colorc2 = strval(tmp);
			if(colorc2 < 0 || colorc2 > 126) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carcolor [id автомобиля (1-15)] [цвет 1 (0-126)] [цвет 2 (0-126)]");

		    GangCarInfo[factionid][caridd-1][gCarColor1] = colorc1;
		    GangCarInfo[factionid][caridd-1][gCarColor2] = colorc2;


		    ChangeVehicleColor(
				GangCarInfo[factionid][caridd-1][gVehId],
				colorc1,
				colorc2
			);
			SaveFractionCar(factionid,caridd-1);

			format(string, sizeof(string), "Цвет автомобиля %d успешно изменен на %d/%d", caridd, colorc1, colorc2);
			return SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(strcmp(tmp, "carmodel", true) == 0)
		{
			tmp = strtok(cmdtext, idx);
			new caridd = strval(tmp);
	       	if(caridd < 1 || caridd > 15) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carmodel [id автомобиля (1-15)] [id модели]");

	        tmp = strtok(cmdtext, idx);
			new newmodel = strval(tmp);

			if(!IsAValidFactionCarid(factionid,newmodel)) return SendClientMessage(playerid, COLOR_GREY, "Данная модель автомобиля Вам недоступна");

			if(newmodel == 409 && IsFactionGetVehicle(factionid,409)) return SendClientMessage(playerid, COLOR_GREY, "У Вашей организации уже есть лимузин");
            if(newmodel == 487 && IsFactionGetVehicle(factionid,487)) return SendClientMessage(playerid, COLOR_GREY, "У Вашей организации уже есть вертолет");
			if(newmodel == GangCarInfo[factionid][caridd-1][gCarModel]) return SendClientMessage(playerid, COLOR_GREY, "Данная модель автомобиля уже установлена");

	        GangCarInfo[factionid][caridd-1][gCarModel] = newmodel;

	        DestroyVehicle(GangCarInfo[factionid][caridd-1][gVehId]);
			GangCarInfo[factionid][caridd-1][gVehId] = CreateVehicle(
				GangCarInfo[factionid][caridd-1][gCarModel],
				GangCarInfo[factionid][caridd-1][gCarSpawnX],
				GangCarInfo[factionid][caridd-1][gCarSpawnY],
				GangCarInfo[factionid][caridd-1][gCarSpawnZ],
				GangCarInfo[factionid][caridd-1][gCarSpawnA],
				GangCarInfo[factionid][caridd-1][gCarColor1],
				GangCarInfo[factionid][caridd-1][gCarColor2],
				GangCarInfo[factionid][caridd-1][gRespDelay]
			);
            SaveFractionCar(factionid,caridd-1);
            if(factionid == 8) UpdateRifaWorkCars();

			format(string, sizeof(string), "Модель автомобиля %d успешно изменена на %s[%d]", caridd, VehiclesName[GangCarInfo[factionid][caridd-1][gCarModel]-400], newmodel);
			return SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(strcmp(tmp, "cardelay", true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
			new caridd = strval(tmp);
	       	if(caridd < 1 || caridd > 15) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang cardelay [id автомобиля (1-15)] [время респавна в секундах (60-600)]");

	        tmp = strtok(cmdtext, idx);
			new resdelay = strval(tmp);
	       	if(resdelay < 60 || resdelay > 600) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang cardelay [id автомобиля (1-15)] [время респавна в секундах (60-600)]");


	        GangCarInfo[factionid][caridd-1][gRespDelay] = resdelay;

	        DestroyVehicle(GangCarInfo[factionid][caridd-1][gVehId]);
			GangCarInfo[factionid][caridd-1][gVehId] = CreateVehicle(
				GangCarInfo[factionid][caridd-1][gCarModel],
				GangCarInfo[factionid][caridd-1][gCarSpawnX],
				GangCarInfo[factionid][caridd-1][gCarSpawnY],
				GangCarInfo[factionid][caridd-1][gCarSpawnZ],
				GangCarInfo[factionid][caridd-1][gCarSpawnA],
				GangCarInfo[factionid][caridd-1][gCarColor1],
				GangCarInfo[factionid][caridd-1][gCarColor2],
				GangCarInfo[factionid][caridd-1][gRespDelay]
			);
            SaveFractionCar(factionid,caridd-1);
			//new string[128];
			format(string, 128, "Время респавна автомобиля %d изменено на %d секунд", caridd, resdelay);
			return SendClientMessage(playerid, COLOR_WHITE, string);
		}
		if(strcmp(tmp, "carrank", true) == 0)
		{

		    tmp = strtok(cmdtext, idx);
			new caridd = strval(tmp);
	       	if(caridd < 1 || caridd > 15)
   			{
			   return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carrank [id автомобиля (1-15)] [ранг (1-20)]");
			}
	        tmp = strtok(cmdtext, idx);
			new rank = strval(tmp);

			if(rank < 1 || rank > 20)
   			{
			   return SendClientMessage(playerid, COLOR_GREY, "Используйте: /editgang carrank [id автомобиля (1-15)] [ранг (1-20)]");
			}

			GangCarInfo[factionid][caridd-1][gCarRank] = rank;
			SaveFractionCar(factionid,caridd-1);

			format(string, sizeof(string), "Ранг для автомобиля %d изменен на %d", caridd, rank);
			return SendClientMessage(playerid, COLOR_WHITE, string);

		}
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
			SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house/bizz/sbizz/car] [id] [название] [значение(опционально)]");
			return 1;
		}
		new id, ammount, editname[24];

        if(strcmp(tmp,"bizz",true) == 0)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [bizz] [id] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: " RGB_WHITE "Owned, Owner, Discription, Extortion, Entrance, Exit, Level");
				SendClientMessage(playerid, COLOR_WHITE,         "Price, EntranceCost, Products, MaxProducts, Lock, Money, PriceProd, World, Icon, DonatePrice, Sellbiz");
				return 1;
			}
			id = strval(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [bizz] [id] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: " RGB_WHITE "Owned, Owner, Discription, Extortion, Entrance, Exit, Level");
				SendClientMessage(playerid, COLOR_WHITE,         "Price, EntranceCost, Products, MaxProducts, Lock, Money, PriceProd, World, Icon, DonatePrice, Sellbiz");
				return 1;
			}
			strcat(editname,tmp,24);

		    if(strcmp(tmp,"Owned",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
	            if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [bizz] [id] [Owned] [1/0]");
					return 1;
				}
				else
				{
					BizzInfo[id][bOwned] = ammount;
			//		UpdateBizzMapIcon(id);
					UpdateBizzPickup(id);
					SaveBizz(id);
				}
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(strcmp(tmp,"Owner",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);

				strmid(BizzInfo[id][bOwner], tmp, 0, strlen(tmp), 24);
				SaveBizz(id);

				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %s", id, editname, tmp);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(strcmp(tmp,"Discription",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
				strmid(BizzInfo[id][bDiscription], tmp, 0, strlen(tmp), 24);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %s", id, editname, tmp);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Extortion",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
				BizzInfo[id][bExtortion] = strval(tmp);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, strval(tmp));
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Entrance",true) == 0)
    		{
				new Float: pox, Float:poy, Float:poz;
				GetPlayerPos(playerid, pox, poy, poz);
				BizzInfo[id][bEntranceX] = pox;
				BizzInfo[id][bEntranceY] = poy;
				BizzInfo[id][bEntranceZ] = poz;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s", id, editname);
				SendClientMessage(playerid, COLOR_WHITE, string);
			//	UpdateBizzMapIcon(id);
				UpdateBizzPickup(id);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Exit",true) == 0)
    		{
				new Float: pox, Float:poy, Float:poz;
				GetPlayerPos(playerid, pox, poy, poz);
				BizzInfo[id][bExitX] = pox;
				BizzInfo[id][bExitY] = poy;
				BizzInfo[id][bExitZ] = poz;
				new inter = GetPlayerInterior(playerid);
				BizzInfo[id][bInterior] = inter;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s", id, editname);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Level",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);

				BizzInfo[id][bLevel] = ammount;
				SaveBizz(id);

				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(strcmp(tmp,"Price",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);

				BizzInfo[id][bPrice] = ammount;
				SaveBizz(id);

				
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(strcmp(tmp,"EntranceCost",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				BizzInfo[id][bEntranceCost] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Products",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				BizzInfo[id][bProducts] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"MaxProducts",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				BizzInfo[id][bMaxProducts] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Lock",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [bizz] [id] [Lock] [1/0]");
					return 1;
				}
				BizzInfo[id][bLocked] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Money",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				BizzInfo[id][bMoney] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"PriceProd",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				BizzInfo[id][bPriceProd] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"World",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				BizzInfo[id][bWorld] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Icon",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 1 || ammount > 63)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [bizz] [id] [Icon] [1-63]");
					return 1;
				}
				BizzInfo[id][bIcon] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveBizz(id);
				return 1;
			}
  			if(strcmp(tmp,"DonatePrice",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                

				BizzInfo[id][bDonatePrice] = ammount;
				SaveBizz(id);

				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(strcmp(tmp,"Sellbiz",true) == 0)
    		{
   				BizzInfo[id][bLocked] = 1;
				BizzInfo[id][bOwned] = 0;
				strmid(BizzInfo[id][bOwner], "The State", 0, strlen("The State"), 255);
				BizzInfo[id][bExtortion] = 0;
    			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			//	UpdateBizzMapIcon(id);
				UpdateBizzPickup(id);
				SaveBizz(id);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Bizz id: %d продан.", id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		if(strcmp(tmp,"sbizz",true) == 0)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [sbizz] [id] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: " RGB_WHITE "Owned, Owner, Discription, Extortion, Entrance, Level");
				SendClientMessage(playerid, COLOR_WHITE,         "Price, EntranceCost, Products, MaxProducts, Lock, Money, PriceProd, DonatePrice, Sellbiz");
				return 1;
			}
			id = strval(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [sbizz] [id] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: " RGB_WHITE "Owned, Owner, Discription, Extortion, Entrance, Level");
				SendClientMessage(playerid, COLOR_WHITE,         "Price, EntranceCost, Products, MaxProducts, Lock, Money, PriceProd, DonatePrice, Sellsbiz");
				return 1;
			}
			strcat(editname,tmp,24);

		    if(strcmp(tmp,"Owned",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
	            if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [sbizz] [id] [Owned] [1/0]");
					return 1;
				}
				SBizzInfo[id][sbOwned] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
			//	UpdateSBizzMapIcon(id);
				UpdateSBizzPickup(id);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Owner",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
				strmid(SBizzInfo[id][sbOwner], tmp, 0, strlen(tmp), 24);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %s", id, editname, tmp);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Discription",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
				strmid(SBizzInfo[id][sbDiscription], tmp, 0, strlen(tmp), 24);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %s", id, editname, tmp);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Extortion",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
				SBizzInfo[id][sbExtortion] = strval(tmp);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, strval(tmp));
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Entrance",true) == 0)
    		{
				new Float: pox, Float:poy, Float:poz;
				GetPlayerPos(playerid, pox, poy, poz);
				SBizzInfo[id][sbEntranceX] = pox;
				SBizzInfo[id][sbEntranceY] = poy;
				SBizzInfo[id][sbEntranceZ] = poz;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s", id, editname);
				SendClientMessage(playerid, COLOR_WHITE, string);
			//	UpdateSBizzMapIcon(id);
				UpdateSBizzPickup(id);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Level",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbLevel] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Price",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbPrice] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"EntranceCost",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbEntranceCost] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Products",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbProducts] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"MaxProducts",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbMaxProducts] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Lock",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [sbizz] [id] [Lock] [1/0]");
					return 1;
				}
				SBizzInfo[id][sbLocked] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Money",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbMoney] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"PriceProd",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbPriceProd] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"DonatePrice",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				SBizzInfo[id][sbDonatePrice] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveSBizz(id);
				return 1;
			}
			if(strcmp(tmp,"Sellsbiz",true) == 0)
    		{
				SBizzInfo[id][sbLocked] = 1;
		  		SBizzInfo[id][sbOwned] = 0;
				strmid(SBizzInfo[id][sbOwner], "The State", 0, strlen("The State"), 255);
				SBizzInfo[id][sbExtortion] = 0;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			//	UpdateSBizzMapIcon(id);
				UpdateSBizzPickup(id);
				SaveSBizz(id);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"SBizz id: %d продан.", id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		if(strcmp(tmp,"house",true) == 0)
        {
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: " RGB_WHITE "Owned, Owner, Discription, Entrance, Exit, Level, Price");
				SendClientMessage(playerid, COLOR_WHITE,         "Health, Armour, Tv, Bar, Lock, RentPrice, Rentabil, Money, World,DonatePrice, Sellhouse");
				return 1;
			}
			id = strval(tmp);
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: " RGB_WHITE "Owned, Owner, Entrance, Exit, Level, Price");
				SendClientMessage(playerid, COLOR_WHITE,         "Health, Armour, Tv, Bar, Lock, RentPrice, Rentabil, Money, World,DonatePrice, Sellhouse");
				return 1;
			}
			strcat(editname,tmp,24);

		    if(strcmp(tmp,"Owned",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
	            if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [Owned] [1/0]");
					return 1;
				}
				HouseInfo[id][hOwned] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
			//	UpdateHouseMapIcon(id);
				UpdateHousePickup(id);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Owner",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
				strmid(HouseInfo[id][hOwner], tmp, 0, strlen(tmp), 24);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %s", id, editname, tmp);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Entrance",true) == 0)
    		{
				new Float: pox, Float:poy, Float:poz;
				GetPlayerPos(playerid, pox, poy, poz);
				HouseInfo[id][hEntrancex] = pox;
				HouseInfo[id][hEntrancey] = poy;
				HouseInfo[id][hEntrancez] = poz;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s", id, editname);
				SendClientMessage(playerid, COLOR_WHITE, string);
			//	UpdateHouseMapIcon(id);
				UpdateHousePickup(id);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Exit",true) == 0)
    		{
				new Float: pox, Float:poy, Float:poz;
				GetPlayerPos(playerid, pox, poy, poz);
				HouseInfo[id][hExitx] = pox;
				HouseInfo[id][hExity] = poy;
				HouseInfo[id][hExitz] = poz;
				new inter = GetPlayerInterior(playerid);
				HouseInfo[id][hInt] = inter;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s", id, editname);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Level",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				HouseInfo[id][hLevel] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Price",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				HouseInfo[id][hPrice] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Health",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [Health] [1/0]");
					return 1;
				}
				HouseInfo[id][hHel] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Bar",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [Bar] [1/0]");
					return 1;
				}
				HouseInfo[id][hBar] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Armour",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [Armour] [1/0]");
					return 1;
				}
				HouseInfo[id][hArm] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Lock",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [Lock] [1/0]");
					return 1;
				}
				HouseInfo[id][hLock] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"RentPrice",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				HouseInfo[id][hRent] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Rentabil",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                if(ammount < 0 || ammount > 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [house] [id] [Rentabil] [1/0]");
					return 1;
				}
				HouseInfo[id][hRentabil] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Money",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				HouseInfo[id][hMoney] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"World",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				HouseInfo[id][hWorld] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"DonatePrice",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
				HouseInfo[id][hDonatePrice] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d, редактировано: %s, установлено значение: %d", id, editname, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SaveHouse(id);
				return 1;
			}
			if(strcmp(tmp,"Sellhouse",true) == 0)
    		{
				HouseInfo[id][hHel] = 0;
				HouseInfo[id][hArm] = 0;
				HouseInfo[id][hLock] = 0;
				HouseInfo[id][hOwned] = 0;
				strmid(HouseInfo[id][hOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SaveHouse(id);
			//	UpdateHouseMapIcon(id);
				UpdateHousePickup(id);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"House id: %d продан.", id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
		}
		if(strcmp(tmp,"car",true) == 0)
 		{
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [car] [playerid] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: "RGB_WHITE"Model, Untuning, Position, Number, Color1, Color2");
				return 1;
			}
			id = ReturnUser(tmp);
			if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"• "RGB_WHITE"Игрок не в сети");
			
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
				SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте:  "RGB_GREY "/edit [car] [playerid] [название] [значение(опционально)]");
				SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">> Доступные названия: "RGB_WHITE"Model, Untuning, Position, Number, Color1, Color2");
				return 1;
			}
			strcat(editname,tmp,24);

				
			if(strcmp(tmp,"Number",true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(strlen(tmp) < 1 || strlen(tmp) > 20)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [car] [playerid] [Number] [1-20 symbols]");
					return 1;
				}
				strmid(CarInfo[id][cNumber], tmp, 0, strlen(tmp), 24);
				SavePlayerCar(id);
				RespawnPlayerCar(id);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Номер автомобиля игрока: %s[%d] теперь %s", GetName(id), id, tmp);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
            if(strcmp(tmp,"Position",true) == 0)
            {
				GetPlayerPos(playerid, CarInfo[id][carX], CarInfo[id][carY], CarInfo[id][carZ]);
				GetPlayerFacingAngle(playerid, CarInfo[id][carA]);
				SavePlayerCar(id);
				RespawnPlayerCar(id);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Позиция автомобиля игрока: %s[%d] редактирована.", GetName(id), id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
            }
			if(strcmp(tmp,"Model",true) == 0)
    		{
                tmp = strtok(cmdtext, idx);
                ammount = strval(tmp);
                
				if(ammount < 400 || ammount > 611)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [car] [playerid] [Model] [400-611]");
					return 1;
				}
				CarInfo[id][cModel] = ammount;
				CarInfo[id][cSpoiler]= 0;
		  		CarInfo[id][cHood]= 0;
		        CarInfo[id][cSideskirt]= 0;
		        CarInfo[id][cNitro]= 0;
		        CarInfo[id][cLamps]= 0;
		        CarInfo[id][cExhaust]= 0;
		        CarInfo[id][cWheels]= 0;
		        CarInfo[id][cRoof]= 0;
		        CarInfo[id][cStereo]= 0;
		        CarInfo[id][cHydraulics]= 0;
		        CarInfo[id][cBullbar]= 0;
		        CarInfo[id][cRearBullbars]= 0;
		        CarInfo[id][cFrontSign]= 0;
		        CarInfo[id][cFrontBullbars]= 0;
		        CarInfo[id][cFrontBumper]= 0;
		        CarInfo[id][cRearBumper]= 0;
		        CarInfo[id][cVents]= 0;
		        CarInfo[id][cPaintJob]= -1;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Модель автомобиля игрока %s[%d] редактирована на %d", GetName(id), id, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SavePlayerCar(id);
				RespawnPlayerCar(id);
				return 1;
			}
			if(strcmp(tmp,"Untuning",true) == 0)
    		{
				CarInfo[id][cSpoiler]= 0;
		  		CarInfo[id][cHood]= 0;
		        CarInfo[id][cSideskirt]= 0;
		        CarInfo[id][cNitro]= 0;
		        CarInfo[id][cLamps]= 0;
		        CarInfo[id][cExhaust]= 0;
		        CarInfo[id][cWheels]= 0;
		        CarInfo[id][cRoof]= 0;
		        CarInfo[id][cStereo]= 0;
		        CarInfo[id][cHydraulics]= 0;
		        CarInfo[id][cBullbar]= 0;
		        CarInfo[id][cRearBullbars]= 0;
		        CarInfo[id][cFrontSign]= 0;
		        CarInfo[id][cFrontBullbars]= 0;
		        CarInfo[id][cFrontBumper]= 0;
		        CarInfo[id][cRearBumper]= 0;
		        CarInfo[id][cVents]= 0;
		        CarInfo[id][cPaintJob]= -1;
				SavePlayerCar(id);
				RespawnPlayerCar(id);
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE"Тюнинг с автомобиля игрока %s[%d] снят", GetName(id), id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			if(strcmp(tmp,"Color1",true) == 0)
			{
	            tmp = strtok(cmdtext, idx);
	            ammount = strval(tmp);
	            if(ammount < 0 || ammount > 126)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [car] [playerid] [Color1] [1-126]");
					return 1;
				}
				CarInfo[id][cColor1] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: "RGB_WHITE"Цвет 1 автомобиля игрока %s[%d] редактирован на %d", GetName(id), id, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SavePlayerCar(id);
				RespawnPlayerCar(id);
				return 1;
			}
			if(strcmp(tmp,"Color2",true) == 0)
			{
	            tmp = strtok(cmdtext, idx);
	            ammount = strval(tmp);
	            if(ammount < 0 || ammount > 126)
				{
					SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE">>__________________ " RGB_WHITE "Crime Streets Editor v. 1.0 " RGB_BLUE"__________________<<");
					SendClientMessage(playerid, COLOR_WHITE, RGB_RED ">> Используйте: " RGB_GREY "/edit [car] [playerid] [Color1] [1-126]");
					return 1;
				}
				CarInfo[id][cColor2] = ammount;
				format(string, sizeof(string), RGB_BLUE">> Crime Streets Editor: " RGB_WHITE""RGB_WHITE"Цвет 2 автомобиля игрока %s[%d] редактирован на %d", GetName(id), id, ammount);
				SendClientMessage(playerid, COLOR_WHITE, string);
				SavePlayerCar(id);
				RespawnPlayerCar(id);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/load", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);

	 	if(IsARifaWorkCar(tmpcar))
		{
		    new rifacarid = GetFactionCarId(8,tmpcar);
			format(string, sizeof(string), "Материалы: %d/%d", MatsInfo[rifacarid][mLoad],MatsInfo[rifacarid][mCapacity]);
			SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не в машине для перевозки материалов");
		return 1;
	}
	if(strcmp(cmd, "/buymats", true) == 0)
	{
		if(GetPVarInt(playerid,"Team") != 17) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только членам San Fierro Rifa");
		if(MatsTime[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Материалы нельзя покупать так часто");
		if(!IsPlayerInRangeOfPoint(playerid, 5.0,  2108.101074, -2002.671875, 13.252698)) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от места закупки материалов");

		new tmpcar = GetPlayerVehicleID(playerid);
		if(!IsARifaWorkCar(tmpcar)) return SendClientMessage(playerid, COLOR_GREY, "Ваша машина не может перевозить материалы");

		new rifacarid = GetFactionCarId(8,tmpcar);
		if(MatsInfo[rifacarid][mLoad] < MatsInfo[rifacarid][mCapacity])
		{
		    tmp = strtok(cmdtext, idx);
			new amount = strval(tmp);
			if(amount < 10 || amount > 2000) return SendClientMessage(playerid, COLOR_GREY, "Количество материалов должно быть от 10 до 2000");
			
			if(MatsInfo[rifacarid][mLoad] + amount > MatsInfo[rifacarid][mCapacity])
			{
			    format(string, sizeof(string), "Максимально можно перевозить %d материалов, в машине материалов: %d",MatsInfo[rifacarid][mCapacity],MatsInfo[rifacarid][mLoad]);
			    return SendClientMessage(playerid, COLOR_GREY, string);
			}
			new cost = amount * 5;
			if(GetPlayerPCash(playerid) < cost)
			{
				format(string, sizeof(string), "Вы не можете купить %d материалов, нужно $%d", amount, cost);
				return SendClientMessage(playerid, COLOR_GREY, string);
			}
			if(DumpLoad < amount) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно металла");

			MatsInfo[rifacarid][mLoad] += amount;
			
			DumpLoad -= amount;
			format(string, sizeof(string), "Склад свалки:\n %d кг. железа", DumpLoad);
			Update3DTextLabelText(Dump3dText, COLOR_YELLOW, string);

			format(string, sizeof(string), "Склад свалки:\n %d кг. железа\n\nЗакупка металла: /buym\nПродажа: /sellm\nМатериалы: /buymats", DumpLoad);
			Update3DTextLabelText(LoadDump, COLOR_YELLOW, string);
		
			GivePlayerPCash(playerid, -cost, "buymats");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

			format(string, sizeof(string), "~r~-$%d", cost);
			GameTextForPlayer(playerid, string, 5000, 1);
			
			format(string, sizeof(string), "Материалы: %d / %d", MatsInfo[rifacarid][mLoad],MatsInfo[rifacarid][mCapacity]);
			return SendClientMessage(playerid, COLOR_GREEN, string);
		}
		else
		{
			format(string, sizeof(string), "Материалы: %d / %d", MatsInfo[rifacarid][mLoad],MatsInfo[rifacarid][mCapacity]);
			return SendClientMessage(playerid, COLOR_GREEN, string);

		}
	}
	if(strcmp(cmd, "/sellmats", true) == 0)
	{
	    new tmpcar;
		tmpcar = GetPlayerVehicleID(playerid);
		if(GetPVarInt(playerid,"Team") != 17) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только членам San Fierro Rifa");
		if(!IsARifaWorkCar(tmpcar)) return SendClientMessage(playerid, COLOR_GREY, "Вам нужен грузовик для перевозки материалов");
		
		new rifacarid = GetFactionCarId(8,tmpcar);
		if(MatsInfo[rifacarid][mLoad] < 1) return SendClientMessage(playerid, COLOR_GREY, "Грузовик пуст");
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1708.983764,757.699035,10.820312)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на складе материалов");
		if(MatsAmmount >= 50000) return SendClientMessage(playerid, COLOR_GREY, "Cклад полный");

		new money = MatsInfo[rifacarid][mLoad] * 8;
		MatsAmmount += MatsInfo[rifacarid][mLoad];
		MatsInfo[rifacarid][mLoad] = 0;
		
		
		GivePlayerPCash(playerid, money, "sellmats");
		format(string, sizeof(string), "~g~+$%d", money);
		GameTextForPlayer(playerid, string, 5000, 1);

		
		format(string, sizeof(string), "Материалы: %d / %d", MatsInfo[rifacarid][mLoad],MatsInfo[rifacarid][mCapacity]);
		SendClientMessage(playerid, COLOR_GREEN, string);
		
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		MatsTime[playerid] = gettime() + 180;
		SaveOther();
		return 1;
	}
	if(strcmp(cmd, "/buycannabis", true) == 0)
	{
		new tmpcar = GetPlayerVehicleID(playerid);
		if(GetPVarInt(playerid,"Team") != 18) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только для колхозников");
		if(GetPVarInt(playerid, "Rank") < 3) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 3 ранга");
		if(!IsPlayerInRangeOfPoint(playerid, 10.0,  -1067.8506,-1248.8572,129.2188)) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от места закупки наркотиков");
		if(!IsAFarmerCar(tmpcar)) return SendClientMessage(playerid, COLOR_GREY, "Возьмите машину для перевозки наркотиков");
		new deliverCar = GetFactionCarId(9,tmpcar);
		if(DrugsLoad[deliverCar] < 100)
		{
		    new amount;
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /buycannabis [количество]");
			if(DrugsFarmAmmount < 1) return SendClientMessage(playerid, COLOR_GREY, "На складе нет наркотиков");
			if(MatsTime[playerid] > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Наркотики нельзя покупать так часто");
			amount = strval(tmp);
			if(amount < 1 || amount > 100) return SendClientMessage(playerid, COLOR_GREY, "Количество наркотиков должно быть от 1 до 100");
			new check= DrugsLoad[deliverCar] + amount;
			if(check > 100)
			{
			    format(string, sizeof(string), "Максимально можно перевозить 100 наркотиков, в машине наркотиков: %d .",DrugsLoad[deliverCar]);
			    SendClientMessage(playerid, COLOR_GREY, string);
			    return 1;
			}
			new cost = amount * 2;
			if(GetPlayerPCash(playerid) >= cost)
			{
				DrugsLoad[deliverCar] += amount;
				DrugsFarmAmmount -= amount;
				format(string, sizeof(string), "Наркотики: %d/100", DrugsLoad[deliverCar]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string), "Вы купили %d грамм наркотиков за $%d", amount,cost);
				SendClientMessage(playerid, COLOR_WHITE, string);
				
				SendClientMessage(playerid, COLOR_GREEN, "Следуйте к красному маячку на радаре, чтобы продать наркотики");
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_PRITON;
				SetPlayerCheckpoint(playerid, 2161.9656,-1659.5684,15.0859, 3.0);
				SetPVarInt(playerid, "DrugsDelivery", 1);
				GivePlayerPCash(playerid,-cost, "buycannabis");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SaveOther();
				return 1;
			}
			else
			{
				format(string, sizeof(string), "Вы не можете купить %d наркотиков, нужно $%d", amount,cost);
				SendClientMessage(playerid, COLOR_GREY, string);
				return 1;
			}
		}
		else
		{
				format(string, sizeof(string), "Наркотики: %d/100", DrugsLoad[deliverCar]);
				SendClientMessage(playerid, COLOR_GREEN, string);
				return 1;
		}
	}
	if(strcmp(cmd, "/sellcannabis", true) == 0)
	{
	    new cashmade;
	    new tmpcar;
		tmpcar = GetPlayerVehicleID(playerid);
		if(GetPVarInt(playerid,"Team") != 18) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только для колхозников");
		if(!IsAHarvester(tmpcar)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в комбайне");
		new deliverCar = GetFactionCarId(9,tmpcar);
		if(DrugsLoad[deliverCar] < 1)  return SendClientMessage(playerid, COLOR_GREY, "У Вас нет конопли");
		if(!IsPlayerInRangeOfPoint(playerid, 10, -1067.8506,-1248.8572,129.2188)) return SendClientMessage(playerid, COLOR_GREY, "Вы не у точки сдачи конопли");
		if(DrugsFarmAmmount >= 15000) return SendClientMessage(playerid, COLOR_GREY, "Cклад полный");
		cashmade = DrugsLoad[deliverCar] * 2;
		DrugsFarmAmmount += DrugsLoad[deliverCar];
		GivePlayerPCash(playerid,cashmade, "sellcannabis");
		DrugsLoad[deliverCar] = 0;
		format(string, sizeof(string), "Прибыль: $%d", cashmade);
		SendClientMessage(playerid, COLOR_GREEN, string);
		SendClientMessage(playerid, COLOR_GREEN, "Наркотики: 0/100");
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		SaveOther();
		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~g~Cannabis:~y~ 0 / 100", 3000, 3);
		return 1;
	}
	if(strcmp(cmd, "/sellprods", true) == 0)
	{
	    if(GetPVarInt(playerid, "OnFacJob") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");
	    new ProdCarID = GetProdCar(GetPlayerVehicleID(playerid));
	    
	    if(ProdCarID == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не в грузовике для развозки продуктов");
	    if(ProdCarInfo[ProdCarID][prodNow] <= 0)  return SendClientMessage(playerid, COLOR_GREY, "В грузовике нет продуктов");

	    new amount;
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellprods [Сколько хотите продать продуктов]");
		amount = strval(tmp);

		if(amount > ProdCarInfo[ProdCarID][prodNow] || amount < 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет стольких продуктов");

		for(new i = 0; i < sizeof(BizzInfo); i++)
		{
		    switch(i)
		    {
		        case 0, 1, 3, 7, 14, 15, 16, 17: continue;
			}
			if(!IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ])) continue;

			if((BizzInfo[i][bProducts] + amount) > BizzInfo[i][bMaxProducts]) return SendClientMessage(playerid, COLOR_GREY, "Бизнес переполнен. Укажите меньшее значение");

			if((amount * BizzInfo[i][bPriceProd]) > BizzInfo[i][bMoney])  return SendClientMessage(playerid, COLOR_GREY, "У бизнеса недостаточно денег. Укажите меньшее значение");


			GivePlayerPCash(playerid, amount * BizzInfo[i][bPriceProd], "sellprods");
			BizzInfo[i][bProducts] += amount;
			GiveBizMoney(i, -amount * BizzInfo[i][bPriceProd]);
			ProdCarInfo[ProdCarID][prodNow] -= amount;

			format(string, sizeof(string), "~g~$%d", amount * BizzInfo[i][bPriceProd]);
			GameTextForPlayer(playerid, string, 7000, 1);
			
			break;

		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
		    switch(i)
			{
				case 3, 15..29, 31: continue;
			}

			if(!IsPlayerInRangeOfPoint(playerid, 10.0, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ])) continue;

			if((SBizzInfo[i][sbProducts] + amount) > SBizzInfo[i][sbMaxProducts]) return SendClientMessage(playerid, COLOR_GREY, "Бизнес переполнен. Укажите меньшее значение");

			if((amount * SBizzInfo[i][sbPriceProd]) > SBizzInfo[i][sbMoney])  return SendClientMessage(playerid, COLOR_GREY, "У бизнеса недостаточно денег. Укажите меньшее значение");


			GivePlayerPCash(playerid, amount * SBizzInfo[i][sbPriceProd], "sellprods sbiz");
			SBizzInfo[i][sbProducts] += amount;
			GiveSBizMoney(i, -amount * SBizzInfo[i][sbPriceProd]);
			ProdCarInfo[ProdCarID][prodNow] -= amount;

			format(string, sizeof(string), "~g~$%d", amount * SBizzInfo[i][sbPriceProd]);
			GameTextForPlayer(playerid, string, 7000, 1);
			
			break;

		}
		
		format(string, sizeof(string), "[Продукты]\n%d / %d", ProdCarInfo[ProdCarID][prodNow], ProdCarInfo[ProdCarID][prodMax]);
		switch(ProdCarID)
		{
  			case 0..4: Update3DTextLabelText(ProdCarInfo[ProdCarID][prodCar3d], COLOR_YELLOW, string);
	    	default: Update3DTextLabelText(ProdCarInfo[ProdCarID][prodCar3d], COLOR_LIGHTRED, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/buyprods", true) == 0)
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 15.0, -2180.50000000,-209.50000000,37.2999992)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на складе продуктов");

	    if(GetPVarInt(playerid, "OnFacJob") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");
	    new ProdCarID = GetProdCar(GetPlayerVehicleID(playerid));
	    if(ProdCarID == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не в грузовике для развозки продуктов");

	    new amount;
		new prodprice = 4; // 4$ за 1 продукт
		
	    tmp = strtok(cmdtext, idx);
	    amount = strval(tmp);
		if(amount < 1 || amount > 400) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /buyprods [Сколько хотите купить продуктов]");
		if(totalprods < amount) return SendClientMessage(playerid, COLOR_GREY, "На заводе нет столько продуктов");

		if(GetPlayerPCash(playerid) < (prodprice * amount)) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег, стоимость одного продукта $4");

		if((amount + ProdCarInfo[ProdCarID][prodNow]) > ProdCarInfo[ProdCarID][prodMax]) return SendClientMessage(playerid, COLOR_GREY, "В грузовик не поместится столько продуктов");

		ProdCarInfo[ProdCarID][prodNow] += amount;
		GivePlayerPCash(playerid, - (amount*prodprice), "buyprods");

		format(string, sizeof(string), "[Продукты]\n%d / %d", ProdCarInfo[ProdCarID][prodNow], ProdCarInfo[ProdCarID][prodMax]);
		switch(ProdCarID)
		{
		    case 0..4: Update3DTextLabelText(ProdCarInfo[ProdCarID][prodCar3d], COLOR_YELLOW, string);
		    default: Update3DTextLabelText(ProdCarInfo[ProdCarID][prodCar3d], COLOR_LIGHTRED, string);
		}

		format(string, sizeof(string), "~r~-$%d", amount*prodprice);
		GameTextForPlayer(playerid, string, 5000, 1);

		SendClientMessage(playerid, COLOR_GREEN, "Вы купили продукты. Доставьте их в любой бизнес");

		totalprods -= amount;
		format(string, sizeof(string), "На складе завода:\n%d кг. продуктов", totalprods);
		Update3DTextLabelText(prods3d, COLOR_YELLOW, string);

		format(string, sizeof(string), "Продуктов на складе: %d\nЗакупка: /buyprods\nПродажа: /sellprods", totalprods);
		Update3DTextLabelText(buyprod, COLOR_YELLOW, string);
		return 1;
	}
	if(strcmp(cmd, "/enter", true) == 0)
	{
		for(new i = 0; i < sizeof(BizzInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3 ,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
				if(!IsACop(playerid) && i == 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский");
				if(GetPVarInt(playerid,"Bizz") == i || GetPlayerPCash(playerid) >= BizzInfo[i][bEntranceCost])
				{
					if(GetPVarInt(playerid,"Bizz") != i)
					{
						if(BizzInfo[i][bLocked] == 1) return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						if(GetPlayerPCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						if(BizzInfo[i][bProducts] == 0) return GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
						GivePlayerPCash(playerid,-BizzInfo[i][bEntranceCost], "enter biz");
						format(string, sizeof(string), "~r~-$%d~n~~w~For exit type~n~/exit", BizzInfo[i][bEntranceCost]);
						GiveBizMoney(i, BizzInfo[i][bEntranceCost]);
						BizzInfo[i][bProducts]--;
						SaveBizz(i);
						GameTextForPlayer(playerid, string, 5000, 3);
					}
					SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
					SetPlayerVirtualWorld(playerid,BizzInfo[i][bWorld]);
					oSetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
					SetPVarInt(playerid, "Local", i+99);
				}
				else GameTextForPlayer(playerid, "~r~Too far from a business‚", 5000, 1);
			}
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid,3, SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				if(GetPVarInt(playerid,"Bizz") == i || GetPlayerPCash(playerid) >= SBizzInfo[i][sbEntranceCost])
				{
					if(GetPVarInt(playerid,"Bizz") != i)
					{
						if(SBizzInfo[i][sbLocked] == 1) return GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
						if(SBizzInfo[i][sbProducts] == 0) return GameTextForPlayer(playerid, "~r~Out of stock", 5000, 1);
						if(GetPlayerPCash(playerid) < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
						if(i == 10)
						{
						    PaintballPlayers ++;
						    PlayerPaintballing[playerid] = 1;
						    new rand = random(sizeof(PaintballSpawns));
							oSetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
							//TogglePlayerControllable(playerid, 0);
						}
						else if(i == 11)
						{
						    SetPVarInt(playerid, "KartingAllowed",1);
						    SendClientMessage(playerid, COLOR_WHITE, "Картинг оплачен");
						}
						else return 1;
						GivePlayerPCash(playerid,-SBizzInfo[i][sbEntranceCost], "enter sbiz");
						gSpentCash[playerid] = GetPlayerPCash(playerid);
						SBizzInfo[i][sbProducts]--;
						GiveSBizMoney(i, SBizzInfo[i][sbEntranceCost]);
						SaveSBizz(i);
					}
				}
				else GameTextForPlayer(playerid, "~r~ Too far from a business", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
		new world = GetPlayerVirtualWorld(playerid);
		for(new i = 0; i <  sizeof(HouseInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid,5.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && (world == HouseInfo[i][hWorld]))
			{
			    order[playerid] = 1;
			    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid,0);
				oSetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
				SetPlayerVirtualWorld(playerid,0);
				DeletePVar(playerid, "Local");
				break;
			}
		}
		for(new i = 0; i <  sizeof(BizzInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]) && (world == BizzInfo[i][bWorld]))
			{
			    order[playerid] = 1;
			    SetTimerEx("SetOrder", 3000, 0, "d", playerid);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
				oSetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
				DeletePVar(playerid, "Local");
				break;
			}
		}
		new newcar = GetPlayerVehicleID(playerid);
		if(newcar == RentLSCar[0] || newcar == RentLSCar[1] || newcar == RentLSCar[2] || newcar == RentSFCar[0] || newcar == RentSFCar[1] || newcar == RentSFCar[2])
		{
			TogglePlayerControllable(playerid, 1);
			ClearAnimations(playerid);
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		GetPlayerName(playerid, playername, sizeof(playername));
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		if(GetPVarInt(playerid,"Bizz") != 255) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть бизнес, введите /sellbiz если хотите продать его");
		for(new b = 0; b < sizeof(SBizzInfo); b++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0,  SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
			{
				if(GetPVarInt(playerid,"Level") < SBizzInfo[b][sbLevel])
				{
					format(string, sizeof(string), "Доступно только игрокам %d уровня и выше",SBizzInfo[b][sbLevel]);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				if(GetPlayerPCash(playerid) < SBizzInfo[b][sbPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег для покупки этого бизнеса");
                if(GetPVarInt(playerid, "DonateMoney") < SBizzInfo[b][sbDonatePrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает Donate денег для покупки этого бизнеса");
				SetPVarInt(playerid,"Bizz", b+100);
				MySQL_UpdateInt(playerid,"Bizz");
				SBizzInfo[b][sbOwned] = 1;
				if(SBizzInfo[b][sbDonatePrice] > 0)
			    {
				    GivePVarInt(playerid, "DonateMoney", -SBizzInfo[b][sbDonatePrice]);
					MySQL_UpdateInt(playerid,"DonateMoney");
					SBizzInfo[b][sbDonatePrice] = 0;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
				GivePlayerPCash(playerid,-SBizzInfo[b][sbPrice], "buybiz sbiz");
				PlayerPlayMusic(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с новой покупкой");
				SendClientMessage(playerid, COLOR_WHITE, "Для управления бизнесом используйте /bpanel");
                SaveSBizz(b);
				UpdateSBizzPickup(b);
				return 1;
			}
		}
		for(new b = 0; b < sizeof(BizzInfo); b++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0,  BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
			{
				if(GetPVarInt(playerid,"Level") < BizzInfo[b][bLevel])
				{
					format(string, sizeof(string), "Доступно только игрокам %d уровня и выше", BizzInfo[b][bLevel]);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				if(GetPlayerPCash(playerid) < BizzInfo[b][bPrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег для покупки этого бизнеса");
                if(GetPVarInt(playerid, "DonateMoney") < BizzInfo[b][bDonatePrice]) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает Donate денег для покупки этого бизнеса");
				SetPVarInt(playerid,"Bizz",b);
				MySQL_UpdateInt(playerid,"Bizz");
				BizzInfo[b][bOwned] = 1;
				if(BizzInfo[b][bDonatePrice] > 0)
			    {
				    GivePVarInt(playerid, "DonateMoney", -BizzInfo[b][bDonatePrice]);
					MySQL_UpdateInt(playerid,"DonateMoney");
					BizzInfo[b][bDonatePrice] = 0;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
				GivePlayerPCash(playerid,-BizzInfo[b][bPrice], "buybiz");
				PlayerPlayMusic(playerid);
				SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
				oSetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
				SetPlayerVirtualWorld(playerid,BizzInfo[b][bWorld]);
				GameTextForPlayer(playerid, "~w~Welcome~n~For exit type /exit", 5000, 3);
				SetPVarInt(playerid, "Local", b+99);
				SendClientMessage(playerid, COLOR_WHITE, "Поздравляем с новой покупкой");
				SendClientMessage(playerid, COLOR_WHITE, "Для управления бизнесом используйте /bpanel");
				SaveBizz(b);
				UpdateBizzPickup(b);
				return 1;
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if (GetPVarInt(playerid, "Bizz") == 255)  return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
        if (CheckBiz(playerid, GetPVarInt(playerid, "Bizz"))) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса #2");

        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellbiz [id/часть ника] [цена]");
        new id = ReturnUser(tmp);

        if (!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");

        tmp = strtok(cmdtext, idx);
        if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellbiz [id/часть ника] [цена]");
        new money = strval(tmp);

        if (money < 1 || money > 20000000) return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $1 до $20000000");

        tmp = strtok(cmdtext, idx);
		if (strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Цена указана неверно! Пишите сумму слитно, пример: 100000, а не 100 000");

		if (!ProxDetectorS(5.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не рядом с вами");
		if (id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продавать самому себе");

		if (GetPVarInt(id, "Bizz") != 255 && CheckBiz(id, GetPVarInt(id, "Bizz")) == false) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть бизнес");

		if (GetPVarInt(playerid, "CantUseBizz") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже предлагали кому-то обмен/продажу");
		if (GetPVarInt(playerid, "SellBizPrice")) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже покупает бизнес");

		SetPVarInt(playerid, "CantUseBizz", 1);
		SetPVarInt(playerid, "SellToPlayer", id);

		SetPVarInt(id, "SellBizID", GetPVarInt(playerid,"Bizz"));
		SetPVarInt(id, "SellBizPrice", money);
		SetPVarInt(id, "SellBizSeller", playerid);

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" купить бизнес за %d$", GetName(id),  money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам свой бизнес за $%d, если согласны "RGB_BLUE"/acceptbiz", GetName(playerid), money);
		SendClientMessage(id, COLOR_LIGHTBLUE, string);

		return 1;
	}
	if(strcmp(cmd, "/acceptbiz", true) == 0)
	{
	    new id = GetPVarInt(playerid, "SellBizSeller");
	    new money = GetPVarInt(playerid, "SellBizPrice");
	    new bizid = GetPVarInt(playerid, "SellBizID");

	    DeletePVar(playerid, "SellBizSeller");
	    DeletePVar(playerid, "SellBizPrice");
	    DeletePVar(playerid, "SellBizID");

	    if (!IsPlayerConnected(id)) return SendClientMessage(id, COLOR_GREY, "Игрок отключился от сервера");

	    if (GetPVarInt(id, "CantUseBizz") != 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не предлагал продажу бизнеса");
	    if (GetPVarInt(id, "SellToPlayer") != playerid) return SendClientMessage(playerid, COLOR_GREY, "Игрок не предлагал Вам бизнеса");

	    DeletePVar(id, "CantUseBizz");
	    DeletePVar(id, "SellToPlayer");

	    if (GetPVarInt(id, "Bizz") == 255)
		{
		    SendClientMessage(id, COLOR_GREY, "Вы уже продали бизнес");
	 		return SendClientMessage(playerid, COLOR_GREY, "Игрок уже продал бизнес");
	    }
	    if (GetPlayerPCash(playerid) < money)
		{
		    SendClientMessage(id, COLOR_GREY, "У игрока не хватает денег");
	 		return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
	    }

		GivePlayerPCash(playerid, -money, "acceptbiz");
		GivePlayerPCash(id, money, "acceptbiz");

		SetPVarInt(playerid, "Bizz", bizid);
		SetPVarInt(id, "Bizz", 255);

		MySQL_UpdateInt(playerid, "Bizz");
		MySQL_UpdateInt(id, "Bizz");

		new name[25];
		GetPlayerName(playerid, name, sizeof(name));

		if(bizid < 100) strmid(BizzInfo[bizid][bOwner], name, 0, strlen(name), 255);
		else strmid(SBizzInfo[bizid-100][sbOwner], name, 0, strlen(name), 255);

		format(string, sizeof(string), "~g~+$%d", money);
		GameTextForPlayer(id, string, 3000, 1);

		format(string, sizeof(string), "~r~-$%d", money);
		GameTextForPlayer(playerid, string, 3000, 1);

		format(string, sizeof(string), "Вы купили бизнес у "RGB_GREEN"%s"RGB_WHITE" за $%d. Управление бизнесом "RGB_BLUE"/bpanel", GetName(id), money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), "Вы продали "RGB_GREEN"%s"RGB_WHITE" свой бизнес за $%d", name, money);
		SendClientMessage(id, COLOR_WHITE, string);

	    return 1;
	}

	if(strcmp(cmd, "/heal", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new location = GetPVarInt(playerid, "Local");
		
		if(IsACop(playerid))
		{
			if(location == 102)
			{
				format(string, sizeof(string), "%s надевает бронежилет", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealthUAC(playerid, 100.0);
				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 || skinid == 284 || skinid == 287) SetPlayerAttachedObject(playerid, 1,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "В этом месте нет апгрейда брони");
			}
		}
		if(location > 1000)
		{
			if(HouseInfo[location-1000][hHel] == 1)
			{
				new Float:tempheal;
				GetPlayerHealth(playerid,tempheal);
				if(tempheal < 100.0)
				{
					SetPlayerHealthUAC(playerid,100.0);
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Вы были вылечены до 100 процентов");
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Вы уже здоровы");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "В этом месте нет апгрейда аптечки");
			}
			if(HouseInfo[location-1000][hArm] == 1 && IsACop(playerid))
			{
				format(string, sizeof(string), "%s надевает бронежилет", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerArmour(playerid, 100.0);
				new skinid = GetPlayerSkin(playerid);
				if(skinid == 285 || skinid == 284 || skinid == 287) SetPlayerAttachedObject(playerid, 1,18637, 14,0.0 ,0.0 ,0.0 ,0.0 ,180.0 ,180.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "В этом месте нет апгрейда брони или вы не коп");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mole", true) == 0 && GetPVarInt(playerid,"AdminLevel") >= 5)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /mole [mole text]");
		format(string, sizeof(string), "SMS: %s, Отправитель: Crime Streets RPG",result);
		SendClientMessageToAll(COLOR_YELLOW,string);
		return 1;
	}
//----------------------------------[HQ]-----------------------------------------------
	if(strcmp(cmd, "/hq", true) == 0 && GetPVarInt(playerid,"AdminLevel") >= 4)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return 1;
		format(string, sizeof(string), "Диспетчер: %s", result);
		if (!IsACop(playerid)) SendClientMessage(playerid, COLOR_DBLUE, string);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
			    if(IsACop(i))
			    {
					SendClientMessage(i, COLOR_DBLUE, string);
				}
			}
		}
		return 1;
	}
//----------------------------------[RECON]-----------------------------------------------
	if(strcmp(cmd, "/bigears", true) == 0 && GetPVarInt(playerid,"AdminLevel") > 2)
	{
		if (!BigEar[playerid]) { BigEar[playerid] = 1; SendClientMessage(playerid, COLOR_GRAD2, "   Ваши уши выросли");	}
		else if (BigEar[playerid]) { BigEar[playerid] = 0; SendClientMessage(playerid, COLOR_GRAD2, "   Ваши уши стали нормальными"); }
		return 1;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /id [id игрока/часть ника]");
		new target = ReturnUser(tmp);
		new sstring[256];
		if(!IsPlayerConnected(target)) return 1;
		GetPlayerName(target, giveplayer, sizeof(giveplayer));
		if(AFKText[target] < 4) format(sstring, sizeof(sstring), "ID: %s[ID: %d] [LVL: %d] [PING: %d]",giveplayer, target, GetPVarInt(target, "Level"), GetPlayerPing(target));
		else format(sstring, sizeof(sstring), "ID: %s[ID: %d] [LVL: %d] [AFK: %d сек.] [PING: %d]",giveplayer, target, GetPVarInt(target, "Level"), AFKText[target]-4, GetPlayerPing(target));
		SendClientMessage(playerid, COLOR_GRAD1, sstring);
		return 1;
	}

	if(strcmp(cmd, "/spec", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 1) return 1;
	    DeletePVar(playerid,"AntiFlood");
		tmp = strtok(cmdtext, idx);
		if(strcmp("off", tmp, true, strlen(tmp)) == 0)
		{
		    if(GetPVarInt(playerid, "SpecTV") == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не смотрите ТВ !");

			SetPVarInt(playerid, "SpecTV", -1);
			TogglePlayerSpectating(playerid, 0);
			GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);

			return 1;
		}
		giveplayerid = ReturnUser(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < GetPVarInt(giveplayerid,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, "Недоступно *");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREEN, " Цель недоступна");
		if(GetPVarInt(giveplayerid, "SpecTV") != -1 && !IsPlayerNPC(giveplayerid)) return SendClientMessage(playerid, COLOR_GREEN, " Цель в TV");

		
		if(CheckCJRunTimer[playerid])
		{
			KillTimer(CheckCJRunTimer[playerid]);
			CheckCJRunTimer[playerid] = 0;
			DeletePVar(playerid, "StopTimerCjRun");
		}
		new Float:pos[4];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		GetPlayerFacingAngle(playerid, pos[3]);
		
		
		if(GetPVarFloat(playerid, "Spec_X") == 0.0)
		{
			SetPVarFloat(playerid, "Spec_X", pos[0]);
			SetPVarFloat(playerid, "Spec_Y", pos[1]);
			SetPVarFloat(playerid, "Spec_Z", pos[2]);
			SetPVarFloat(playerid, "Spec_A", pos[3]);

			SetPVarInt(playerid, "Spec_Interior", GetPlayerInterior(playerid));
			SetPVarInt(playerid, "Spec_World", GetPlayerVirtualWorld(playerid));
		}
		
		
		

 		GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
        SetPVarInt(playerid, "SpecTV", giveplayerid);
		new Float:health;
		new world = GetPlayerVirtualWorld(giveplayerid);
		new interior = GetPlayerInterior(giveplayerid);
		GetPlayerHealth(GetPVarInt(playerid, "SpecTV"), health);
		GetPlayerName(GetPVarInt(playerid, "SpecTV"), giveplayer, sizeof(giveplayer));
		new cash =  GetPlayerPCash(giveplayerid);
		format(string, sizeof(string), "{efd334}ТВ: %s{a68810} [ID:%d] {efd334}Деньги: {a68810}%d$ {efd334}Здоровье: {a68810}%.0f",giveplayer, GetPVarInt(playerid, "SpecTV"),cash,health);
		SendClientMessage(playerid, COLOR_GREEN, string);
		TogglePlayerSpectating(playerid, 1);
		if(IsPlayerInAnyVehicle(giveplayerid)) { new carid = GetPlayerVehicleID(giveplayerid); PlayerSpectateVehicle(playerid, carid); }
		else PlayerSpectatePlayer(playerid, giveplayerid);
		SetPlayerVirtualWorld(playerid, world);
		SetPlayerInterior(playerid, interior);
		return 1;
	}
//----------------------------------[AdminChat]-----------------------------------------------
	if(strcmp(cmd, "/a", true) == 0)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: (/a)dmin [админский чат]");
		format(string, sizeof(string), "%d Админ %s: %s", GetPVarInt(playerid,"AdminLevel"), sendername, result);
		if (GetPVarInt(playerid,"AdminLevel") >= 1) SendAdminMessage(COLOR_YELLOW, string);
		return 1;
	}
 	if(strcmp(cmd, "/cnpc", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 6) return SendClientMessage(playerid, COLOR_GREY, "   Вы не можете использовать эту команду !");
	    tmp = strtok(cmdtext, idx);
	    new needed;
		if(!strlen(tmp)) { SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /cnpc [номер бота]"); SendClientMessage(playerid, COLOR_GRAD2, "Боты: 1 - [BOT]Tram, 2 - [BOT]Bobbi, 3 - [BOT]Train"); return 1;}
		needed = strval(tmp);
		if(needed < 1 || needed > 3) return SendClientMessage(playerid, COLOR_GREY, " Выберите бота от 1 до 3");
        switch (needed)
		{
		    case 1: { ConnectNPC("[BOT]Tram","tram"); SendClientMessage(playerid, COLOR_WHITE, " [BOT]Tram подключился к серверу !"); }
		    case 2: { ConnectNPC("[BOT]Bobbi","mybot"); SendClientMessage(playerid, COLOR_WHITE, " [BOT]Bobbi подключился к серверу !"); }
		    case 3: { ConnectNPC("[BOT]Train","train"); SendClientMessage(playerid, COLOR_WHITE, " [BOT]Train подключился к серверу !"); }
		}
		return 1;
	}

//-----------------------------------[JAIL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/prison",true) == 0)
	{
        if (GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD2, ""RGB_RED"• "RGB_WHITE"Недоступно");
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, ""RGB_RED"• "RGB_WHITE" /prison [id игрока/часть ника] [время в часах] [причина]");
		giveplayerid = ReturnUser(tmp);
	    if(!IsPlayerConnected(giveplayerid))  return SendClientMessage(playerid, COLOR_GRAD2, ""RGB_RED"• "RGB_WHITE"Игрок не в сети");


        tmp = strtok(cmdtext, idx);
        if(strval(tmp) > 40) return SendClientMessage(playerid, COLOR_GRAD2, ""RGB_RED"• "RGB_WHITE"Время от 1 до 40 часов");
		new hours = strval(tmp);


		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' ')){ idx++; }
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1))) { result[idx - offset] = cmdtext[idx]; idx++; }
		result[idx - offset] = EOS;

		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, ""RGB_RED"• "RGB_WHITE"Причина не указана");

		new twoname[24];

		WantedPoints[giveplayerid] = 0;
		WantedLevel[giveplayerid] = 0;
		if(hours == 0)
		{
			SetPlayerInterior(giveplayerid, 6);
			oSetPlayerPos(giveplayerid,246.623672,67.595924,1003.640625);
			SetPlayerFacingAngle(giveplayerid, 180.732223);
			SetCameraBehindPlayer(giveplayerid);
			SetPVarInt(giveplayerid,"Jailed",0);
			SetPVarInt(giveplayerid,"JailTime", 0);
			Pobegtime[giveplayerid] = 0;

            SetPlayerVirtualWorld(giveplayerid, 0);
			GetPlayerName(playerid, sendername, 24);
			format(string, sizeof(string), "Администратор %s освободил Вас, причина: %s", sendername, result);
			SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
			
			GetPlayerName(giveplayerid, twoname, sizeof(twoname));
			format(string, sizeof(string), "AdmCmd: %s[%d] выпустил %s[%d] из присона, причина: %s", sendername, playerid, twoname, giveplayerid, result);
			ABroadCast(string);

			GetPlayerName(giveplayerid, sendername, 24);
			format(string, sizeof(string), "Вы освободили %s, причина: %s", sendername,  result);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
		}
		else
		{
		    SetPlayerVirtualWorld(giveplayerid, 10);
			SetPVarInt(giveplayerid,"Jailed",2);
			Pobegtime[giveplayerid] = 1;
	  		SetPVarInt(giveplayerid,"JailTime", 3600*hours);
			oSetPlayerPos(giveplayerid, 2144.056152,1615.458618,993.688171);
			SetPlayerInterior(giveplayerid,1);


			GetPlayerName(playerid, sendername, 24);
			format(string, sizeof(string), "Администратор %s посадил Вас на %d часов, причина: %s", sendername, hours, result);
			SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);

			GetPlayerName(giveplayerid, twoname, sizeof(twoname));
			format(string, sizeof(string), "AdmCmd: %s[%d] посадил %s[%d] в присон на %d ч., причина: %s", sendername, playerid, twoname, giveplayerid, hours, result);
			ABroadCast(string);
			
			GetPlayerName(giveplayerid, sendername, 24);
			format(string, sizeof(string), "Вы посадили %s на %d часов, причина: %s", sendername, hours, result);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
		}
	    return 1;
	}
	if(strcmp(cmd, "/jail", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /jail [id игрока/часть ника] [время(минуты)]");
		new playa, money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if(GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды!");
	 	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GRAD1, " Игрок не найден !");
	 	if(money < 1 || money > 120) return SendClientMessage(playerid, COLOR_GRAD2, " Количество минут может быть от 1 до 120 !");
        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы посадили в тюрьму %s.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Вы посажены админом");
		SendClientMessage(playa, COLOR_LIGHTRED, string);
		ResetPlayerWeaponsUAC(playa);
		WantedPoints[playa] = 0;
		SetPVarInt(playa,"Jailed",1);
		SetPVarInt(playa,"JailTime", money*60);
		SetPlayerInterior(playa, 6);
		if(money == 0) Pobegtime[playa] = 0;
		oSetPlayerPos(playa, 264.6288,77.5742,1001.0391);
		format(string, sizeof(string), "Вы посажены на %d минут.   Залог: Невозможен", money);
		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		return 1;
	}
//----------------------------------[TOD]-----------------------------------------------

	if(strcmp(cmd, "/tod", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /tod [время дня] (0-23)");
		new hour;
		hour = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 6) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
        SetWorldTime(hour);
		format(string, sizeof(string), " Время установлено в %d часов ", hour);
		SendClientMessageToAll(COLOR_GRAD1, string);
		return 1;
	}

//-----------------------------------editstat---------------------------------------
	if(strcmp(cmd, "/setstat", true) == 0)
	{
        if (GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "*Используйте: /setstat [id игрока/часть ника] [код] [значение]");
			SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 PhoneNumber|4 HouseKey |5 BizKey");
			SendClientMessage(playerid, COLOR_GRAD2, "|6 Det |7 Lawyer |8 Fixer |9 News |10 Jack |11 Drug |12 Sex |13 Trainer");
			return 1;
		}
		giveplayerid = ReturnUser(tmp);
        if(!IsPlayerConnected(giveplayerid)) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "*Используйте: /setstat [id игрока/часть ника] [код] [значение]");
			SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 PhoneNumber|4 HouseKey |5 BizKey");
			SendClientMessage(playerid, COLOR_GRAD2, "|6 Det |7 Lawyer |8 Fixer |9 News |10 Jack |11 Drug |12 Sex |13 Trainer");
			return 1;
		}
		new stat;
		stat = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "*Используйте: /setstat [id игрока/часть ника] [код] [значение]");
			SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 PhoneNumber|4 HouseKey |5 BizKey");
			SendClientMessage(playerid, COLOR_GRAD2, "|6 Det |7 Lawyer |8 Fixer |9 News |10 Jack |11 Drug |12 Sex |13 Trainer");
			return 1;
		}
		new amount = strval(tmp);
		switch (stat)
		{
			case 1:
			{
				SetPVarInt(giveplayerid,"Level",amount);
				format(string, sizeof(string), "   Игрок стал уровня %d", amount);
				SetPlayerScore(giveplayerid, amount);
				MySQL_UpdateInt(giveplayerid,"Level");
			}
			case 2:
			{
				SetPVarFloat(giveplayerid,"SpawnHealth", amount);
				format(string, sizeof(string), "   У игрока теперь %d начального здоровья ", amount);
			}
			case 3:
			{
				SetPVarInt(giveplayerid,"PhoneNumber",amount);
				format(string, sizeof(string), "   Номер телефона игрока теперь %d", amount);
				MySQL_UpdateInt(giveplayerid,"PhoneNumber");
			}
			case 4:
			{
				SetPVarInt(giveplayerid,"House", amount);
				format(string, sizeof(string), "   Ключей от дома у игрока теперь %d", amount);
				MySQL_UpdateInt(giveplayerid, "House");
			}
			case 5:
			{
				SetPVarInt(giveplayerid,"Bizz", amount);
				format(string, sizeof(string), "   Ключей от бизнеса у игрока теперь %d", amount);
				MySQL_UpdateInt(giveplayerid,"Bizz");
			}
			case 6:
			{
				SetPVarInt(giveplayerid,"DetSkill", amount);
				format(string, sizeof(string), "   Детективный навык игрока установлен %d", amount);
			}
			case 7:
			{
				SetPVarInt(giveplayerid,"LawSkill", amount);
				format(string, sizeof(string), "   Навык адвоката игрока установлен %d", amount);
			}
			case 8:
			{
				SetPVarInt(giveplayerid,"MechSkill", amount);
				format(string, sizeof(string), "   Навык механика игрока установлен %d", amount);
			}
			case 9:
			{
				SetPVarInt(giveplayerid,"NewsSkill", amount);
				format(string, sizeof(string), "   Навык репортера игрока установлен %d", amount);
			}
			case 10:
			{
				SetPVarInt(giveplayerid,"JackSkill", amount);
				format(string, sizeof(string), "   Навык автоугонщика игрока установлен %d", amount);
			}
			case 11:
			{
				SetPVarInt(giveplayerid,"DrugsSkill", amount);
				format(string, sizeof(string), "   Навык продавца наркоты игрока установлен %d", amount);
			}
			case 12:
			{
				SetPVarInt(giveplayerid,"SexSkill", amount);
				format(string, sizeof(string), "   Сексуальный навык игрока установлен %d", amount);
			}
			case 13:
			{
				SetPVarInt(giveplayerid,"TrainerSkill", amount);
				format(string, sizeof(string), "   Навык игрока тренер установлен %d", amount);
			}
			default: format(string, sizeof(string), "   Невозможное значение", amount);

		}
		SendClientMessage(playerid, COLOR_GRAD1, string);
		return 1;
	}
	//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setint", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /setint [id интерьера]");
		new intid;
		intid = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды !");
		SetPlayerInterior(playerid,intid);
		format(string, sizeof(string), "   interiorid %d.", intid);
		SendClientMessage(playerid, COLOR_GRAD1, string);
		return 1;
	}
	if(strcmp(cmd, "/setworld", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /setworld [виртуальный мир]");
		new intid;
		intid = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды !");
		SetPlayerVirtualWorld(playerid,intid);
		format(string, sizeof(string), "   Virtual World  %d.", intid);
		SendClientMessage(playerid, COLOR_GRAD1, string);
		return 1;
	}
//----------------------------------[SKYDIVE]------------------------------------------------
	if(strcmp(cmd, "/skydive", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 3) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
	    new Float:mrx, Float:mry, Float:mrz;
		GetPlayerPos(playerid, mrx, mry, mrz);
		GivePlayerWeaponUAC(playerid, 46, 1);
		oSetPlayerPos(playerid,mrx, mry, mrz+700);
		SendClientMessage(playerid, COLOR_WHITE, "GO!! GO!! GO!!");
		return 1;
	}
//----------------------------------[FOURDIVE]------------------------------------------------
	if(strcmp(cmd, "/fourdive", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /fourdive [id игрока 1] [id игрока 2] [id игрока 3] [id игрока 4]");
		new para1,para2,para3,para4;
		para1 = strval(tmp);
		tmp = strtok(cmdtext, idx);
		para2 = strval(tmp);
		tmp = strtok(cmdtext, idx);
		para3 = strval(tmp);
		tmp = strtok(cmdtext, idx);
		para4 = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 5) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if (IsPlayerConnected(para1)){ GivePlayerWeaponUAC(para1, 46, 1); oSetPlayerPos(para1,1536.0, -1360.0, 1350.0);SetPlayerInterior(para1,0);SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");}
		if ((IsPlayerConnected(para2)) && (para2>0)) { GivePlayerWeaponUAC(para2, 46, 1); oSetPlayerPos(para2,1536.0, -1345.0, 1350.0);SetPlayerInterior(para2,0);SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");}
		if ((IsPlayerConnected(para3)) && (para3>0)) { GivePlayerWeaponUAC(para3, 46, 1); oSetPlayerPos(para3,1552.0, -1345.0, 1350.0);SetPlayerInterior(para3,0);SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");}
		if ((IsPlayerConnected(para4)) && (para4>0)) { GivePlayerWeaponUAC(para4, 46, 1); oSetPlayerPos(para4,1552.0, -1360.0, 1350.0);SetPlayerInterior(para4,0);SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");}
		return 1;
	}
//----------------------------------[INVITE]------------------------------------------------

//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /uninvite [id/часть ника] [причина]");
		new Leader, Member, para1;
		para1 = ReturnUser(tmp);
		
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) result = "Не указана";


		
		Leader = GetPVarInt(playerid,"Leader");
		Member = GetPVarInt(para1,"Member");
		if(GetPVarInt(para1,"Jailed")) return SendClientMessage(playerid, COLOR_GREY, "Игрок находится в тюрьме");
		if(GetPVarInt(playerid,"Leader") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не лидер");

		if(!IsPlayerConnected(para1)) 
		{
		    SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети");
		    return 1;
		}
		
		
		if(Leader != Member) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в вашей банде/организации");
		GetPlayerName(para1, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s выгнал Вас. Причина: %s", sendername, result);
		SendClientMessage(para1, COLOR_WHITE, string);
		SendClientMessage(para1, COLOR_WHITE, "Теперь Вы гражданский");
	 	
		SetPVarInt(para1,"Team", 0);
		SetPVarInt(para1,"Member",0);
		SetPVarInt(para1,"Rank", 0);
		
		SetPVarInt(para1,"FWarns", 0);
		MySQL_UpdateInt(para1,"FWarns");
		
		DeletePVar(para1, "fMute");
		
		if(GetPVarInt(para1, "OldSkin") < 1 || GetPVarInt(para1, "OldSkin") > 299) SetPVarInt(para1, "Skin", 7);
		else SetPVarInt(para1,"Skin", GetPVarInt(para1, "OldSkin"));
		
		MySQL_UpdateInt(para1, "Skin");
		ReplaceSkin(para1);
		

		format(string, sizeof(string), "Вы выгнали "RGB_GREEN"%s"RGB_WHITE". Причина: %s", giveplayer, result);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/auninvite", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (GetPVarInt(playerid,"AdminLevel") < 5) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, " ИСПОЛЬЗОВАНИЕ: /uninvite [id игрока/часть имени]");
		new para1 = ReturnUser(tmp);
  		if (GetPVarInt(para1,"Leader") > 0) return SendClientMessage(playerid, COLOR_GRAD1, " Вы не можете выгнать лидера ! ");
		if(!IsPlayerConnected(para1)) return 1;
		GetPlayerName(para1, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы были выгнаны из банды/организации администратором %s ", sendername);
		SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		SendClientMessage(para1, COLOR_LIGHTBLUE, "Теперь Вы Гражданский ");
		//SetPlayerTeam(para1, 0);
		SetPVarInt(para1,"Team",0);
		SetPVarInt(para1,"Member",0);
		SetPVarInt(para1,"Rank", 0);

		if(GetPVarInt(para1, "OldSkin") < 1 || GetPVarInt(para1, "OldSkin") > 299) SetPVarInt(para1, "Skin", 7);
		else SetPVarInt(para1,"Skin", GetPVarInt(para1, "OldSkin"));
		
		MySQL_UpdateInt(para1, "Skin");
		ReplaceSkin(para1);
		
		format(string, sizeof(string), "Вы кикнули %s из его банды/организации. ", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		return 1;
	}
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "*Используйте: /makeadmin [id игрока/часть ника] [level]");
		new para1, level;
		para1 = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		level = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!IsPlayerConnected(para1)) return 1;
		GetPlayerName(para1, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(level < 0 || level > 1339)  return SendClientMessage(playerid, COLOR_GRAD2, "0 - 1339 лвл");
		
		SetPVarInt(para1,"AdminLevel", level);
		MySQL_UpdateInt(para1,"AdminLevel");
		format(string, sizeof(string), "   Вы были повышены до %d уровня администрирования админом %s", level, sendername);
		SendClientMessage(para1, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "   Вы повысили %s до уровня %d администрирования.", giveplayer,level);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, 256, " %s сделал  %s администратором %d уровня",sendername, giveplayer, level);
		MakeAdminLog(string);
		return 1;
	}
//----------------------------------[MAKELEADER]------------------------------------------------
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1337) return 1;
	    
	    new namep[25];
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /makeleader [id/часть ника] [0-18 фракция]");
		new id = ReturnUser(tmp);
		strmid(namep, tmp, 0, strlen(tmp), 255);

		tmp = strtok(cmdtext, idx);
		new faid = strval(tmp);
		if(faid > 18 || faid < 0) return SendClientMessage(playerid, COLOR_GREY, "Укажите фракцию 0-18");

		new skinsarray[19] = {7, 288, 286, 287, 70, 113, 120, 147, 29, 57, 100, 171, 125, 104, 270, 110, 115, 173, 1};

		if(!IsPlayerConnected(id))
		{
			if(!MySQL_Exist_Name(namep)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети и такой аккаунт не найден");

			for(new i; i < strlen(namep); i++)
	    	{
      			switch(namep[i])
	        	{
          			case 'a'..'z', 'A'..'Z', '[', ']', '.', '0'..'1', '_': {}
	            	default: return SendClientMessage(playerid, COLOR_GREY, "Запрещенные символы в нике");
				}
			}
            new query[512];

			if(faid != 0)
			{
				format(query, sizeof(query), "UPDATE `"UsersTable"` SET `Member` = 0, `Skin` = %d, `Leader` = %d, `Rank` = 20 WHERE `Name` = '%s' LIMIT 1", skinsarray[faid], faid, namep);
                format(string, sizeof(string), "[OFFLINE] Вы назначили %s лидером фракции %d", namep, faid);
			}
			else
			{
				format(query, sizeof(query), "UPDATE `"UsersTable"` SET `Member` = 0, `Skin` = 7, `Leader` = 0, `Rank` = 0 WHERE `Name` = '%s' LIMIT 1", namep);
                format(string, sizeof(string), "[OFFLINE] Вы сняли %s с должности лидера", namep);
			}
            mysql_query(query);
			return SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}

		
		SetPVarInt(id, "Team", faid);
		SetPVarInt(id, "Leader", faid);
		SetPVarInt(id, "Member", 0);
		
		if(faid != 0)
		{
			SetPVarInt(id, "Rank", 20);
			format(string, sizeof(string), "%s назначил Вас лидером фракции %d", GetName(playerid), faid);
			SendClientMessage(id, COLOR_LIGHTBLUE, string);
			
			format(string, sizeof(string), "Вы назначили %s лидером фракции %d", GetName(id), faid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		else
		{
			SetPVarInt(id, "Rank", 0);
			format(string, sizeof(string), "%s снял Вас с должности лидера", GetName(playerid));
			SendClientMessage(id, COLOR_LIGHTBLUE, string);
			
			format(string, sizeof(string), "Вы сняли %s с должности лидера", GetName(id));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		
		SetPVarInt(id, "Skin", skinsarray[faid]);
	    SetPlayerSkinEx(id, skinsarray[faid]);
		return 1;
	}
//----------------------------------[GIVERANK]------------------------------------------------

	if(strcmp(cmd, "/gotols", true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды !");
		if (GetPlayerState(playerid) == 2)
		{
		    new tmpcar = GetPlayerVehicleID(playerid);
   			for(new i; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i) && (GetPlayerVehicleID(i) == tmpcar || GetPlayerSurfingVehicleID(i) == tmpcar))
				{
					Dop_CheckPos[i][0] = 1529.6;
					Dop_CheckPos[i][1] = -1691.2;
					Dop_CheckPos[i][2] = 14.0;
				}
			}
			SetVehiclePos(tmpcar, 1529.6,-1691.2,14.0);
		}
		else oSetPlayerPos(playerid, 1529.6,-1691.2,13.3);
		SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"• "RGB_WHITE"Вы телепортировались в "RGB_GREEN"Los Santos");
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	if(strcmp(cmd, "/gotolv", true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды !");
		if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
   			for(new i; i < MAX_PLAYERS; i++)
			{
   				if(IsPlayerConnected(i) && (GetPlayerVehicleID(i) == tmpcar || GetPlayerSurfingVehicleID(i) == tmpcar))
				{
					Dop_CheckPos[i][0] = 1699.2;
					Dop_CheckPos[i][1] = 1435.1;
					Dop_CheckPos[i][2] = 10.7;
				}
			}
			SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
		}
		else oSetPlayerPos(playerid, 1699.2,1435.1, 10.7);
		SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"• "RGB_WHITE"Вы телепортировались в "RGB_GREEN"Las Venturas");
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	if(strcmp(cmd, "/gotosf", true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "   Нет прав на использование команды !");
		if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
   			for(new i; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) && (GetPlayerVehicleID(i) == tmpcar || GetPlayerSurfingVehicleID(i) == tmpcar))
				{
					Dop_CheckPos[i][0] = -1417.0;
					Dop_CheckPos[i][1] = -295.8;
					Dop_CheckPos[i][2] = 14.1;
				}
			}
			SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
		}
		else oSetPlayerPos(playerid, -1417.0,-295.8,14.1);
		SendClientMessage(playerid, COLOR_WHITE, RGB_GREEN"• "RGB_WHITE"Вы телепортировались в "RGB_GREEN"San Fierro");
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		return 1;
	}
	if(strcmp(cmd, "/gotocar", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /gotocar [carid]");
		new testcar = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не можете использовать эту команду!");
		if(testcar == 0) return 1;
		new tmpcar = GetPlayerVehicleID(playerid);
		for(new i, model; i < MAX_PLAYERS; i ++)
		{
		    model = GetVehicleModel(CarInfo[i][cMaincar]);
		    if(model < 400 || model > 611) continue;
		    
		    if(testcar == CarInfo[i][cSQL])
		    {
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(CarInfo[i][cMaincar], cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
				    for(new p; p < MAX_PLAYERS; p++)
				    {
	 					if(IsPlayerConnected(p) && (GetPlayerVehicleID(p) == tmpcar || GetPlayerSurfingVehicleID(p) == tmpcar))
						{
							Dop_CheckPos[p][0] = cwx2;
							Dop_CheckPos[p][1] = cwy2;
							Dop_CheckPos[p][2] = cwz2;
						}
					}
					SetVehiclePos(tmpcar, cwx2+2.0, cwy2, cwz2+2.0);
				}
				else oSetPlayerPos(playerid, cwx2+2.0, cwy2, cwz2+2.0);
				SendClientMessage(playerid, COLOR_GRAD1, "Вы телепортировались");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GRAD2, "Нет такого автомобиля");
		return 1;
	}
	if(strcmp(cmd, "/goto", true) == 0)
	{
	    DeletePVar(playerid,"AntiFlood");
        if (GetPVarInt(playerid,"AdminLevel") < 1) return SendClientMessage(playerid, COLOR_GRAD1, "  Вы не можете использовать эту команду!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /goto [id игрока/часть имени]");
			format(string,sizeof(string),"\
			1) Отель ЛС\n\
			2) Тюрьма\n\
			3) Присон\n\
			4) Авто Школа\n\
			5) Банк ЛС\n\
			6) Банк СФ\n\
			7) Банк ЛВ\n\
			8) Аэропорт СФ\n\
			9) Аэропорт ЛС\n\
			10) Отель СФ\n\
			11) Спавн ЛВ");
			ShowPlayerDialog(playerid,8,DIALOG_STYLE_LIST, RGB_SERVER"Телепорт ",string,"Выбрать","Отмена");
			return 1;
		}
		new Float:plocx,Float:plocy,Float:plocz;
		new plo;
		plo = ReturnUser(tmp);
		new inter = GetPlayerInterior(plo);
		new world = GetPlayerVirtualWorld(plo);
		if (!IsPlayerConnected(plo)) return SendClientMessage(playerid, COLOR_GRAD1, "Игрок не найден !");
		GetPlayerPos(plo, plocx, plocy, plocz);
		SetPlayerInterior(playerid,inter);
        SetPlayerVirtualWorld(playerid,world);
		if (GetPlayerState(playerid) == 2)
		{
			new tmpcar = GetPlayerVehicleID(playerid);
   			for(new i; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i) && (GetPlayerVehicleID(i) == tmpcar || GetPlayerSurfingVehicleID(i) == tmpcar))
				{
					Dop_CheckPos[i][0] = plocx;
					Dop_CheckPos[i][1] = plocy;
					Dop_CheckPos[i][2] = plocz;
				}
			}
			SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
			LinkVehicleToInterior(tmpcar, inter);
			SetVehicleVirtualWorld(tmpcar, inter);
		}
		else
		{
			oSetPlayerPos(playerid,plocx,plocy+2, plocz);
			SetPlayerInterior(playerid,inter);
            SetPlayerVirtualWorld(playerid,world);
		}
		SendClientMessage(playerid, COLOR_GRAD1, "  Вы телепортировались к игроку");
		return 1;
	}
//----------------------------------[GETHERE]-----------------------------------------------
	if(strcmp(cmd, "/gethere", true) == 0)
	{
	    DeletePVar(playerid,"AntiFlood");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /gethere [id игрока/часть имени]");
		new Float:plocx,Float:plocy,Float:plocz;
		new plo;
		plo = ReturnUser(tmp);
		new inter = GetPlayerInterior(playerid);
		new world = GetPlayerVirtualWorld(playerid);
		if (!IsPlayerConnected(plo)) return 1;
		if (GetPVarInt(playerid,"AdminLevel") < 4) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if (GetPVarInt(playerid,"AdminLevel") < GetPVarInt(giveplayerid,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, "Недоступно *");
	    GetPlayerPos(playerid, plocx, plocy, plocz);
	    if (GetPlayerState(plo) == 2)
		{
			new tmpcar = GetPlayerVehicleID(plo);
   			for(new i; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i) && (GetPlayerVehicleID(i) == tmpcar || GetPlayerSurfingVehicleID(i) == tmpcar))
				{
					Dop_CheckPos[i][0] = plocx;
					Dop_CheckPos[i][1] = plocy;
					Dop_CheckPos[i][2] = plocz;
				}
			}
			SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
			LinkVehicleToInterior(tmpcar, inter);
			SetVehicleVirtualWorld(tmpcar, inter);
		}
		else oSetPlayerPos(plo,plocx,plocy+2, plocz);
		SetPlayerVirtualWorld(plo,world);
		SetPlayerInterior(plo,inter);
		SendClientMessage(plo, COLOR_GRAD1, " Вы были телепортированы админом");
		return 1;
	}
	if(strcmp(cmd, "/getcar", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /getcar [carid]");
		new Float:plocx,Float:plocy,Float:plocz;
		new plo;
		plo = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 7) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		GetPlayerPos(playerid, plocx, plocy, plocz);
		for(new i; i < MAX_PLAYERS; i++)
		{
			if(GetPlayerVehicleID(i) == plo || GetPlayerSurfingVehicleID(i) == plo)
			{
				Dop_CheckPos[i][0] = plocx;
				Dop_CheckPos[i][1] = plocy;
				Dop_CheckPos[i][2] = plocz;
			}
		}
		SetVehiclePos(plo, plocx, plocy+4, plocz);
		return 1;
	}
	if(strcmp(cmd, "/oldcar", true) == 0)
	{
	    format(string, sizeof(string), "Ваша предыдущая машина: id %d",gLastCar[playerid]);
	    SendClientMessage(playerid, COLOR_GREY, string);
	    return 1;
	}
	if(strcmp(cmd, "/fuelcars", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 5) return 1;
        for(new c=0;c<MAX_VEHICLES;c++)
		{
			if(IsForSaleCar[c]) continue;
			Gas[c] = 100;
		}
		SendClientMessage(playerid, COLOR_GREY, "Все автомобили заправлены");
	    return 1;
	}
	if(strcmp(cmd, "/giveweapon", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))						  return GiveWeaponHelpDialog(playerid);
		new playa, gun, ammo;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		gun = strval(tmp);
		if(!strlen(tmp))						  return GiveWeaponHelpDialog(playerid);
		tmp = strtok(cmdtext, idx);
		ammo = strval(tmp);
		
		switch(gun)
		{
		    case 1..3, 5..7, 10..15, 23..25, 29..31, 33, 43, 46: {}
		    default: return GiveWeaponHelpDialog(playerid);
		}
		if(ammo < 1 || ammo > 999) 	  			  return SendClientMessage(playerid, COLOR_GREY, "За один раз можно передать от 1 до 999 патронов ");
		if(!IsPlayerConnected(playa)) 			  return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не подключен ");
		if(!ProxDetectorS(5.0, playerid, playa))  return SendClientMessage(playerid, COLOR_GREY, "Этот игрок слишком далеко от Вас ");
		if(playerid == playa) 					  return SendClientMessage(playerid, COLOR_GREY, "Нельзя передавать оружие/патроны самому себе ");
		if(PlayerWeapons[playerid][gun] != 1) 	  return SendClientMessage(playerid, COLOR_GREY, "У Вас нет этого оружия ");
		if(GetPVarInt(playa, "Level") < 3) 	  	  return SendClientMessage(playerid, COLOR_GREY, "У игрока слишком низкий лвл ");
		if(IsPlayerInAnyVehicle(playa)) 	  	  return SendClientMessage(playerid, COLOR_GREY, "Игрок не должен находиться в машине ");
		if(GetPVarInt(playerid, "CantGiveWeapon") == 1) return 1;

		new slot = ReturnSlot(gun);
		
		if(PlayerAmmo[playerid][slot] <= ammo) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет стольких патронов");
		new weap, ammotup;
		GetPlayerWeaponData(playerid, slot, weap, ammotup);
		if(ammo >= ammotup) 	  return SendClientMessage(playerid, COLOR_GREY, "У Вас нет стольких патронов");

		new am, we;
		GetPlayerWeaponData(playa, slot, we, am);
		if((am + ammo) >= 9000) return SendClientMessage(playerid, COLOR_GREY, "Игрок не сможет носить столько патронов");


		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы передали %s  %s с %d патронами", giveplayer, aWeaponNames[gun], ammo);
		SendClientMessage(playerid, COLOR_WHITE, string);
		
		format(string, sizeof(string), "Вы получили %s с %d патронами", aWeaponNames[gun], ammo);
		SendClientMessage(playa, COLOR_WHITE, string);

		format(string, sizeof(string), "%s что-то передал %s ", sendername ,giveplayer);
		ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		
		SetPVarInt(playerid, "DelayAmmo", gettime()+2);
		SetPlayerAmmo(playerid, gun, ammotup - ammo);
		PlayerAmmo[playerid][slot] = (ammotup - ammo + 1);

		GivePlayerWeaponUAC(playa, gun, ammo);
		return 1;
	}
	if(strcmp(cmd, "/givegun", true) == 0)
	{
        if (GetPVarInt(playerid,"AdminLevel") < 5) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /givegun [id игрока/часть имени] [weaponid(eg. 46 = Parachute)] [ammo]");
		new playa, gun, ammo;
		playa = ReturnUser(tmp);
		
		if(GetPVarInt(playa,"Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен набрать 3 лвл");
		tmp = strtok(cmdtext, idx);
		gun = strval(tmp);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givegun [id игрока/часть имени] [weaponid] [ammo]");
			SendClientMessage(playerid, COLOR_GRAD4, "3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 10-13(Dildo) 14(Flowers) 16(Grenades) 18(Molotovs) 22(Pistol) 23(SPistol)");
			SendClientMessage(playerid, COLOR_GRAD3, "24(Eagle) 25(shotgun) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Flamethrower) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
			return 1;
		}
		switch(gun)
		{
		    case 1..7, 10..15, 23..25, 29..31, 33, 43, 46: {}
		    default:
			{
			    if(GetPVarInt(playerid, "AdminLevel") < 1337) return SendClientMessage(playerid, COLOR_GREY, "Нельзя выдать это оружие");
			}
		}
		if(gun < 0 || gun > 46) return 1;
		tmp = strtok(cmdtext, idx);
		ammo = strval(tmp);
		if(ammo <1||ammo > 999) return SendClientMessage(playerid, COLOR_GRAD1, "   Патронов может быть от 1 до 999 шт!");
		if(!IsPlayerConnected(playa)) return 1;
		GivePlayerWeaponUAC(playa, gun, ammo);
		return 1;
	}
//----------------------------------[sethp]------------------------------------------------
	if(strcmp(cmd, "/sethp", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /sethp [id игрока/часть имени] [health]");
		new playa, health;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		health = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 5) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!IsPlayerConnected(playa)) return 1;
		SetPlayerHealthUAC(playa, health);
		return 1;
	}
	if(strcmp(cmd, "/setarmor", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /setarmor [id игрока/часть имени] [armor]");
		new playa, health;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		health = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 5) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!IsPlayerConnected(playa)) return 1;
		SetPlayerArmour(playa, health);
		return 1;
	}
	if(strcmp(cmd, "/givegunall", true) == 0)
	{
		if(GetPVarInt(playerid, "AdminLevel") < 5) return 1;

		tmp = strtok(cmdtext, idx);
		new gun = strval(tmp);

		switch(gun)
		{
		    case 1..7, 10..15, 23..25, 29..31, 33, 43, 46: {}
		    default:
			{
			    if(GetPVarInt(playerid, "AdminLevel") < 1337)
			    {
					SendClientMessage(playerid, COLOR_GRAD1, "Используйте: /givegunall [weaponid] [ammo]");
					SendClientMessage(playerid, COLOR_GRAD1, "[1]Кастет  [2]Клюшка  [3]Дубинка  [4]Нож  [5]Бита  [6]Лопата  [7]Кий");
					SendClientMessage(playerid, COLOR_GRAD1, "[10-13]Самотык  [14]Цветы  [15]Трость  [23]9mm. с глушителем  [24]Дигл");
					return SendClientMessage(playerid, COLOR_GRAD1, "[24]Дигл  [25]Шотган  [29]mp5  [30]Ak-47  [31]m4  [33]Рифл");
				}
			}
		}
		tmp = strtok(cmdtext, idx);
		new ammo = strval(tmp);

		if(gun < 0 || gun > 46) return 1;
		if(ammo < 1 || ammo > 999) return SendClientMessage(playerid, COLOR_GRAD1, "Патронов может быть от 1 до 999 шт!");

		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);

		format(string, 128, "Вы получили %s с %d патронами", aWeaponNames[gun], ammo);
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;

		    if(IsPlayerInRangeOfPoint(i, 20.0, pos[0], pos[1], pos[2]))
		    {
		        GivePlayerWeaponUAC(i, gun, ammo);
		        SendClientMessage(i, COLOR_YELLOW, string);
			}
		}
		return SendClientMessage(playerid, COLOR_YELLOW, "Оружие выдано всем игрокам в радиусе 20 метров");
	}
	if(strcmp(cmd, "/hpall", true) == 0)
	{
	    if(GetPVarInt(playerid, "AdminLevel") < 5) return 1;

		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);

		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if(!IsPlayerConnected(i)) continue;

			if(IsPlayerInRangeOfPoint(i, 20.0, pos[0], pos[1], pos[2]))
		    {
	   			SetPlayerHealthUAC(i, 100.0);
				SetPlayerArmour(i, 0.0);
		        SendClientMessage(i, COLOR_YELLOW, "Администратор установил Вам здоровье (100hp)");
			}
		}
	    return SendClientMessage(playerid, COLOR_YELLOW, "Вы выдали hp всем игрокам радиусе 20 метров");
	}
	
	if(strcmp(cmd, "/takeweaponall", true) == 0)
	{
	    if(GetPVarInt(playerid, "AdminLevel") < 5) return 1;

		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);

		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if(!IsPlayerConnected(i)) continue;

			if(IsPlayerInRangeOfPoint(i, 20.0, pos[0], pos[1], pos[2]))
		    {
                ResetPlayerWeaponsUAC(i);
		        SendClientMessage(i, COLOR_YELLOW, "Администратор изъял Ваше оружие");
			}
		}
	    return SendClientMessage(playerid, COLOR_YELLOW, "Вы забрали оружие у игроков в радиусе 20 метров");
	}
	if(strcmp(cmd, "/veh", true) == 0)
	{
        if (GetPVarInt(playerid,"AdminLevel") < 5) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /veh [carid] [color1] [color2]");
		new car;
		car = strval(tmp);
		if(car < 400 || car > 611) return SendClientMessage(playerid, COLOR_GREY, "   Номер Транспортного средства не может быть ниже 400 или выше 611 !");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /veh [carid] [color1] [color2]");
		new color1;
		color1 = strval(tmp);
		if(color1 < 0 || color1 > 252) return SendClientMessage(playerid, COLOR_GREY, "   Номер цвета от 0 до 252 !");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /veh [carid] [color1] [color2]");
		new color2;
		color2 = strval(tmp);
		if(color2 < 0 || color2 > 252) return SendClientMessage(playerid, COLOR_GREY, "   Номер цвета от 0 до 252 !");
		new Float:X,Float:Y,Float:Z, Float:A;
		GetPlayerPos(playerid, X,Y,Z);
		GetPlayerFacingAngle(playerid, A);
		for(new i; i < sizeof(Veh_Command_Cars); i++)
		{
		    if(Veh_Command_Cars[i] == 0)
		    {
		        Veh_Command_Cars[i] = CreateVehicle(car, X, Y+2.0, Z, A, color1, color2, -1);
		        Gas[Veh_Command_Cars[i]] = 100;
		        
		        if(ValidCarForNumber(car))
				{
				    format(string, sizeof(string), RGB_YELLOW"id:"RGB_RED" %d", i);
					SetVehicleNumberPlate(Veh_Command_Cars[i], string);
		        }
				format(string, sizeof(string), "Автомобиль id "RGB_GREEN"%d"RGB_WHITE" создан, номер: "RGB_GREEN"%d"RGB_GREY" | /delveh [номер] - удалить авто | /delvehall - удалить все авто", Veh_Command_Cars[i], i);
				return SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		return SendClientMessage(playerid, COLOR_GREY, "Уже создано 100 автомобилей, удалите их через /delveh [id], либо /delvehall");
	}
	if(strcmp(cmd, "/delveh", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 5) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /delveh [id(на номерном знаке)]");
		new car = strval(tmp);
		
		if(car < 0 || car >= sizeof(Veh_Command_Cars)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /delveh [id 0-99(на номерном знаке)]");
	
	    if(Veh_Command_Cars[car] == 0) return SendClientMessage(playerid, COLOR_GRAD2, "Нет автомобиля под этим номером");
	    
	    DestroyVehicle(Veh_Command_Cars[car]);
	    Veh_Command_Cars[car] = 0;
	    
	    format(string, sizeof(string), "Автомобиль id "RGB_GREEN"%d"RGB_WHITE" удален", car);
	    return SendClientMessage(playerid, COLOR_WHITE, string);
	}
	if(strcmp(cmd, "/delvehall", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 5) return 1;

		new count;
		for(new i; i < sizeof(Veh_Command_Cars); i++)
		{
		    if(Veh_Command_Cars[i] != 0)
		    {
			    DestroyVehicle(Veh_Command_Cars[i]);
			    Veh_Command_Cars[i] = 0;
			    count ++;
			}
		}

	    format(string, sizeof(string), "Удалено "RGB_GREEN"%d"RGB_WHITE" автомобилей", count);
	    return SendClientMessage(playerid, COLOR_WHITE, string);
	}
	if(strcmp(cmd, "/weather", true) == 0)
	{
        if (GetPVarInt(playerid,"AdminLevel") < 4) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /weather [weatherid]");
		new weather;
		weather = strval(tmp);
		if(weather < 0||weather > 45) return SendClientMessage(playerid, COLOR_GREY, "   ID погоды от 0 до 45 !");
		SetPlayerWeather(playerid, weather);
		SendClientMessage(playerid, COLOR_GREY, "   Погода установлена !");
		return 1;
	}
	if(strcmp(cmd, "/weatherall", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 6) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /weatherall [weatherid]");
		new weather;
		weather = strval(tmp);
		if(weather < -100||weather > 100) return SendClientMessage(playerid, COLOR_GREY, "   ID погоды от -100 до 100 !");
		SetWeather(weather);
		SendClientMessage(playerid, COLOR_GREY, "   Установлена разнообразная погода !");
		return 1;
	}
	if(strcmp(cmd, "/money", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /money [id игрока/часть имени] [money]");
		new playa, money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!IsPlayerConnected(playa)) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1708.287597, 1346.870361, 7.179687)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не на месте выдачи денег");
		ResetPlayerPCash(playa);
		GivePlayerPCash(playa, money, "money command");
		return 1;
	}
	if(strcmp(cmd, "/givemoney", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /givemoney [id игрока/часть имени] [money]");
		new playa, money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1708.287597, 1346.870361, 7.179687)) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не на месте выдачи денег");
		GivePlayerPCash(playa, money, "givemoney command");
		return 1;
	}
	if(strcmp(cmd, "/fire", true) == 0)
	{
	    DeletePVar(playerid,"AntiFlood");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /fire [ID игрока/часть имени]");
		giveplayerid = ReturnUser(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < GetPVarInt(giveplayerid,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, "Недоступно *");
		if(!IsPlayerConnected(giveplayerid)) return 1;
		if (GetPVarInt(playerid,"AdminLevel") < 3) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		new Float:boomx, Float:boomy, Float:boomz;
		GetPlayerPos(giveplayerid,boomx, boomy, boomz);
		CreateExplosion(boomx, boomy , boomz, 7, 10);
		return 1;
	}
	if(strcmp(cmd, "/rho", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 2) return 1;

    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /rho [радиус]");
		new Float:radius = floatstr(tmp);

		if(radius < 1.0 || radius > 1000.0) return SendClientMessage(playerid, COLOR_GREY, "Укажите радиус от 1 до 1000");

		enum rho_data
		{
		    rho_ID,
		    rho_Bonet,
		    Float:rho_Pos[3],
		    Float:rho_Rotate[3],
		    Float:rho_Size[3]
		}
		new rho_info[][rho_data] = {
			{19086, 1,  {-0.2,   0.0,   0.0},      {90.0,   90.0,    0.0},    {1.0,  1.0, 1.0}},// - фалос бинзопила
			{19341, 1,  {-0.4,   0.0,   0.0},     {180.0,   90.0,    0.0},    {1.5,  1.5, 1.5}},// - яйцо
			{18720, 1,   {1.0,   0.0,   0.0},     {180.0,   90.0,    0.0},    {1.0,  1.0, 1.0}},// - вода/снег
			{18643, 6,   {0.1,  0.05,   0.0},     {180.0,   90.0,    0.0},    {1.0,  1.0, 1.0}},// - лазер в руку
			{18634, 6,   {0.1,  0.05,  0.15},      {90.0,  270.0,    0.0},    {1.0,  1.0, 1.0}},// - ломик из халф лайф в руку
			{19078, 1,  {0.25, -0.09,  0.18},       {0.0,  360.0,    0.0},    {1.0,  1.0, 1.0}},// - попугай на плече
			{19163, 2,   {0.1,  0.05,   0.0}, 	 {180.0,   90.0,    0.0},    {1.5,  1.5, 1.5}},// - чёрная маска мотоциклиста
			{19142, 1,   {0.0,  0.05,   0.0}, 	   {0.0,    0.0,    0.0},    {1.3,  1.3, 1.3}},// - броня
			{19141, 2,   {0.1,   0.0,   0.0}, 	   {0.0,    0.0,    0.0},    {1.3,  1.3, 1.3}},// - Каска сват
			{18974, 2,   {0.1, 0.035,   0.0}, 	  {90.0,   90.0,    0.0},    {1.3,  1.3, 1.3}},// - маска зорро
			{18890, 6, {-0.05,   0.0,   0.2}, 	 {180.0,    0.0,  270.0},    {1.3,  1.3, 1.3}},// - грабля в правую руку
			{3028,  6, {-0.09,  0.09,   0.3}, 	 {180.0,    0.0,    0.0},    {2.0,  2.0, 2.0}},// - катана в правую руку
			{1371,  1,   {0.1,   0.0,   0.0}, 	 {180.0,   90.0,    0.0},    {1.0,  1.0, 1.0}},// - бегемотик
			{19064, 2,  {0.14,  0.03,   0.0}, 	  {90.0,   90.0,    0.0},    {1.4,  1.4, 1.4}},// - новогодняя шапочка
			{19036, 2,  {0.11,  0.05,   0.0}, 	  {90.0,   90.0,    0.0},    {1.3,  1.3, 1.3}},// - белая маска
			{1240,  1,  {0.55,  0.09,   0.0}, 	 {180.0,   90.0,    0.0},    {2.0,  3.4, 2.0}},// - сердечко место головы
			{1247,  1,   {0.0,   0.0,   0.0}, 	 {180.0,   90.0,    0.0},    {7.0,  7.0, 7.0}},// - йа звёздочкЭ
			{1254,  1,  {0.55,   0.2,   0.0}, 	 {180.0,   90.0,    0.0},    {2.5,  2.5, 2.5}},// - голова скилета
			{1210,  5,  {0.28,  0.09,   0.0}, 	   {0.0,  270.0,    0.0},    {1.0,  1.0, 1.0}},// - чемодан в руку вузи
			{1736,  2,   {0.0,   0.0,   0.0}, 	   {0.0,   90.0,  180.0},    {1.0,  1.0, 1.0}},// - олень
			{18963, 2,   {0.1,   0.0,   0.0}, 	   {0.0,   90.0,   90.0},    {1.5,  1.5, 1.5}},// - голова сиджея
			{18885, 1,  {-0.4,   0.0,   0.0}, 	   {0.0,   90.0,  180.0},    {1.0,  1.0, 1.0}},//  - автомат с оружием
			{370,   1,   {0.0,   0.0,   0.0}, 	   {0.0,   90.0,    0.0},    {1.0,  1.0, 1.0}},// - джетпак
			{362,   6,   {0.0,   0.0,   0.0}, 	   {0.0,    0.0,    0.0},    {1.0,  1.0, 1.0}},// - minigun
			{19137, 2,  {0.09,  0.02,   0.0}, 	   {0.0,    0.0,    0.0},    {1.0,  1.0, 1.0}},// - голова петуха
			{18646, 2,   {0.1,   0.0,   0.0}, 	  {90.0,  100.0,    0.0},    {1.3,  1.3, 1.3}} // - лазер во лбу
		};

	    new count;
	    new Float:pos[3];
	    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);

	    for(new i, rho_id; i < MAX_PLAYERS; i++)
	    {
     		if(!IsPlayerConnected(i)) continue;
	        if(!IsPlayerInRangeOfPoint(i, radius, pos[0], pos[1], pos[2])) continue;

	        rho_id = random(sizeof(rho_info));

	        SetPlayerAttachedObject(i, 0,
				rho_info[rho_id][rho_ID],
				rho_info[rho_id][rho_Bonet],
				rho_info[rho_id][rho_Pos][0],
				rho_info[rho_id][rho_Pos][1],
				rho_info[rho_id][rho_Pos][2],

				rho_info[rho_id][rho_Rotate][0],
				rho_info[rho_id][rho_Rotate][1],
				rho_info[rho_id][rho_Rotate][2],

				rho_info[rho_id][rho_Size][0],
				rho_info[rho_id][rho_Size][1],
				rho_info[rho_id][rho_Size][2]);

    		SendClientMessage(i, COLOR_WHITE, "Введите /rmho для удаления объекта");

    		count++;
	    }

		format(string, sizeof(string), "Вы прикрепили объекты к %d игрокам в радиусе %.0f метров", count, radius);
		SendClientMessage(playerid, COLOR_WHITE, string);
	    return 1;
	}
	if(strcmp(cmd, "/rmho", true) == 0)
	{
		RemovePlayerAttachedObject(playerid, 0);
	 	SendClientMessage(playerid, COLOR_WHITE, "Объект удалён! ");
	 	return 1;
	}
	if(strcmp(cmd, "/ho", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 5) dcmd(ho, 2, cmdtext);
		return 1;
	}
	if(strcmp(cmd, "/spincar", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 6) dcmd(spincar, 7, cmdtext);
		return 1;
	}
	if(strcmp(cmd, "/explosion", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 1338) dcmd(explosion, 9, cmdtext);
		return 1;
	}
	if(strcmp(cmd, "/setmypos", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 6) dcmd(setmypos, 8, cmdtext);
		return 1;
	}
	if(strcmp(cmd, "/vho", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 5) dcmd(vho, 3, cmdtext);
		return 1;
	}
	if(strcmp(cmd, "/rvho", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 6) dcmd(rvho, 4, cmdtext);
		return 1;
	}
	if(strcmp(cmd, "/slap", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
	    DeletePVar(playerid,"AntiFlood");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /slap [id игрока/часть имени]");
		new playa;
		new Float:slx, Float:sly, Float:slz;
		playa = ReturnUser(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < GetPVarInt(playa,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, " Недоступно !");
		if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GRAD2, " Игрок не найден !");
		GetPlayerPos(playa, slx, sly, slz);
		oSetPlayerPos(playa, slx, sly, slz+7.0);
		return 1;
	}
	if(strcmp(cmd, "/mute", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /mute [id игрока/часть имени]");
		new playa;
		playa = ReturnUser(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < GetPVarInt(playa,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, "Недоступно *");
		if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GRAD1, " Игрок не найден !");
	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(GetPVarInt(playa, "MuteTime") < gettime())
		{
            SetPVarInt(playa,"MuteTime", gettime() + 180);
			format(string, sizeof(string), "Crime Streets RPG: %s получил молчанку от администратора %s",giveplayer ,sendername);
			SendClientMessage(playa, COLOR_RED,string);
			ABroadCast(string);
		}
		else
		{
			DeletePVar(playa,"MuteTime");
			format(string, sizeof(string), "Crime Streets RPG: C игрока %s снята молчанка администратором %s",giveplayer ,sendername);
			SendClientMessage(playa, COLOR_RED,string);
			ABroadCast(string);
		}
		MySQL_UpdateInt(playa, "MuteTime");
		return 1;
	}
//----------------------------------[Kick]------------------------------------------------
    if(strcmp(cmd, "/ptest", true) == 0)
    {
        if (GetPVarInt(playerid,"AdminLevel") < 1338) return 1;

		return 1;
    }

	if(strcmp(cmd, "/wipe", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1338) return 1;
    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /wipe [номер фаркции]");
		new member = strval(tmp);

		if(member < 1 || member > 18) return SendClientMessage(playerid, COLOR_GRAD2, "Номер фракции от 1 до 18");


		SendClientMessage(playerid, COLOR_WHITE, "Увольнение игроков...");


		format(string, sizeof(string), "Все игроки вашей организации были уволены %s", GetName(playerid));
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(GetPVarInt(i, "Member") != member) continue;

			SetPVarInt(i, "Team", 0);
			SetPVarInt(i, "Member",0);
			SetPVarInt(i, "Rank", 0);

			SetPVarInt(i, "FWarns", 0);
			DeletePVar(i, "fMute");

			if(GetPVarInt(i, "OldSkin") < 1 || GetPVarInt(i, "OldSkin") > 299) SetPVarInt(i, "Skin", 7);
			else SetPVarInt(i, "Skin", GetPVarInt(i, "OldSkin"));

			ReplaceSkin(i);

            SendClientMessage(i, COLOR_YELLOW, string);
		}

		format(string, sizeof(string), "UPDATE `"UsersTable"` SET `Member` = 0, `Rank` = 0, `FWarns` = 0, `Skin` = 7 WHERE `Member` = %d", member);
		mysql_query(string, 1, playerid);

		return 1;
	}
    
    if(strcmp(cmd, "/commonpass", true) == 0)
    {
        if (GetPVarInt(playerid,"AdminLevel") < 4) return 1;
    

        for(new i, fids[] = {5, 6, 10, 12, 13, 14, 15, 16, 17, 18}, id; i < sizeof(CommonInfo); i ++)
        {
	        switch(fids[i])
	        {
				case 5: id = 0;
			    case 6: id = 1;
			    case 10: id = 2;
			    case 12: id = 3;
			    case 13: id = 4;
			    case 14: id = 5;
			    case 15: id = 6;
			    case 16: id = 7;
			    case 17: id = 8;
			    case 18: id = 9;
		    }
        
            format(string, sizeof(string), "[%d] - %s - Общак: %d", fids[i], GetGangName(fids[id]), CommonInfo[id][gPassword]);
            SendClientMessage(playerid, COLOR_YELLOW, string);
        }
    
        return 1;
    }
    
    if(strcmp(cmd, "/object", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 4) return 1;

    	new id = strval(strtok(cmdtext, idx));

		if(id < 18632 || id > 19521) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /object [id объекта (18632-19521)]");

		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);

		for(new i; i < sizeof(AdminCreateObject); i++)
		{
		    if(AdminCreateObject[i] == 0)
		    {
		        AdminCreateObject[i] = CreateObject(id, pos[0], pos[1], pos[2], 0.0, 0.0, 0.0, 100.0);
		        EditObject(playerid, AdminCreateObject[i]);

				format(string, sizeof(string), "Объект %d создан. Для удаления введите /delobject "RGB_BLUE"%d"RGB_WHITE" или /delobjectall для удаления всех. /editall - редактор", id, i);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
		}

		SendClientMessage(playerid, COLOR_GREY, "Превышен лимит объектов, удалите сначала старые (/delobject | /delobjectall)");

	    return 1;
	}

	if(strcmp(cmd, "/delobject", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 4) return 1;

	    new id = strval(strtok(cmdtext, idx));

	    if(id < 0 || id >= sizeof(AdminCreateObject)) return SendClientMessage(playerid, COLOR_GREY, "Неправильный номер объекта");

	    if(AdminCreateObject[id] == 0) return SendClientMessage(playerid, COLOR_GREY, "Объект под этим номером не создан");

	    DestroyObject(AdminCreateObject[id]);
	    AdminCreateObject[id] = 0;

	    format(string, sizeof(string), "Объект %d удален", id);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    return 1;
	}

	if(strcmp(cmd, "/delobjectall", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 4) return 1;

	    new count;
	    for(new i; i < sizeof(AdminCreateObject); i ++)
	    {
	        if(AdminCreateObject[i] != 0)
	        {
			    DestroyObject(AdminCreateObject[i]);
			    AdminCreateObject[i] = 0;
			    count ++;
			}
		}

		format(string, sizeof(string), "Удалено %d объектов", count);
		SendClientMessage(playerid, COLOR_WHITE, string);
	    return 1;
	}

	if(strcmp(cmd, "/editall", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 4) return 1;

        SelectObject(playerid);

        SendClientMessage(playerid, COLOR_WHITE, "Выберите объект для редактирования");
	    return 1;
	}
	
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /kick [id игрока/часть имени] [reason]");
		giveplayerid = ReturnUser(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < GetPVarInt(giveplayerid,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, "Недоступно *");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Игрок не найден!");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /kick [id игрока/часть имени] [reason]");
		
		format(string, sizeof(string), "Crime Streets RPG: %s кикнут администратором %s, причина: %s", giveplayer, sendername, (result));
		SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
		ABroadCast(string);
		
		Kick_(giveplayerid);
		AntiAdminFlood(playerid);
		return 1;
	}
	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /skick [id игрока/часть имени]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid,COLOR_GREY," Игрок не найден !");
		new plName[24], admName[24];
		GetPlayerName(giveplayerid, plName, 24 );
		GetPlayerName(playerid, admName, 24 );
		format( string, 256, "AdmCmd:[S-KICK]: %s кикнут админом %s",plName, admName);
		ABroadCast(string);
		Kick_(giveplayerid);
		AntiAdminFlood(playerid);
  		return 1;
	}
	if (strcmp("/clean", cmdtext, true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 3) return SendClientMessage(playerid,COLOR_GREY,"Вы не админ");
		for(new i; i < 30; i++) SendClientMessageToAll(COLOR_GREY, " ");
		SendClientMessageToAll(COLOR_GREY,"                 ..::[Чат очищен администратором]::.. ");
		SendClientMessageToAll(COLOR_GREY," ");
		SendClientMessageToAll(COLOR_GREY," ");
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, 256, "AdmCmd: %s очистил чат  ", sendername);
		ABroadCast(string);
		return 1;
	}

	if(strcmp(cmd, "/ip", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 3) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		tmp = strtok(cmdtext,idx);
		new playersip[128];
		if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GRAD1," Используйте: /ip [id игрока/часть имени]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid,COLOR_GREY," Игрок не найден !");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerIp(giveplayerid,playersip,sizeof(playersip));
		format(string, sizeof(string), "Player: %s IP: %s",giveplayer,playersip);
		SendClientMessage(playerid,COLOR_GRAD2,string);
		return 1;
	}

	if (strcmp(cmd, "/unban", true)==0 && GetPVarInt(playerid,"AdminLevel") > 4)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD1, " Используйте: /unban [ник игрока] ");
		GetPlayerName(playerid, sendername, sizeof(sendername));

		new DataString[32], Query[128];
	    format( Query, sizeof( Query ), "SELECT Ip FROM `"BanTable"` WHERE `Name` = '%s' LIMIT 1", tmp);
	    mysql_query(Query);
	    mysql_store_result();
	    if(mysql_num_rows())
		{
		   	new row[64];
			mysql_fetch_row(row, "|");
		    mysql_fetch_field("Ip", DataString);
			format(Query,sizeof(Query),"unbanip %s",DataString);
			SendRconCommand(Query);
		}
		else return SendClientMessage(playerid, COLOR_GRAD1, " Игрок не найден в таблице банов !");
		SendRconCommand("reloadbans");
		format( Query, sizeof( Query ), "DELETE FROM `"BanTable"` WHERE `Name` = '%s' LIMIT 1",tmp);
	    mysql_query(Query);
		mysql_free_result();
		format(string, sizeof(string), "AdmCmd: Администратор %s разбанил игрока %s, IP: %s", sendername,tmp,DataString);
		ABroadCast(string);
		format(string, sizeof(string), "Администратор %s разбанил игрока %s, IP: %s", sendername,tmp,DataString);
		UnbanLog(string);
		return 1;
	}
	if(strcmp(cmd,"/unbanip",true)==0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 4) return 1;
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid,COLOR_GRAD1," Используйте: /unbanip [ip]");
		format(string,sizeof(string),"unbanip %s",tmp);
		SendRconCommand(string);
		SendRconCommand("reloadbans");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, 256, "Bнимание: %s разбанил IP: %s", sendername, tmp);
		ABroadCast(string);
		return 1;
	}
	if(strcmp(cmd,"/banip",true)==0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 4) return 1;
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)){SendClientMessage(playerid,COLOR_GRAD1, " Используйте: /banip [ip]");
	 					 SendClientMessage(playerid,COLOR_GRAD1, " Чтобы забанить подсеть, введите 2 первые цифры ip адреса и *.* (Пример: /banip 127.0.*.*) "); return 1;}
		format(string,sizeof(string),"banip %s",tmp);
		SendRconCommand(string);
		SendRconCommand("reloadbans");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, 256, " Bнимание: %s забанил IP: %s", sendername, tmp);
		ABroadCast(string);
		return 1;
	}
	if(strcmp(cmd, "/setjob", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, " Подсказка: /setjob [id игрока/часть имени] [ID работы)]");
		new para1, jobid;
		para1 = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		jobid = strval(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 4) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		if(!IsPlayerConnected(para1)) return 1;
		if(jobid > 0 && GetPVarInt(playerid,"AdminLevel") < 1338) return SendClientMessage(playerid, COLOR_GRAD2, " Вы можете только уволить игрока с работы !");
		SetPVarInt(para1,"Job", jobid);
		SendClientMessage(playerid, COLOR_GRAD1, " Работа успешно изменена");
		return 1;
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 2) return 1;
  		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /warn [id игрока/часть имени] [причина]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return 1;
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /warn [id игрока/часть имени] [причина]");
		GivePVarInt(giveplayerid,"Warnings",1);
		MySQL_UpdateInt(giveplayerid,"Warnings");
		
		SetPVarInt(giveplayerid, "TimeWarn", gettime()+2592000);
		MySQL_UpdateInt(giveplayerid, "TimeWarn");
		
		format(string, sizeof(string), "AdmCmd: %s[%d] выдал warn %s[%d], причина: %s [%d/3]", sendername, playerid, giveplayer, giveplayerid, result, GetPVarInt(giveplayerid,"Warnings"));
		ABroadCast(string);
		
		format(string, sizeof(string), "Администратор %s выдал Вам предупреждение [WARN], причина: %s", sendername, (result));
		SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
		SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Предупреждения будут автоматически сняты через 30 дней");
		
		if(GetPVarInt(giveplayerid,"Warnings") >= 3)
		{
			format(string, sizeof(string), "Crime Streets RPG: %s забанен админом %s (получил %d WARN), причина: %s", giveplayer, sendername, GetPVarInt(giveplayerid, "Warnings"), result);
			ABroadCast(string);
			
			format(string, sizeof(string), "Вы получили %d предупреждения(-ий) и забанены на 7 дней", GetPVarInt(giveplayerid, "Warnings"));
			SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
			
			format(result, sizeof(result), "%s [%d WARNS]", result, GetPVarInt(giveplayerid,"Warnings"));
            MySQL_Ban(giveplayerid, playerid, 168, result, 0);
   			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/unwarn", true) == 0)
	{
    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /unwarn [id/часть ника] [причина]");
		giveplayerid = ReturnUser(tmp);
		if (GetPVarInt(playerid,"AdminLevel") < 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать эту команду");
		if(!IsPlayerConnected(giveplayerid)) return 1;
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /unwarn [id/часть ника] [причина]");
		if(GetPVarInt(giveplayerid,"Warnings") > 0) GivePVarInt(giveplayerid,"Warnings",-1);
		MySQL_UpdateInt(giveplayerid,"Warnings");
		format(string, sizeof(string), "Вы cняли предупреждение [WARN] с игрока %s, причина: %s", giveplayer, (result));
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Администратор %s cнял с вас предупреждение [WARN], причина: %s", sendername, (result));
		SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
		return 1;
	}
	if(strcmp(cmd, "/atm", true) == 0)
	{
		if(!Bankomat(playerid)) return SendClientMessage(playerid, COLOR_GREY, " Здесь нет банкомата !");
		ShowPlayerDialog(playerid,100,2, RGB_SERVER"ATM","Снять деньги со счета\nПоложить деньги на счет\nИнфо о балансе\n{fde910}Объявления","Дальше","Отмена");
	}


	if(strcmp(cmd, "/togreport", true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 6) return SendClientMessage(playerid,COLOR_RED,"Недоступно ");
		switch(togreport)
		{
		    case 0:
			{
		        togreport = 1;
		     	return SendClientMessage(playerid, COLOR_GREY, "Вы включили /report ");
			}
			case 1:
			{
			    togreport = 0;
			    return SendClientMessage(playerid, COLOR_GREY, "Вы отключили /report ");
			}
		}// /report - if(togreport == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент эта команда недоступна ");
		return 1;
	}
	if(strcmp(cmd, "/togadv", true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 6) return SendClientMessage(playerid,COLOR_RED,"Недоступно ");
		switch(canAD)
		{
		    case 0:
			{
		        canAD = 1;
		     	return SendClientMessage(playerid, COLOR_GREY, "Вы включили /ad ");
			}
			case 1:
			{
			    canAD = 0;
			    return SendClientMessage(playerid, COLOR_GREY, "Вы отключили /ad ");
			}
		}// /ad - if(canAD == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент эта команда недоступна ");
		return 1;
	}
	if(strcmp(cmd, "/toggow", true) == 0)
	{
		if(GetPVarInt(playerid,"AdminLevel") < 6) return SendClientMessage(playerid,COLOR_RED,"Недоступно ");
		switch(toggow)
		{
		    case 0:
			{
		        toggow = 1;
		     	return SendClientMessage(playerid, COLOR_GREY, "Вы включили /gow ");
			}
			case 1:
			{
			    toggow = 0;
			    return SendClientMessage(playerid, COLOR_GREY, "Вы отключили /gow ");
			}
		}// /gow - if(toggow == 0) return SendClientMessage(playerid, COLOR_GREY, "В данный момент эта команда недоступна ");
		return 1;
	}

	if(strcmp(cmd, "/sellexp", true) == 0)
	{
	    dcmd(sellexp, 7, cmdtext);
	}
	if(strcmp(cmd, "/rinfo", true) == 0)
	{
		format(string, sizeof(string), ""RGB_WHITE"\
		\t1. %s\n\
		\t2. %s\n\
		\t3. %s\n\
		\t4. %s\n\
		\t5. %s",
		racersdialog[0],
		racersdialog[1],
		racersdialog[2],
		racersdialog[3],
		racersdialog[4]);
		return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Победители гонок", string, "Ок", "");
	}
	if(strcmp(cmd, "/tdminfo", true) == 0)
	{
		new cplays = 1;
	    globalstr = "";
	    format(globalstr, sizeof(globalstr), RGB_BLUE"Синяя команда, счет: %d\nУчастники:\n\n", TDM_Team_Kills[0]);
	    for(new i; i < sizeof(TDM_Info); i++)
	    {
	        if(TDM_Info[i][0][TDM_Playerid] != -1) format(globalstr, sizeof(globalstr), "%s   - %d) %s, убийства: %d\n", globalstr, cplays++, TDM_Info[i][0][TDM_Name], TDM_Info[i][0][TDM_Kills]);
	    }
	    cplays = 1;
	    strcat(globalstr, RGB_GREY"\n____________________________________________\n\n");
	    format(globalstr, sizeof(globalstr), "%s"RGB_RED"Красная команда, счет: %d\nУчастники:\n\n", globalstr, TDM_Team_Kills[1]);
	    for(new i; i < sizeof(TDM_Info); i++)
	    {
	        if(TDM_Info[i][1][TDM_Playerid] != -1) format(globalstr, sizeof(globalstr), "%s   - %d) %s, убийства: %d\n", globalstr, cplays++, TDM_Info[i][1][TDM_Name], TDM_Info[i][1][TDM_Kills]);
	    }
	    ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Итоги ТДМ",globalstr,"Ок","");
	    globalstr = "";
	    return 1;
	}
///********************************************

	if(strcmp(cmd, "/sellmycar", true) == 0)
	{
		if(GetPVarInt(playerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет собственной машины");

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellmycar [id/часть ника] [стоимость]");
		giveplayerid = ReturnUser(tmp);

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellmycar [id/часть ника] [стоимость]");
		new money = strval(tmp);

		if(money < 1000)
		{
		    new st[600];
		    strcat(st, RGB_WHITE"Если Вам предлагают отдать автомобиль на время или обменять на респекты, будьте внимательны:\n");
		    strcat(st, "возможно, Вас хотят обмануть. Все сделки совершайте "RGB_RED"только"RGB_WHITE" через команды:\n");
			strcat(st, "/sellmycar [id игрока] [сумма] для продажи, и /changemycar [id игрока] [сумма] для\n");
			strcat(st, "обмена автомобилями. Сумма указывается "RGB_RED"целым"RGB_WHITE" числом, например 1000000, а не 1.000.000 и т.д.\n");
			strcat(st, "Администрация не несет ответственности, если Вы совершаете сделку не по вышеописанным правилам.\n\n");
			strcat(st, "Для совершения сделки, укажите сумму более $1000.");
		    return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Предупреждение", st, "Ок","");
		}

        tmp = strtok(cmdtext, idx);
		if (strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Указывайте стоимость слитно! К примеру: не 10 000, а 10000");

		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");

		if (GetPVarInt(giveplayerid, "CarKey") != 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока уже есть машина");

		if (GetPlayerPCash(giveplayerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У игрока слишком мало денег");
		
		if (money < 0) return SendClientMessage(playerid, COLOR_GREY, "Недопустимая сумма");

		if (GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Покупка/продажа доступна только для игроков с 3 лвл");

		if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продать машину самому себе");

		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Покупатель должен находиться рядом с Вами");

		if (GetPVarInt(playerid, "CantUseSellCar") == 1)  return SendClientMessage(playerid, COLOR_GREY, "Вы уже продаете/меняете автомобиль");

		if (GetPVarInt(giveplayerid, "CantUseSellCar") == 1)  return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже продает/покупает автомобиль");

		SetPVarInt(playerid, "CantUseSellCar", 1);
		SetPVarInt(giveplayerid, "CantUseSellCar", 1);


		new st[144];
		GetPlayerName(playerid, st, 24);
		format(st, sizeof(st), RGB_GREEN"%s[%d]"RGB_WHITE" предлагает Вам купить автомобиль %s[%d] за %d$", st, playerid, VehiclesName[CarInfo[playerid][cModel]-400], CarInfo[playerid][cSQL], money);
		SendClientMessage(giveplayerid, COLOR_WHITE, st);
		SendClientMessage(giveplayerid, COLOR_WHITE, "Введите "RGB_BLUE"/buymycar"RGB_WHITE", если согласны");

		GetPlayerName(giveplayerid, st, 24);
		format(st, sizeof(st), "Вы предложили "RGB_GREEN"%s[%d]"RGB_WHITE" купить Ваш автомобиль за %d$", st, giveplayerid, money);
		SendClientMessage(playerid, COLOR_WHITE, st);

		SetPVarInt(giveplayerid, "BuyedCar", playerid);
		SetPVarInt(giveplayerid, "CarPrice", money);

		return 1;
	}
	if(strcmp(cmd, "/buymycar", true) == 0)
	{
		if (GetPVarInt(playerid, "BuyedCar") == 0 && GetPVarInt(playerid, "CarPrice") == 0) return 1; // никто не предлагал купить авто

		new otherplayerid = GetPVarInt(playerid, "BuyedCar");
		new money = GetPVarInt(playerid, "CarPrice");

		DeletePVar(playerid, "BuyedCar");
		DeletePVar(playerid, "CarPrice");
		DeletePVar(playerid, "CantUseSellCar");
		
		if(GetPVarInt(otherplayerid, "CantUseSellCar") != 1) return 1;

		if (!IsPlayerConnected(otherplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Продавец вышел из игры");

		if (GetPVarInt(otherplayerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет автомобиля");

		if (!ProxDetectorS(5.0, playerid, otherplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Продавец должен находиться рядом с Вами");

		if (GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег для покупки");

		if (GetPVarInt(playerid, "CarKey") != 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас уже есть машина");

		DeletePVar(otherplayerid, "CantUseSellCar");

		CarInfo[playerid][carX] = CarInfo[otherplayerid][carX];
		CarInfo[playerid][carY] = CarInfo[otherplayerid][carY];
		CarInfo[playerid][carZ] = CarInfo[otherplayerid][carZ];
		CarInfo[playerid][carA] = CarInfo[otherplayerid][carA];

		CarInfo[playerid][cModel] = CarInfo[otherplayerid][cModel];
		CarInfo[playerid][cMaincar] = CarInfo[otherplayerid][cMaincar];
		CarInfo[playerid][cSpoiler] = CarInfo[otherplayerid][cSpoiler];
		CarInfo[playerid][cHood] = CarInfo[otherplayerid][cHood];
		CarInfo[playerid][cSideskirt] = CarInfo[otherplayerid][cSideskirt];
		CarInfo[playerid][cNitro] = CarInfo[otherplayerid][cNitro];
		CarInfo[playerid][cLamps] = CarInfo[otherplayerid][cLamps];
		CarInfo[playerid][cExhaust] = CarInfo[otherplayerid][cExhaust];
		CarInfo[playerid][cWheels] = CarInfo[otherplayerid][cWheels];
		CarInfo[playerid][cRoof] = CarInfo[otherplayerid][cRoof];
		CarInfo[playerid][cStereo] = CarInfo[otherplayerid][cStereo];
		CarInfo[playerid][cHydraulics] = CarInfo[otherplayerid][cHydraulics];
		CarInfo[playerid][cBullbar] = CarInfo[otherplayerid][cBullbar];
		CarInfo[playerid][cRearBullbars] = CarInfo[otherplayerid][cRearBullbars];
		CarInfo[playerid][cFrontSign] = CarInfo[otherplayerid][cFrontSign];
		CarInfo[playerid][cFrontBullbars] = CarInfo[otherplayerid][cFrontBullbars];
		CarInfo[playerid][cFrontBumper] = CarInfo[otherplayerid][cFrontBumper];
		CarInfo[playerid][cRearBumper] = CarInfo[otherplayerid][cRearBumper];
		CarInfo[playerid][cVents] = CarInfo[otherplayerid][cVents];
		CarInfo[playerid][c3d] = CarInfo[otherplayerid][c3d];
		CarInfo[playerid][cColor1] = CarInfo[otherplayerid][cColor1];
		CarInfo[playerid][cColor2] = CarInfo[otherplayerid][cColor2];
		CarInfo[playerid][cPaintJob] = CarInfo[otherplayerid][cPaintJob];
		CarInfo[playerid][cSQL] = CarInfo[otherplayerid][cSQL];
		
		
		format(CarInfo[playerid][cNumber], 15, "CS%dRPG", CarInfo[playerid][cSQL]);


		SetPVarInt(otherplayerid, "CarKey", 0);
		SetPVarInt(playerid, "CarKey", CarInfo[otherplayerid][cSQL]);

		MySQL_UpdateInt(playerid, "CarKey");
		MySQL_UpdateInt(otherplayerid, "CarKey");

		GivePlayerPCash(playerid, -money, "buymycar");
		GivePlayerPCash(otherplayerid, money, "buymycar");
		
		From_Chanhe_Nalog += money/30;

		SendClientMessage(playerid, COLOR_WHITE, "Вы приобрели личный автомобиль");
		SendClientMessage(otherplayerid, COLOR_WHITE, "Вы продали свой автомобиль");

		UpdatePlayerVehicleText(playerid);

		CarInfo[otherplayerid][cMaincar] = 0;
		CarInfo[otherplayerid][cSQL] = 0;
		return 1;
	}
	if(strcmp(cmd, "/changemycar", true) == 0)
	{
		if (GetPVarInt(playerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет автомобиля");

	   	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /changemycar [id/часть ника] [стоимость]");
		giveplayerid = ReturnUser(tmp);


		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /changemycar [id/часть ника] [стоимость]");
		new money = strval(tmp);

		if(money < 1000)
		{
		    new st[600];
		    strcat(st, RGB_WHITE"Если Вам предлагают отдать автомобиль на время или обменять на респекты, будьте внимательны:\n");
		    strcat(st, "возможно, Вас хотят обмануть. Все сделки совершайте "RGB_RED"только"RGB_WHITE" через команды:\n");
			strcat(st, "/sellmycar [id игрока] [сумма] для продажи, и /changemycar [id игрока] [сумма] для\n");
			strcat(st, "обмена автомобилями. Сумма указывается "RGB_RED"целым"RGB_WHITE" числом, например 1000000, а не 1.000.000 и т.д.\n");
			strcat(st, "Администрация не несет ответственности, если Вы совершаете сделку не по вышеописанным правилам.\n\n");
			strcat(st, "Для совершения сделки, укажите сумму более $1000.");
		    return ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, "Предупреждение:", st, "Ок","");
		}

        tmp = strtok(cmdtext, idx);
		if (strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Указывайте стоимость слитно! К примеру: не 10 000, а 10000");
		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети");
		if (GetPVarInt(giveplayerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У этого игрока нет машины");
		if (GetPlayerPCash(giveplayerid) < money) return SendClientMessage(playerid, COLOR_GREY, "У игрока слишком мало денег");
		if (money < 0) return SendClientMessage(playerid, COLOR_GREY, "недопустимая сумма");
		if (GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Покупка/продажа доступна только для игроков с 3 лвл");
		if (giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя меняться машиной с самим собой");
		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Покупатель должен находиться рядом с Вами");
		if (GetPVarInt(playerid, "CantUseSellCar") == 1)  return SendClientMessage(playerid, COLOR_GREY, "Вы уже продаете/меняете автомобиль");
		if (GetPVarInt(giveplayerid, "CantUseSellCar") == 1)  return SendClientMessage(playerid, COLOR_GREY, "Игрок уже меняется автомобилями");

		format(string, sizeof(string), "Вы подтверждаете обмен своего транспорта на %s[%d], вы получите доплату $%d?", VehiclesName[CarInfo[giveplayerid][cModel]-400], CarInfo[giveplayerid][cSQL], money);
        SendClientMessage(playerid, COLOR_WHITE, string);
		SendClientMessage(playerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(playerid, "SellCar_Id", giveplayerid);
		SetPVarInt(playerid, "SellCar_Money", money);
		SetPVarInt(playerid, "SellCar_SQLid", CarInfo[giveplayerid][cSQL]);
		SetPVarInt(playerid, "Accept_Type", 19);

		return 1;
	}
	if(strcmp(cmd, "/acceptchange", true) == 0)
	{
		if(GetPVarInt(playerid, "ChangePlayerid") == 0 && GetPVarInt(playerid, "ChangeMoney") == 0) return 1;

		new otherplayerid = GetPVarInt(playerid, "ChangePlayerid");
		new money = GetPVarInt(playerid, "ChangeMoney");

		DeletePVar(playerid, "CantUseSellCar");
		DeletePVar(playerid, "ChangeMoney");
		DeletePVar(playerid, "ChangePlayerid");

		if(GetPVarInt(otherplayerid, "CantUseSellCar") != 1) return 1;
		
		if (!IsPlayerConnected(otherplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок вышел с сервера");

		if (GetPVarInt(otherplayerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет автомобиля");

		if (!ProxDetectorS(5.0, playerid, otherplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен находиться рядом с Вами");

		if (GetPlayerPCash(playerid) < money) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег для обмена");

		if (GetPVarInt(playerid, "CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет машины");

		DeletePVar(otherplayerid, "CantUseSellCar");

		new CarKey1 = GetPVarInt(playerid, "CarKey");
		new CarKey2 = GetPVarInt(otherplayerid, "CarKey");

		SetPVarInt(playerid, "CarKey", CarKey2);
		SetPVarInt(otherplayerid, "CarKey", CarKey1);

		MySQL_UpdateInt(playerid, "CarKey");
		MySQL_UpdateInt(otherplayerid, "CarKey");

		GivePlayerPCash(playerid, -money, "acceptchange");
		GivePlayerPCash(otherplayerid, money, "acceptchange");
		
		From_Chanhe_Nalog += money/30;

		new paramss[23];
		new Float:pos[4];
		new Text3D:c3dcart;

		c3dcart = CarInfo[playerid][c3d];
		pos[0] = CarInfo[playerid][carX];
		pos[1] = CarInfo[playerid][carY];
		pos[2] = CarInfo[playerid][carZ];
		pos[3] = CarInfo[playerid][carA];

		paramss[0] = CarInfo[playerid][cModel];
		paramss[1] = CarInfo[playerid][cSpoiler];
		paramss[2] = CarInfo[playerid][cHood];
		paramss[3] = CarInfo[playerid][cSideskirt];
		paramss[4] = CarInfo[playerid][cNitro];
		paramss[5] = CarInfo[playerid][cLamps];
		paramss[6] = CarInfo[playerid][cExhaust];
		paramss[7] = CarInfo[playerid][cWheels];
		paramss[8] = CarInfo[playerid][cRoof];
		paramss[9] = CarInfo[playerid][cStereo];
		paramss[10] = CarInfo[playerid][cHydraulics];
		paramss[11] = CarInfo[playerid][cBullbar];
		paramss[12] = CarInfo[playerid][cRearBullbars];
		paramss[13] = CarInfo[playerid][cFrontSign];
		paramss[14] = CarInfo[playerid][cFrontBullbars];
		paramss[15] = CarInfo[playerid][cFrontBumper];
		paramss[16] = CarInfo[playerid][cRearBumper];
		paramss[17] = CarInfo[playerid][cVents];
		paramss[18] = CarInfo[playerid][cColor1];
		paramss[19] = CarInfo[playerid][cColor2];
		paramss[20] = CarInfo[playerid][cPaintJob];
		paramss[21] = CarInfo[playerid][cSQL];
		paramss[22] = CarInfo[playerid][cMaincar];

        CarInfo[playerid][c3d] = 			CarInfo[otherplayerid][c3d];
		CarInfo[playerid][carX] = 			CarInfo[otherplayerid][carX];
		CarInfo[playerid][carY] = 			CarInfo[otherplayerid][carY];
		CarInfo[playerid][carZ] = 			CarInfo[otherplayerid][carZ];
		CarInfo[playerid][carA] = 			CarInfo[otherplayerid][carA];
		CarInfo[playerid][cModel] = 		CarInfo[otherplayerid][cModel];
		CarInfo[playerid][cSpoiler] = 		CarInfo[otherplayerid][cSpoiler];
		CarInfo[playerid][cHood] = 			CarInfo[otherplayerid][cHood];
		CarInfo[playerid][cSideskirt] = 	CarInfo[otherplayerid][cSideskirt];
		CarInfo[playerid][cNitro] = 		CarInfo[otherplayerid][cNitro];
		CarInfo[playerid][cLamps] = 		CarInfo[otherplayerid][cLamps];
		CarInfo[playerid][cExhaust] = 		CarInfo[otherplayerid][cExhaust];
		CarInfo[playerid][cWheels] = 		CarInfo[otherplayerid][cWheels];
		CarInfo[playerid][cRoof] = 			CarInfo[otherplayerid][cRoof];
		CarInfo[playerid][cStereo] = 		CarInfo[otherplayerid][cStereo];
		CarInfo[playerid][cHydraulics] = 	CarInfo[otherplayerid][cHydraulics];
		CarInfo[playerid][cBullbar] = 		CarInfo[otherplayerid][cBullbar];
		CarInfo[playerid][cRearBullbars] = 	CarInfo[otherplayerid][cRearBullbars];
		CarInfo[playerid][cFrontSign] = 	CarInfo[otherplayerid][cFrontSign];
		CarInfo[playerid][cFrontBullbars] = CarInfo[otherplayerid][cFrontBullbars];
		CarInfo[playerid][cFrontBumper] = 	CarInfo[otherplayerid][cFrontBumper];
		CarInfo[playerid][cRearBumper] = 	CarInfo[otherplayerid][cRearBumper];
		CarInfo[playerid][cVents] = 		CarInfo[otherplayerid][cVents];
		CarInfo[playerid][cColor1] = 		CarInfo[otherplayerid][cColor1];
		CarInfo[playerid][cColor2] = 		CarInfo[otherplayerid][cColor2];
		CarInfo[playerid][cPaintJob] = 		CarInfo[otherplayerid][cPaintJob];
		CarInfo[playerid][cSQL] = 			CarInfo[otherplayerid][cSQL];
		CarInfo[playerid][cMaincar] = 		CarInfo[otherplayerid][cMaincar];


        CarInfo[otherplayerid][c3d]             = c3dcart;
		CarInfo[otherplayerid][carX] 			= pos[0];
		CarInfo[otherplayerid][carY] 			= pos[1];
		CarInfo[otherplayerid][carZ] 			= pos[2];
		CarInfo[otherplayerid][carA] 			= pos[3];
		CarInfo[otherplayerid][cModel] 			= paramss[0];
		CarInfo[otherplayerid][cSpoiler] 		= paramss[1];
		CarInfo[otherplayerid][cHood] 			= paramss[2];
		CarInfo[otherplayerid][cSideskirt] 		= paramss[3];
		CarInfo[otherplayerid][cNitro] 			= paramss[4];
		CarInfo[otherplayerid][cLamps] 			= paramss[5];
		CarInfo[otherplayerid][cExhaust] 		= paramss[6];
		CarInfo[otherplayerid][cWheels] 		= paramss[7];
		CarInfo[otherplayerid][cRoof] 			= paramss[8];
		CarInfo[otherplayerid][cStereo] 		= paramss[9];
		CarInfo[otherplayerid][cHydraulics] 	= paramss[10];
		CarInfo[otherplayerid][cBullbar] 	 	= paramss[11];
		CarInfo[otherplayerid][cRearBullbars] 	= paramss[12];
		CarInfo[otherplayerid][cFrontSign] 		= paramss[13];
		CarInfo[otherplayerid][cFrontBullbars] 	= paramss[14];
		CarInfo[otherplayerid][cFrontBumper] 	= paramss[15];
		CarInfo[otherplayerid][cRearBumper] 	= paramss[16];
		CarInfo[otherplayerid][cVents] 			= paramss[17];
		CarInfo[otherplayerid][cColor1] 		= paramss[18];
		CarInfo[otherplayerid][cColor2] 		= paramss[19];
		CarInfo[otherplayerid][cPaintJob] 		= paramss[20];
		CarInfo[otherplayerid][cSQL]            = paramss[21];
		CarInfo[otherplayerid][cMaincar]        = paramss[22];
		
		format(CarInfo[playerid][cNumber], 15, "CS%dRPG", CarInfo[playerid][cSQL]);
		format(CarInfo[otherplayerid][cNumber], 15, "CS%dRPG", CarInfo[otherplayerid][cSQL]);



     	UpdatePlayerVehicleText(playerid);
	    UpdatePlayerVehicleText(otherplayerid);

		SendClientMessage(otherplayerid, COLOR_WHITE, "Вы обменялись автомобилями");
		SendClientMessage(playerid, COLOR_WHITE, "Вы обменялись автомобилями");

		return 1;
	}
	
 	if(strcmp(cmd, "/payday", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1338) return 1;
	    SetPVarInt(playerid,"PayDay",6);
		PayDay();
		return SendClientMessage(playerid, COLOR_GRAD2, "* Pay Day выдан ");
	}

	if(strcmp(cmd, "/park", true) == 0)
	{
	 	if(GetPVarInt(playerid,"CarKey") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет автомобиля");

		for(new i; i < MAX_PLAYERS; i ++)
		{
	 		if(IsPlayerConnected(i) && GetPlayerVehicleID(i) == CarInfo[playerid][cMaincar]) return SendClientMessage(playerid, COLOR_GREY, "Автомобиль занят");
		}

	 	SetVehiclePos(CarInfo[playerid][cMaincar], CarInfo[playerid][carX], CarInfo[playerid][carY], CarInfo[playerid][carZ]);

	  	gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;

	   	SetPlayerCheckpoint(playerid,  CarInfo[playerid][carX], CarInfo[playerid][carY], CarInfo[playerid][carZ], 8.0);

	    return SendClientMessage(playerid, COLOR_WHITE, "Автомобиль вернулся на место парковки");
	}

	if(strcmp(cmd, "/lawyers", true) == 0)
	{

		new OrderText[10];

		SendClientMessage(playerid, COLOR_WHITE, "Адвокаты онлайн:");
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(GetPVarInt(i, "Job") != 2) continue;

		    GetPlayerName(i, sendername, 24);

		    if(ApprovedLawyer[i] || GetPVarInt(i, "LawSkill") >= 401) OrderText = "Есть";
			else OrderText = "Нет";

			if(AFKText[i] < 4) format(string, sizeof(string), "%s[%d]; Тел: "RGB_GREEN"%d; "RGB_WHITE"Ордер: "RGB_GREEN"%s;", sendername, i, GetPVarInt(i, "PhoneNumber"), OrderText);
			else format(string, sizeof(string), "%s[%d]; "RGB_WHITE"Тел: "RGB_GREEN"%d; "RGB_WHITE"Ордер: "RGB_GREEN"%s; {bbbbbb}AFK [%d секунд]", sendername, i, GetPVarInt(i, "PhoneNumber"), OrderText, AFKText[i]-4);

			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/online", true) == 0)
	{
		return ShowPlayerDialog(playerid,150,DIALOG_STYLE_LIST, RGB_SERVER"Онлайн","\
		1) Лидеры\n\
		2) Лицензиары\n\
		3) Адвокаты\n\
		4) Хелперы\n\
		5) Репортеры\n\
		6) Организация\
		","Выбрать","Отмена");
	}
	
	
	
	if(strcmp(cmd, "/makehelper", true) == 0)
	{
		if(GetPVarInt(playerid, "AdminLevel") < 6) return 1;
		tmp = strtok(cmdtext, idx);
	 	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "/makehelper [id] [1 - выдать/0 - забрать]");
	 	new players = ReturnUser(tmp);
	 	if(!IsPlayerConnected(players)) return SendClientMessage(playerid, COLOR_GRAD2, "Игрок оффлайн");
	 	tmp = strtok(cmdtext, idx);
	 	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "/makehelper [id] [1 - выдать/0 - забрать]");
	 	new helplev = strval(tmp);


	 	GetPlayerName(players, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));


		if(helplev)
		{
			format(string, sizeof(string), "%s[%d] назначил Вас хелпером", sendername,playerid);
			SendClientMessage(players, COLOR_LIGHTBLUE, string);

			format(string, sizeof(string), "Вы назначили %s[%d] хелпером", giveplayer,players);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

			SendClientMessage(players, COLOR_WHITE , "/ans [id игрока] [текст] - ответить на вопрос");
			SendClientMessage(players, COLOR_WHITE , "/askmute [id игрока] - выдать игроку молчанку на 3 минуты (только для /ask)");
			SendClientMessage(players, COLOR_WHITE , "/hc [текст] - чат хелперов");
			SendClientMessage(players, COLOR_WHITE , "/helpers - хелперы онлайн");
		}
		else
		{
			format(string, sizeof(string), "%s[%d] снял Вас с должности хелпера", sendername,playerid);
			SendClientMessage(players, COLOR_WHITE, string);

			format(string, sizeof(string), "Вы сняли с должности хелпера %s[%d]", giveplayer,players);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}

		SetPVarInt(players, "Helper", helplev);
		MySQL_UpdateInt(players, "Helper");
		return 1;
	}


	if(strcmp(cmd, "/hc", true) == 0)
	{
		if(GetPVarInt(playerid, "Helper") < 1) return 1;
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;

		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /hc [текст]");
		GetPlayerName(playerid, sendername, sizeof(sendername));

		format(string, sizeof(string), "• Хелпер %s: %s", sendername, result);
		SendHelpersMessage(COLOR_YELLOW, string);

		return 1;
	}


	if(strcmp(cmd, "/ask", true) == 0)
	{
		if (GetPVarInt(playerid,"HelpMuteTime") > gettime())
		{
			format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"HelpMuteTime") - gettime());
   			return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if (GetPVarInt(playerid,"HelpMute") > gettime())
		{
			format(string, 256, "Вы сможете повторно задать вопрос через: %d сек.", GetPVarInt(playerid,"HelpMute") - gettime());
   			return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if(GetPVarInt(playerid,"Jailed") == 2) return SendClientMessage(playerid, COLOR_GREY, "Недоступно в присоне");
		if (GetPVarInt(playerid,"Helper") > 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать эту команду");

		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /ask [вопрос]");

		SetPVarInt(playerid, "HelpMute", gettime()+60);
		SetPVarInt(playerid, "WaitAns", 3);

		AntiCaps(result);

		format(string, sizeof(string), "Вопрос от %s[%d]: %s", sendername, playerid, (result));
		SendHelpersMessage(COLOR_RED, string);
		SendClientMessage(playerid, COLOR_RED, "Ваш вопрос отправлен, ждите ответ. (( задать вопрос можно только один раз в минуту ))");
		SendClientMessage(playerid, COLOR_RED, "Обратите внимание, если Вам не отвечают, задайте вопрос на форум и Вы обязательно получите ответ");
		SendClientMessage(playerid, COLOR_RED, string);
		return 1;
	}


	if(strcmp(cmd, "/ans", true) == 0)
	{
	    if (GetPVarInt(playerid,"Helper") < 1) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /ans [id/часть имени игрока][текст]");
		giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid)) return 1;

		if(!GetPVarInt(giveplayerid, "WaitAns")) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не задавал вопрос");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /ans [id/часть имени игрока][текст]");

        GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		
		format(string, sizeof(string), "HELPER(%s): %s ", sendername, (result));
		SendClientMessage(giveplayerid, COLOR_RED, string);

		format(string, sizeof(string), "[ОТВЕТ] %s к %s[%d]: %s", sendername, giveplayer, giveplayerid, (result));
		SendHelpersMessage(COLOR_GREEN, string);

		if(GetPVarInt(playerid, "OldAnsw") != giveplayerid)
		{
			GivePVarInt(playerid, "BestHelper", 1);
			if(GetPVarInt(playerid, "BestHelper") > TotalAnswers)
			{
			    TotalAnswers = GetPVarInt(playerid, "BestHelper");
			    strmid(besthelper, sendername, 0, strlen(sendername), 255);
			}
		}
		SetPVarInt(playerid, "OldAnsw", giveplayerid);

		GivePVarInt(giveplayerid, "WaitAns", -1);
		if(GetPVarInt(giveplayerid, "WaitAns") == 0)
		{
		    DeletePVar(giveplayerid, "WaitAns");
		}
		return 1;
	}
	if(strcmp(cmd, "/askmute", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /mute [id игрока/часть имени]");
		new playa;
		playa = ReturnUser(tmp);
		if (GetPVarInt(playerid,"Helper") < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете использовать эту команду");
		if (!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не найден");

	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));

		if(GetPVarInt(playa,"HelpMuteTime") < gettime())
		{
            SetPVarInt(playa,"HelpMuteTime", gettime()+200);
			format(string, sizeof(string), "Crime Streets RPG: %s получил молчанку от хелпера %s",giveplayer ,sendername);
			SendClientMessage(playa, COLOR_RED,string);
			SendHelpersMessage(COLOR_GREEN, string);
		}
		else
		{
			DeletePVar(playa,"HelpMuteTime");
			format(string, sizeof(string), "Crime Streets RPG: C игрока %s снята молчанка хелпером %s",giveplayer ,sendername);
			SendClientMessage(playa, COLOR_RED,string);
			SendHelpersMessage(COLOR_GREEN, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/helpers", true) == 0)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Хелперы онлайн:");
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || GetPVarInt(i, "Helper") < 1) continue;
		    GetPlayerName(i, sendername, 24);
		    if(AFKText[i] < 5) format(string, sizeof(string), "%s[ID: %d]", sendername, i);
		    else format(string, sizeof(string), "%s[ID: %d] {bbbbbb} AFK [%d секунд]", sendername, i, AFKText[i] - 4);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		return 1;
	}
	
	if(strcmp(cmd, "/fmute", true) == 0)
	{
		if(GetPVarInt(playerid,"Leader") < 1) return 1;
		
  		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /fmute [id/часть ника] [минуты] [причина]");
		new otherid = ReturnUser(tmp);

		if (!IsPlayerConnected(otherid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (GetPVarInt(otherid, "Team") != GetPVarInt(playerid, "Leader")) return 1;

		tmp = strtok(cmdtext, idx);
	 	if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /fmute [id/часть ника] [минуты] [причина]");
	 	new timemute = strval(tmp);
		if(0 > timemute || timemute > 30) return SendClientMessage(playerid, COLOR_GREY, "Укажите время молчанки от 0 до 30 минут");
		
		
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /fmute [id/часть ника] [минуты] [причина]");
		
		if(strlen(result) > 20) return SendClientMessage(playerid, COLOR_GREY, "Укажите причину, не более 20 сиволов");
		
		SetPVarInt(otherid, "fMute", gettime() + (timemute * 60));
		
		GetPlayerName(otherid, giveplayer, 24);
		GetPlayerName(playerid, sendername, 24);

		switch(timemute)
		{
		    case 0: format(string, sizeof(string), "Лидер %s[%d] снял молчанку с %s[%d], причина: %s", sendername, playerid, giveplayer, otherid, result);
		    default: format(string, sizeof(string), "Лидер %s[%d] выдал молчанку %s[%d] на %d минут(ы), причина: %s", sendername, playerid, giveplayer, otherid, timemute, result);
		}
		SendFamilyMessage(GetPVarInt(playerid, "Leader"), TEAM_AZTECAS_COLOR, string);
		
		MySQL_UpdateInt(otherid, "fMute");
		return 1;
	}
		
	if(strcmp(cmd, "/fwarn", true) == 0)
	{
	    if(GetPVarInt(playerid,"Leader") < 1) return 1;
  		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /fwarn [id/часть ника] [причина]");
		giveplayerid = ReturnUser(tmp);

		if (!IsPlayerConnected(giveplayerid)) return 1;
		if(playerid == giveplayerid) return 1;

		if(GetPVarInt(giveplayerid, "Team") != GetPVarInt(playerid,"Leader")) return 1;
		if(GetPVarInt(giveplayerid, "Leader")) return SendClientMessage(playerid, COLOR_GREY, "Нельзя дать выговор лидеру");


		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /fwarn [id/часть ника] [причина]");

  		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));

		GivePVarInt(giveplayerid,"FWarns",1);

		format(string, sizeof(string), "Вы выдали предупреждение игроку %s, причина: %s, /funwarn чтобы снять предупреждение", giveplayer, result);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лидер %s выдал вам предупреждение, причина: %s", sendername, result);
		SendClientMessage(giveplayerid, COLOR_YELLOW, string);

		if(GetPVarInt(giveplayerid,"FWarns") >= 3)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Игрок выгнан из организации (3 предупреждения)");
		    SendClientMessage(giveplayerid, COLOR_WHITE, "Вас выгнали из организации (3 предупреждения)");

			SetPVarInt(giveplayerid, "FWarns", 0);
			SetPVarInt(giveplayerid, "Team", 0);
			SetPVarInt(giveplayerid, "Member",0);
			SetPVarInt(giveplayerid, "Rank", 0);
			SetPVarInt(giveplayerid, "Skin", 7);

			SetPlayerSkinEx(giveplayerid, 7);
		}
		MySQL_UpdateInt(giveplayerid,"FWarns");
		return 1;
	}

	if(strcmp(cmd, "/funwarn", true) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /funwarn [id/часть ника]");
		giveplayerid = ReturnUser(tmp);

		if (GetPVarInt(playerid,"Leader") < 1) return 1;
		if (!IsPlayerConnected(giveplayerid)) return 1;
		if (playerid == giveplayerid) return 1;


		if(GetPVarInt(giveplayerid, "Team") != GetPVarInt(playerid,"Leader")) return 1;
		if(GetPVarInt(giveplayerid, "Leader")) return SendClientMessage(playerid, COLOR_GREY, "Нельзя снять выговор с лидера");

		if(GetPVarInt(giveplayerid, "FWarns") <= 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет предупреждений");

        GivePVarInt(giveplayerid,"FWarns", -1);
        MySQL_UpdateInt(giveplayerid,"FWarns");


		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));


		format(string, sizeof(string), "Вы сняли одно предупреждение с %s", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), "Лидер %s снял с Вас одно предупреждение", sendername);
		SendClientMessage(giveplayerid, COLOR_YELLOW, string);

	    return 1;
	}
	if(strcmp(cmd, "/pbinfo", true) == 0)
	{
        globalstr = "{bbbbbb}    Ник:\t\t\t\tУрон:\t\tУбийств:\tСмертей:{ccff00}\n";

		format(globalstr, sizeof(globalstr), "%s1) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[0]][Killername], GiveTabulac(strlen(PaintList[mesto[0]][Killername])), PaintList[mesto[0]][DamagePoint], PaintList[mesto[0]][KillsPoint], PaintList[mesto[0]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s2) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[1]][Killername], GiveTabulac(strlen(PaintList[mesto[1]][Killername])), PaintList[mesto[1]][DamagePoint], PaintList[mesto[1]][KillsPoint], PaintList[mesto[1]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s3) %s%s%d\t\t%d\t\t%d{bbbbbb}\n", globalstr, PaintList[mesto[2]][Killername], GiveTabulac(strlen(PaintList[mesto[2]][Killername])), PaintList[mesto[2]][DamagePoint], PaintList[mesto[2]][KillsPoint], PaintList[mesto[2]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s4) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[3]][Killername], GiveTabulac(strlen(PaintList[mesto[3]][Killername])), PaintList[mesto[3]][DamagePoint], PaintList[mesto[3]][KillsPoint], PaintList[mesto[3]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s5) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[4]][Killername], GiveTabulac(strlen(PaintList[mesto[4]][Killername])), PaintList[mesto[4]][DamagePoint], PaintList[mesto[4]][KillsPoint], PaintList[mesto[4]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s6) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[5]][Killername], GiveTabulac(strlen(PaintList[mesto[5]][Killername])), PaintList[mesto[5]][DamagePoint], PaintList[mesto[5]][KillsPoint], PaintList[mesto[5]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s7) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[6]][Killername], GiveTabulac(strlen(PaintList[mesto[6]][Killername])), PaintList[mesto[6]][DamagePoint], PaintList[mesto[6]][KillsPoint], PaintList[mesto[6]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s8) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[7]][Killername], GiveTabulac(strlen(PaintList[mesto[7]][Killername])), PaintList[mesto[7]][DamagePoint], PaintList[mesto[7]][KillsPoint], PaintList[mesto[7]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s9) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[8]][Killername], GiveTabulac(strlen(PaintList[mesto[8]][Killername])), PaintList[mesto[8]][DamagePoint], PaintList[mesto[8]][KillsPoint], PaintList[mesto[8]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s10) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[9]][Killername], GiveTabulac(strlen(PaintList[mesto[9]][Killername])), PaintList[mesto[9]][DamagePoint], PaintList[mesto[9]][KillsPoint], PaintList[mesto[9]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s11) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[10]][Killername], GiveTabulac(strlen(PaintList[mesto[10]][Killername])), PaintList[mesto[10]][DamagePoint], PaintList[mesto[10]][KillsPoint], PaintList[mesto[10]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s12) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[11]][Killername], GiveTabulac(strlen(PaintList[mesto[11]][Killername])), PaintList[mesto[11]][DamagePoint], PaintList[mesto[11]][KillsPoint], PaintList[mesto[11]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s13) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[12]][Killername], GiveTabulac(strlen(PaintList[mesto[12]][Killername])), PaintList[mesto[12]][DamagePoint], PaintList[mesto[12]][KillsPoint], PaintList[mesto[12]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s14) %s%s%d\t\t%d\t\t%d\n", globalstr, PaintList[mesto[13]][Killername], GiveTabulac(strlen(PaintList[mesto[13]][Killername])), PaintList[mesto[13]][DamagePoint], PaintList[mesto[13]][KillsPoint], PaintList[mesto[13]][DeathsPoint]);
		format(globalstr, sizeof(globalstr), "%s15) %s%s%d\t\t%d\t\t%d", globalstr, PaintList[mesto[14]][Killername], GiveTabulac(strlen(PaintList[mesto[14]][Killername])), PaintList[mesto[14]][DamagePoint], PaintList[mesto[14]][KillsPoint], PaintList[mesto[14]][DeathsPoint]);


		ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Итоги пейнтболла", globalstr, "Закрыть", "");
		
		globalstr = "";
		return 1;
	}
	if(strcmp(cmd, "/startdebug", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 1338) return 1;
		if(dodebug == false)
		{
		    dodebug = true;
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы включили логирование");
		}
		else
		{
		    dodebug = false;
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Вы отключили логирование");
		}
		return 1;
	}
    if(strcmp(cmd, "/sms", true) == 0)
    {
        if(GetPVarInt(playerid, "Level") < 2) return SendClientMessage(playerid, COLOR_GREY, "SMS доступно для игроков 2 уровня и выше");
        new PlayerNumber = GetPVarInt(playerid,"PhoneNumber");
        if(PlayerNumber == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона");

     	tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sms [номер телефона] [текст]");
	    new SmsNumber = strval(tmp);

	    if(SmsNumber == PlayerNumber || SmsNumber == 911 || SmsNumber < 1) return 1;
	    
	    if(GetPlayerPCash(playerid) < 10) return SendClientMessage(playerid, COLOR_GREY, "Недостаточно денег для отправки SMS");

   		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sms [номер телефона] [текст]");


		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(GetPVarInt(i, "PhoneNumber") != SmsNumber) continue;

            if(GetPVarInt(i, "TogPhone") == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок отключил телефон");
            
		    GetPlayerName(i, sendername, sizeof(sendername));
		    format(string, sizeof(string), "SMS для %s: %s", sendername, result);
		    SendClientMessage(playerid, COLOR_YELLOW, string);

			new name[24];
		    GetPlayerName(playerid, name, sizeof(name));
			format(string, sizeof(string), "SMS от %s: %s", name, result);
		    SendClientMessage(i, COLOR_YELLOW, string);
		    
    		format(string, sizeof(string), "SMS от %s(ID: %d) к %s(ID: %d): %s", name, playerid, sendername, i, result);
			SendPmMessage(COLOR_GREEN, string, playerid, i);

			GameTextForPlayer(playerid, "~r~$-10", 5000, 1);
			GivePlayerPCash(playerid,-10, "sms");
			GiveSBizMoney(2, 10);

  			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
  			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);

		    return 1;
		}
		
		SendClientMessage(playerid, COLOR_GREY, "Нет игрока с таким номером телефона");
		return 1;
    }



    if(strcmp(cmd, "/call", true) == 0)
	{
		if(GetPVarInt(playerid, "Caller") != -1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже звоните");
	    new PlayerNumber = GetPVarInt(playerid,"PhoneNumber");
	    if(PlayerNumber == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона");

	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /call [номер телефона]");

	    new CallNumber = strval(tmp);

	    if(CallNumber == PlayerNumber || CallNumber < 1) return 1;

		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);

		if(CallNumber == 911)
	    {
	    	GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s достал телефон из кармана", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
   			
			SetPlayerAttachedObject(playerid, 6, 18865, 6, 0.100000, 0.000000, 0.000000, 90.000000, 180.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	        return ShowPlayerDialog(playerid, 171, DIALOG_STYLE_INPUT, RGB_SERVER"Укажите преступника",  "{000000}|\t{bbbbbb}Укажите ID или часть имени преступника:\t{000000}|", "Далее", "Отмена");
	    }

		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(GetPVarInt(i, "PhoneNumber") != CallNumber) continue;

			if(GetPVarInt(i, "StartCall") != 0) return SendClientMessage(playerid, COLOR_GREY, "Абонент занят, перезвоните позже");
			if(GetPVarInt(i, "TogPhone") == 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок отключил телефон");

			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 6, 18865, 6, 0.100000, 0.000000, 0.000000, 90.000000, 180.000000, 0.000000, 1.000000, 1.000000, 1.000000);

		    GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s достал телефон из кармана", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			
		    format(string, sizeof(string), "Входящий звонок: %s [Тел: %d] {bbbbbb}(( Взять трубку /p, Сбросить звонок /h ))",sendername, GetPVarInt(playerid, "PhoneNumber"));
		    SendClientMessage(i, COLOR_YELLOW, string);

	        SetPVarInt(playerid, "Caller", i);
	        SetPVarInt(i, "Caller", playerid);
	        
	        
	        return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Нет игрока с таким номером телефона");
	    return 1;
	}

	if(strcmp(cmd, "/p", true) == 0)
	{
	    if(GetPVarInt(playerid,"PhoneNumber") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона");

		new Caller = GetPVarInt(playerid, "Caller");
		if(Caller == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не звонил Вам");

		if(GetPVarInt(playerid, "StartCall") == 1) return SendClientMessage(playerid, COLOR_GREY, "Вы уже говорите");

		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid, 6, 18865, 6, 0.100000, 0.000000, 0.000000, 90.000000, 180.000000, 0.000000, 1.000000, 1.000000, 1.000000);


		SendClientMessage(Caller, COLOR_YELLOW, "Абонент принял звонок");

		SetPVarInt(playerid, "StartCall", 1);
		SetPVarInt(Caller, "StartCall", 1);
		return 1;
	}

	if(strcmp(cmd, "/h", true) == 0)
	{
		if(GetPVarInt(playerid,"PhoneNumber") == 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет телефона");

		new Caller = GetPVarInt(playerid, "Caller");
		if(Caller == -1) return SendClientMessage(playerid, COLOR_GREY, "Никто не звонил Вам");

        SendClientMessage(Caller, COLOR_WHITE, "Абонент завершил звонок");

	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	    SetPlayerSpecialAction(Caller, SPECIAL_ACTION_NONE);
	    
     	RemovePlayerAttachedObject(playerid, 6);
     	RemovePlayerAttachedObject(Caller, 6);
     	
     	
		SetPVarInt(playerid, "Caller", -1);
		SetPVarInt(Caller, "Caller", -1);

		DeletePVar(playerid, "StartCall");
		DeletePVar(Caller, "StartCall");
		return 1;
	}
	if(strcmp(cmd, "/lox", true) == 0)
    {
        if(GetPVarInt(playerid,"AdminLevel") >= 6) dcmd(lox, 3, cmdtext);
		return 1;
	}

	if(strcmp(cmd, "/tp", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 2) return 1;
	    if(AdminTPplayers == false)
	    {
			format(string, sizeof(string), ">> %s[%d]: Телепорт к админу, введите /gotp <<", GetName(playerid), playerid);
		    SendClientMessageToAll(COLOR_YELLOW, string);
		    
		    AdminTPplayers = true;
		    GetPlayerPos(playerid, posxTP[0], posxTP[1], posxTP[2]);
	    }
	    else
	    {
	        AdminTPplayers = false;
  			format(string, sizeof(string), ">> %s[%d]: Телепорт закрыт <<", GetName(playerid), playerid);
		    SendClientMessageToAll(COLOR_YELLOW, string);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/gotp", true) == 0)
	{
	    if(AdminTPplayers == false) return SendClientMessage(playerid, COLOR_GREY, "Телепорт закрыт");
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);
		oSetPlayerPos(playerid, posxTP[0], posxTP[1], posxTP[2]);
		posxTP[1] += 1.2;
		SendClientMessage(playerid, COLOR_WHITE, "Вы телепортировались");
	    return 1;
	}
	if(strcmp(cmd, "/mm", true) == 0 || strcmp(cmd, "/menu", true) == 0 || strcmp(cmd, "/mn", true) == 0)
	{
	    ShowMainMenu(playerid);
		return 1;
	}
	if(strcmp(cmd, "/readpmp", true) == 0 && GetPVarInt(playerid,"AdminLevel") >= 6)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
		    if(GetPVarInt(playerid,"readPmPlayer") == -1)
			{
				return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /readpmp [id игрока/часть имени]");
			}
			else
			{
				SetPVarInt(playerid, "readPmPlayer", -1);
				return SendClientMessage(playerid, COLOR_GRAD2, "Вы больше не читаете ПМ");
			}
		}
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Игрок не найден");
		SetPVarInt(playerid, "readPmPlayer", giveplayerid);

		format(string, sizeof(string), "Вы читаете ПМ игрока %s[%d]", GetName(giveplayerid), giveplayerid);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(strcmp(cmd, "/givedonate", true) == 0 && GetPVarInt(playerid,"AdminLevel") >= 1338)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /givedonate [id игрока/часть имени] [кол-во]");
		giveplayerid = ReturnUser(tmp);
		new gName[24];
		strcat(gName, tmp, sizeof(gName));

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /givedonate [id игрока/часть имени] [кол-во]");
		new money = strval(tmp);
		if(money < 1 || money > 1000) return SendClientMessage(playerid, COLOR_GRAD2, "Кол-во DonateMoney не может быть меньше 1 и больше 1000");
		
		for(new i, d = strlen(gName); i < d; i ++)
		{
		    switch(gName[i])
		    {
		        case 'a'..'z', 'A'..'Z', '_', '.', '[', ']': {}
		        default: return SendClientMessage(playerid, COLOR_GRAD2, "Запрещенные символы в нике");
			}
		}
		if(!IsPlayerConnected(giveplayerid))
		{
		    new query[128];
		    format(query,sizeof(query), "SELECT Name FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", gName);
			mysql_query(query);
			mysql_store_result();
			if(mysql_num_rows())
			{
			    mysql_free_result();
				format(query,sizeof(query), "UPDATE `"UsersTable"` SET `DonateMoney` = `DonateMoney`+%d WHERE `Name` = '%s' LIMIT 1", money,gName);
				mysql_query(query);

				format(string, sizeof(string), "Вы дали %d DonateMoney игроку %s (offline)", money, gName);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else mysql_free_result();
			SendClientMessage(playerid, COLOR_GRAD2, "Игрок не найден");
		}
		else
		{
		    format(string, sizeof(string), "Вы дали %d DonateMoney игроку %s ", money, GetName(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
			
			format(string, sizeof(string), "Администратор %s дал вам %d DonateMoney", GetName(playerid), money);
			SendClientMessage(giveplayerid, COLOR_WHITE, string);
			
			GivePVarInt(giveplayerid, "DonateMoney", money);
			MySQL_UpdateInt(giveplayerid,"DonateMoney");
			return 1;
		}
	}
	if(strcmp(cmd, "/findid", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 4) return SendClientMessage(playerid, COLOR_GRAD2, "Вы не можете использовать эту команду");
	

		tmp = strtok(cmdtext, idx);
		new id = strval(tmp);
		if(id < 1 || id > 9999999) return SendClientMessage(playerid, COLOR_GRAD2, "Укажите ID игрока от 1 до 9999999");

		new str[512];
		format(str, sizeof(str), "SELECT * FROM `"UsersTable"` WHERE `id` = %d LIMIT 1", id);
		mysql_query(str);
		mysql_store_result();
		
	    if(mysql_num_rows() != 0)
	    {
	        new names[24];
			new mails[60];
			new datas[30];
			new lvl;
			
		
	    	mysql_fetch_field("Name", names);
	  		mysql_fetch_field("Mail", mails);
	  		mysql_fetch_field("Level", datas); lvl = strval(datas);
	  		
	  		format(string, sizeof(string), "ID: %d | Имя: %s | Lvl: %d | Mail: %s", id, names, lvl, mails);
	  		SendClientMessage(playerid, COLOR_GREY, string);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "Аккаунт с таким ID не найден");
	    }
	    
	    mysql_free_result();
	
 		return 1;
	}
	if(strcmp(cmd, "/mpanel", true) == 0)
	{
        if(GetPVarInt(playerid,"Team") != 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не медик");
        if(IsAnAmbulance(GetPlayerVehicleID(playerid)) || (IsPlayerInRangeOfPoint(playerid, 50.0, 365.2393,162.0382,1019.9844) && GetPlayerInterior(playerid) == 3))
		{ 
	        ShowPlayerDialog(playerid, 292, DIALOG_STYLE_LIST, RGB_SERVER"Выберите действие", "\
			Залечить раны\n\
			Вылечить от наркозависимости\
			", "Далее", "Отмена");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине МЧС или в больнице");
		}
		return 1;
	}
	if(strcmp(cmd, "/bpanel", true) == 0)
	{
	    if(GetPVarInt(playerid, "Bizz") == 255) return 1;
		ShowBPanel(playerid);
	    return 1;
	}
	if(strcmp(cmd, "/hpanel", true) == 0)
	{
	    if(GetPVarInt(playerid, "House") == -1) return 1;
	    ShowHPanel(playerid);
	    return 1;
	}
	if(strcmp(cmd, "/cleaner", true) == 0)
	{
		if(GetPVarInt(playerid, "OnCleanerJob") != 1) return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только уборщикам");
		if(!IsACleanerCar(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_GREY, "Вам нужна машина для чистки улиц");
	    ShowCleanPlaces(playerid);
	    return 1;
	}
	if(strcmp(cmd, "/buym", true) == 0)
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0,  2108.101074,-2002.671875,13.252698)) return SendClientMessage(playerid, COLOR_GREY, "Вы не на складе");

	    if(GetPVarInt(playerid, "OnDumpJob") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");
	    new dcar = GetDumpCar(GetPlayerVehicleID(playerid));
	    if(dcar == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не в грузовике для развозки металла");

	    new amount;
		new prodprice = 5; // 5$ за 1 продукт

	    tmp = strtok(cmdtext, idx);
	    amount = strval(tmp);
		if(amount < 1 || amount > 400) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /buym [Сколько хотите купить металла(1-400)]");

		if(DumpLoad < amount) return SendClientMessage(playerid, COLOR_GREY, "На складе недостаточно металла");

		if(GetPlayerPCash(playerid) < (prodprice * amount)) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег, стоимость одного килограмма $5");

		if((DumpCar[dcar][dValue] + amount) > 400) return SendClientMessage(playerid, COLOR_GREY, "В грузовик не поместится столько металла");

		DumpCar[dcar][dValue] += amount;
		GivePlayerPCash(playerid, - (amount*prodprice), "buym");

		format(string, sizeof(string), "[Металл]\n%d / 400", DumpCar[dcar][dValue]);
		Update3DTextLabelText(DumpCar[dcar][dText], COLOR_YELLOW, string);

		format(string, sizeof(string), "~r~-$%d", amount*prodprice);
		GameTextForPlayer(playerid, string, 5000, 1);

		SendClientMessage(playerid, COLOR_GREEN, "Вы закупили металл. Доставьте его в любой магазин оружия");
		SendClientMessage(playerid, COLOR_GREEN, "Чтобы продать металл используйте /sellm");
		SendClientMessage(playerid, COLOR_GREEN, "Чтобы просмотреть список магазинов, введите /biznes");

		DumpLoad -= amount;
		format(string, sizeof(string), "Склад свалки:\n %d кг. железа", DumpLoad);
		Update3DTextLabelText(Dump3dText, COLOR_YELLOW, string);

		format(string, sizeof(string), "Склад свалки:\n %d кг. железа\n\nЗакупка металла: /buym\nПродажа: /sellm\nМатериалы: /buymats", DumpLoad);
		Update3DTextLabelText(LoadDump, COLOR_YELLOW, string);
		return 1;
	}
	if(strcmp(cmd, "/sellm", true) == 0)
	{
        if(GetPVarInt(playerid, "OnDumpJob") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не рабочий");

	    new dcar = GetDumpCar(GetPlayerVehicleID(playerid));
	    if(dcar == -1) return SendClientMessage(playerid, COLOR_GREY, "Вы не в грузовике для развозки металла");

		for(new i; i < sizeof(BizzInfo); i++)
		{
		    switch(i)
		    {
		        case 0, 1, 3, 7, 14, 15, 16, 17: {}
				default: continue;
			}
			if(IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
			{
			    SetPVarInt(playerid, "SellToBiz", i);
				format(string, sizeof(string), RGB_WHITE"Бизнес: %s\nЗакупка товара: $%d\nТовара на складе: %d / %d\n\nСколько металла хотите продать?", BizzInfo[i][bDiscription], BizzInfo[i][bPriceProd], BizzInfo[i][bProducts], BizzInfo[i][bMaxProducts]);
				return ShowPlayerDialog(playerid, 235, DIALOG_STYLE_INPUT, RGB_SERVER"Продажа металла", string, "Продать", "Отмена");
			}
		}
	    return SendClientMessage(playerid, COLOR_GREY, "Поблизости нет оружейных магазинов");
	}
	
	if(strcmp(cmd, "/givemats", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
  		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givemats [id/часть ника] [кол-во материалов]");
        giveplayerid = ReturnUser(tmp);

		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givemats [id/часть ника] [кол-во материалов]");
        new mats = strval(tmp);

		if (mats < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете передать менее 1 материала");
		if (mats > GetPVarInt(playerid, "Materials")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько материалов");

		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко от Вас");


		GivePVarInt(playerid, "Materials", -mats);
		GivePVarInt(giveplayerid, "Materials", mats);

		new pName[24];
		new oName[24];
		GetPlayerName(playerid, pName, sizeof(pName));
		GetPlayerName(giveplayerid, oName, sizeof(oName));

		format(string, sizeof(string), "Вы передали %s[%d] %d материалов", oName, giveplayerid, mats);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), "Вы получили %d материалов от %s[%d]", mats, pName, playerid);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);

        format(string, sizeof(string), "%s передал %s материалы", pName, oName);
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}

	if(strcmp(cmd, "/givedrugs", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
  		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givedrugs [id/часть ника] [кол-во наркотиков]");
        giveplayerid = ReturnUser(tmp);

		if (!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givedrugs [id/часть ника] [кол-во наркотиков]");
        new drugs = strval(tmp);

		if (drugs < 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете передать менее 1 гр. наркотиков");
		if (drugs > GetPVarInt(playerid, "Drugs")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков");

		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко от Вас");

		new ammount = GetPVarInt(giveplayerid, "Drugs")+drugs;

		switch(GetPVarInt(giveplayerid, "DrugsSkill"))
		{
			case 0..50:
			{
				if(ammount > 6) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок может иметь при себе не более 6 грамм");
			}
			case 51..100:
			{
				if(ammount > 12) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок может иметь при себе не более 12 грамм");
			}
			case 101..200:
			{
				if(ammount > 24) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок может иметь при себе не более 24 грамм");
			}
			case 201..400:
			{
				if(ammount > 64) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок может иметь при себе не более 64 грамм");
			}
			default:
			{
				if(ammount > 99) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок может иметь при себе не более 99 грамм");
			}
		}

		GivePVarInt(playerid, "Drugs", -drugs);
		GivePVarInt(giveplayerid, "Drugs", drugs);

		new pName[24];
		new oName[24];
		GetPlayerName(playerid, pName, sizeof(pName));
		GetPlayerName(giveplayerid, oName, sizeof(oName));

		format(string, sizeof(string), "Вы передали %s[%d] %d гр. наркотиков", oName, giveplayerid, drugs);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), "Вы получили %d гр. наркотиков от %s[%d]", drugs, pName, playerid);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);

        format(string, sizeof(string), "%s подбросил %s наркотики", pName, oName);
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
	if(strcmp(cmd, "/capture", true) == 0)
	{
	    if(!ThisGangCanWar(playerid)) return 1;
	    if(GetPVarInt(playerid, "Rank") < 10) return SendClientMessage(playerid, COLOR_GREY, "Захват доступен с 10 ранга");

		new time = GangCapture[ReturnFractionID(playerid)]-gettime();
		if(time > 0)
		{
		    format(string, sizeof(string), "Вы сможете начать захват только через %d сек.", time);
		    SendClientMessage(playerid, COLOR_GREY, string);
		    return 1;
		}
		new zid = PlayerInGangZone(playerid);
		if(zid == -1 || GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не на ганг зоне");

		new Team = GetPVarInt(playerid, "Team");
		
		if(ZoneInfo[zid][zOwner] == Team) return SendClientMessage(playerid, COLOR_GREY, "Территория уже принадлежит вам");
		if(ZoneInfo[zid][zAttacked] != 0) return SendClientMessage(playerid, COLOR_GREY, "Территория уже атакована");
		if(ZoneInfo[zid][zOwner] == 99) return SendClientMessage(playerid, COLOR_GREY, "Эту территорию нельзя захватить");
		if(ZoneInfo[zid][zType] == 1 && IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете начать захват, это территория мафии");
		if(ZoneInfo[zid][zType] == 0 && IsAMafia(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете начать захват, это территория банды");
		
		new attacked_count;
		
		for(new i; i < sizeof(ZoneInfo); i++)
		{
		    if(ZoneInfo[i][zOwner] == ZoneInfo[zid][zOwner])
		    {
		        if(ZoneInfo[i][zAttacked] != 0)
		        {
		            attacked_count++;
				}
			}
		}
		if(attacked_count >= 2) return SendClientMessage(playerid, COLOR_GREY, "На эту банду/мафию уже кто-то напал");
		
		new totalplayers;
		new helpersplayer;
		new Float:pos[3];
		GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    
		    if(GetPVarInt(i, "Team") == ZoneInfo[zid][zOwner]) totalplayers++;
			
			if(IsPlayerInRangeOfPoint(i, 30.0, pos[0], pos[1], pos[2]) && GetPVarInt(i, "Team") == Team && GetPlayerInterior(i) == 0 && GetPlayerVirtualWorld(i) == 0) helpersplayer++;
		}
		
		if(totalplayers < 10)
		{
		    format(string, sizeof(string), "Эту территорию некому защищать, игроков: %d / 10", totalplayers);
		    SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}
		if(helpersplayer < 11)
		{
		    format(string, sizeof(string), "Для нападения Вам необходимо хотя бы 10 соучастников: %d / 10", helpersplayer-1);
		    SendClientMessage(playerid, COLOR_GREY, string);
			return 1;
		}

		StartAttack(ZoneInfo[zid][zOwner], GetPVarInt(playerid,"Team"), PlayerInGangZone(playerid), playerid, 1, -1);
	
	    return 1;
	}


	if(strcmp(cmd, "/msc", true) == 0 && GetPVarInt(playerid,"AdminLevel") > 1337)
	{
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "/msc [id]");
	    new msc = strval(tmp);
	
	
	    PlayerPlaySound(playerid, msc, 0.0, 0.0, 0.0);
	    
	    format(string, sizeof(string), "Music ID: %d", msc);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    return 1;
	}
	if(strcmp(cmd, "/cput", true) == 0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не законник");
		new car = GetPlayerVehicleID(playerid);
		if (!IsACopCar(car)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель");

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /cput [id/часть ника]");
		giveplayerid = ReturnUser(tmp);

		if (!IsPlayerConnected(giveplayerid)) 					return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (IsACop(giveplayerid)) 								return SendClientMessage(playerid, COLOR_GREY, "Нельзя посадить законника");
		if (WantedLevel[giveplayerid] < 0) 						return SendClientMessage(playerid, COLOR_GREY, "Игрока не в розыске");
		if (GetPVarInt(giveplayerid, "Cuff_Player") != 1) 		return SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках");
		if (!ProxDetectorS(3.0, playerid, giveplayerid)) 		return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		if (GetPlayerState(giveplayerid) != PLAYER_STATE_ONFOOT)return SendClientMessage(playerid, COLOR_GREY, "Игрок должен стоять рядом с машиной");
		if (GetPVarInt(giveplayerid, "Level") < 3) 				return SendClientMessage(playerid, COLOR_GREY, "Нельзя посадить новичка");

		new Car_Seat[4];

		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if (!IsPlayerConnected(i)) continue;
		    if (GetPlayerVehicleID(i) != car) continue;
		    switch(GetPlayerVehicleSeat(i)) // На всякий случай, вдруг вернет место 65535 и тд...
		    {
		        case 0: Car_Seat[0] = 1;
		        case 1: Car_Seat[1] = 1;
		        case 2: Car_Seat[2] = 1;
		        case 3: Car_Seat[3] = 1;
			}
		}

		for(new i; i < sizeof(Car_Seat); i++)
		{
		    if(Car_Seat[i] == 0)
		    {
		        if(Cuffed_Timer[giveplayerid] != 0)
				{
					KillTimer(Cuffed_Timer[giveplayerid]);
					Cuffed_Timer[giveplayerid] = 0;
				}
				SetPVarInt(giveplayerid, "Cuff_Player", 2);
		        SetPVarInt(giveplayerid, "InCar",  car);
		        PutPlayerInVehicleEx(giveplayerid, car, i);
          		RemovePlayerAttachedObject(giveplayerid, 3);
				SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
		        format(string, sizeof(string), "Вы посадили "RGB_GREEN"%s"RGB_WHITE" в машину, отвезите его в участок", GetName(giveplayerid));
				return SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		return SendClientMessage(playerid, COLOR_GREY, "Нет свободных мест в машине");
	}
	if(strcmp(cmd, "/unput", true) == 0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не законник");
		new car = GetPlayerVehicleID(playerid);
		if (!IsACopCar(car)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейской машине");
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель");

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /unput [id/часть ника]");
		giveplayerid = ReturnUser(tmp);

		if (!IsPlayerConnected(giveplayerid)) 					return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (IsACop(giveplayerid)) 								return SendClientMessage(playerid, COLOR_GREY, "Нельзя посадить законника");
		if (GetPVarInt(giveplayerid, "Cuff_Player") != 2) 		return SendClientMessage(playerid, COLOR_GREY, "Игрок не в наручниках");
		if (!ProxDetectorS(3.0, playerid, giveplayerid)) 		return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко");
		if (GetPlayerVehicleID(giveplayerid) != car)            return SendClientMessage(playerid, COLOR_GREY, "Игрок не в Вашей машине");
	
		DeletePVar(giveplayerid, "Cuff_Player");
		TogglePlayerControllable(giveplayerid, 1);
		RemovePlayerAttachedObject(giveplayerid, 3);
		SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
		
		if (!IsPlayerInRangeOfPoint(playerid, 6.0, 1584.383911,-1634.978149,13.382812))
		{
		    RemovePlayerFromVehicle(giveplayerid);
		    return 1;
		}
		
		new jtime;
		new jmoney;
		
		switch(WantedLevel[giveplayerid])
		{
	  		case 0:
			{
				oSetPlayerPos(giveplayerid,246.623672,67.595924,1003.640625);
				SetPlayerFacingAngle(giveplayerid, 180.732223);
				SetCameraBehindPlayer(giveplayerid);
				GameTextForPlayer(playerid, "~g~$0", 3000, 1);
				return 1;
			}
			case 1..3:
			{
	  			jtime = 5;
			  	jmoney = 500;
			}
			case 4..6:
			{
	  			jtime = 15;
	  			jmoney = 1500;
			}
			case 7..9:
			{
	  			jtime = 35;
	  			jmoney = 2500;
			}
			case 10:
			{
	  			jtime = 45;
	  			jmoney = 3500;
			}
		}

		if(GetPlayerPCash(giveplayerid) >= jmoney)
		{
			GivePlayerPCash(giveplayerid, -jmoney, "jmoney");
			GivePlayerPCash(playerid, jmoney, "jmoney");

			format(string, sizeof(string), "~g~+$%d", jmoney);
			GameTextForPlayer(playerid, string, 3000, 1);

			format(string, sizeof(string), "~r~-$%d", jmoney);
			GameTextForPlayer(giveplayerid, string, 3000, 1);
		}
		else
		{
			GameTextForPlayer(playerid, "~g~$0", 3000, 1);
			jmoney = 0;
		}
		
		GiveAchievement(playerid, 20, 1);

		ResetPlayerWeaponsUAC(giveplayerid);
		SetPVarInt(giveplayerid,"Jailed", 1);
		SetPVarInt(giveplayerid,"JailTime", jtime*60);
		SetPlayerInterior(giveplayerid, 6);
		oSetPlayerPos(giveplayerid, 264.6288,77.5742,1001.0391);
		Pobegtime[giveplayerid] = 1;

		SetPlayerWantedLevel(giveplayerid, 0);
		WantedLevel[giveplayerid] = 0;
		WantedPoints[giveplayerid] = 0;
		
		format(string, sizeof(string), "Вы были заключены в камеру на "RGB_BLUE"%d минут"RGB_WHITE" и заплатили штраф "RGB_BLUE"$%d", jtime, jmoney);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd,"/portable",true)==0)
	{
	    if(GetPVarInt(playerid,"Team") != 8) return SendClientMessage(playerid, COLOR_GREY, "Вы не хитман");
	    ShowHitmansPanel(playerid, 0);
		return 1;
	}
	if(strcmp(cmd, "/endquest", true) == 0)
	{
	    if(GetPVarInt(playerid, "On_Quest") != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы сейчас не выполняете квестов");
	
	    ShowPlayerDialog(playerid, 280, DIALOG_STYLE_MSGBOX, RGB_SERVER"Внимание!", RGB_WHITE"\
		Если Вы отмените текущий квест, то никогда не сможете\n\
		вернуться к нему, текущий квест будет считаться невыполненным!", "Продолжить", "Закрыть");
	    return 1;
	}
	if(strcmp(cmd, "/biznes", true) == 0)
	{
	    new car = GetPlayerVehicleID(playerid);
		if(GetPVarInt(playerid, "OnFacJob") != 2 && GetPVarInt(playerid, "OnDumpJob") != 2 && !IsFuelTruck(car)) return 1;
		return ShowPlayerDialog(playerid, 281, DIALOG_STYLE_LIST, RGB_SERVER"Тип бизнеса", "Магазин\nКомпания", "Далее", "Отмена");
	}
	if(strcmp(cmd, "/sstats", true) == 0)
	{
	    if(GetPVarInt(playerid, "AdminLevel") < 1) return 1;
	    globalstr = "";
		new Players;
		new NPCs;
		new primonline;

		new FactionsOnline[19];
		new FactionLeaders[19];
		for(new i; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i)) continue;
			if(IsPlayerNPC(i)) NPCs++;
			else Players++;
			
			FactionsOnline[GetPVarInt(i, "Team")]++;
			FactionLeaders[GetPVarInt(i, "Leader")]++;
		}

		new tempvar;
		new temponline;
		for(new i; i < sizeof(HoursOnline); i++)
		{
		    if(HoursOnline[i] != 0)
			{
				tempvar++;
				temponline += HoursOnline[i];
			}
		}

		if(tempvar == 0)
		{
			primonline = 0;
		}
		else
		{
		    primonline = temponline/tempvar;
		}

		format(globalstr, sizeof(globalstr), RGB_WHITE"Онлайн игроков: \t"RGB_SERVER"%d\n", Players);
		format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Онлайн ботов: \t"RGB_SERVER"%d\n\n", globalstr, NPCs);
		format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Средний онлайн за сутки: \t"RGB_SERVER"%d\n\n", globalstr, primonline);


		format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Статистика онлайна по часам:\n", globalstr);

		format(globalstr, sizeof(globalstr), "%s"RGB_SERVER"00:30 - %d | 01:30 - %d | 02:30 - %d | 03:30 - %d | 04:30 - %d | 05:30 - %d\n", globalstr, HoursOnline[0], HoursOnline[1], HoursOnline[2], HoursOnline[3], HoursOnline[4], HoursOnline[5]);
		format(globalstr, sizeof(globalstr), "%s06:30 - %d | 07:30 - %d | 08:30 - %d | 09:30 - %d | 10:30 - %d | 11:30 - %d\n", globalstr, HoursOnline[6], HoursOnline[7], HoursOnline[8], HoursOnline[9], HoursOnline[10], HoursOnline[11]);
		format(globalstr, sizeof(globalstr), "%s12:30 - %d | 13:30 - %d | 14:30 - %d | 15:30 - %d | 16:30 - %d | 17:30 - %d\n", globalstr, HoursOnline[12], HoursOnline[13], HoursOnline[14], HoursOnline[15], HoursOnline[16], HoursOnline[17]);
		format(globalstr, sizeof(globalstr), "%s18:30 - %d | 19:30 - %d | 20:30 - %d | 21:30 - %d | 22:30 - %d | 23:30 - %d\n\n", globalstr, HoursOnline[18], HoursOnline[19], HoursOnline[20], HoursOnline[21], HoursOnline[22], HoursOnline[23]);


	    format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Посетителей за день: \t"RGB_SERVER"%d\n", globalstr, VisitorsDay);
	    format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Зарегистрировались: \t"RGB_SERVER"%d\n", globalstr, RegDayUsers);
	    format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Продолжили игру: \t\t"RGB_SERVER"%d\n\n", globalstr, GetLicens);

		if(dodebug) format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Debug режим: \t\t"RGB_SERVER"ON\n\n", globalstr);
		else format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Debug режим: \t\t"RGB_SERVER"OFF\n\n", globalstr);
		
		format(globalstr, sizeof(globalstr), "%s"RGB_WHITE"Онлайн организаций (Название: [Состав] / [Лидеров]):\n", globalstr);
		
		format(globalstr, sizeof(globalstr), "%s"RGB_SERVER"Полиция: \t%d / %d\n", globalstr, FactionsOnline[1], FactionLeaders[1]);
		format(globalstr, sizeof(globalstr), "%sФБР: \t\t%d / %d\n", globalstr, FactionsOnline[2], FactionLeaders[2]);
		format(globalstr, sizeof(globalstr), "%sАрмия: \t%d / %d\n", globalstr, FactionsOnline[3], FactionLeaders[3]);
		format(globalstr, sizeof(globalstr), "%sМЧС: \t\t%d / %d\n", globalstr, FactionsOnline[4], FactionLeaders[4]);
		format(globalstr, sizeof(globalstr), "%sLCN: \t\t%d / %d\n", globalstr, FactionsOnline[5], FactionLeaders[5]);
		format(globalstr, sizeof(globalstr), "%sYakuza: \t%d / %d\n", globalstr, FactionsOnline[6], FactionLeaders[6]);
		format(globalstr, sizeof(globalstr), "%sМэрия: \t%d / %d\n", globalstr, FactionsOnline[7], FactionLeaders[7]);
		format(globalstr, sizeof(globalstr), "%sХитманы: \t%d / %d\n", globalstr, FactionsOnline[8], FactionLeaders[8]);
		format(globalstr, sizeof(globalstr), "%sРепортеры: \t%d / %d\n", globalstr, FactionsOnline[9], FactionLeaders[9]);
		format(globalstr, sizeof(globalstr), "%sБайкеры: \t%d / %d\n", globalstr, FactionsOnline[10], FactionLeaders[10]);
		format(globalstr, sizeof(globalstr), "%sЛицензиары: \t%d / %d\n", globalstr, FactionsOnline[11], FactionLeaders[11]);
		format(globalstr, sizeof(globalstr), "%sRus Mafia: \t%d / %d\n", globalstr, FactionsOnline[12], FactionLeaders[12]);
		format(globalstr, sizeof(globalstr), "%sBallas: \t\t%d / %d\n", globalstr, FactionsOnline[13], FactionLeaders[13]);
		format(globalstr, sizeof(globalstr), "%sGrove: \t\t%d / %d\n", globalstr, FactionsOnline[14], FactionLeaders[14]);
		format(globalstr, sizeof(globalstr), "%sVagos: \t%d / %d\n", globalstr, FactionsOnline[15], FactionLeaders[15]);
		format(globalstr, sizeof(globalstr), "%sCoronos: \t%d / %d\n", globalstr, FactionsOnline[16], FactionLeaders[16]);
		format(globalstr, sizeof(globalstr), "%sRifa: \t\t%d / %d\n", globalstr, FactionsOnline[17], FactionLeaders[17]);
		format(globalstr, sizeof(globalstr), "%sКолхоз: \t%d / %d\n", globalstr, FactionsOnline[18], FactionLeaders[18]);

		format(globalstr, sizeof(globalstr), "%s\tГражданских: %d\n", globalstr, FactionsOnline[0]);


		new d, m, y;
		getdate(y, m, d);
		new str[64];
		format(str, sizeof(str), RGB_SERVER"Статистика на: %d/%d/%d", d, m, y);
	    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, str, globalstr, "Ok", "");
	    globalstr = "";
		return 1;
	}
	if(strcmp(cmd, "/chmoney", true) == 0)
	{
	    new st[512];
	    format(st, sizeof(st), "Налоги с бизнесов: $%d\n", From_Biz_Nalog);
	    format(st, sizeof(st), "%sКупля/продажа/обмен: $%d\n", st, From_Chanhe_Nalog);
	    format(st, sizeof(st), "%sПокупка скинов: $%d\n", st, From_Skins_Nalog);
	    format(st, sizeof(st), "%sНалог мэрии: $%d\n", st, From_Tax_Nalog);
	    format(st, sizeof(st), "%sС банкоматов: $%d\n\n", st, From_Tax_Bankomat);
	    format(st, sizeof(st), "%s\tИтого налогов: $%d\n\n", st, From_Biz_Nalog+From_Biz_Nalog+From_Skins_Nalog+From_Tax_Nalog+From_Tax_Bankomat);
	    format(st, sizeof(st), "%s\tОстаток: $%d\n\n", st, From_Biz_Nalog+From_Biz_Nalog+From_Skins_Nalog+From_Tax_Nalog+From_Tax_Bankomat);
	    format(st, sizeof(st), "%sСколько выдали PayDays: $%d\n", st, moneypaydays);
	    format(st, sizeof(st), "%sЗаплатили за зоны: $%d\n", st, To_Zones_money);
	    
	    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Экономика сервера", st, "Ok", "");
	    return 1;
	}
	if(strcmp(cmd, "/minfo", true) == 0)
	{
		switch(GetPVarInt(playerid, "Leader"))
		{
			case 5, 12, 6: {}
			default: return SendClientMessage(playerid, COLOR_GREY, "Команда только для лидеров мафий");
	    }
	    globalstr = "";
	    new bcount;
	    
	    for(new i; i < sizeof(BizzInfo); i++)
	    {
	        if(BizzInfo[i][bExtortion] == GetPVarInt(playerid, "Leader"))
			{
				format(globalstr, sizeof(globalstr), "%s%d) %s [Доля: %d%%]\n", globalstr, bcount+1, BizzInfo[i][bDiscription], BizzInfo[i][bProcent]);
   				bcount ++;
			}
	    }
	    for(new i; i < sizeof(SBizzInfo); i++)
	    {
			if(SBizzInfo[i][sbExtortion] == GetPVarInt(playerid, "Leader"))
			{
				format(globalstr, sizeof(globalstr), "%s%d) %s [Доля: %d%%]\n", globalstr, bcount+1, SBizzInfo[i][sbDiscription], SBizzInfo[i][sbProcent]);
    			bcount ++;
    		}
	    }
	 	if(bcount == 0) globalstr = "Нет бизнесов под контролем";
	    
	    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, RGB_SERVER"Контроль над бизнесами", globalstr, "Ok", "");
	    
	    globalstr = "";
	    
	    return 1;
	}
	if(strcmp(cmd, "/delmail", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 7) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /delmail [ник]");
		giveplayerid = ReturnUser(tmp);

		if(IsContainsBadSymbol(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Запрещенные символы");

		new delmail[24];
		strmid(delmail, tmp, 0, strlen(tmp), 255);
	
	    if(!IsPlayerConnected(giveplayerid))
	    {
	        if(!MySQL_Exist_Name(delmail)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети и такой аккаунт не найден");
	    
			new query[512];
			new admlevel = 0;

		    format(query, sizeof(query), "SELECT * FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", delmail);
		    mysql_query(query);
		    mysql_store_result();
		    if(mysql_num_rows())
		    {
		        new st[30];
		        mysql_fetch_field("AdminLevel", st);
				admlevel = strval(st);
		    }
		    mysql_free_result();

		    if(admlevel >= 1) return SendClientMessage(playerid, COLOR_GREY, "Нельзя снять маил у админа");

			format(query, sizeof(query), "UPDATE `"UsersTable"` SET `Mail` = 'no' WHERE `Name` = '%s' LIMIT 1", delmail);
			mysql_query(query);

			format( string, sizeof(string), "[OFFLINE]: %s удалил e-mail у %s", GetName(playerid), delmail);
			ABroadCast(string);
	    }
	    else 
	    {
	        SetPVarString(giveplayerid, "Mail", "no");
	        MySQL_UpdateString(giveplayerid, "Mail");
	        
  			format( string, sizeof(string), "AdmCmd: %s удалил e-mail у %s", GetName(playerid), GetName(giveplayerid));
			ABroadCast(string);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 2) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /ban [id игрока/часть имени] [часы] [причина]");
		giveplayerid = ReturnUser(tmp);

		new banned[24];
		strmid(banned, tmp, 0, strlen(tmp), 255);

		tmp = strtok(cmdtext, idx);
		new hours = strval(tmp);
		if(hours < 1 || hours > 999) return SendClientMessage(playerid, COLOR_GRAD2, "Количество часов может быть от 1 до 999");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(IsContainsBadSymbol(result)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED">> " RGB_GREY"Причина содержит запрещенные символы, используйте только буквы русского или английского алфавита !");
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /ban [id игрока/часть имени] [часы] [причина]");

		if(!IsPlayerConnected(giveplayerid))
		{
			if(!MySQL_Exist_Name(banned)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в сети и такой аккаунт не найден");

			new query[512];
			new admlevel = 0;

		    format(query,sizeof(query), "SELECT * FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", banned);
		    mysql_query(query);
		    mysql_store_result();
		    if(mysql_num_rows())
		    {
		        new st[30];
		        mysql_fetch_field("AdminLevel", st);
				admlevel = strval(st);
		    }
		    mysql_free_result();
		    
		    if(admlevel >= GetPVarInt(playerid, "AdminLevel")) return SendClientMessage(playerid, COLOR_GREY, "Нельзя забанить этого админа");

		    format(query,sizeof(query), "SELECT * FROM `"BanTable"` WHERE `Name` = '%s' LIMIT 1", banned);
		    mysql_query(query);
		    mysql_store_result();
		    if(mysql_num_rows())
		    {
		        mysql_free_result();
				return SendClientMessage(playerid, COLOR_GREY, "Игрок уже забанен");
		    }
            mysql_free_result();


			new name[24];
			GetPlayerName(playerid, name, 24);
		 	format(query,sizeof(query), "INSERT INTO `"BanTable"` (`Name`, `BanDate`, `Duration`, `FinishTime`, `AdminName`, `Reason`, `Ip`) VALUES ('%s', NOW(), %d, NOW() + INTERVAL %d HOUR, '%s', '%s', '127.0.0.1')", banned, hours, hours, name, result);
			mysql_query(query);

			format( string, sizeof(string), "[OFFLINE]: %s забанен админом %s на %d часов, причина: %s", banned, name, hours, result);
			ABroadCast(string);

            AntiAdminFlood(playerid);
			return 1;
		}

        AntiAdminFlood(playerid);
		MySQL_Ban(giveplayerid, playerid, hours, result, 1);
		return 1;
	}
	if(strcmp(cmd, "/delatm", true) == 0) // Переделать команду
	{
	    if(GetPVarInt(playerid, "AdminLevel") < 1) return 1;
		tmp = strtok(cmdtext, idx);

		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /delatm [1-15]");
		if(strlen(tmp) < 1 || strlen(tmp) > 15) return SendClientMessage(playerid,0xFF0000FF,"Используйте: /delatm [1-15]");

		strmid( AdvInfo[strval(tmp) - 1 ][Textad], "Свободное место для объявления", 0, strlen("Свободное место для объявления"), 255);
		strmid( AdvInfo[strval(tmp) - 1 ][Owner], "none", 0, strlen("none"), 255);

		return SendClientMessage(playerid, COLOR_WHITE, "Удалено");
	}
	if(strcmp(cmd, "/sban", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 2) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /ban [id игрока/часть имени] [часы] [причина]");
		new days;
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD2, " Игрок не найден !");
		tmp = strtok(cmdtext, idx);
		days = strval(tmp);
		if(days < 1 || days > 999) return SendClientMessage(playerid, COLOR_GRAD2, " Количество часов может быть от 1 до 999 !");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(IsContainsBadSymbol(result)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED">> " RGB_GREY"Причина содержит запрещенные символы, используйте только буквы русского или английского алфавита !");
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /ban [id игрока/часть имени] [часы] [причина]");
		MySQL_Ban(giveplayerid,playerid,days,result,2);
		AntiAdminFlood(playerid);
		return 1;
	}

	if (strcmp(cmd, "/admins", true) == 0)
	{
        if(GetPVarInt(playerid,"AdminLevel") < 1) return 1;
		SendClientMessage(playerid, COLOR_YELLOW, "|_____Админы онлайн_____|");
		new alevel;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    alevel = GetPVarInt(i,"AdminLevel");
			    if(alevel > 0)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					if(AFKText[i] < 4) format(string, 256, "Админ [%d] - %s[%d]",alevel, sendername, i);
					else format(string, 256, "Админ [%d] - %s[%d] - AFK [%d сек.]",alevel, sendername, i, AFKText[i]-4);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/kickall", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 7) return 1;
		KickAll(0);
		return 1;
	}
	if(strcmp(cmd, "/readpm", true) == 0 && GetPVarInt(playerid,"AdminLevel") >= 6)
	{
		if (!ReadPm[playerid])
		{
			ReadPm[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, " Вы читаете ЛС");
		}
		else if (ReadPm[playerid])
		{
			(ReadPm[playerid] = 0);
			SendClientMessage(playerid, COLOR_GRAD2, " Вы больше не читаете ЛС");
		}
		return 1;
	}
	if(strcmp(cmd, "/respawnallcars", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 7) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		new bool:unwanted[MAX_VEHICLES];
		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if(IsPlayerInAnyVehicle(i))
		    {
		        unwanted[GetPlayerVehicleID(i)] = true;
			}
		}
		for(new c = 1, model = 0; c < MAX_VEHICLES; c++)
		{
			if(!unwanted[c])
			{
			    model = GetVehicleModel(c);
			    if(model > 400 && model <  611)
			    {
					if(!IsForSaleCar[c])
					{
						SetVehicleToRespawn(c);
					}
				}
			}
		}
		format(string, sizeof(string), "Crime Streets RPG: Все автомобили были зареспавнены");
		SendClientMessageToAll(COLOR_INFO, string);
		return 1;
	}
	if(strcmp(cmd, "/res", true) == 0)
	{
		if (GetPVarInt(playerid,"AdminLevel") < 4) return 1;
		new bool:unwanted[MAX_VEHICLES];
		new Float:posx, Float:posy, Float:posz;
		for(new player=0; player<MAX_PLAYERS; player++)
		{
			if(IsPlayerInAnyVehicle(player)) unwanted[GetPlayerVehicleID(player)]=true;
		}
		for(new car = 1; car < MAX_VEHICLES; car++)
		{
			if(!unwanted[car])
			{
			    GetVehiclePos(car, posx, posy, posz);
			    if(IsPlayerInRangeOfPoint(playerid,50.0,posx, posy, posz)) SetVehicleToRespawn(car);
			 }
		}
		format(string, sizeof(string), "Все автомобили в радиусе 50 метров зареспавнены");
		SendClientMessage(playerid, COLOR_RED,string);
		return 1;
	}
	if(strcmp(cmd, "/adivorce", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 4) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) SendClientMessage(playerid, COLOR_GRAD2, " Используйте: /adivorce [id игрока/часть имени]");
		new playa;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		
		if(!IsPlayerConnected(playa)) return 1;
		
		ClearMarriage(playa);
		MySQL_UpdateInt(playa, "Married");
		MySQL_UpdateString(playa, "MarriedTo");
		
		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		
		format(string, 256, " AdmCmd: администратор %s развел игрока %s с его женой/мужем ", sendername,giveplayer);
		ABroadCast(string);
		
		SendClientMessage(playa, COLOR_GRAD2, "Администратор развел Вас с вашей женой/мужем");
		return 1;
	}

//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/freeze", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 2) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /freeze [id игрока/часть имени]");
		new playa;
		playa = ReturnUser(tmp);
		if(GetPVarInt(playerid,"AdminLevel") < GetPVarInt(playa,"AdminLevel")) return SendClientMessage(playerid, COLOR_GRAD2, "Админ не может быть заморожен !");
		if(!IsPlayerConnected(playa)) return 1;
		TogglePlayerControllable(playa, 0);
		SendClientMessage(playerid, COLOR_GRAD1, "Игрок заморожен");
		return 1;
	}
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 2) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Используйте: /unfreeze [id игрока/часть имени]");
		new playa;
		playa = ReturnUser(tmp);
		if(!IsPlayerConnected(playa)) return 1;
		TogglePlayerControllable(playa, 1);
		SendClientMessage(playerid, COLOR_GRAD1, "Игрок разморожен");
		return 1;
	}
	if(strcmp(cmd, "/gmx", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 7) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
		GameModeExit();
		return 1;
	}
	if(strcmp(cmd, "/passwordon", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 7) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /passwordon [пароль]");
        new passw = strval(tmp);
        if(passw < 1 || passw > 99999999) return SendClientMessage(playerid, COLOR_GREY, "   Пароль может быть от 1 до 99999999 !");
        format(string, sizeof(string), "Сервер поставлен на пароль (%d)", passw);
		SendClientMessage(playerid, COLOR_YELLOW, string);
        Password = passw;
        format(string, sizeof(string), "password %d", passw);
        SendRconCommand(string);
		SaveOther();
		return 1;
	}
	if(strcmp(cmd, "/passwordoff", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 7) return SendClientMessage(playerid, COLOR_GRAD2, " Вы не можете использовать эту команду!");
        SendClientMessage(playerid, COLOR_YELLOW, "Пароль убран");
        Password = 0;
		SaveOther();
		return 1;
	}
	if(strcmp(cmd, "/help", true) == 0)
	{
		ShowHelpDialogp(playerid);
	    return 1;
	}

	if(strcmp(cmd, "/jobhelp", true) == 0)
	{
		new str[1000];

		switch(GetPVarInt(playerid, "Job"))
		{
		    case 1: // Детектив
		    {
		        strcat(str, RGB_WHITE"Ваша работа - Детектив. Она заключается в том, чтобы искать определенных\n");
		        strcat(str, "людей на карте. Вы можете работать как для себя так и под заказ.\n\n");

				strcat(str, "Чтобы найти игрока, введите команду /find [id / часть ника], после чего на карте\n");
				strcat(str, "появится игрок, которого Вы ищите. Но будьте внимательны - метка этого игрока\n");
				strcat(str, "пропадет с Вашего радара через несколько секунд. Чем выше Ваш скилл детектива,\n");
				strcat(str, "тем дольше метка остаётся на радаре, а следовательно легче запомнить место, в\n");
				strcat(str, "котором находится этот игрок.\n\n");

				strcat(str, "Чтобы прокачать скилл детектива, постоянно ищите людей, чем чаще Вы будете это\n");
				strcat(str, "делать, тем быстрее возрастет Ваш скилл.");
	    		ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Детектив", str, "Готово", "");
		    }
		    case 2: // Адвокат
		    {
		        strcat(str, RGB_WHITE"Ваша работа - Адвокат. Она заключается в том, чтобы освобождать\n");
				strcat(str, "людей из тюрьмы. Но для этого потребуется ордер, достать его можно у любого законника.\n");
				strcat(str, "По достижению 5 склла адвоката, выпускать людей из-за решетки Вы сможете не имея ордера.\n\n");

				strcat(str, "Чтобы освободить заключенного, пройдите к камерам, после чего введите команду /free [id] [сумма].\n");
				strcat(str, "Чем больше заключенных Вы освободите, тем выше Ваш скилл. После достижения 5 скилла,\n");
				strcat(str, "Вы сможете освобождать заключенных в любое время, не имея ордера на руках.\n\n");
				strcat(str, "Просмотреть список заключенных можно командой /jailed ");
	    		ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Адвокат", str, "Готово", "");
		    }
		    case 3: // Проститутка
			{
		        strcat(str, RGB_WHITE"Ваша работа - Проститутка. Смысл данной профессии заключается в том, чтобы ублажать клиентов,\n");
				strcat(str, "тем самым пополняя им здоровье. Но в то же время существует вероятность заразить их какой-либо\n");
				strcat(str, "болезнью.\n\n");

				strcat(str, "Чем выше скилл данной профессии прокачан у Вашего персонажа, тем больше здоровье будет поплняться\n");
				strcat(str, "у клиента. Для прокачки скилла обслужите как можно больше клиентов.\n\n");

				strcat(str, "Команда, доступная для данной работы: /sex [id / часть ника].");
	    		ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Проститутка", str, "Готово", "");
			}
		    case 4: // Наркодиллер
		    {
				strcat(str, RGB_WHITE"Ваша работа - Наркодиллер. Смысл работы заключается в закупке и продаже наркотиков.\n\n");

				strcat(str, "Для закупки наркотиков, Вам необходимо посетить притон, в котором Вы сможете закупить\n");
				strcat(str, "необходимое количество товара. Чем выше Ваш скилл в данной профессии, тем больше наркотиков\n");
				strcat(str, "вы сможете закупить за один раз. Чтобы прокачать скилл, покупайте и продавайте наркотики.\n\n");

				strcat(str, "Для закупки наркотиков посетите притон и введите там команду /get drugs. Для того, чтобы\n");
				strcat(str, "предложить кому-либо наркотики, введите команду /selldrugs [id / часть ника] [кол-во] [цена].");
		        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Наркодиллер", str, "Готово", "");

		    }
			case 7: // Механик
		    {
				strcat(str, RGB_WHITE"Будучи механиком Вы можете заправлять и ремонтировать автомобили другим игрокам,\n");
				strcat(str, "если, например, поблизости отсутствуют заправки, Pay-n-Spray.\n\n");

				strcat(str, "Чтобы предложить починку другому игроку, введите команду /repair [id] [цена],\n");
				strcat(str, "для того, чтобы предложить заправку автомобиля, введите /refill [id] [цена].\n\n");

				strcat(str, "Чем выше Ваш скилл, тем больше бензина заправлять за раз Вы сможете, для прокачки\n");
				strcat(str, "скилла ремонтируйте и заправляйте автомобили игрокам.");
		        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Механик", str, "Готово", "");
		    }
			case 9: // Гандиллер
			{
			    strcat(str, RGB_WHITE"Гандиллер может продавать оружие другим игрокам, для этого нужно закупить\n");
				strcat(str, "материалы, после чего переработать их в готовое оружие.\n\n");

				strcat(str, "Закупить материалы можно в LS, переработать в LV на заводе.\n\n");

				strcat(str, "Для продажи оружия используйте команду /sellgun");
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Гандиллер", str, "Готово", "");
			}
			case 10: // Продавец машин
			{
				strcat(str, RGB_WHITE"Оформитель может оформлять транспорт на игроков, после чего игрок,\n");
				strcat(str, "на которого Вы оформили транспорт, сможет вызывать его к себе в любое\n");
				strcat(str, "время.\n\n");

				strcat(str, "Чем Выше скилл данной профессии у Вас прокачан, тем больше раз игрок\n");
				strcat(str, "сможет вернуть себе машину. Для прокачи скилла оформляйте как можно\n");
				strcat(str, "больше машин.\n\n");

				strcat(str, "Для того, чтобы оформить машину на игрока, используйте команду\n");
				strcat(str, "/sellcar [id / часть ника] [стоимость].");
				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Оформитель", str, "Готово", "");
			}
			case 12: // Тренер
			{
			    strcat(str, RGB_WHITE"Тренер может обучать других игроков различным стилям боя. В зависимости от\n");
			    strcat(str, "скилла, будут открываться возможности обучать игроков другим стилям боя.\n\n");

			    strcat(str, "Чтобы прокачать скилл тренера, обучайте игроков стилям боя. Для того, чтобы\n");
				strcat(str, "предложить игроку обучение, введите команду /fightstyle [id] [стиль] [цена].");
				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Тренер", str, "Готово", "");
			}
			case 14: // Водитель автобуса
			{
			    strcat(str, RGB_WHITE"Водитель автобуса развозит пассажиров, следуя выбранному маршруту. Чтобы начать\n");
			    strcat(str, "работу, арендуйте автобус на базе, установите стоимость проезда для пассажиров\n");
			    strcat(str, "и выберите желаемый маршрут.\n\n");

			    strcat(str, "Помимо денег за билеты, Вы будете получать зарплату от государства, которая\n");
			    strcat(str, "будет добавлена к Вашей почасовой зарплате. Чтобы получать зарплату от\n");
			    strcat(str, "государства, строго следуйте указанному маршруту и не отклоняйтесь от него.\n\n");

			    strcat(str, "Чтобы закончить работу и получить деньги, просто выйдите из автобуса,\n");
			    strcat(str, "подождите 15 секунд и работа будет окончена, а Вам начислятся заработанные\n");
			    strcat(str, "деньги. Обратите внимание, деньги за билеты Вы получаете сразу, а зарплата\n");
			    strcat(str, "от государства прибавляется к почасовому PayDay.");
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Водитель автобуса", str, "Готово", "");
			}
			case 15: // Разносчик газет
			{
			    strcat(str, RGB_WHITE"Разносчик газет занимается продажей газет, новости в которые пишут работники CNN.\n");
			    strcat(str, "Газеты для продажи можно взять так же у работников новостной службы.\n\n");

			    strcat(str, "Команды для разносчика газет: /papers для просмотра списка газет, /bring чтобы\n");
			    strcat(str, "взять газету и /deliver для того, чтобы продать газету.");
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Разносчик газет", str, "Готово", "");
			}
			case 17: // Таксист
			{
				strcat(str, RGB_WHITE"Ваша работа - Таксист. Суть заключается в том, чтобы находить клиентов,\n");
				strcat(str, "которые будут говорить, куда нужно их доставить.\n\n");

				strcat(str, "Чтобы начать работу, арендуйте машину на базе таксистов. После чего вам\n");
				strcat(str, "будет предложено установить стоимость проезда в Вашем такси, эта сумма\n");
				strcat(str, "будет вычитаться из кошелька клиента каждые 30 секунд и идти соответственно\n");
				strcat(str, "на Ваш счет.\n\n");

				strcat(str, "Чтобы закончить работу, просто покиньте такси и подождите 15 секунд до\n");
				strcat(str, "окончания работы.");
			    ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Таксист", str, "Готово", "");
			}
			case 22: // Инкассатор
			{
			    strcat(str, RGB_WHITE"Инкассатор занимается перевозкой денег с различных учреждений и\n");
			    strcat(str, "предприятий.\n\n");

				strcat(str, "Чтобы начать работу, возьмите с базы бронеавтомобиль и отправляйтесь\n");
				strcat(str, "по заданному Вам маршруту. После того, как маршрут будет пройден,\n");
				strcat(str, "отправляйтесь обратно на базу и заберите заработанные деньги.");
				ShowPlayerDialog(playerid, 999, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваша работа — Инкассатор", str, "Готово", "");
			}
			default: // Безработный
			{
			    SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Вы безработный. Желаемую работу Вы можете найти через /gps");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ah", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 1) return 1;
	    globalstr = "";
	    if (GetPVarInt(playerid,"AdminLevel") >= 1)
	    {
	        strcat(globalstr, "[1] /admin (/a) - админ чат\n\
				[1] /setworld - сменить свой VirtualWorld\n\
				[1] /dcar -  проверить автомобиль на GM\n\
				[1] /kick (/skick) - кикнуть игрока\n\
				[1] /jail - посадить игрока в тюрьму\n\
				[1] /gotocar - ТП к личному авто\n\
				[1] /ooc (/o) - написать в общий чат\n");
			strcat(globalstr, "[1] /world - узнать свой VirtualWorld\n\
				[1] /spec - админ TV\n\
				[1] /slap - подбросить игрока в воздух\n\
				[1] /setint - установить свой интерьер\n\
				[1] /prison - посадить игрока в prison\n\
				[1] /house (/ehouse) - ТП в дом/к выходу из дома\n\
				[1] /biz (/sbiz) - ТП в бизнес/сбизнес\n");
		}
		
		if (GetPVarInt(playerid,"AdminLevel") >= 2)
		{
		    strcat(globalstr, "[2] /ban (/sban) - забанить игрока\n");
		}
		
		if (GetPVarInt(playerid,"AdminLevel") >= 3)
		{
			strcat(globalstr, "[3] /skydive - прыжок с парашютом\n\
			[3] /fire - взорвать игрока\n\
			[3] /clean - отчистить чат\n");
		}
		
		if (GetPVarInt(playerid,"AdminLevel") >= 4)
		{
			strcat(globalstr, "[4] /unbanip - разбанить ip игрока\n\
			[4] /weather - сменить свою погоду\n\
			[4] /gethere - телепортировать игрока к себе\n\
			[4] /setjob - уволить игрока с работы\n\
			[4] /res - зареспавнить авто поблизости\n");
		}
		
		if (GetPVarInt(playerid,"AdminLevel") >= 5)
		{
			strcat(globalstr, "[5] /noooc - вкл/выкл ooc\n\
			[5] /hq - написать от лица диспечера\n\
			[5] /sethp - установить здоровье\n\
			[5] /hpall -  выдать 100 hp игрокам поблизости\n\
			[5] /fuelcars - заправить все авто\n\
			[5] /fourdive прыжок с парашютом(4 игрока)\n\
			[5] /setarmor - установить броню\n\
			[5] /givegun - дать оружие\n\
			[5] /givegunall - выдать оружие игрокам поблизости\n\
			[5] /takeweaponall - забрать оружие у ближайших игроков\n\
			[5] /ho - прицепить объект к игроку\n");
		}

		if (GetPVarInt(playerid,"AdminLevel") >= 6)
		{
			strcat(globalstr, "[6] /setskin - сменить скин\n\
			[6] /vho - прикрепить объект к авто\n\
			[6] /weatherall - сменить погоду для всех\n\
			[6] /cnpc - подключить бота\n\
			[6] /tod установить время\n\
			[6] /readpm - читать ПМ всех игроков\n\
			[6] /readpmp - читать ПМ одного игрока\n\
			[6] /makehelper - назначить/снять хелпера\n");
		}

		if (GetPVarInt(playerid,"AdminLevel") >= 7)
		{
			strcat(globalstr, "[7] /hirecar - сделать слепок ключа от авто\n\
			[7] /unwarn - снять warn с игрока\n\
			[7] /getcar - ТП авто к себе\n\
			[7] /respawnallcars - зареспавнить все авто на сервере\n\
			[7] /kickall - кикнуть всех\n\
			[7] /gmx - рестарт сервера\n\
			[7] /delmail - стереть e-mail\n");
		}

		if (GetPVarInt(playerid,"AdminLevel") >= 1337)
		{
			strcat(globalstr, "[1337] /makeleader - назначит лидера\n\
			[1337] /offlleaders - список лидеров\n");
		}

		if (GetPVarInt(playerid,"AdminLevel") >= 1338)
		{
			strcat(globalstr, "[1338] /edit - редактировать дом/бизнес/авто\n\
			[1338] /setstat - сменить статистику игрока\n\
			[1338] /makeadmin - назначить/снять администратора\n\
			[1338] /money - установить деньги игроку\n\
			[1338] /givemoney - дать деньги игроку\n\
			[1338] /wipe - вайп фракции");
		}
        ShowPlayerDialog(playerid, 999, DIALOG_STYLE_LIST, RGB_SERVER"Команды админки", globalstr, "Ок", "");

        globalstr = "";

		return 1;
	}
	if(strcmp(cmd,"/stopanimo",true)==0)
	{
 		ClearAnimations(playerid);
	    return 1;
	}
 	if (strcmp(cmd, "/skill", true) == 0)
	{
		new skillstring[512];
		new DetLevel = GetPVarInt(playerid,"DetSkill");
		new LawLevel = GetPVarInt(playerid,"LawSkill");
		new SexLevel = GetPVarInt(playerid,"SexSkill");
		new DrugsLevel = GetPVarInt(playerid,"DrugsSkill");
		new JackLevel = GetPVarInt(playerid,"JackSkill");
		new NewsLevel = GetPVarInt(playerid,"NewsSkill");
		new MechLevel = GetPVarInt(playerid,"MechSkill");
		new CarLevel = GetPVarInt(playerid,"CarSkill");
		new BoxLevel = GetPVarInt(playerid,"TrainerSkill");

        new detstring[128], lawstring[128],sexstring[128],drugstring[128],jackstring[128],newsstring[128],mechstring[128],carstring[128],boxstring[128];
		if(DetLevel >= 0 && DetLevel <= 50)  format(detstring,sizeof(detstring),"- Детектив: уровень - 1\n  Нужно найти еще %d человек, чтобы получить следующий уровень", 50-DetLevel);
        else if(DetLevel >= 51 && DetLevel <= 100)  format(detstring,sizeof(detstring),"- Детектив: уровень - 2\n  Нужно найти еще %d человек, чтобы получить следующий уровень", 100-DetLevel);
		else if(DetLevel >= 101 && DetLevel <= 200)  format(detstring,sizeof(detstring),"- Детектив: уровень - 3\n  Нужно найти еще %d человек, чтобы получить следующий уровень", 200-DetLevel);
		else if(DetLevel >= 201 && DetLevel <= 400)  format(detstring,sizeof(detstring), "- Детектив: уровень - 4\n  Нужно найти еще %d человек, чтобы получить следующий уровень", 400-DetLevel);
		else if(DetLevel >= 401) format(detstring,sizeof(detstring),"- Детектив: уровень - 5 [MAXIMUM]");

		if(LawLevel >= 0 && LawLevel <= 50)  format(lawstring,sizeof(lawstring),"- Адвокат: уровень - 1\n  Нужно освободить еще %d человек, чтобы получить следующий уровень", 50-LawLevel);
        else if(LawLevel >= 51 && LawLevel <= 100)  format(lawstring,sizeof(lawstring),"- Адвокат: уровень - 2\n  Нужно освободить еще %d человек, чтобы получить следующий уровень", 100-LawLevel);
		else if(LawLevel >= 101 && LawLevel <= 200)  format(lawstring,sizeof(lawstring),"- Адвокат: уровень - 3\n  Нужно освободить еще %d человек, чтобы получить следующий уровень", 200-LawLevel);
		else if(LawLevel >= 201 && LawLevel <= 400)  format(lawstring,sizeof(lawstring), "- Адвокат: уровень - 4\n  Нужно освободить еще %d человек, чтобы получить следующий уровень", 400-LawLevel);
		else if(LawLevel >= 401)  format(lawstring,sizeof(lawstring),"- Адвокат: уровень - 5 [MAXIMUM]");

		if(SexLevel >= 0 && SexLevel <= 50)  format(sexstring,sizeof(sexstring),"- Проститутка: уровень - 1\n  Нужно обслужить еще %d клиентов, чтобы получить следующий уровень", 50-SexLevel);
        else if(SexLevel >= 51 && SexLevel <= 100)  format(sexstring,sizeof(sexstring),"- Проститутка: уровень - 2\n  Нужно обслужить еще %d клиентов, чтобы получить следующий уровень", 100-SexLevel);
		else if(SexLevel >= 101 && SexLevel <= 200)  format(sexstring,sizeof(sexstring),"- Проститутка: уровень - 3\n  Нужно обслужить еще %d клиентов, чтобы получить следующий уровень", 200-SexLevel);
		else if(SexLevel >= 201 && SexLevel <= 400)  format(sexstring,sizeof(sexstring), "- Проститутка: уровень - 4\n  Нужно обслужить еще %d клиентов, чтобы получить следующий уровень", 400-SexLevel);
		else if(SexLevel >= 401) format(sexstring,sizeof(sexstring),"- Проститутка: уровень - 5 [MAXIMUM]");

		if(DrugsLevel >= 0 && DrugsLevel <= 50)  format(drugstring,sizeof(drugstring),"- Наркоторговец: уровень - 1\n  Нужно продать еще %d партий наркотиков, чтобы получить следующий уровень", 50-DrugsLevel);
        else if(DrugsLevel >= 51 && DrugsLevel <= 100)  format(drugstring,sizeof(drugstring),"- Наркоторговец: уровень - 2\n  Нужно продать еще %d партий наркотиков, чтобы получить следующий уровень", 100-DrugsLevel);
		else if(DrugsLevel >= 101 && DrugsLevel <= 200)  format(drugstring,sizeof(drugstring),"- Наркоторговец: уровень - 3\n  Нужно продать еще %d партий наркотиков, чтобы получить следующий уровень", 200-DrugsLevel);
		else if(DrugsLevel >= 201 && DrugsLevel <= 400)  format(drugstring,sizeof(drugstring), "- Наркоторговец: уровень - 4\n  Нужно продать еще %d партий наркотиков, чтобы получить следующий уровень", 400-DrugsLevel);
		else if(DrugsLevel >= 401) format(drugstring,sizeof(drugstring),"- Наркоторговец: уровень - 5 [MAXIMUM]");

		if(JackLevel >= 0 && JackLevel <= 50)  format(jackstring,sizeof(jackstring),"- Автоугонщик: уровень - 1\n  Нужно угнать еще %d машин, чтобы получить следующий уровень", 50-JackLevel);
        else if(JackLevel >= 51 && JackLevel <= 100)  format(jackstring,sizeof(jackstring),"- Автоугонщик: уровень - 2\n  Нужно угнать еще %d машин, чтобы получить следующий уровень", 100-JackLevel);
		else if(JackLevel >= 101 && JackLevel <= 200)  format(jackstring,sizeof(jackstring),"- Автоугонщик: уровень - 3\n  Нужно угнать еще %d машин, чтобы получить следующий уровень", 200-JackLevel);
		else if(JackLevel >= 201 && JackLevel <= 400)  format(jackstring,sizeof(jackstring), "- Автоугонщик: уровень - 4\n  Нужно угнать еще %d машин, чтобы получить следующий уровень", 400-JackLevel);
		else if(JackLevel >= 401)  format(jackstring,sizeof(jackstring),"- Автоугонщик: уровень - 5 [MAXIMUM]");

		if(NewsLevel >= 0 && NewsLevel <= 50)  format(newsstring,sizeof(newsstring),"- Репортер: уровень - 1\n  Нужно написать еще %d новостей (/news), чтобы получить следующий уровень", 50-NewsLevel);
        else if(NewsLevel >= 51 && NewsLevel <= 100)  format(newsstring,sizeof(newsstring),"- Репортер: уровень - 2\n  Нужно написать еще %d новостей (/news), чтобы получить следующий уровень", 100-NewsLevel);
		else if(NewsLevel >= 101 && NewsLevel <= 200)  format(newsstring,sizeof(newsstring),"- Репортер: уровень - 3\n  Нужно написать еще %d новостей (/news), чтобы получить следующий уровень", 200-NewsLevel);
		else if(NewsLevel >= 201 && NewsLevel <= 400)  format(newsstring,sizeof(newsstring), "- Репортер: уровень - 4\n  Нужно написать еще %d новостей (/news), чтобы получить следующий уровень", 400-NewsLevel);
		else if(NewsLevel >= 401)  format(newsstring,sizeof(newsstring),"- Репортер: уровень - 5 [MAXIMUM]");

		if(MechLevel >= 0 && MechLevel <= 50)  format(mechstring,sizeof(mechstring),"- Механик: уровень - 1\n  Нужно заправить/отремонтировать еще %d машин, чтобы получить следующий уровень", 50-MechLevel);
        else if(MechLevel >= 51 && MechLevel <= 100)  format(mechstring,sizeof(mechstring),"- Механик: уровень - 2\n  Нужно заправить/отремонтировать еще %d машин, чтобы получить следующий уровень", 100-MechLevel);
		else if(MechLevel >= 101 && MechLevel <= 200)  format(mechstring,sizeof(mechstring),"- Механик: уровень - 3\n  Нужно заправить/отремонтировать еще %d машин, чтобы получить следующий уровень", 200-MechLevel);
		else if(MechLevel >= 201 && MechLevel <= 400)  format(mechstring,sizeof(mechstring), "- Механик: уровень - 4\n  Нужно заправить/отремонтировать еще %d машин, чтобы получить следующий уровень", 400-MechLevel);
		else if(MechLevel >= 401)  format(mechstring,sizeof(mechstring),"- Механик: уровень - 5 [MAXIMUM]");

		if(CarLevel >= 0 && CarLevel <= 50)  format(carstring,sizeof(carstring),"- Оформитель: уровень - 1\n  Нужно продать еще %d машин, чтобы получить следующий уровень", 50-CarLevel);
        else if(CarLevel >= 51 && CarLevel <= 100)  format(carstring,sizeof(carstring),"- Оформитель: уровень - 2\n  Нужно продать еще %d машин, чтобы получить следующий уровень", 100-CarLevel);
		else if(CarLevel >= 101 && CarLevel <= 200)  format(carstring,sizeof(carstring),"- Оформитель: уровень - 3\n  Нужно продать еще %d машин, чтобы получить следующий уровень", 200-CarLevel);
		else if(CarLevel >= 201 && CarLevel <= 400)  format(carstring,sizeof(carstring), "- Оформитель: уровень - 4\n  Нужно продать еще %d машин, чтобы получить следующий уровень", 400-CarLevel);
		else if(CarLevel >= 401)  format(carstring,sizeof(carstring),"- Оформитель: уровень - 5 [MAXIMUM]");

		if(BoxLevel >= 0 && BoxLevel <= 50)  format(boxstring,sizeof(boxstring),"- Тренер: уровень - 1\n  Нужно обучить еще %d человек, чтобы перейти на следующий уровень", 50-BoxLevel);
        else if(BoxLevel >= 51 && BoxLevel <= 100)  format(boxstring,sizeof(boxstring),"- Тренер: уровень - 2\n  Нужно обучить еще %d человек, чтобы перейти на следующий уровень", 100-BoxLevel);
		else if(BoxLevel >= 101 && BoxLevel <= 200)  format(boxstring,sizeof(boxstring),"- Тренер: уровень - 3\n  Нужно обучить еще %d человек, чтобы перейти на следующий уровень", 200-BoxLevel);
		else if(BoxLevel >= 201 && BoxLevel <= 400)  format(boxstring,sizeof(boxstring), "- Тренер: уровень - 4\n  Нужно обучить еще %d человек, чтобы перейти на следующий уровень", 400-BoxLevel);
		else if(BoxLevel >= 401)  format(boxstring,sizeof(boxstring),"- Тренер: уровень - 5 [MAXIMUM]");

		format(skillstring,100047,"%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s\n\n%s", detstring,lawstring,sexstring,drugstring,jackstring,newsstring,mechstring,carstring,boxstring);
		ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваши навыки",skillstring,"Выбрать","Отмена");
		return 1;
	}
	if(strcmp(cmd, "/givelicense", true) == 0)
	{
    	if(!IsAnInstructor(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор");
        if(GetPVarInt(playerid,"Rank") < 3) return SendClientMessage(playerid, COLOR_GREY, "Только 3 ранг или выше может дать лицензию");

        ShowPlayerDialog(playerid, 264, DIALOG_STYLE_LIST, RGB_SERVER"Выберите лицензию", "\
		Управление автомобилем\n\
		Управление катером\n\
		Воздушная техника\n\
		Лицензия рыболова\n\
		Лицензия на оружие\
		", "Далее", "Отмена");
		return 1;
	}
	if(strcmp(cmd, "/startlesson", true) == 0)
	{
    	if(!IsAnInstructor(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор");
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /startlesson [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        format(string, sizeof(string), "Вы начали урок для %s",giveplayer);
        SendClientMessage(playerid, COLOR_WHITE, string);
        format(string, sizeof(string), "Инструктор %s начал Ваш урок",sendername);
        SendClientMessage(giveplayerid, COLOR_WHITE, string);
        TakingLesson[giveplayerid] = 1;
	    return 1;
	}
	if(strcmp(cmd, "/stoplesson", true) == 0)
	{
	    if(!IsAnInstructor(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не инструктор");
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /stoplesson [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
        if(TakingLesson[giveplayerid] != 1) return SendClientMessage(playerid, COLOR_GREY, "Урок для этого игрока не начат");
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        format(string, sizeof(string), "Вы остановили занятие для %s",giveplayer);
        SendClientMessage(playerid, COLOR_WHITE, string);
        format(string, sizeof(string), "Инструктор %s остановил Ваш Урок",sendername);
        SendClientMessage(giveplayerid, COLOR_WHITE, string);
        TakingLesson[giveplayerid] = 0;
        RemovePlayerFromVehicle(giveplayerid);
	    return 1;
	}
	if(strcmp(cmd, "/ram", true) == 0)
	{
        if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не Полицейский / Солдат / Агент ФБР");
        for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if (IsPlayerInRangeOfPoint(playerid,3.0, HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
			{
			    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
			    SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
				oSetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
				GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
				SetPVarInt(playerid, "Local", i+1000);
			}
		}
		return 1;
	}


  
    if (strcmp(cmd, "/licenzers", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Лицензиары:");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			{
			    if(GetPVarInt(i,"Team") == 11 && GetPVarInt(i,"Rank") >= 3)
			    {
					GetPlayerName(i, sendername, sizeof(sendername));
					format(string, 256, "* %s(ID: %d) | {ff0000}Телефон: %d",sendername,i, GetPVarInt(i,"PhoneNumber"));
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}
		return 1;
 	}
 	if (strcmp(cmd, "/leaders", true) == 0)
    {
		SendClientMessage(playerid, COLOR_WHITE, "Лидеры онлайн:");
		new leader;
	 	for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && !IsPlayerNPC(i))
    		{
				leader = GetPVarInt(i,"Leader");
    		    switch(leader)
    		    {
		    		case 1: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Полиция: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 2: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "ФБР: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 3: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Армия: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 4: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "МЧС: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 5: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "La Cosa Nostra: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 6: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Yakuza: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 7: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Мэр: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 9: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Репортеры: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 10: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Байкеры: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 11: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Лицензиары: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 12: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Russian Mafia: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 13: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Ballas: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 14: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Grove: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 15: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Vagos: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 16: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "El Coronos: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 17: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Rifa: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
		    		case 18: { GetPlayerName(i, sendername, sizeof(sendername)); format(string, 256, "Колхоз: {ccff00}%s[ID: %d]", sendername, i); SendClientMessage(playerid, COLOR_WHITE, string); }
				}
	 		}
		}
	    return 1;
	}
	if(strcmp(cmd, "/setfuel", true) == 0)
	{
	    if(GetPVarInt(playerid,"AdminLevel") < 5) return 1;
    	tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return	SendClientMessage(playerid, COLOR_GREY, "Используйте: /setfuel [ammount]");
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		new car = GetPlayerVehicleID(playerid);
        moneys = strval(tmp);
        Gas[car] = moneys;
        format(string, sizeof(string), "Бензин вашего автомобиля: %d", moneys);
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd,"/settax",true)==0)
    {

        if(GetPVarInt(playerid,"Leader") != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не мэр");
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /settax [размер налога]");
		moneys = strval(tmp);
		if(moneys < 1 || moneys > 500) return SendClientMessage(playerid, COLOR_GREY, "Налог может быть от 1 до 500");
		Tax = moneys;
		SaveOther();
		format(string, sizeof(string), "Налог для жителей установлен в размере $%d", Tax);
		SendClientMessage(playerid, COLOR_WHITE, string);
	    return 1;
	}

 	if(strcmp(cmd,"/donate2",true)==0 && GetPVarInt(playerid, "AdminLevel") == 1338)
	{
		showDonateDialog(playerid, 0);
		return 1;
	}

	if(strcmp(cmd,"/donate",true)==0)
    {
		ShowDonateDialog(playerid, 0);
		return 1;
	}
	if(strcmp(cmd,"/skins",true)==0)
    {
   	 	if (GetPVarInt(playerid, "RegOnTDM") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время ТДМ");
	    if (GetPVarInt(playerid, "On_Duel") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время дуэли");
	    if (GetPVarInt(playerid, "RegOnPaint") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время пейнтболла");
	    showPlayerSkinsDialog(playerid);
	}
	if (strcmp("/movehouse", cmdtext, true) == 0)
	{
	    new house = GetPVarInt(playerid,"House");
		GetPlayerName(playerid, playername, sizeof(playername));
		if(house != -1 && strcmp(playername, HouseInfo[house][hOwner], false) == 0)
		{
		    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться на улице");
	 		if(!GetPVarInt(playerid, "AllowHouseChange")) return SendClientMessage(playerid, COLOR_GREY, "Сначала приобретите возможность перемещения своего дома (/donate -> Услуги для дома)");
			ShowPlayerDialog(playerid,166,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Вы уверены, что хотите перенести свой дом на это место?","Перенести","Назад");
		}
		return 1;
	}
	if(strcmp(cmd,"/givetax",true)==0)
    {
        if(GetPVarInt(playerid,"Leader") != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не мэр");
        if(TaxValue < 1) return SendClientMessage(playerid, COLOR_GREY, "В казне нет денег");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /givetax [количество для одного человека]");
		moneys = strval(tmp);
  		if(moneys < 1 || moneys > 10000) return SendClientMessage(playerid, COLOR_GREY, "Вы можете выдать минимум $1 и максимум $10000");
		new Cops = 0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		    {
		        if(IsACop(i) || GetPVarInt(i,"Team") == 4 || GetPVarInt(i,"Member") == 7 || GetPVarInt(i,"Team") == 9) Cops++;
		    }
		}
		if(Cops >= 10)
		{
		    for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
			    {
			        if(IsACop(i) || GetPVarInt(i, "Team") == 4 || GetPVarInt(i,"Member") == 7 || GetPVarInt(i,"Team") == 9)
			        {
			            format(string, sizeof(string), "Вы получили $%d от мэра", moneys);
						SendClientMessage(i, COLOR_YELLOW, string);
						GivePlayerPCash(i, moneys);
						TaxValue -= moneys;
			        }
			    }
			}
			SaveOther();
			format(string, sizeof(string), "Вы выдали %d гос. работникам по $%d",Cops, moneys);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else SendClientMessage(playerid, COLOR_GREY, "На сервере в настоящее время нет Законников / Медиков / Работников Мэрии / Репортеров");
		return 1;
	}

	if(strcmp(cmd,"/read",true)==0)
    {
		new x_job[256];
		x_job = strtok(cmdtext, idx);
		if(!strlen(x_job)) {
			SendClientMessage(playerid, COLOR_GREY, "Используйте: /read [значение] [номер газеты]");
			SendClientMessage(playerid, COLOR_GREY, "Значения: Paper, TestPaper");
			return 1;
		}
        if(strcmp(x_job,"paper",true) == 0)
		{
		    if(GotPaper[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "|_______________ Газета _______________|");
		        format(string, sizeof(string), "| %s  |  Написал: %s.",Paper[playerid][pTitle],Paper[playerid][pMaker]);
		        SendClientMessage(playerid, COLOR_GREEN, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine1]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine2]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine3]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine4]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine5]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine6]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        format(string, sizeof(string), "%s",Paper[playerid][pLine7]);
		        SendClientMessage(playerid, COLOR_GREY, string);
		        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
		        return 1;
		    }
		    else SendClientMessage(playerid, COLOR_GREY, "   У Вас  нет газеты !");
		}
		else if(strcmp(x_job,"testpaper",true) == 0)
		{
		    if(GetPVarInt(playerid,"Team") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не репортер");
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /read [значение] [номер газеты]");
			new paper = strval(tmp);
			if(paper < 1 || paper > 10) return SendClientMessage(playerid, COLOR_GREY, "Номер газеты может быть от 1 до 10");
			paper--;
			if(PaperInfo[paper][PaperUsed] == 0) return SendClientMessage(playerid, COLOR_GREY, "В нет газеты под таким номером");
	        SendClientMessage(playerid, COLOR_WHITE, "|_______________ Crime Streets: Газета _______________|");
	        format(string, sizeof(string), "| %s  |  Написал: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
	        SendClientMessage(playerid, COLOR_GREEN, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText1]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText2]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText3]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText4]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText5]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText6]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText7]);
	        SendClientMessage(playerid, COLOR_GREY, string);
	        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
	        return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Используйте: /read [значение] [номер газеты]");
		return 1;
	}

	if(strcmp(cmd, "/bring", true) == 0)
	{
	    if(GetPVarInt(playerid,"Job") != 15) return SendClientMessage(playerid, COLOR_GREY, "Вы не разносчик газет");
		if(!IsPlayerInRangeOfPoint(playerid,3.0,1804.8960,-1303.5201,114.7723)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в здании редакции");
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /bring [номер газеты]");
        new paper = strval(tmp);
        if(paper < 1 || paper > 10) return SendClientMessage(playerid, COLOR_GREY, "Укажите номер газеты от 1 до 10");
		paper--;
		if(!PaperInfo[paper][PaperUsed]) return SendClientMessage(playerid, COLOR_GREY, "Нет газеты под таким номером");
        GetPlayerName(playerid, sendername, sizeof(sendername));
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        format(string, sizeof(string), "Теперь вы можете разносить газеты, Газета: %s, Написал: %s",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperTitle]);
		strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperMaker]);
		strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
		strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
		strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
		strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
		strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
		strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
		strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
		format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
		strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
		SetPVarInt(playerid, "BringingPaper", 1);
	    return 1;
	}
	if(strcmp(cmd, "/papers", true) == 0)
	{
        if(GetPVarInt(playerid,"Team") == 9 || GetPVarInt(playerid,"Job") == 15)
        {
			if(!IsPlayerInRangeOfPoint(playerid,3.0,1804.8960,-1303.5201,114.7723)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в здании редакции");
		    new number = 0;
		    for(new i = 0; i < sizeof(PaperInfo); i++)
		    {
		        number ++;
		        if(PaperInfo[i][PaperUsed] == 1)
		    	{
		        	format(string, sizeof(string), "|%d| Газета: %s, By: %s",number,PaperInfo[i][PaperTitle],PaperInfo[i][PaperMaker]);
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
		    }
		}
		else SendClientMessage(playerid, COLOR_GREY, "Вы не разносчик газет / репортер");
	    return 1;
	}
	if(strcmp(cmd, "/paper", true) == 0)
	{
        if(GetPVarInt(playerid,"Team") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не репортер");
        if(!IsPlayerInRangeOfPoint(playerid,3.0,1804.8960,-1303.5201,114.7723)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в здании редакции");
		new x_nr[256];
		x_nr = strtok(cmdtext, idx);
		if(!strlen(x_nr)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /paper write [номер газеты] или /paper delete [номер газеты]");
	    if(strcmp(x_nr,"write",true) == 0)
		{
            tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /paper write [номер газеты]");
			new paper = strval(tmp);
			if(paper < 1 || paper > 10) return SendClientMessage(playerid, COLOR_GREY, "Укажите номер газеты от 1 до 10");
			paper--;
			if(PaperInfo[paper][PaperUsed] == 1) return SendClientMessage(playerid, COLOR_GREY, "На этом номере уже есть газета");
			SendClientMessage(playerid, COLOR_WHITE, "Вы изготавливаете новую газету");
			SendClientMessage(playerid, COLOR_WHITE, "Напечатайте текст новой газеты, максимум 7 строк");
			SendClientMessage(playerid, COLOR_WHITE, "Пожалуйста напечатайте названии вашей газеты");
			WritingPaper[playerid] = 1;
			WritingPaperNumber[playerid] = paper;
			WritingLine[playerid] = 1;
		}
		else if(strcmp(x_nr,"delete",true) == 0)
		{
		    if(GetPVarInt(playerid,"Rank") < 4) return SendClientMessage(playerid, COLOR_GREY, "Вы должны иметь 4 ранг, чтобы удалять газеты");
	        tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /paper delete [номер газеты]");
			new paper = strval(tmp);
			if(paper < 1 || paper > 10) return SendClientMessage(playerid, COLOR_GREY, "Укажите номер газеты от 1 до 10");
			paper--;
			ClearPaper(paper);
			new number = paper; number++;
			format(string, sizeof(string), "Вы удалили Газету %d.",number);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Используйте: /paper write [номер газеты] или /paper delete [номер газеты]");
	    return 1;
    }
  
	if(strcmp(cmd, "/spawnchange", true) == 0)
	{
        if(GetPVarInt(playerid,"House") != -1)
        {
            if(SpawnChange[playerid])
            {
                SpawnChange[playerid] = 0;
                if(IsAnInstructor(playerid))
	            {
	                if(SchoolSpawn[playerid] == 0)
	                {
	                    SchoolSpawn[playerid] = 1;
	                    SendClientMessage(playerid, COLOR_WHITE, "Место спавна изменено на летную школу");
	                }
	                else if(SchoolSpawn[playerid] == 1)
	                {
	                    SchoolSpawn[playerid] = 0;
	                    SendClientMessage(playerid, COLOR_WHITE, "Место спавна изменено на автошколу");
	                }
	            }
	            else SendClientMessage(playerid, COLOR_WHITE, "Место спавна изменено на респавн организации");
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, "Место спавна изменено на Ваш дом");
                SpawnChange[playerid] = 1;
            }
        }
        else
        {
            if(IsAnInstructor(playerid))
            {
                if(SchoolSpawn[playerid] == 0)
                {
                    SchoolSpawn[playerid] = 1;
                    SendClientMessage(playerid, COLOR_WHITE, "Место спавна изменено на летную школу");
                }
                else if(SchoolSpawn[playerid] == 1)
                {
                    SchoolSpawn[playerid] = 0;
                    SendClientMessage(playerid, COLOR_WHITE, "Место спавна изменено на автошколу");
                }
            }
            else SendClientMessage(playerid, COLOR_GREY, "У Вас нет собственного / арендованного дома");
        }
	    return 1;
	}
	if(strcmp(cmd, "/report", true) == 0)
	{
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if(GetPVarInt(playerid,"Jailed") == 2) return SendClientMessage(playerid, COLOR_GREY , "Недоступно в присоне");
		if(togreport == 0) return SendClientMessage(playerid, COLOR_GREY, "Команда отключена администратором");
		if(TaimSuppReport[playerid] > gettime())
	 	{
			SendClientMessage(playerid, COLOR_GREY, "Использовать репорт можно раз в 90 секунд");
			return 1;
	 	}
        GetPlayerName(playerid, sendername, sizeof(sendername));

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /report [текст]");
		

		
		format(string, sizeof(string), "Жалоба от %s[%d]: %s", sendername, playerid, (result));
		ABroadCast(string);
		
		format(string, sizeof(string), "Ваша жалоба: [ %s ] отправлена администраторам ", (result));
		SendClientMessage(playerid, 0x3caa3cff, string);
		
		SendClientMessage(playerid, 0x3caa3cff, "Есть вопросы по игре? Задайте их в /ask!");
		TaimSuppReport[playerid] = gettime() + 90;//Секунды через которые можно использовать команду
	    return 1;
	}

	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if (GetPVarInt(playerid,"AdminLevel") < 6) return 1;
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, " /setskin [id игрока] [skin id]");
	    new para1,level;
	    para1 = ReturnUser(tmp);
	    tmp = strtok(cmdtext, idx);
	    level = strval(tmp);
	    
		if(level > 299 || level < 1) return SendClientMessage(playerid, COLOR_GREY, " Неправильный skin ID! ");
		
		if(!IsPlayerConnected(para1)) return 1;
		
		GetPlayerName(para1, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		
		format(string, sizeof(string), "Администратор %s изменил Ваш скин", sendername);
		SendClientMessage(para1, COLOR_WHITE, string);
		
		format(string, sizeof(string), "Вы изменили скин %s на %d", giveplayer,level);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SetPlayerSkinEx(para1, level);
		
		
		if(para1 == playerid || GetPVarInt(playerid,"AdminLevel") >= 1337)
		{
			SetPVarInt(para1, "Skin", level);
			MySQL_UpdateInt(para1, "Skin");
		}

		return 1;
	}
	if(strcmp(cmd, "/take", true) == 0)
	{
		if (GetPVarInt(playerid, "On_Duel") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время дуэли");
	    if (GetPVarInt(playerid, "RegOnPaint") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время пейнтболла");
   	 	if (GetPVarInt(playerid, "RegOnTDM") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время ТДМ");
        if(IsACop(playerid) || IsAnInstructor(playerid))
        {
            if(GetPVarInt(playerid,"Rank") < 4 && IsAnInstructor(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны иметь 4 ранг или выше для использования команды");
            if(GetPVarInt(playerid,"Rank") < 8 && IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны иметь 8 ранг или выше для использования команды");

			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_GREY, "Используйте: /take [предмет] [id/часть ника]");
		  		SendClientMessage(playerid, COLOR_GREY, "Предметы: Driverslicense, Flyinglicense, Boatlicense, Gunlicense, Weapons, Drugs, Materials");
				return 1;
			}
			if(IsACop(playerid) && PlayerInGangZone(playerid) != -1) return SendClientMessage(playerid, COLOR_GREY, "Команда не действует в данной местности");

			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(strcmp(x_nr,"driverslicense",true) == 0)
			{
			    if(!IsAnInstructor(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Только лицензиары могут изымать права");
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take driverslicense [id/часть ника]");
				giveplayerid = ReturnUser(tmp);

				if(GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Нельзя изымать лицензии у игроков 1-2 лвл");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");
				
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
 				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		        format(string, sizeof(string), "[x] Вы забрали водительские права у %s", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s лишил Вас водительских прав", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        SetPVarInt(giveplayerid,"CarLic",0);
		        MySQL_UpdateInt(giveplayerid,"CarLic");
			}
			else if(strcmp(x_nr,"flyinglicense",true) == 0)
			{
			    if(!IsAnInstructor(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Только лицензиары могут изымать права");
			    
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take flyinglicense [id/часть ника]");
				giveplayerid = ReturnUser(tmp);

				if(GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Нельзя изымать лицензии у игроков 1-2 лвл");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");

				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		        format(string, sizeof(string), "[x] Вы забрали у %s лицензию на воздушный транспорт", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s забрал у Вас лицензию на воздушный транспорт", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        SetPVarInt(giveplayerid,"FlyLic",0);
		        MySQL_UpdateInt(giveplayerid,"FlyLic");
			}
			else if(strcmp(x_nr,"gunlicense",true) == 0)
			{

			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take gunlicense [id/часть ника]");
				giveplayerid = ReturnUser(tmp);

				if(GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Нельзя изымать лицензии у игроков 1-2 лвл");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");

				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		        format(string, sizeof(string), "[x] Вы забрали у %s лицензию на оружие", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s забрал у Вас лицензию на оружие", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        SetPVarInt(giveplayerid,"GunLic",0);
		        MySQL_UpdateInt(giveplayerid,"GunLic");
			}
			else if(strcmp(x_nr,"boatlicense",true) == 0)
			{

			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take gunlicense [id/часть ника]");
				giveplayerid = ReturnUser(tmp);

				if(GetPVarInt(giveplayerid, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Нельзя изымать лицензии у игроков 1-2 лвл");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");

				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		        format(string, sizeof(string), "[x] Вы забрали у %s лицензию на водный транспорт", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s забрал у Вас лицензию на водный транспорт", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        SetPVarInt(giveplayerid,"BoatLic",0);
		        MySQL_UpdateInt(giveplayerid,"BoatLic");
			}
			else if(strcmp(x_nr,"weapons",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take weapons [id/часть ника]");
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");
				
		        format(string, sizeof(string), "[x] Вы забрали оружие у %s", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s забрал Ваше оружие", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        ResetPlayerWeaponsUAC(giveplayerid);
			}
			else if(strcmp(x_nr,"drugs",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take drugs [id игрока/часть имени]");
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(GetPVarInt(giveplayerid,"Drugs") < 2) return SendClientMessage(playerid, COLOR_GREY, "У игрока нет наркотиков");
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");
			    format(string, sizeof(string), "[x] Вы забрали наркотики у %s", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s забрал Ваши наркотики", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        SetPVarInt(giveplayerid,"Drugs",0);
			}
			else if(strcmp(x_nr,"materials",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /take materials [id/часть ника]");
				giveplayerid = ReturnUser(tmp);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 				if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
				if(AFKText[giveplayerid] > 120) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в AFK");
			    format(string, sizeof(string), "[x] Вы забрали материалы у %s .", giveplayer);
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		        format(string, sizeof(string), "[x] %s забрал Ваши материалы.", sendername);
		        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		        SetPVarInt(giveplayerid,"Materials", 0);
			}
			else return 1;
        }
     	else SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский / инструктор");
	    return 1;
	}
 	if(strcmp(cmd, "/drink", true) == 0)
	{
		if(!IsAtBar(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в баре");
    	ShowMenuForPlayer(drinkmenu,playerid);
 		TogglePlayerControllable(playerid, 0);
	    return 1;
	}
	if(strcmp(cmd, "/smoke", true) == 0)
	{
		if(!GetPVarInt(playerid,"Cigars")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет cигарет, купите их в 24 /7");
      	if(!GetPVarInt(playerid,"Lighter")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет зажигалки, купите ее в 24 /7");
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
        GivePVarInt(playerid,"Cigars",-1);
        MySQL_UpdateInt(playerid,"Cigars");
        SetPVarInt(playerid, "SpecialAction", 15);
	    return 1;
	}
	if(strcmp(cmd, "/drinksprunk", true) == 0)
	{
		if(!GetPVarInt(playerid,"Sprunk")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бутылки Sprunk , купите Sprunk в 24 /7");
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
        GivePVarInt(playerid,"Sprunk",-1);
        MySQL_UpdateInt(playerid,"Sprunk");
        SetPVarInt(playerid, "sprunk", 25);
	    return 1;
	}
	if(strcmp(cmd, "/drinkbeer", true) == 0)
	{
		if(!GetPVarInt(playerid,"Beer")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бутылки пива , купите пиво в 24 /7");
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
        GivePVarInt(playerid,"Beer",-1);
        MySQL_UpdateInt(playerid,"Beer");
        SetPVarInt(playerid, "beer", 25);
	    return 1;
	}
	if(strcmp(cmd, "/drinkwine", true) == 0)
	{
		if(!GetPVarInt(playerid,"Wine")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бутылки вина , купите вино в 24 /7 ");
	    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
        GivePVarInt(playerid,"Wine",-1);
        MySQL_UpdateInt(playerid,"Wine");
        SetPVarInt(playerid, "wine", 25);
	    return 1;
	}
	if(strcmp(cmd, "/music", true) == 0)
	{
		if(GetPVarInt(playerid, "CDPlayer") != 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет плеера, купите его в 24/7");

		if(GetPVarInt(playerid, "ListenMusic") == 0)
		{
		    SetPVarInt(playerid, "ListenMusic", 1);
			PlayAudioStreamForPlayer(playerid, "http://s3.radioheart.ru:8008/csfm");
			SendClientMessage(playerid, COLOR_WHITE, "Введите еще раз для отключения станции");
		}
		else
		{
		    DeletePVar(playerid, "ListenMusic");
		  	StopAudioStreamForPlayer(playerid);
		}
		return 1;
	}

	if(strcmp(cmd, "/tie", true) == 0)
	{
	    if(PlayerInGangZone(playerid) == -1) return SendClientMessage(playerid, COLOR_GREY, "Команда не действует в данной местности ");
		if(GetPVarInt(playerid,"Team") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не Член семьи / Лидер !");
	    if(GetPVarInt(playerid,"Rank") < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы должны иметь 3 ранг чтобы использовать команду");
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Используйте: /tie [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
	    if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
	    if(PlayerTied[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	    new car = GetPlayerVehicleID(playerid);
	    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете cвязать себя");
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
	    {
	        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			
	        format(string, sizeof(string), "Вы были связаны %s", sendername);
			SendClientMessage(giveplayerid, COLOR_WHITE, string);
			format(string, sizeof(string), "Вы связывали %s", giveplayer);
			SendClientMessage(playerid, COLOR_WHITE, string);
			
			format(string, sizeof(string), "%s связал %s, он не может двигаться.", sendername ,giveplayer);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
			TogglePlayerControllable(giveplayerid, 0);
			PlayerTied[giveplayerid] = 1;
	    }
	    else SendClientMessage(playerid, COLOR_GREY, "Игрок не в Вашем автомобиле / Вы не водитель");
		return 1;
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
		if(GetPVarInt(playerid,"Team") == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы нигде не состоите");
	    if(GetPVarInt(playerid,"Rank") < 3) return SendClientMessage(playerid, COLOR_GREY, "Вы должны иметь 3 ранг чтобы использовать команду");
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /untie [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
 		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете развязать себя");
		if(!PlayerTied[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не связан");
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "Вы были Развязаны %s", sendername);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Вы Развязали %s", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);
		GameTextForPlayer(giveplayerid, "~g~Untied", 2500, 3);
		TogglePlayerControllable(giveplayerid, 1);
		PlayerTied[giveplayerid] = 0;
		return 1;
	}



	if(strcmp(cmd,"/licenses",true)==0)
    {
        new text1[20],text2[20],text3[20],text4[20],text5[20];
        if(GetPVarInt(playerid,"CarLic")) { text1 = "В наличии"; } else { text1 = "Нет"; }
        if(GetPVarInt(playerid,"FlyLic")) { text4 = "В наличии"; } else { text4 = "Нет"; }
		if(GetPVarInt(playerid,"BoatLic")) { text2 = "В наличии"; } else { text2 = "Нет"; }
        if(GetPVarInt(playerid,"FishLic")) { text3 = "В наличии"; } else { text3 = "Нет"; }
        if(GetPVarInt(playerid,"GunLic")) { text5 = "В наличии"; } else { text5 = "Нет"; }
        SendClientMessage(playerid, COLOR_GREEN, "|__________________ Ваши лицензии __________________|");
        format(string, sizeof(string), "Права: %s.", text1);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на воздушный транспорт: %s", text4);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на водный транспорт: %s", text2);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на рыболовлю: %s", text3);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на оружие: %s", text5);
		SendClientMessage(playerid, COLOR_WHITE, string);
		SendClientMessage(playerid, COLOR_GREEN, "|______________________________________________|");
	    return 1;
 	}
 	if(strcmp(cmd,"/showlicenses",true)==0)
    {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /showlicenses [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете показать лицензии самому себе");
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    new text1[20],text2[20],text3[20],text4[20],text5[20];
		if(GetPVarInt(playerid,"CarLic")) text1 = "В наличии"; else text1 = "нет";
        if(GetPVarInt(playerid,"FlyLic")) text4 = "В наличии"; else text4 = "нет";
		if(GetPVarInt(playerid,"BoatLic")) text2 = "В наличии"; else text2 = "нет";
        if(GetPVarInt(playerid,"FishLic")) text3 = "В наличии"; else text3 = "нет";
        if(GetPVarInt(playerid,"GunLic")) text5 = "В наличии"; else text5 = "нет";
        format(string, sizeof(string), "|__________ Лицензии %s __________|", sendername);
        SendClientMessage(giveplayerid, COLOR_GREEN, string);
        format(string, sizeof(string), "Права: %s.", text1);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на воздушный транспорт: %s.", text4);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на водный транспорт: %s.", text2);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на рыболовлю: %s.", text3);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Лицензия на оружие: %s.", text5);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s показал вам свои лицензии.", sendername);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Вы показали свои лицензии %s.", giveplayer);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
 	}
 	if(strcmp(cmd,"/frisk",true)==0)
    {
        if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не коп");
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) SendClientMessage(playerid, COLOR_GREY, "Используйте: /frisk [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
		
		if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя обыскивать из машины");
		if (IsPlayerInAnyVehicle(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок находится в машине");
	    
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
	    
	    format(string, sizeof(string), "|__________ Найденные вещи у %s __________|", giveplayer);
	    SendClientMessage(playerid, COLOR_GREEN, string);

		if(GetPVarInt(giveplayerid,"Drugs") > 0)     SendClientMessage(playerid, COLOR_WHITE, "   - Наркотики");
		if(GetPVarInt(giveplayerid,"Materials") > 0) SendClientMessage(playerid, COLOR_WHITE, "   - Материалы");
		if(GetPVarInt(giveplayerid,"Phonebook") > 0) SendClientMessage(playerid, COLOR_WHITE, "   - Телефонная книга");
		if(GetPVarInt(giveplayerid,"KgFish") > 0)	 SendClientMessage(playerid, COLOR_WHITE, "   - Рыба");
		
		new gun, ammo;
		for(new i; i < 13; i ++)
		{
			GetPlayerWeaponData(giveplayerid, i, gun, ammo);
			if(gun == 0 || ammo == 0) continue;
			
			switch(gun)
			{
			    case 1..15, 39, 40: format(string, 128, "   - %s", aWeaponNames[gun]);
			    default: format(string, 128, "   - %s с %d патронами", aWeaponNames[gun], ammo);
			}
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		
		format(string, sizeof(string), "%s обыскал %s", sendername ,giveplayer);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    return 1;
 	}


	if(strcmp(cmd,"/sellgun",true)==0)
	{
		if (GetPVarInt(playerid,"Job") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не торговец оружием");

		new id, gun, money;
		
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			ShowPlayerDialog(playerid, 306, DIALOG_STYLE_LIST, RGB_SERVER"Оружие | Количество материалов",
			"Кастет | 20\nГольф Клюшка | 30\nБита | 30\nЛопата | 35\n9mm с глуш. | 130\nDesert Eagle | 200\nShotgun | 240\nMP5 | 230\nAK-47 | 300\nM4 | 300\nRifle | 300",
			"Далее", "Отмена");
			return SendClientMessage(playerid, COLOR_GREY, "Вы так же можете использовать: /sellgun [id игрока/часть имени] [id оружия] [цена]");
		}
		id = ReturnUser(tmp);

		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(!ProxDetectorS(15.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко");
  		if(GetPVarInt(id, "Level") < 3) return SendClientMessage(playerid, COLOR_GREY, "Игрок не достиг 3 уровня, чтобы покупать оружие");
    	if(GetPVarInt(id, "Jailed") != 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок находится в тюрьме");

        tmp = strtok(cmdtext, idx);
        gun = strval(tmp);
        switch(gun)
        {
            case 1, 2, 5, 6, 23, 24, 25, 29, 30, 31, 33: {}
            default:
            {
            	SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellgun [id игрока/часть имени] [id оружия] [цена]");
           	 	SendClientMessage(playerid, COLOR_GREY, "Оружие[ID|Материалы]: Кастет[1|20] Клюшка[2|30] Бита[5|30] Лопата[6|35] 9mmSD[23|130]");
           	 	return SendClientMessage(playerid, COLOR_GREY, "Оружие[ID|Материалы]: Дигл[24|200] Шотган[25|240] МП5[29|230] АК[30|300] М4[31|300] Рифл[33|300]");
            }
		}

        tmp = strtok(cmdtext, idx);
        money = strval(tmp);
		if(money < 1 || money > 10000) return SendClientMessage(playerid, COLOR_GREY, "Укажите цену от $1 до $10000");

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" купить «%s» за $%d", GetName(id), aWeaponNames[gun], money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам %s за $%d", GetName(playerid), aWeaponNames[gun], money);
		SendClientMessage(id, COLOR_WHITE, string);
		SendClientMessage(id, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");


		SetPVarInt(id, "BuyGun_ID", playerid);
		SetPVarInt(id, "BuyGun_Weapon", gun);
		SetPVarInt(id, "BuyGun_Money", money);
		SetPVarInt(id, "Accept_Type", 18);

				
		return 1;
	}
	if(strcmp(cmd,"/get",true)==0)
    {
		new x_job[256];
		x_job = strtok(cmdtext, idx);
		if(!strlen(x_job)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /get [Drugs/Fuel]");
	    if(strcmp(x_job,"drugs",true) == 0)
		{
		    if(GetPVarInt(playerid,"Job") != 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не наркодилер");
	        if(GetPVarInt(playerid,"Drugs")  > 1)
	        {
	            format(string, sizeof(string), "У Вас все есть еще %d грамм наркотиков, сначала избавьтесь от них", GetPVarInt(playerid,"Drugs"));
				SendClientMessage(playerid, COLOR_GREY, string);
	            return 1;
	        }
	        if(DrugsPritonAmmount < 1) return SendClientMessage(playerid, COLOR_GREY, "В притоне нет наркотиков");
	        new tel,price,ammount;
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /get drugs [ammount]");
			new level = GetPVarInt(playerid,"DrugsSkill");
			ammount = strval(tmp);
			if(level >= 0 && level <= 50)
			{ tel = 20; if(ammount < 1 || ammount > 6) return SendClientMessage(playerid, COLOR_GREY, "Вы можете купить от 1 до 6 грамм"); }
			else if(level >= 51 && level <= 100)
			{ tel = 15; if(ammount < 1 || ammount > 12) return SendClientMessage(playerid, COLOR_GREY, "Вы можете купить от 1 до 12 грамм"); }
			else if(level >= 101 && level <= 200)
			{ tel = 10; if(ammount < 1 || ammount > 24) return SendClientMessage(playerid, COLOR_GREY, "Вы можете купить от 1 до 24 грамм"); }
			else if(level >= 201 && level <= 400)
			{ tel = 5; if(ammount < 1 || ammount > 64) return SendClientMessage(playerid, COLOR_GREY, "Вы можете купить от 1 до 64 грамм"); }
			else if(level >= 401)
			{ tel = 4; if(ammount < 1 || ammount > 99) return SendClientMessage(playerid, COLOR_GREY, "Вы можете купить от 1 до 99 грамм"); }
		    if(!IsPlayerInRangeOfPoint(playerid,2.0,  323.0342,1118.5804,1083.8828)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в притоне");
		    price = ammount * tel;
		    if(GetPlayerPCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
	        format(string, sizeof(string), "Вы купили %d грамм за $%d", ammount, price);
			SendClientMessage(playerid, COLOR_WHITE, string);
	        GivePlayerPCash(playerid, -price, "get drug");
			GivePVarInt(playerid,"Drugs", ammount);
			DrugsPritonAmmount -= ammount;
			SaveOther();
		}
		else if(strcmp(x_job,"fuel",true) == 0)
		{
		    new GasStation = GetPlayerGasStation(playerid);

			if(GasStation == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не на заправочной станции");
			if(SBizzInfo[GasStation][sbLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Заправочная станция не работает");
			
		    if(GetPVarInt(playerid,"Fuel") != 0) return SendClientMessage(playerid, COLOR_GREY, "У Вас есть бензин в канистре");
		    
		    if(SBizzInfo[GasStation][sbProducts] < 20) return SendClientMessage(playerid, COLOR_GREY, "Заправочная станция временно не работает");
		    
		    new price = 20*SBizzInfo[GasStation][sbEntranceCost];
		    
		    if(GetPlayerPCash(playerid) < price) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");

		    format(string, sizeof(string), "Вы заполнили канистру бензином на 20 литров за $%d", price);
		    SendClientMessage(playerid,  COLOR_WHITE, string);
		    
		    SetPVarInt(playerid,"Fuel", 20);
			GivePlayerPCash(playerid, -price, "get fuel");
			
			GiveSBizMoney(GasStation, price);
			SBizzInfo[GasStation][sbProducts] -= 20;
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Используйте: /get [Drugs/Fuel]");
		return 1;
	}
	if(strcmp(cmd, "/fill", true) == 0)
	{
		new GasStation = GetPlayerGasStation(playerid);

		if(GasStation == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не на заправочной станции");

		if(SBizzInfo[GasStation][sbLocked] == 1) return SendClientMessage(playerid, COLOR_GREY, "Заправочная станция не работает");
		
		new veh = GetPlayerVehicleID(playerid);
		if(Gas[veh] > 99) return SendClientMessage(playerid, COLOR_GREY, "У Вас полный бак бензина");

		new FillPrice = (100 - Gas[veh]) * SBizzInfo[GasStation][sbEntranceCost];
		if(GetPlayerPCash(playerid) < FillPrice) return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");

        if(SBizzInfo[GasStation][sbProducts] < 100) return SendClientMessage(playerid, COLOR_GREY, "На заправочной станции кончилось топливо");

		GivePlayerPCash(playerid, -FillPrice, "fill");
		GiveSBizMoney(GasStation, FillPrice);
		SBizzInfo[GasStation][sbProducts] -= (100 - Gas[veh]);

	    SetTimerEx("Fillup", 7000, false, "ddd", playerid, veh, FillPrice);

	    SendClientMessage(playerid, COLOR_WHITE, "Заправка автомобиля, пожалуйста, подождите...");
    	return 1;
	}
	if(strcmp(cmd, "/sellfuel", true) == 0)
	{
	    if(GetPVarInt(playerid, "FuelTrucker") != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель бензовоза");

	    new veh = GetPlayerVehicleID(playerid);
		if(!IsFuelTruck(veh)) return SendClientMessage(playerid, COLOR_GREY, "Вам нужен бензовоз");

		new trailer = GetTrail(GetVehicleTrailer(veh));
		if(trailer == -1) return SendClientMessage(playerid, COLOR_GREY, "Требуется цистерна с топливом");

		if(BenzCar[trailer][Benz] < 1) return SendClientMessage(playerid, COLOR_GREY, "Цистерна Вашего бензовоза пустая");

		new FuelStation = GetPlayerGasStation(playerid);

		if(FuelStation == 0) return SendClientMessage(playerid, COLOR_GREY, "Вы не на заправочной станции");

		ShowGSInfo(playerid, FuelStation);

		return 1;
	}
	if(strcmp(cmd, "/fillcar", true) == 0)
	{
    	if(!GetPVarInt(playerid,"Fuel")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бензина в канистре");
		new car = GetPlayerVehicleID(playerid);
        if(Gas[car] > 81) return SendClientMessage(playerid, COLOR_GREY, "У Вас еще достаточно бензина");
        SendClientMessage(playerid, COLOR_WHITE, "Вы дозаправили свой автомобиль на 20 литров из канистры"); Gas[car] += 20; SetPVarInt(playerid,"Fuel",0);
		return 1;
	}
	if(strcmp(cmd, "/tazer", true) ==0)
	{
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не коп / военный / агент ФБР");
		if (GetPVarInt(playerid, "RegOnPaint") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время пейнтболла");
		if (GetPVarInt(playerid, "On_Duel") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время дуэли");
		if (GetPVarInt(playerid, "RegOnTDM") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время ТДМ");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя использовать в автомобиле");
		new suspect = GetClosestPlayer(playerid);
		
		if(PlayerCuffed[suspect]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
		if(GetDistanceBetweenPlayers(playerid,suspect) > 5) return SendClientMessage(playerid, COLOR_GREY, "Рядом с вами никого нет");
	    if(IsACop(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Нельзя связать копа / агента ФБР / солдата");
	    if(IsPlayerInAnyVehicle(suspect)) return SendClientMessage(playerid, COLOR_GREY, "Игрок находится в автомобиле, сначала вытащите его");
	    if(PlayerInGangZone(playerid) != -1 && PlayerInGangZone(suspect) != -1) return SendClientMessage(playerid, COLOR_GREY, "Команда не действует в данной местности");

	    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		
		format(string, sizeof(string), "%s ударил электрошоком %s", sendername ,giveplayer);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		GameTextForPlayer(suspect, "~r~Tazed", 3000, 3);
		
		TogglePlayerControllable(suspect, 0);
		PlayerCuffed[suspect] = 1;
		
		SetTimerEx("Untazer", 3000, 0, "d", suspect);
	    return 1;
	}

	if(strcmp(cmd, "/cuff", true) == 0)
	{
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не коп / ФБР / военный");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /cuff [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(IsACop(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете связать законника");
		if(PlayerCuffed[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		new car = GetPlayerVehicleID(playerid);
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете связать себя");
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
		{
		    if(PlayerCuffed[giveplayerid] != 2)
		    {
			    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "Вы связаны %s ", sendername);
				SendClientMessage(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Вы связали %s", giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s связал %s, он не может двигаться", sendername ,giveplayer);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
				TogglePlayerControllable(giveplayerid, 0);
				PlayerCuffed[giveplayerid] = 2;
			}
			else SendClientMessage(playerid, COLOR_GREY, "Игрок уже связан");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Игрок не в автомобиле или Вы не водитель");
		return 1;
	}
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не коп / ФБР / военный");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /uncuff [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете развязать себя");
		if(!PlayerCuffed[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не связан");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s развязал Вас", sendername);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Вы развязали %s", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);
		
		GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
		TogglePlayerControllable(giveplayerid, 1);
		PlayerCuffed[giveplayerid] = 0;
		return 1;
	}
    if(strcmp(cmd, "/find", true) == 0)
	{
	    if(GetPVarInt(playerid, "DrugsDelivery")) return 1;
	    if(FindTime[playerid] != 0) return 1;
		if(GetPVarInt(playerid,"Job") != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не детектив");
		if(UsedFind[playerid] != 0 && GetPVarInt(playerid,"DetSkill") < 401) return SendClientMessage(playerid, COLOR_GREY, "Команду можно использовать раз в 1 минуту");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /find [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(giveplayerid == playerid) return 1;
		new points;
		new level = GetPVarInt(playerid,"DetSkill");
		if(level >= 0 && level <= 50) points = 4;
		else if(level >= 51 && level <= 100) points = 6;
		else if(level >= 101 && level <= 200) points = 8;
		else if(level >= 201 && level <= 400) points = 10;
		else if(level >= 401) points = 12;
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(giveplayerid, X,Y,Z);
		
		DisablePlayerRaceCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
		SetPlayerCheckpoint(playerid, X,Y,Z, 6);

		
		FindTime[playerid] = 1;
		FindTimePoints[playerid] = points;
		SetTimerEx("Findtimer", points*1000, 0, "d", playerid);

		if(GetPVarInt(playerid,"DetSkill") < 401) SetTimerEx("Usefind", 60000, 0, "d", playerid);
		GivePVarInt(playerid,"DetSkill",1);
		UsedFind[playerid] = 1;
		level = GetPVarInt(playerid,"DetSkill");
		if(level == 50) SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 2 профессии детектив");
		else if(level == 100) SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 3 профессии детектив");
		else if(level == 200) SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 4 профессии детектив");
		else if(level == 400) SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 5 профессии детектив");
	    return 1;
	}

	if(strcmp(cmd, "/freehim", true) == 0)
	{
    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /freehim [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if (GetPVarInt(playerid,"Leader") != 1) return SendClientMessage(playerid, COLOR_GREY, "Вы не лидер полиции");
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(GetPVarInt(giveplayerid,"Jailed") != 1 || GetPVarInt(giveplayerid,"JailTime") < 1) return SendClientMessage(playerid, COLOR_GREY,"Этот игрок не в тюрьме");
		new plName[24];
		GetPlayerName(giveplayerid, plName, 24 );
		format( string, 256, "Вы выпустили %s из тюрьмы",plName);
		SendClientMessage(playerid,COLOR_WHITE,string);
		SendClientMessage(giveplayerid, COLOR_YELLOW, "Вы были досрочно освобождены");
		
		SetPlayerInterior(giveplayerid, 6);
		oSetPlayerPos(giveplayerid,246.623672,67.595924,1003.640625);
		SetPlayerFacingAngle(giveplayerid, 180.732223);
		SetCameraBehindPlayer(giveplayerid);
		SetPVarInt(giveplayerid,"Jailed",0);
		SetPVarInt(giveplayerid,"JailTime", 0);
		Pobegtime[giveplayerid] = 0;
		SetPlayerVirtualWorld(giveplayerid, 0);
  		return 1;
	}
	if(strcmp(cmd, "/giveorder", true) == 0)
	{
	    if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не коп");
	    if (GetPVarInt(playerid, "Rank") < 10) return SendClientMessage(playerid, COLOR_GREY, "Доступно с 10 ранга");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /giveorder [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(ApprovedLawyer[giveplayerid] > 0) return SendClientMessage(playerid, COLOR_GREY, "У игрока уже есть ордер");
		if(GetPVarInt(giveplayerid, "Job") != 2) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не адвокат");

	    ApprovedLawyer[giveplayerid] = 1;
	    
	    format(string, sizeof(string), "[Order] %s[%d] выдал ордер %s[%d]", GetName(playerid), playerid, GetName(giveplayerid), giveplayerid);
	    SendFamilyMessage(GetPVarInt(playerid, "Team"), COLOR_BLUE, string);

	    format(string, sizeof(string), "%s[%d] выдал Вам ордер на освобождение", GetName(playerid), playerid);
	    return SendClientMessage(giveplayerid, COLOR_WHITE, string);
	}
	if(strcmp(cmd, "/jailed", true) == 0)
	{
	    if(GetPVarInt(playerid,"Job") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не адвокат");
	    
	    for(new i; i < MAX_PLAYERS; i++)
	    {
			if(IsPlayerConnected(i) && GetPVarInt(i, "Jailed") == 1 && GetPVarInt(i, "JailTime") > 0)
			{
			    if(AFKText[i] > 4) format(string, sizeof(string), "%s[ID: %d], осталось сидеть %d сек. {bbbbbb}[AFK: %d сек.]", GetName(i), i, GetPVarInt(i, "JailTime"), AFKText[i]-4);
	        	else format(string, sizeof(string), "%s[ID: %d], осталось сидеть %d сек.", GetName(i), i, GetPVarInt(i, "JailTime"));

				SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/free", true) == 0)
	{
		if(GetPVarInt(playerid,"Job") != 2) return SendClientMessage(playerid, COLOR_GREY, "Вы не адвокат");
		if(GetPVarInt(playerid, "Team") != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не работник мэрии");
		if(GetPVarInt(playerid,"LawSkill") > 400) ApprovedLawyer[playerid] = 1;

		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /free [id/часть ника] [сумма]");
		new id = ReturnUser(tmp);
		
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /free [id/часть ника] [сумма]");
		new money = strval(tmp);
		
		if (!ProxDetectorS(20.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Вы слишком далеко от заключенного");
		
		if(money > 20000 || money < 1) return SendClientMessage(playerid, COLOR_GREY, "Укажите сумму от $1 до $20000");
		
		if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		
		if(id == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете освободить себя");
		
		if(GetPVarInt(id, "Jailed") != 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок не нуждается в Ваших услугах");
		
		if(ApprovedLawyer[playerid] < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет ордера");

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предложил Вам освобождение из тюрьмы за $%d", GetName(playerid), money);
		SendClientMessage(id, COLOR_WHITE, string);
		SendClientMessage(id, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" освобождение за $%d", GetName(id), money);
		SendClientMessage(playerid, COLOR_WHITE, string);
			
		SetPVarInt(id, "Accept_Type", 15);
		SetPVarInt(id, "Free_Id", playerid);
		SetPVarInt(id, "Free_Money", money);
		return 1;
	}

	if(strcmp(cmd,"/sellcar",true)==0)
	{
        if(GetPVarInt(playerid,"Job") != 10) return SendClientMessage(playerid, COLOR_GREY, "Вы не продавец машин");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellcar [id/часть ника] [цена]");
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellcar [id/часть ника] [цена]");
		new money = strval(tmp);

		if (money < 1 || money > 1000) 					 return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $1 до $1000");
		if (!IsPlayerConnected(giveplayerid)) 			 return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
	    if (giveplayerid == playerid) 					 return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продать авто самому себе");
	    if (CarCalls[giveplayerid]) 					 return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже покупал автомобиль");
		if (!IsPlayerInAnyVehicle(giveplayerid))		 return SendClientMessage(playerid, COLOR_GREY, "Покупатель должен находиться в автомобиле");

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предложил Вам купить этот автомобиль за $%d", GetName(playerid), money);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		SendClientMessage(giveplayerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" купить автомобиль за $%d", GetName(giveplayerid), money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SetPVarInt(giveplayerid, "CarDellier_Player", playerid);
		SetPVarInt(giveplayerid, "CarDellier_Price", money);

		SetPVarInt(giveplayerid, "Accept_Type", 1); // Это для того чтобы при нажатии на кнопку различать, что предложили игроку
		return 1;
	}
	if(strcmp(cmd, "/ticket", true) == 0)
	{
        if(!IsACop(playerid)) 		return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский/ФБР/армеец");
    	tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) 			return SendClientMessage(playerid, COLOR_GREY, "Используйте: /ticket [id/часть ника] [цена] [причина]");
		giveplayerid = ReturnUser(tmp);
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) 			return SendClientMessage(playerid, COLOR_GREY, "Используйте: /ticket [id/часть ника] [цена] [причина]");
		moneys = strval(tmp);

		if (moneys < 1 || moneys > 10000) 				 return SendClientMessage(playerid, COLOR_GREY, "Укажите размер штрафа от $1 до $10000");
		if (!IsPlayerConnected(giveplayerid)) 			 return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
        if (GetPVarInt(giveplayerid, "ConnectedTime") < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком мало играл");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;

		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /ticket [id/часть ника] [цена] [причина]");

		format(string, sizeof(string), "Вы выписали штраф "RGB_GREEN"%s"RGB_WHITE" на сумму $%d, причина: %s", GetName(giveplayerid), moneys, result);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" выписал Вам штраф на сумму $%d, причина: %s", GetName(playerid), moneys, result);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		SendClientMessage(giveplayerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(giveplayerid, "Ticket_ID", playerid);
		SetPVarInt(giveplayerid, "Ticket_Money", moneys);

		SetPVarInt(giveplayerid, "Accept_Type", 2);
		return 1;
	}
	if(strcmp(cmd, "/deliver", true) == 0)
	{
    	if(GetPVarInt(playerid,"Job") != 15) return SendClientMessage(playerid, COLOR_GREY, "Вы не разносчик газет");
        if(GetPVarInt(playerid, "BringingPaper") != 1) 	 return SendClientMessage(playerid, COLOR_GREY, "Возьмите газеты в San News");
        tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /deliver [id/часть ника]");
        giveplayerid = ReturnUser(tmp);
		if (!IsPlayerConnected(giveplayerid)) return 1;
		if (!ProxDetectorS(8.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");


		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" взять газету", GetName(giveplayerid));
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предложил Вам взять газету", GetName(playerid));
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		SendClientMessage(giveplayerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(giveplayerid, "Paper_ID", playerid);
		SetPVarInt(giveplayerid, "Accept_Type", 3);
		return 1;
	}
	if(strcmp(cmd, "/service", true) == 0)
	{
	    
	    new TotalTaxis;
	    new TotalMechs;
	    new TotalMedics;
	    
	    for(new i; i < MAX_PLAYERS; i++)
	    {
	        if(!IsPlayerConnected(i)) continue;
	        if(GetPVarInt(i, "Job") == 17 &&  IsTaxi(GetPlayerVehicleID(i))) TotalTaxis++;
	        if(GetPVarInt(i, "Job") == 7 &&   IsAMehanikCar(GetPlayerVehicleID(i))) TotalMechs++;
	        if(GetPVarInt(i, "Team") == 4 &&  IsAnAmbulance(GetPlayerVehicleID(i))) TotalMedics++;
	    }
	    
	    format(string, sizeof(string), "Такси \t\t"RGB_SERVER"[%d рабочих]"RGB_WHITE"\nМеханик \t"RGB_SERVER"[%d рабочих]"RGB_WHITE"\nМедик \t\t"RGB_SERVER"[%d рабочих]", TotalTaxis, TotalMechs, TotalMedics);
	    ShowPlayerDialog(playerid, 340, DIALOG_STYLE_LIST, RGB_SERVER"Какая услуга Вам нужна?", string, "Далее", "Отмена");

		return 1;
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
	    if(GetPVarInt(playerid,"Job") != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
	    
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) 					return SendClientMessage(playerid, COLOR_GREY, "Используйте: /refill [id/часть ника] [цена] ");
		new playa, money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);

		if (money < 1 || money > 500) 			 return SendClientMessage(playerid, COLOR_GREY, "Укажите цену от $1 до $500");
        if (playa == playerid) 					 return SendClientMessage(playerid, COLOR_GREY, "Нельзя заправить самого себя");
		if (!IsPlayerConnected(playa)) 			 return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
        if (!ProxDetectorS(8.0, playerid, playa))return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
        if (!IsPlayerInAnyVehicle(playa))  		 return SendClientMessage(playerid, COLOR_GREY, "Игрок не в машине");
        if (GetPVarInt(playa, "ConnectedTime") < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком мало играл");

        if (GetPVarInt(playerid, "A_Food_Refill") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы уже заправляли автомобиль, подождите несколько секунд");
		SetPVarInt(playerid, "A_Food_Refill", gettime()+6);
		
	    format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" заправиться за $%d", GetName(playa), money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), "Механик "RGB_GREEN"%s"RGB_WHITE" предложил Вам заправку за $%d", GetName(playerid), money);
		SendClientMessage(playa, COLOR_WHITE, string);
		SendClientMessage(playa, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(playa, "Refill_ID", playerid);
		SetPVarInt(playa, "Refill_Money", money);
		SetPVarInt(playa, "Accept_Type", 6);
		return 1;
	}
	if(strcmp(cmd, "/repair", true) == 0)
	{
	    if(GetPVarInt(playerid,"Job") != 7) return SendClientMessage(playerid, COLOR_GREY, "Вы не механик");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /repair [id/часть ника] [цена] ");
		new playa, money;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		money = strval(tmp);

		if (money < 1 || money > 500) 			 return SendClientMessage(playerid, COLOR_GREY, "Укажите цену от $1 до $500");
        if (playa == playerid) 					 return SendClientMessage(playerid, COLOR_GREY, "Нельзя починить самого себя");
		if (!IsPlayerConnected(playa)) 			 return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
        if (!ProxDetectorS(8.0, playerid, playa))return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
        if (!IsPlayerInAnyVehicle(playa))		 return SendClientMessage(playerid, COLOR_GREY, "Игрок не в машине");
        if (GetPVarInt(playa, "ConnectedTime") < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком мало играл");
        
        if (GetPVarInt(playerid, "A_Food_Repain") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Вы уже ремонтировали автомобиль, подождите несколько секунд");
		SetPVarInt(playerid, "A_Food_Repain", gettime()+6);
		
	    format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" ремонт за $%d", GetName(playa), money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), "Механик "RGB_GREEN"%s"RGB_WHITE" предложил Вам ремонт за $%d",GetName(playerid), money);
		SendClientMessage(playa, COLOR_WHITE, string);
		SendClientMessage(playa, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(playa, "Repair_ID", playerid);
		SetPVarInt(playa, "Repair_Money", money);
		SetPVarInt(playa, "Accept_Type", 7);
		return 1;
	}
	if(strcmp(cmd, "/live", true) == 0)
	{
		if(GetPVarInt(playerid,"Team") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не репортер");
	    if(TalkingLive[playerid] != 999)
	    {
	        SendClientMessage(TalkingLive[playerid], COLOR_WHITE, "Прямой эфир окончен");
            TalkingLive[TalkingLive[playerid]] = 999;
            TalkingLive[playerid] = 999;
	        return SendClientMessage(playerid, COLOR_WHITE, "Прямой эфир окончен");
	    }
	    if(GetPVarInt(playerid,"NewsSkill") < 400) return SendClientMessage(playerid, COLOR_GREY, "Ваш навык репортёра слишком мал, чтобы общаться с людьми");
		tmp = strtok(cmdtext, idx);

		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /live [id/часть ника]");
        giveplayerid = ReturnUser(tmp);

		if (!IsPlayerConnected(giveplayerid)) 				return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(5.0, playerid, giveplayerid)) 	return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");

	    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете взять интервью у самого себя");

		new newcar = GetPlayerVehicleID(playerid);
	    if(!IsASanNewsCar(newcar)) return SendClientMessage(playerid, COLOR_GREY, "Вы можете вещать только из фургона или вертолета San News");

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предложил Вам выйти в прямой эфир", GetName(playerid));
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		SendClientMessage(giveplayerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" выйти в прямой эфир", GetName(giveplayerid));
		SendClientMessage(playerid, COLOR_WHITE, string);

		SetPVarInt(giveplayerid, "Live_ID", playerid);
		SetPVarInt(giveplayerid, "Accept_Type", 8);
		return 1;
	}
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
	    if(GetPVarInt(playerid,"Job") != 4) return SendClientMessage(playerid, COLOR_GREY, "Вы не продавец наркотиков");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /selldrugs [id/часть ника] [количество] [цена]");
		new playa,money,needed;
		playa = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /selldrugs [id/часть ника] [количество] [цена]");
		needed = strval(tmp);
		if(needed < 1 || needed > 99) 				return SendClientMessage(playerid, COLOR_GREY, "Граммов должно быть от 1 до 99");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) 							return SendClientMessage(playerid, COLOR_GREY, "Используйте: /selldrugs [id/часть ника] [количество] [цена]");
		money = strval(tmp);
		if (money < 1 || money > 100000) 			return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $1 до $100000");
		if (needed > GetPVarInt(playerid,"Drugs")) 	return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько наркотиков с собой");
		if (!IsPlayerConnected(playa)) 				return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(8.0, playerid, playa)) 	return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком далеко от Вас");
	    if (playa == playerid) 						return SendClientMessage(playerid, COLOR_GREY, "Вы не можете продавать самому себе");
        if (GetPVarInt(playa, "ConnectedTime") < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком мало играл");

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" %d гр. наркотиков за $%d", GetName(playa), needed, money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам %d гр. наркотиков за $%d", GetName(playerid), needed, money);
		SendClientMessage(playa, COLOR_WHITE, string);
		SendClientMessage(playa, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(playa, "Drug_ID", playerid);
		SetPVarInt(playa, "Drug_Gram", needed);
		SetPVarInt(playa, "Drug_Money", money);
		SetPVarInt(playa, "Accept_Type", 9);

		return 1;
	}
	if(strcmp(cmd, "/fightstyle", true) == 0)
	{
	    if(GetPVarInt(playerid,"Job") != 12) return SendClientMessage(playerid, COLOR_GREY, "Вы не тренер");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GREY, "Используйте: /fightstyle [id/часть ника] [номер стиля] [цена]");
			return SendClientMessage(playerid, COLOR_GREY, "Стили: 1 - normal, 2 - grabkick, 3 - boxing, 4 - kungfu, 5 - kneehead");
		}
		new playa,money,needed;
		playa = ReturnUser(tmp);
		if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Нельзя обучить самого себя");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return 1;
		needed = strval(tmp);
		if(needed < 1 || needed > 5) 	return SendClientMessage(playerid, COLOR_GREY, "Укажите правильный номер стиля боя (1-5)");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return 1;
		money = strval(tmp);
		if(money < 1 || money > 2000) 	return SendClientMessage(playerid, COLOR_GREY, "Цена должна быть от $1 до $2000");
		new skill = GetPVarInt(playerid,"TrainerSkill");
		if(needed == 3 && skill < 51) 	return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 2 skill профессии тренер чтобы обучать этому стилю");
		if(needed == 4 && skill < 101) 	return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 3 skill профессии тренер чтобы обучать этому стилю");
		if(needed == 5 && skill < 401) 	return SendClientMessage(playerid, COLOR_GREY, "Вам нужен 5 skill профессии тренер чтобы обучать этому стилю");
		if(!IsPlayerConnected(playa)) 	return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(!ProxDetectorS(8.0, playerid, playa)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
        if(GetPVarInt(playa, "ConnectedTime") < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком мало играл");
		new ftext[20];
		switch(needed)
		{
			case 1: ftext = "'Normal'";
			case 2: ftext = "'Grabkick'";
			case 3: ftext = "'Boxing'";
			case 4: ftext = "'Kungfu'";
			case 5: ftext = "'Kneehead'";
		}

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" изучить стиль боя %s за $%d", GetName(playa), ftext, money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам изучить стиль боя %s за $%d", GetName(playerid), ftext, money);
		SendClientMessage(playa, COLOR_WHITE, string);
		SendClientMessage(playa, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(playa, "Style_ID", playerid);
		SetPVarInt(playa, "Style_Style", needed);
		SetPVarInt(playa, "Style_Money", money);
		SetPVarInt(playa, "Accept_Type", 10);

		return 1;
	}
	if(strcmp(cmd, "/sex", true) == 0)
	{
		if(GetPVarInt(playerid,"Job") != 3) return SendClientMessage(playerid, COLOR_GREY, "Вы не проститутка");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sex [id/часть ника] [цена]");
		giveplayerid = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		new money;
		money = strval(tmp);
		if(money < 1 || money > 500) 						return SendClientMessage(playerid, COLOR_GREY, "За секс можно брать от $1 до $500");
		if(!IsPlayerConnected(giveplayerid)) 				return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(!ProxDetectorS(8.0, playerid, giveplayerid)) 	return SendClientMessage(playerid, COLOR_GREY, "Игрок далево от Вас");
		if(giveplayerid == playerid) 						return SendClientMessage(playerid, COLOR_GREY, "Вы не можете заниматься сексом с собой");
		if(!IsPlayerInAnyVehicle(playerid))  				return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в машине");
		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid))   return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть в одной машине");
        if (GetPVarInt(giveplayerid, "ConnectedTime") < 1) return SendClientMessage(playerid, COLOR_GREY, "Игрок слишком мало играл");

		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" заняться сексом за $%d", GetName(giveplayerid), money);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам заняться сексом за $%d", GetName(playerid), money);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		SendClientMessage(giveplayerid, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(giveplayerid, "Sex_ID", playerid);
		SetPVarInt(giveplayerid, "Sex_Money", money);

		SetPVarInt(giveplayerid, "Accept_Type", 11);
		return 1;
	}
	if(strcmp(cmd, "/invite", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /invite [id/часть ника]");
		new para1;
		new ftext[20];
		para1 = ReturnUser(tmp);
		if (GetPVarInt(playerid,"Leader") < 1) 				return SendClientMessage(playerid, COLOR_GREY, "Команда доступна только для лидеров");
		if (!IsPlayerConnected(para1) || IsPlayerNPC(para1))return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
	    if (GetPVarInt(para1,"Team")) 						return SendClientMessage(playerid, COLOR_GREY, "Этот игрок уже состоит в другой фракции");
  		if (GetPVarInt(para1,"Jailed")) 					return SendClientMessage(playerid, COLOR_GREY, "Игрок находится в тюрьме");

		if (GetPVarInt(para1,"Level") < 3) 					return SendClientMessage(playerid, COLOR_GREY, "Игрок должен набрать 3 лвл");

    	if (!ProxDetectorS(10.0, playerid, para1)) 			return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");

		switch(GetPVarInt(playerid,"Leader"))
		{
			case 1:  ftext = "Полиции";
	        case 2:  ftext = "ФБР";
	        case 3:  ftext = "Армии";
	        case 4:  ftext = "Медикам";
	        case 5:  ftext = "La Cosa Nostra";
	        case 6:  ftext = "Yakuza";
			case 7:  ftext = "Мэрии";
	        case 8:  ftext = "Hitman Agency";
	        case 9:  ftext = "CNN Studio";
	        case 10:  ftext = "Байкерам";
	        case 11:  ftext = "Лицензиарам";
            case 12:  ftext = "Russian Mafia";
            case 13:  ftext = "Ballas";
            case 14:  ftext = "Grove st.";
            case 15:  ftext = "Vagos";
            case 16:  ftext = "Coronos";
            case 17:  ftext = "Rifa";
            case 18:  ftext = "Колхозу";
			default: return 1;
		}


		format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" присоединиться к %s", GetName(para1), ftext);
		SendClientMessage(playerid, COLOR_WHITE, string);

		format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам присоединиться к %s", GetName(playerid), ftext);
		SendClientMessage(para1, COLOR_WHITE, string);
		SendClientMessage(para1, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");

		SetPVarInt(para1, "Invite_Fraction", GetPVarInt(playerid, "Leader"));
		SetPVarInt(para1, "Invite_ID", playerid);
		SetPVarInt(para1, "Accept_Type", 12);

		return 1;
	}
	if(strcmp(cmd, "/tow", true) == 0)
	{
	   	if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Вы не водитель");

	   	new car = GetPlayerVehicleID(playerid);
  		if (GetVehicleModel(car) != 525) return SendClientMessage(playerid, COLOR_GREY, "Ваш автомобиль не может брать на буксир");

        new Float:vX,Float:vY,Float:vZ;

        for(new i; i < MAX_VEHICLES; i ++)
     	{
            GetVehiclePos(i,vX,vY,vZ);
            if(IsPlayerInRangeOfPoint(playerid, 7.0, vX, vY, vZ) && i != car)
         	{
              	if(IsTrailerAttachedToVehicle(car))
                {
                	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
                	break;
                }
                else
                {
              		AttachTrailerToVehicle(i, car);
              		break;
				}
          	}
        }
		return 1;
 	}


	if(strcmp(cmd, "/callcar", true) == 0)
	{
    	if(!CarCalls[playerid]) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет авто");
        new Float:plocx,Float:plocy,Float:plocz;
        GetPlayerPos(playerid, plocx, plocy, plocz);
        
        for(new i; i < MAX_PLAYERS; i++)
        {
            if(!IsPlayerConnected(i)) continue;
            if(GetPlayerVehicleID(i) == CarID[playerid])
            {
                return SendClientMessage(playerid, COLOR_GREY, "Автомобиль занят");
			}
		}
		SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz);
		CarCalls[playerid]--;
		format(string, sizeof(string), "Вы еще можете вызвать машину %d раз(а)", CarCalls[playerid]);
		SendClientMessage(playerid, COLOR_WHITE, string);
	    return 1;
	}

	if(strcmp(cmd,"/irc",true)==0)
	{
        new x_nr[256];
		x_nr = strtok(cmdtext, idx);
		if(!strlen(x_nr)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /irc join [номер канала], /irc leave, /irc members");
	    if(strcmp(x_nr,"join",true) == 0)
		{
		    if(GetPVarInt(playerid, "IrcChannel")) return SendClientMessage(playerid, COLOR_GREY, "Вы уже находитесь в IRC канале, используйте "RGB_BLUE"/irc leave"RGB_WHITE", чтобы выйти");
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /irc join [номер канала]");

			new channel = strval(tmp);
			if(channel < 1 || channel > 99999) return SendClientMessage(playerid, COLOR_GREY, "Укажите номер канала от 1 до 99999");
			JoinIRCChannel(playerid,channel);

		}
		else if(strcmp(x_nr,"leave",true) == 0)
		{
		    if(!GetPVarInt(playerid, "IrcChannel")) return SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь в Канале IRC");
            LeaveIRCChannel(playerid, GetPVarInt(playerid, "IrcChannel"));
	        return 1;
		}
		else if(strcmp(x_nr,"members",true) == 0)
		{
		    if(!GetPVarInt(playerid, "IrcChannel")) return SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь в Канале IRC.");
            new channel = GetPVarInt(playerid, "IrcChannel");
			format(string, sizeof(string), RGB_ICHAT1"• " RGB_ICHAT2"IRC "RGB_WHITE "Список игроков IRC канала " RGB_ICHAT1 "%d" RGB_WHITE", игроков в канале: " RGB_ICHAT1 "%d.", channel, CountIRCMembers(channel));
			SendClientMessage(playerid, COLOR_WHITE, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
				if(GetPVarInt(i, "IrcChannel") != channel) continue;
				GetPlayerName(i, sendername, sizeof(sendername));
				if(AFKText[i] < 4) format(string, sizeof(string), RGB_ICHAT1 "• "RGB_WHITE "%s",sendername);
				else format(string, sizeof(string), RGB_ICHAT1 "• "RGB_WHITE"%s "RGB_GREY"[AFK: %d сек.]", sendername, AFKText[i]-4);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
	        return 1;
		}
		else SendClientMessage(playerid, COLOR_GREY, "Используйте: /irc join [номер канала], /irc leave, /irc members");
		return 1;
 	}
 	if(strcmp(cmd,"/i",true)==0)
	{
        if(!GetPVarInt(playerid,"IrcChannel")) return SendClientMessage(playerid, COLOR_GREY, "Вы не находитесь в Канале IRC");
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}


		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /i [текст]");
		

		format(string, sizeof(string), RGB_ICHAT1"• " RGB_ICHAT2 "IRC " RGB_ICHAT1"%s: " RGB_WHITE"%s", sendername, result);
		if(containsAnyIP(result))
		{
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "WARN(/i): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
			return 1;
		}
		SendIRCMessage(GetPVarInt(playerid,"IrcChannel"), COLOR_WHITE, string);
	    return 1;
	}
	if(strcmp(cmd, "/news", true) == 0)
	{
		if(GetPVarInt(playerid,"Team") != 9) return SendClientMessage(playerid, COLOR_GREY, "Вы не репортёр");
	    new newcar = GetPlayerVehicleID(playerid);
		if(GetPVarInt(playerid,"MuteTime") > gettime())
		{
		    format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
		    return SendClientMessage(playerid, COLOR_MUTE, string);
		}
		if(!IsASanNewsCar(newcar)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в фургоне San News или в вертолёте");


		GetPlayerName(playerid, sendername, sizeof(sendername));
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /news [текст]");
		

		format(string, sizeof(string), "<< News >> %s: %s", sendername, result);
		if(containsAnyIP(cmdtext))
		{
			SendClientMessage(playerid, NEWSCOLORNEW, string);
			format(string, sizeof(string), "WARN(/news): %s[id: %d] %s", sendername, playerid, result);
			ABroadCast(string);
			return 1;
		}
		OOCNews(NEWSCOLORNEW,string);
		if(GetPVarInt(playerid,"NewsSkill") < 401) GivePVarInt(playerid,"NewsSkill",1);
		switch(GetPVarInt(playerid,"NewsSkill"))
		{
			case 50: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 2 професии репортер");
			case 100: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 3 професии репортер");
			case 200: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 4 професии репортер");
			case 400: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли уровня 5 професии репортер и теперь можете говорить в прямом эфире с кем угодно");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/usedrugs", true) == 0)
	{

   	 	if (GetPVarInt(playerid, "RegOnTDM") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время ТДМ");
	    if (GetPVarInt(playerid, "On_Duel") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время дуэли");
	    if (GetPVarInt(playerid, "RegOnPaint") == 1) return SendClientMessage(playerid, COLOR_GREY, "Недоступно во время пейнтболла");
		if (GetPVarInt(playerid,"Drugs") < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет наркотиков");
		if (GetPVarInt(playerid,"UseDrugsTime") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "Принимать наркотики можно раз в 15 секунд");

		new drunklev = GetPlayerDrunkLevel(playerid);
		
		new Float:hp;
		GetPlayerHealth(playerid, hp);
		if(hp <= 150.0)
		{
			hp += 20.0;
			if(GetPVarInt(playerid, "Level") >= 20) hp += 10.0;
			if(GetPVarInt(playerid, "Achievement_Drug_Addict") >= 1000) hp += 10.0;
			if(GetPVarInt(playerid, "Achievement_Gangwar") >= 100) hp += 10.0;

			SetPlayerHealthUAC(playerid, hp);
		}
		else
		{
		    SetPlayerHealthUAC(playerid, 150.0);
		}
		
		SetPVarInt(playerid,"UseDrugsTime",15);
	    GivePVarInt(playerid,"Drugs", -2);
	    GiveAchievement(playerid, 13, 2);
	    
	    SetPlayerTime(playerid,12,0); //noon
        SetPlayerWeather(playerid, -11);
		SetPlayerWeather(playerid, -66);
		
		SetPlayerDrunkLevel(playerid, drunklev+1000);
		
		if(DrugsGone[playerid] != -1) KillTimer(DrugsGone[playerid]);
		DrugsGone[playerid] = SetTimerEx("DrugEffectGone", 600000, false, "i", playerid);
		
		GetPlayerName(playerid, sendername, sizeof(sendername));
    	format(string, sizeof(string), "%s достал немного наркоты и начал нюхать", sendername);
    	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    	SendClientMessage(playerid, COLOR_WHITE, "2 грамма наркотиков использовано");
    	
    	if(GetPVarInt(playerid, "Drugs_Ad") < 101) GivePVarInt(playerid, "Drugs_Ad", 1);
    	if((GetPVarInt(playerid, "Drugs_Ad") % 10) == 0)
    	{
    	    format(string, sizeof(string), "Ваш уровень наркозависимости достиг %d", GetPVarInt(playerid, "Drugs_Ad"));
    	    SendClientMessage(playerid, COLOR_YELLOW, string);
    	}
    	if(GetPlayerAnimationIndex(playerid) == 386)
    	{
    	    ClearAnimations(playerid);
		}
    	
    	SetPVarInt(playerid, "UseDrugsTime", gettime()+15);
		return 1;
	}
	if(strcmp(cmd, "/eject", true) == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в автомобиле");
        if(GetPlayerState(playerid) !=PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY, "Вы не водитель");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /eject [id/часть ника]");
		new playa = ReturnUser(tmp);
		new test = GetPlayerVehicleID(playerid);
		if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
        if(playa == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете выбросить себя из машины");
        if(!IsPlayerInVehicle(playa,test)) return SendClientMessage(playerid, COLOR_GREY, "Игрок не в Вашей машине");
		new PName[MAX_PLAYER_NAME];
		GetPlayerName(playerid,PName,sizeof(PName));
		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
		format(string, sizeof(string), "Вы выбросили %s из автомобиля", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s выбросил Вас из автомобиля", PName);
		SendClientMessage(playa, COLOR_WHITE, string);
		RemovePlayerFromVehicle(playa);
		return 1;
	}

	if(strcmp(cmd, "/dropcar", true) == 0)
	{
        if(!IsPlayerInRangeOfPoint(playerid,5.0,-1547.9330,124.6081,3.5547)) return 1;
        if(!IsPlayerInAnyVehicle(playerid)) return 1;
        new vehicle = GetPlayerVehicleID(playerid);
	    new model = GetVehicleModel(vehicle);
	    for(new i = 0; i < 10; i ++)
		{
			if(model == WantedCars[0][i] && !WantedCars[1][i])
			{
				
				WantedCars[1][i] = 1;
				UpdateWantedCarsText();
		        GivePVarInt(playerid, "JackSkill", 1);
		        new level = GetPVarInt(playerid, "JackSkill");
		        new money;
		        new Float:health;
			    GetVehicleHealth(vehicle, health);
				new vehhealth = floatround(health);
				
				if(vehhealth > 1000 || vehhealth < 1)
			    {
			        KickCheater(playerid, DROPCARCHEAT2);
			        return 1;
				}
				
		        switch(level)
		        {
					case 50:  SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли 2 уровня автоугонщика");
					case 100: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли 3 уровня автоугонщика");
					case 200: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли 4 уровня автоугонщика");
					case 400: SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли 5 уровня автоугонщика");
				}
				switch(level)
		        {
					case 0..50:
					{
					    money = random(sizeof(SELLCAR1));
					    format(string, sizeof(string), "Вы продали автомобиль за $%d, повреждения: %d/1000 (-$%d)", SELLCAR1[money]-((1000-vehhealth)/2),1000-vehhealth,(1000-vehhealth)/2);
						GivePlayerPCash(playerid, SELLCAR1[money]-((1000-vehhealth)/2), "WantedCars");
					}
					case 51..100:
					{
					    money = random(sizeof(SELLCAR2));
					    format(string, sizeof(string), "Вы продали автомобиль за $%d, повреждения: %d/1000 (-$%d)", SELLCAR2[money]-((1000-vehhealth)/2),1000-vehhealth,(1000-vehhealth)/2);
						GivePlayerPCash(playerid, SELLCAR2[money]-((1000-vehhealth)/2), "WantedCars");
					}
		            case 101..200:
					{
					    money = random(sizeof(SELLCAR3));
					    format(string, sizeof(string), "Вы продали автомобиль за $%d, повреждения: %d/1000 (-$%d)", SELLCAR3[money]-((1000-vehhealth)/2),1000-vehhealth,(1000-vehhealth)/2);
						GivePlayerPCash(playerid, SELLCAR3[money]-((1000-vehhealth)/2), "WantedCars");
					}
					case 201..400:
					{
					    money = random(sizeof(SELLCAR4));
					    format(string, sizeof(string), "Вы продали автомобиль за $%d, повреждения: %d/1000 (-$%d)", SELLCAR4[money]-((1000-vehhealth)/2),1000-vehhealth,(1000-vehhealth)/2);
						GivePlayerPCash(playerid, SELLCAR4[money]-((1000-vehhealth)/2), "WantedCars");
					}
					default:
					{
					    format(string, sizeof(string), "Вы продали автомобиль за $%d, повреждения: %d/1000 (-$%d)", 1000-((1000-vehhealth)/2),1000-vehhealth,(1000-vehhealth)/2);
						GivePlayerPCash(playerid, 1000-((1000-vehhealth)/2), "WantedCars");
					}
				}
				SendClientMessage(playerid, COLOR_GREEN, string);
				GameTextForPlayer(playerid, "~r~Car Sold", 2500, 1);
			    SetVehicleToRespawn(vehicle);
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Этого автомобиля нет в списке на экспорт");
		return 1;
	}
	if(strcmp(cmd, "/quitjob", true) == 0)
	{
	    if(!GetPVarInt(playerid,"Job")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет работы");
	    SetPVarInt(playerid,"Job", 0);
		return 1;
	}
	if(strcmp(cmd, "/dd", true) == 0)
	{
 		if(GetPVarInt(playerid,"Drugs") < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет наркотиков");
	    SetPVarInt(playerid,"Drugs", 0);
	    GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s выбросил какой-то пакетик в сторону", sendername);
        ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
	if(strcmp(cmd, "/dropmats", true) == 0 || strcmp(cmd, "/dm", true) == 0)
	{
    	if(GetPVarInt(playerid,"Materials") < 1) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет материалов");
	    SetPVarInt(playerid,"Materials", 0);
	    GetPlayerName(playerid, sendername, sizeof(sendername));
        format(string, sizeof(string), "%s выбросил какие-то предметы в сторону", sendername);
        ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 1;
	}
	if(strcmp(cmd, "/clear", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский / ФБР / военный");
		if (!IsPlayerInRangeOfPoint(playerid, 3.0,  253.9280,69.6094,1003.6406)) return SendClientMessage(playerid, COLOR_GREY, "Вы не в полицейском участке");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /clear [id/часть ника]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Вы не можете очистить розыск себе");
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Вы очистили розыск %s", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Офицер %s очистил запись о розыскиваем уровне", sendername);
		SendClientMessage(giveplayerid, COLOR_WHITE, string);
		WantedPoints[giveplayerid] = 0;
		WantedLevel[giveplayerid] = 0;
		ClearCrime(giveplayerid);
		return 1;
	}

	if(strcmp(cmd, "/arrest", true) == 0)
	{
		if(!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Вы не полицейский / ФБР / военный");
        if(!IsPlayerInRangeOfPoint(playerid, 6.0,  268.3327,77.8972,1001.0391)) return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть около тюремной камеры");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /arrest [id/часть ника] [минуты]");
		giveplayerid = ReturnUser(tmp);
		if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /arrest [id/часть ника] [минуты]");
		new time = strval(tmp);
		if(time < 1 || time > 40) return SendClientMessage(playerid, COLOR_GREY, "Укажите время от 1 до 40 минут");
		
		if(GetPVarInt(giveplayerid, "Jailed") != 0) return 1;
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(!WantedLevel[giveplayerid]) return SendClientMessage(playerid, COLOR_GREY, "Игрок должен иметь хотябы 1 уровень розыска");
		format(string, sizeof(string), "Вы арестовали %s", giveplayer);
		SendClientMessage(playerid, COLOR_WHITE, string);
		GameTextForPlayer(giveplayerid, "Arrested!", 5000, 5);
		ResetPlayerWeaponsUAC(giveplayerid);
		
		switch(GetPVarInt(playerid, "Team"))
		{
		    case 1: format(string, sizeof(string), "Офицер %s арестовал подозреваемого %s", sendername, giveplayer);
		    case 2: format(string, sizeof(string), "Агент ФБР %s арестовал подозреваемого %s", sendername, giveplayer);
		    case 3: format(string, sizeof(string), "Солдат %s арестовал подозреваемого %s", sendername, giveplayer);
		}
		
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || !IsACop(i)) continue;
			SendClientMessage(i, COLOR_BLUE, string);
		}
		
		SetPlayerInterior(giveplayerid, 6);
		oSetPlayerPos(giveplayerid,264.6288,77.5742,1001.0391);
		SetPVarInt(giveplayerid,"JailTime", time*60);
		format(string, sizeof(string), "Вас посадили в тюрьму на %d секунд", GetPVarInt(giveplayerid,"JailTime"));
		SendClientMessage(giveplayerid, COLOR_YELLOW, string);
		SetPVarInt(giveplayerid,"Jailed",1);
		GivePVarInt(giveplayerid,"Arrested", 1);
		MySQL_UpdateInt(giveplayerid,"Arrested");
		WantedPoints[giveplayerid] = 0;
		WantedLevel[giveplayerid] = 0;
		Pobegtime[giveplayerid] = 1;
		return 1;
	}

	if(strcmp(cmd, "/contract", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /contract [id/часть ника] [сумма]");
		giveplayerid = ReturnUser(tmp);
		
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /contract [id/часть ника] [сумма]");
		moneys = strval(tmp);
		
		if(moneys < 5000 || moneys > 100000) 		return SendClientMessage(playerid, COLOR_GREY, "Вы можете заказать игрока не меньше чем за $5000, и не больше чем за $100000!");
		if(GetPVarInt(playerid,"Level") < 2) 		return SendClientMessage(playerid, COLOR_GREY, "Вы должны быть 2 уровня или выше, чтобы заключать контракты");
		if (!IsPlayerConnected(giveplayerid)) 		return SendClientMessage(playerid, COLOR_GREY, "Такого игрока нет на сервере");
		if(GetPVarInt(playerid, "Member") == 8) 	return SendClientMessage(playerid, COLOR_GREY, "Вы не можете заказать игрока");
		if(GetPVarInt(giveplayerid, "Team") == 8) 	return SendClientMessage(playerid, COLOR_GREY, "Игрок уже заказан");
		if(IsACop(giveplayerid) && moneys < 50000) 	return SendClientMessage(playerid, COLOR_GREY, "Цена за голову полицейского должна быть выше $50.000");
		if(giveplayerid == playerid) 				return SendClientMessage(playerid, COLOR_GREY, "Вы не можете заказать себя");
		if(GetPVarInt(giveplayerid,"Level") < 3) 	return SendClientMessage(playerid, COLOR_GREY, "У игрока слишком маленький лвл");
		if(GetPVarInt(giveplayerid,"JailTime") > 0) return SendClientMessage(playerid, COLOR_GREY, "Игрок в тюрьме");
		if(GetPlayerPCash(playerid) < moneys)		return SendClientMessage(playerid, COLOR_GREY, "У Вас не хватает денег");
		if(GetPVarInt(giveplayerid, "AdminLevel") > 1) 	return SendClientMessage(playerid, COLOR_GREY, "Нельзя заказать администратора");
		if(GetPVarInt(giveplayerid, "HeadValue") > 0)	return SendClientMessage(playerid, COLOR_GREY, "Игрок уже заказан");

		GivePlayerPCash(playerid, -moneys, "contract");
		SetPVarInt(giveplayerid,"HeadValue", moneys);
		MySQL_UpdateInt(giveplayerid,"HeadValue");
		
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerName(giveplayerid, giveplayer, sizeof(sendername));
		
		format(string, sizeof(string), "Поступил новый контракт: %s, цена: $%d", giveplayer, moneys);
		SendFamilyMessage(8, COLOR_BLUE, string);
		
		format(string, sizeof(string), "Вы заключили контракт на %s, за $%d", giveplayer, moneys);
		SendClientMessage(playerid, COLOR_WHITE, string);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		return 1;
 	}
 	return 1;
}
//------------------------------------------------------------------------------------------------------

stock ProxDetector(Float:radi, playerid, string[], col1, col2, col3, col4, col5)
{
	new Float:pos[3],
	    World = GetPlayerVirtualWorld(playerid),
		Float:Distance;

	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	if(pos[0] > 9000.0 || pos[0] < -9000.0) return 1;
	if(pos[1] > 9000.0 || pos[1] < -9000.0) return 1;
	if(pos[2] > 9000.0 || pos[2] < -9000.0) return 1;
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || GetPlayerVirtualWorld(i) != World) continue;
        Distance = GetPlayerDistanceFromPoint(i, pos[0], pos[1], pos[2]);

        if(Distance < radi/16) 		SendClientMessage(i, col1, string);
        else if(Distance < radi/8) 	SendClientMessage(i, col2, string);
        else if(Distance < radi/4) 	SendClientMessage(i, col3, string);
        else if(Distance < radi/2) 	SendClientMessage(i, col4, string);
        else if(Distance < radi) 	SendClientMessage(i, col5, string);
	}
	return 1;
}


public OnPlayerText(playerid, text[])
{
	new sendername[MAX_PLAYER_NAME];
	new string[256];

	switch(GetPVarInt(playerid, "AntiFlood"))
	{
		case 0:
		{
			SetTimerEx("UnMutedX", 3500, 0, "d", playerid);
		}
		case 4..5:
		{
		    GivePVarInt(playerid, "AntiFlood", 1);
			SendClientMessage(playerid, COLOR_RED, "Не флуди!");
			return 0;
		}
		case 6:
		{
			SendClientMessage(playerid, COLOR_RED, "Вы кикнуты за флуд!");
			Kick_(playerid);
			return 0;
		}
	}
	GivePVarInt(playerid, "AntiFlood", 1);
	
	if (GetPVarInt(playerid, "SpecTV") != -1 && GetPVarInt(playerid,"AdminLevel") < 1) return 0;
	if (GetPVarInt(playerid,"Logged") == 0) return 0;

	
	if(Text_Flood(playerid, text))
	{
	    SendClientMessage(playerid, COLOR_RED, "Не флуди!");
	    return 0;
	}

	if(GetPVarInt(playerid,"MuteTime") > gettime())
	{
		format(string, 256, "У Вас молчанка (Осталось: %d сек.)", GetPVarInt(playerid,"MuteTime") - gettime());
 		SendClientMessage(playerid, COLOR_MUTE, string);
 		return 0;
	}
	if(containsAnyIP(text))
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "- %s[%d] сказал: %s",sendername, playerid, text);
		SendClientMessage(playerid, COLOR_FADE1, string);
		format(string, sizeof(string), "WARN(chat): %s[id: %d] %s", sendername, playerid, text);
		ABroadCast(string);
		return 0;
	}
	if(TalkingLive[playerid] != 999)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
	  	if(GetPVarInt(playerid, "Team") == 9) format(string, sizeof(string), "<< News >> Репортер %s: %s", sendername, text);
		else format(string, sizeof(string), "<< News >> Гость %s: %s", sendername, text);
		OOCNews(COLOR_LIGHTGREEN, string);
		return 0;
	}
	new Caller = GetPVarInt(playerid, "Caller");
	if(GetPVarInt(playerid, "StartCall") == 1 && Caller != -1)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "- %s[%d] в трубку: %s",sendername, playerid, text);
		ProxDetector(15.0, playerid, string, COLOR_FADE1, COLOR_FADE2, COLOR_FADE3, COLOR_FADE4, COLOR_FADE5);
		SendClientMessage(Caller, COLOR_YELLOW, string);
		return 0;
	}
	
	GetPlayerName(playerid, sendername, sizeof(sendername));
	format(string, sizeof(string), "- %s[%d] сказал: %s",sendername, playerid, text);
	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	SetPlayerChatBubble(playerid, text, COLOR_FLBLUE, 20.0, 5000);
	
	return 0;
}


public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) hour = hour+24;
	else if (hour > 23) hour = hour-24;
	shifthour = hour;
	return 1;
}
public DrugEffectGone(playerid)
{
    DrugsGone[playerid] = -1;
	new tmphour,tmpminute,tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	SetPlayerTime(playerid, tmphour, 0);
	
	SetPlayerWeather(playerid, 10);
	GameTextForPlayer(playerid, "~w~Drug effect ~p~gone", 3000, 1);
	return 1;
}
stock GivePlayerPCash(playerid, money, desc[] = "")
{
	if(strlen(desc))
	{
/*	    new str[128];
	    new hour, mins, secs;
	    gettime(hour, mins, secs);

	    new year, mount, day;
	    getdate(year, mount, day);

	    new fimename[30];
		format(fimename, sizeof(fimename), "%d-%d-%d.txt", year, mount, day);

	    format(str, sizeof(str), "[%d:%d:%d | %d | %s] Money: $%d | HerCash: $%d | Desc: %s\n", hour, mins, secs, GetPVarInt(playerid, "MySQL_id"), GetName(playerid), money, GetPVarInt(playerid, "Money")+money, desc);

	    new File:hFile = fopen(fimename, io_append);
	    fwrite(hFile, str);
	    fclose(hFile);*/
	}
	GivePVarInt(playerid,"Money",money);
	ResetPlayerMoney(playerid);
	return GivePlayerMoney(playerid, GetPVarInt(playerid,"Money"));
}
stock GetPlayerPCash(playerid)
{
	return GetPVarInt(playerid,"Money");
}
stock ResetPlayerPCash(playerid)
{
	SetPVarInt(playerid,"Money",0);
	return ResetPlayerMoney(playerid);
}
stock SetPlayerPCash(playerid, money)
{
    SetPVarInt(playerid,"Money",money);
	ResetPlayerMoney(playerid);
	return GivePlayerMoney(playerid, money);
}


forward ClearAnim(playerid);
public ClearAnim(playerid)
{
	return ClearAnimations(playerid);
}


stock PutPlayerInVehicleEx(playerid, v, s)
{
	GetPlayerPos(playerid, Dop_CheckPos[playerid][3], Dop_CheckPos[playerid][4], Dop_CheckPos[playerid][5]);
	GetVehiclePos(v, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
	
	PutPlayerInVehicle(playerid, v, s);
	return 1;
}
// -----------------------------------------------------------------------------
stock GivePlayerWeaponUAC(playerid, id, ammo)
{
	PlayerWeapons[playerid][0] = 1;
	PlayerWeapons[playerid][id] = 1;
	
	
	new slot = ReturnSlot(id);
	
	SetPVarInt(playerid, "DelayAmmo", gettime()+2);
	SetPVarInt(playerid, "DelayWeapon", gettime()+2);
	DeletePVar(playerid, "Dop_Check_Ammo");
	
	PlayerAmmo[playerid][slot] += ammo+1;
	
	if(id == 39) PlayerWeapons[playerid][40] = 1;
	GivePlayerWeapon(playerid,id,ammo);

	return 1;
}

stock ResetPlayerWeaponsUAC(playerid)
{
	SetPVarInt(playerid, "DelayWeapon", gettime()+2);
	SetPVarInt(playerid, "DelayAmmo", gettime()+2);
	DeletePVar(playerid, "Dop_Check_Ammo");
	
    ResetPlayerWeapons(playerid);
	for(new i = 1; i < 46; i++)
	{
		PlayerWeapons[playerid][i] = 0;
	}
	PlayerWeapons[playerid][0] = 1;
	return 1;
}


//---------------------------------------------------------------------------------------------


stock Float:GetVehicleSpeed(vehicleid)
{
    new
      Float:vX,
      Float:vY,
      Float:vZ;
   	GetVehicleVelocity(vehicleid, vX, vY, vZ);
    return floatsqroot(vX*vX + vY*vY + vZ*vZ);
}

stock UpdateCarSystemTextForPlayer(playerid)
{
	new vehicleid,engine,lights,bonnet,boot,objective, alarm, door, string[150];
	new FuelString[64],  EngineString[12], LightsString[12], BootString[12], BonnetString[12], NameString[32];

    vehicleid = GetPlayerVehicleID(playerid);
	switch(Gas[vehicleid])
	{
	    case 0..9:     format(FuelString, sizeof(FuelString), "~r~E ~r~II         ~g~ F");
	    case 10..19:   format(FuelString, sizeof(FuelString), "~r~E ~r~II         ~g~ F");
        case 20..29:   format(FuelString, sizeof(FuelString), "~r~E ~y~IIII        ~g~ F");
	    case 30..39:   format(FuelString, sizeof(FuelString), "~r~E ~y~IIIIII       ~g~ F");
	    case 40..49:   format(FuelString, sizeof(FuelString), "~r~E ~y~IIIIIIII      ~g~ F");
		case 50..59:   format(FuelString, sizeof(FuelString), "~r~E ~y~IIIIIIIIII     ~g~ F");
		case 60..69:   format(FuelString, sizeof(FuelString), "~r~E ~y~IIIIIIIIIIII    ~g~ F");
		case 70..79:   format(FuelString, sizeof(FuelString), "~r~E ~y~IIIIIIIIIIIIII   ~g~ F");
		case 80..89:   format(FuelString, sizeof(FuelString), "~r~E ~g~IIIIIIIIIIIIIIII  ~g~ F");
		case 90..99:   format(FuelString, sizeof(FuelString), "~r~E ~g~IIIIIIIIIIIIIIIIII ~g~ F");
		case 100..109: format(FuelString, sizeof(FuelString), "~r~E ~g~IIIIIIIIIIIIIIIIIIII~g~ F");
		default: 	   format(FuelString, sizeof(FuelString), "~r~E ~g~IIIIIIIIIIIIIIIIIIII~g~ F");
	}


	GetVehicleParamsEx(vehicleid,engine,lights,alarm,door,bonnet,boot,objective);
    if(engine == VEHICLE_PARAMS_ON) format(EngineString, sizeof(EngineString), "~g~Engine");
    else 							format(EngineString, sizeof(EngineString), "~r~Engine");

    if(lights == VEHICLE_PARAMS_ON) format(LightsString, sizeof(LightsString), "~g~Lights");
    else 							format(LightsString, sizeof(LightsString), "~w~Lights");

    if(boot == VEHICLE_PARAMS_ON) 	format(BootString, sizeof(BootString), "~g~Boot");
    else 							format(BootString, sizeof(BootString), "~w~Boot");

    if(bonnet == VEHICLE_PARAMS_ON) format(BonnetString, sizeof(BonnetString), "~g~Bonnet");
    else 							format(BonnetString, sizeof(BonnetString), "~w~Bonnet");

	format(NameString, sizeof(NameString), "~w~%s (id %d)",VehiclesName[GetVehicleModel(vehicleid)-400],GetVehicleModel(vehicleid));

    format(string, sizeof(string), "%s     %s     %s     %s     %s     %s",FuelString,EngineString,LightsString,BootString,BonnetString,NameString);
	TextDrawSetString(CarSystem[playerid], string), TextDrawShowForPlayer(playerid, CarSystem[playerid]);
	return 1;
}


stock ChangeNextInterior(playerid)
{
	new curint = GetPVarInt(playerid, "CurrentChangeInt"),string[24];
	if(curint == 30) curint = 0;
	else curint++;
	//format(string, sizeof(string), "Curint: %d",curint);
	//SendClientMessage(playerid, COLOR_WHITE,string);
	format(string, sizeof(string), "Price: %d",InteriorsForChange2[curint][1]);
	GameTextForPlayer(playerid, string, 5000, 5);
	oSetPlayerPos(playerid,InteriorsForChange[curint][0],InteriorsForChange[curint][1],InteriorsForChange[curint][2]);
	SetPlayerInterior(playerid,InteriorsForChange2[curint][0]);
	SetPVarInt(playerid,"CurrentChangeInt",curint);
	ShowMenuForPlayer(changeInteriorMenu[0],playerid);
}
stock ChangePreviousInterior(playerid)
{
	new curint = GetPVarInt(playerid, "CurrentChangeInt"),string[24];
	if(curint == 0) curint = 30;
	else curint--;
	//format(string, sizeof(string), "Curint: %d",curint);
    //SendClientMessage(playerid, COLOR_WHITE,string);
	format(string, sizeof(string), "Price: %d",InteriorsForChange2[curint][1]);
	GameTextForPlayer(playerid, string, 5000, 5);
	oSetPlayerPos(playerid,InteriorsForChange[curint][0],InteriorsForChange[curint][1],InteriorsForChange[curint][2]);
	SetPlayerInterior(playerid,InteriorsForChange2[curint][0]);
	SetPVarInt(playerid,"CurrentChangeInt",curint);
	ShowMenuForPlayer(changeInteriorMenu[1],playerid);
}


forward pobegTimer(playerid);
public pobegTimer(playerid){Pobegtime[playerid] = 1;}

forward SetOrder(playerid);
public SetOrder(playerid){order[playerid] = 0;}





/*CreateHouse3DLabels()
{
	new string[256];
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 1)
		{
	        if(HouseInfo[h][hRentabil] == 0) format(string, sizeof(string), "House id: %d \n Владелец: %s \n Уровень: %d  ",h ,HouseInfo[h][hOwner], HouseInfo[h][hLevel]);
			else format(string, sizeof(string), "House id: %d\n Владелец: %s \n Аренда: %d$ \n Уровень: %d \n \nЧтобы снять комнату введите /rentroom ",h ,HouseInfo[h][hOwner],HouseInfo[h][hRent], HouseInfo[h][hLevel]);
			HouseLabels[h]= Create3DTextLabel(string,0x50A3DAFF,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]+0.8,10.0,0);
		}
		else
		{
      		if(HouseInfo[h][hDonatePrice] > 0) format(string, sizeof(string), "[Этот дом продается] \n House id: %d\n Уровень: %d \n Стоимость дома: %d$\n Donate стоимость: %d\n\n Для покупки этого дома введите /buyhouse ",h , HouseInfo[h][hLevel], HouseInfo[h][hPrice],HouseInfo[h][hDonatePrice]);
			else format(string, sizeof(string), "[Этот дом продается] \n House id: %d\n Уровень: %d \n Стоимость дома: %d$ \n\n Для покупки этого дома введите /buyhouse ",h , HouseInfo[h][hLevel], HouseInfo[h][hPrice]);
			HouseLabels[h]= Create3DTextLabel(string, 0x38ED1FFF,HouseInfo[h][hEntrancex],HouseInfo[h][hEntrancey],HouseInfo[h][hEntrancez]+0.8,10.0,0);
		}
	}
}

OnHouse3DLabelUpdate(h)
{
	new string[256];
	if(HouseInfo[h][hOwned] == 1)
	{
        if(HouseInfo[h][hRentabil] == 0) format(string, sizeof(string), "House id: %d \n Владелец: %s \n Уровень: %d  ",h ,HouseInfo[h][hOwner], HouseInfo[h][hLevel]);
		else format(string, sizeof(string), "House id: %d\n Владелец: %s \n Аренда: %d$ \n Уровень: %d \n \nЧтобы снять комнату введите /rentroom ",h ,HouseInfo[h][hOwner],HouseInfo[h][hRent], HouseInfo[h][hLevel]);
		Update3DTextLabelText(HouseLabels[h],0x50A3DAFF,string);
	}
	else
	{
		if(HouseInfo[h][hDonatePrice] > 0) format(string, sizeof(string), "[Этот дом продается] \n House id: %d\n Уровень: %d \n Стоимость дома: %d$\n Donate стоимость: %d\n\n Для покупки этого дома введите /buyhouse ",h , HouseInfo[h][hLevel], HouseInfo[h][hPrice],HouseInfo[h][hDonatePrice]);
		else format(string, sizeof(string), "[Этот дом продается] \n House id: %d\n Уровень: %d \n Стоимость дома: %d$ \n\n Для покупки этого дома введите /buyhouse ",h , HouseInfo[h][hLevel], HouseInfo[h][hPrice]);
        Update3DTextLabelText(HouseLabels[h],0x38ED1FFF,string);
	}
}*/
//--------------------------------------------
CreateBizz3DLabels()
{
    new string[100];
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
	 	format(string, sizeof(string), ">> %s <<",BizzInfo[h][bDiscription]);
		BizzLabels[h] = Create3DTextLabel(string, 0x18BA28FF,BizzInfo[h][bEntranceX],BizzInfo[h][bEntranceY],BizzInfo[h][bEntranceZ]+0.8, 16.0, 0);
	}
}

OnBizz3DLabelUpdate(h)
{
	new string[100];
    format(string, sizeof(string), ">> %s <<",BizzInfo[h][bDiscription]);
	Update3DTextLabelText(BizzLabels[h],0x18BA28FF,string);

}


//--------------------------------------------
/*CreateSBizz3DLabels()
{
	new string[512];
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbLocked])
		{
			if(SBizzInfo[h][sbDonatePrice] > 0) format(string, sizeof(string), "[CLOSED] \n %s \n Владелец: %s \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Donate стоимость: %d \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbDonatePrice],SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
			else format(string, sizeof(string), "[CLOSED] \n %s \n Владелец: %s \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
			SBizzLabels[h]= Create3DTextLabel(string,0xFF0F0FFF,SBizzInfo[h][sbEntranceX],SBizzInfo[h][sbEntranceY],SBizzInfo[h][sbEntranceZ]+1.0,10.0, 0);
		}
		else
		{
			if(SBizzInfo[h][sbDonatePrice] > 0) format(string, sizeof(string), "%s \n Владелец: %s \n Вход: %d$ \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Donate стоимость: %d \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner],SBizzInfo[h][sbEntranceCost], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbDonatePrice],SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
            else format(string, sizeof(string), "%s \n Владелец: %s \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
			SBizzLabels[h]= Create3DTextLabel(string,0x18BA28FF,SBizzInfo[h][sbEntranceX],SBizzInfo[h][sbEntranceY],SBizzInfo[h][sbEntranceZ]+1.0, 10.0, 0);
			
		}
	}
}

OnSBizz3DLabelUpdate(h)
{
	new string[512];
	if(SBizzInfo[h][sbLocked])
	{
		if(SBizzInfo[h][sbDonatePrice] > 0) format(string, sizeof(string), "[CLOSED] \n %s \n Владелец: %s \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Donate стоимость: %d \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbDonatePrice],SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
		else format(string, sizeof(string), "[CLOSED] \n %s \n Владелец: %s \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
        Update3DTextLabelText(SBizzLabels[h],0xFF0F0FFF,string);
	}
	else
	{
		if(SBizzInfo[h][sbDonatePrice] > 0) format(string, sizeof(string), "%s \n Владелец: %s \n Вход: %d$ \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Donate стоимость: %d \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner],SBizzInfo[h][sbEntranceCost], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbDonatePrice],SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
        else format(string, sizeof(string), "%s \n Владелец: %s \n Заместитель: %s \n Уровень: %d \n Стоимость бизнеса: %d$ \n Продукты: [%d/%d] %d$ ",SBizzInfo[h][sbDiscription],SBizzInfo[h][sbOwner], SBizzInfo[h][sbExtortion], SBizzInfo[h][sbLevel],SBizzInfo[h][sbPrice], SBizzInfo[h][sbProducts],SBizzInfo[h][sbMaxProducts], SBizzInfo[h][sbPriceProd]);
        Update3DTextLabelText(SBizzLabels[h],0x18BA28FF,string);
	}
}*/

CreatePickups()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0) HouseInfo[h][hPickup] = CreatePickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],0);
		else if(HouseInfo[h][hOwned] == 1) HouseInfo[h][hPickup] = CreatePickup(19130, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],0);
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		if(BizzInfo[h][bOwned] == 0) BizzInfo[h][bPickup] = CreatePickup(1274, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],0);
		else if(BizzInfo[h][bOwned] == 1) BizzInfo[h][bPickup] = CreatePickup(19132, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],0);
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0) SBizzInfo[h][sbPickup] = CreatePickup(1274, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],0);
		else if(SBizzInfo[h][sbOwned] == 1) SBizzInfo[h][sbPickup] = CreatePickup(19132, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],0);
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		BizzInfo[h][bExitPickup] = CreatePickup(1318, 23, BizzInfo[h][bExitX], BizzInfo[h][bExitY], BizzInfo[h][bExitZ], BizzInfo[h][bWorld]);
	}
	AddStaticPickup(1239, 23, 2029.5945,-1404.6426,17.2512,-1); //Hospital 2 near speedway
	AddStaticPickup(1239, 23, 253.9280,69.6094,1003.6406,-1); //Clear icon in Police Station
	AddStaticPickup(1279, 23, 323.0342,1118.5804,1083.8828,-1); //Getting Drugs for DrugDealers
    AddStaticPickup(1239, 23, 1804.8960,-1303.5201,114.7723,-1); //NewsReporter Registration & /paper
   	AddStaticPickup(1279, 23, -1066.9712,-1245.6775,129.2188,-1); //Farm Kolhoz
	AddStaticPickup(1279, 23, 2161.9656,-1659.5684,15.0859,-1); //Priton Kolhoz
	AddStaticPickup(1239, 23, -1547.9330,124.6081,3.5547,-1); // Dropcar
	return 1;
}
UpdateHousePickup(pid)
{
    DestroyPickup(HouseInfo[pid][hPickup]);
    if(HouseInfo[pid][hOwned] == 0) HouseInfo[pid][hPickup] = CreatePickup(1273, 23, HouseInfo[pid][hEntrancex], HouseInfo[pid][hEntrancey], HouseInfo[pid][hEntrancez],-1);
	if(HouseInfo[pid][hOwned] == 1) HouseInfo[pid][hPickup] = CreatePickup(19130, 23, HouseInfo[pid][hEntrancex], HouseInfo[pid][hEntrancey], HouseInfo[pid][hEntrancez],-1);
}
UpdateBizzPickup(pid)
{
    DestroyPickup(BizzInfo[pid][bPickup]);
    if(BizzInfo[pid][bOwned] == 0) BizzInfo[pid][bPickup] = CreatePickup(1274, 23, BizzInfo[pid][bEntranceX], BizzInfo[pid][bEntranceY], BizzInfo[pid][bEntranceZ],-1);
	if(BizzInfo[pid][bOwned] == 1) BizzInfo[pid][bPickup] = CreatePickup(19132, 23, BizzInfo[pid][bEntranceX], BizzInfo[pid][bEntranceY], BizzInfo[pid][bEntranceZ],-1);
}
UpdateSBizzPickup(pid)
{
    DestroyPickup(SBizzInfo[pid][sbPickup]);
	if(SBizzInfo[pid][sbOwned] == 0) SBizzInfo[pid][sbPickup] = CreatePickup(1274, 23, SBizzInfo[pid][sbEntranceX], SBizzInfo[pid][sbEntranceY], SBizzInfo[pid][sbEntranceZ],-1);
	if(SBizzInfo[pid][sbOwned] == 1) SBizzInfo[pid][sbPickup] = CreatePickup(19132, 23, SBizzInfo[pid][sbEntranceX], SBizzInfo[pid][sbEntranceY], SBizzInfo[pid][sbEntranceZ],-1);
}
stock UpdateHouseMapIcon(iconid)
{
    DestroyMapIcon(HouseMapIcon[iconid]);
    if(HouseInfo[iconid][hOwned] == 0) HouseMapIcon[iconid] = CreateMapIcon(31,COLOR_LIGHTRED,HouseInfo[iconid][hEntrancex],HouseInfo[iconid][hEntrancey],HouseInfo[iconid][hEntrancez]);
	if(HouseInfo[iconid][hOwned] == 1) HouseMapIcon[iconid] = CreateMapIcon(32,COLOR_LIGHTRED,HouseInfo[iconid][hEntrancex],HouseInfo[iconid][hEntrancey],HouseInfo[iconid][hEntrancez]);
}
stock UpdateBizzMapIcon(iconid)
{
    DestroyMapIcon(/*Houses+iconid+1*/BizzMapIcon[iconid]);
    if(BizzInfo[iconid][bOwned] == 0) BizzMapIcon[iconid] = CreateMapIcon(52,COLOR_LIGHTRED,BizzInfo[iconid][bEntranceX],BizzInfo[iconid][bEntranceY],BizzInfo[iconid][bEntranceZ]);
	if(BizzInfo[iconid][bOwned] == 1) BizzMapIcon[iconid] = CreateMapIcon(BizzInfo[iconid][bIcon],0xFFFFFF00,BizzInfo[iconid][bEntranceX],BizzInfo[iconid][bEntranceY],BizzInfo[iconid][bEntranceZ]);
}
stock UpdateSBizzMapIcon(iconid)
{
    DestroyMapIcon(/*Houses+Bizzes+iconid+1*/SBizzMapIcon[iconid]);
	if(SBizzInfo[iconid][sbOwned] == 0) SBizzMapIcon[iconid] = CreateMapIcon(52,COLOR_LIGHTRED,SBizzInfo[iconid][sbEntranceX],SBizzInfo[iconid][sbEntranceY],SBizzInfo[iconid][sbEntranceZ]);
	if(SBizzInfo[iconid][sbOwned] == 1) SBizzMapIcon[iconid] = CreateMapIcon(38,COLOR_LIGHTRED,SBizzInfo[iconid][sbEntranceX],SBizzInfo[iconid][sbEntranceY],SBizzInfo[iconid][sbEntranceZ]);
}
forward KickIdlePlayer(playerid);
public KickIdlePlayer(playerid)
{
	SendClientMessage(playerid, COLOR_RED, "Время на авторизацию истекло");
	Kick_(playerid);
	LoginDelay[playerid] = -1;
	return 1;
}

forward Camera(playerid);
public Camera(playerid)
{
    if(MySQL_Player_Exist(playerid))
	{
		ShowLoginDialog(playerid);
		LoginDelay[playerid] = SetTimerEx("KickIdlePlayer", 90000, 0, "d", playerid);
	}
	else
	{
		ShowDialogRegistration(playerid);
	}
	switch(random(6))
	{
	    case 0:
	    {
			SetPlayerCameraPos(playerid,-2519.095703,1382.551879,90.232452);
			SetPlayerCameraLookAt(playerid,-2645.745117,1633.409545,91.549415);
		}
		case 1:
		{
			SetPlayerCameraPos(playerid,2155.987792,855.799499,116.995857);
			SetPlayerCameraLookAt(playerid,2020.248535,998.547485,43.772979);
		}
		case 2:
		{
			SetPlayerCameraPos(playerid, 1219.301391,1262.644653,117.183784);
			SetPlayerCameraLookAt(playerid, 1093.270507,1075.967773,23.963113);
		}
		case 3:
		{
			SetPlayerCameraPos(playerid, 482.250030,-1722.265136,148.093765);
			SetPlayerCameraLookAt(playerid, 357.195434,-1538.488891,52.517204);
		}
		case 4:
		{
			SetPlayerCameraPos(playerid,-467.175994,1732.187744,96.531211);
			SetPlayerCameraLookAt(playerid,-384.491790,1648.546508,123.977539);
		}
		default:
		{
			SetPlayerCameraPos(playerid,-1476.370727,1121.111694,103.347892);
			SetPlayerCameraLookAt(playerid,-1575.329956,969.190979,103.721092);
		}
	}
	PlayerPlaySound(playerid, 1097, 0.0, 0.0, 0.0);
}

//**********************************************************************


stock AntiAdminFlood(playerid)
{
	switch(GetPVarInt(playerid, "AdminFlood"))
	{
		case 0: AdminFlood[playerid] = SetTimerEx("UnAdminFlood", 40000, 0, "d", playerid);
		case 12:
		{
			if(AdminFlood[playerid] != -1)
			{
			    KillTimer(AdminFlood[playerid]);
			    AdminFlood[playerid] = -1;
			}
			SetPVarInt(playerid, "AdminLevel", 0);
			MySQL_UpdateInt(playerid,"AdminLevel");
			DeletePVar(playerid, "AdminFlood");
			return 1;
		}
	}
	GivePVarInt(playerid, "AdminFlood", 1);
	return 1;
}
public UnMutedX(playerid)
{
    DeletePVar(playerid, "AntiFlood");
    return 1;
}
forward UnAdminFlood(playerid);
public UnAdminFlood(playerid)
{
	AdminFlood[playerid] = -1;
 	DeletePVar(playerid, "AdminFlood");
	return 1;
}

stock removePlayerFromVehicle(playerid)
{
	new pveh = GetPlayerVehicleID(playerid);
	if(pveh != INVALID_VEHICLE_ID)
	{
	    SetVehicleVelocity(pveh, 0.0, 0.0, 0.0);
	}
	
	if(RemovePlayerFromVehicleTimer[playerid] != 0)
	{
	    KillTimer(RemovePlayerFromVehicleTimer[playerid]);
	}
	
    RemovePlayerFromVehicleTimer[playerid] = SetTimerEx("CheckRemovedPlayer", 6000, 0, "d", playerid);
    RemovePlayerFromVehicle(playerid);
	return 1;
}
forward ACSweapon(playerid, weaponid);
public ACSweapon(playerid, weaponid)
{
	GivePlayerWeaponUAC(playerid, 25, 0);
	return 1;
}
forward ACSweapon2(playerid, weaponid);
public ACSweapon2(playerid, weaponid)
{
	GivePlayerWeaponUAC(playerid, 46, 5);
	return 1;
}
forward ACSweapon3(playerid, weaponid);
public ACSweapon3(playerid, weaponid)
{
	GivePlayerWeaponUAC(playerid, 2, 1);
	return 1;
}
forward CheckRemovedPlayer(playerid);
public CheckRemovedPlayer(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    KickCheater(playerid, REMOVEFROMVEH);
	    RemovePlayerFromVehicleTimer[playerid] = 0;
	}
	return 1;
}
public OnVehicleMod(playerid,vehicleid,componentid) // сохранение тюнинга
{
    if(CheckFCalls(playerid, 18)) return 1;
    if(!IsAtModShop(playerid))
    {
        SetVehicleToRespawn(GetPlayerVehicleID(playerid));
        KickCheater(playerid, TUNINGCAR); /* Тюнинг тачки */
        return 1;
	}
	if(!IsValidTuning(GetVehicleModel(vehicleid), componentid))
	{
		new st[30];
		format(st, 30, "Warning: %d > %d", GetVehicleModel(vehicleid), componentid);
		SendClientMessage(playerid, COLOR_YELLOW, st);
		SendClientMessage(playerid, COLOR_YELLOW, "Данный компонент тюнинга не поддерживается, сообщите об ошибке на наш форум");
		RemoveVehicleComponent(vehicleid, componentid);
		GetPlayerName(playerid, st, 24);
		printf("WARNING: %s[%d] попытка тюнинга неправильными компонентами (модель: %d; ид: %d; компонент: %d;)", st, playerid, GetVehicleModel(vehicleid), vehicleid, componentid);
		return 1;
	}
 	if(vehicleid == CarInfo[playerid][cMaincar])
	{
		switch(componentid)
		{
		    case 1000..1003, 1014..1016, 1023, 1049, 1050, 1058, 1060, 1138, 1139, 1146, 1147, 1158, 1162..1164: CarInfo[playerid][cSpoiler] = componentid;
		    case 1004, 1005, 1011, 1012: CarInfo[playerid][cHood] = componentid;
		    case 1006, 1032, 1033, 1035, 1038, 1053..1055, 1061, 1067, 1068, 1088, 1091, 1103, 1128, 1130, 1131: CarInfo[playerid][cRoof] = componentid;
		    case 1007, 1017, 1026, 1027, 1030, 1031, 1036, 1039..1042, 1047..1048, 1051, 1052, 1056, 1057, 1062, 1063, 1069..1072,
				 1090, 1093..1095, 1099, 1101, 1102, 1106..1108, 1118, 1122, 1124, 1133, 1134, 1137: CarInfo[playerid][cSideskirt] = componentid;
			case 1008..1010: CarInfo[playerid][cNitro] = componentid;
			case 1013, 1024: CarInfo[playerid][cLamps] = componentid;
			case 1018..1022, 1028, 1029, 1034, 1037, 1043..1046, 1059, 1064..1066, 1089, 1092, 1104, 1105, 1113, 1114, 1126, 1127, 1129,
				 1132, 1135, 1136: CarInfo[playerid][cExhaust] = componentid;
			case 1025, 1073..1085, 1096..1098: CarInfo[playerid][cWheels] = componentid;
			case 1086: CarInfo[playerid][cStereo] = componentid;
			case 1087: CarInfo[playerid][cHydraulics] = componentid;
		    case 1100, 1123, 1125: CarInfo[playerid][cBullbar] = componentid;
		    case 1109, 1110: CarInfo[playerid][cRearBullbars] = componentid;
		    case 1111, 1112: CarInfo[playerid][cFrontSign] = componentid;
		    case 1115, 1116: CarInfo[playerid][cFrontBullbars] = componentid;
			case 1117, 1152, 1153, 1155, 1157, 1160, 1165, 1166, 1169..1175, 1179, 1181, 1182, 1185, 1188..1191: CarInfo[playerid][cFrontBumper] = componentid;
			case 1140, 1141, 1148..1151, 1154, 1156, 1159, 1161, 1167, 1168, 1176..1178, 1180, 1183, 1184, 1186, 1187, 1192, 1193: CarInfo[playerid][cRearBumper] = componentid;
			case 1142..1145: CarInfo[playerid][cVents] = componentid;
		}
	}
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(CheckFCalls(playerid, 19)) return 1;
   	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
    return 1;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
    if(CheckFCalls(playerid, 20)) return 1;
    return 1;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid) // сохранение рисунка на авто
{
    if(CheckFCalls(playerid, 21)) return 1;
    if(!IsAtModShop(playerid))
    {
        SetVehicleToRespawn(GetPlayerVehicleID(playerid));
        KickCheater(playerid, PAINTJOBCHEAT); /* Покраска тачки */
        return 1;
    }
    if(vehicleid == CarInfo[playerid][cMaincar])
    {
        CarInfo[playerid][cPaintJob] = paintjobid;
    }
    return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2) // сохранение цвета
{
    if(CheckFCalls(playerid, 22)) return 1;
    if(!IsAtModShop(playerid) && !IsPlayerInRangeOfPoint(playerid, 15.0, 1697.713134, -1473.033325, 13.546875))
	{
	    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    KickCheater(playerid, SPRAYCAR); /* Покраска тачки */
	    return 1;
	}
    if(color1 > 126 || color2 > 126) ChangeVehicleColor(vehicleid, 1, 1);
    if(vehicleid == CarInfo[playerid][cMaincar])
    {
		CarInfo[playerid][cColor1] = color1;
		CarInfo[playerid][cColor2] = color2;
    }
    return 1;
}



stock GetPlayerSpeed(playerid)
{
    new Float:ST[3];
    if(IsPlayerInAnyVehicle(playerid))GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    return floatround( floatsqroot(floatpower(ST[0], 2.0) + floatpower(ST[1], 2.0) + floatpower(ST[2], 2.0)) )*100;
}



stock HoHelpDialog(playerid)
{
    new dstring[] = "\
	__________________________________________________________________________________\n\
 	Используйте /ho [id игрока/часть ника] [id объекта] [id части тела]\n\
	позиция объекта [x] [y] [z] ротация объекта [x] [y] [z]\n\n\
	Пример: /ho [BOT]Bobbi 1371 1 0.1 0 0 180 90 0 - прицепить к [BOT]Bobbi бегемота\n\n\
	Позицию объекта можно указывать как целыми(1,2,3) числами так и дробями(1.2, 4.3)";
	new dstring2[] = "\
	Id'ы частей тела:\n\
	1 - Спина\n\
	2 - Голова\n\
	3 - Плечо левой руки\n\
	4 - Плечо правой руки\n\
	5 - Левая рука\n\
	6 - Правая рука\n\
	7 - Левое бедро\n\
	8 - Правое бедро\n\
	9 - Левая нога\n\
	10 - Правая нога\n\
	11 - Правая голень\n\
	12 - Левая голень\n\
	13 - Левое предплечье";
	new dstring3[] = "\
	14 - Правое предплечье\n\
	15 - Левая ключица\n\
	16 - Правая ключица\n\
	17 - Шея\n\
	18 - Челюсть\n\
	__________________________________________________________________________________";
	new string[256];
    format(string,1512,"%s\n\n%s\n%s",dstring,dstring2,dstring3);
	ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX,"Справка по Holding Object:",string,"OK","x");
    return 1;
}
stock GiveWeaponHelpDialog(playerid)
{
    new dstring[]  = "\
	С помощью этой команды Вы можете передавать патроны/оружие другим игрокам\n\
	___________________\n\
	Использование: Введите /giveweapon [Ид игрока] [Ид оружия] [Кол-во патронов]\n\
	Пример использования: /giveweapon 5 24 56 - передать пятому игроку(id 5) дигл(id 24) с 56 патронами\n\
	Патроны/оружие можно передавать только при условии, что у Вас оно тоже есть\n\n";
	new dstring2[] = "\
	Примечание: Игрок должен находиться рядом с Вами\n\
	За один раз можно передать от 1 до 999 патронов\n\n\
	ID's Оружия:\n\
	22 - 9mm пистолет\n\
	23 - 9mm пистолет с глушителем\n\
	";
	new dstring3[] = "\
	24 - Дигл\n\
	25 - Шотган\n\
	29 - МП5\n\
	30 - АК47\n\
	31 - М4\n\
	33 - Рифл\n\
	34 - Снайперская винтовка\n\
	42 - Огнетушитель\n\
	43 - Фотоаппарат\n\
	__________________________________________";
	new string[256];
    format(string,1512,"%s%s%s",dstring,dstring2,dstring3);
	ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Справка по /giveweapon (передача оружия/патронов)",string,"Ок","Ок");
    return 1;
}
stock ChangeRPNameDialog(playerid)
{
	new var[1024];
	strcat(var, RGB_YELLOW"\t\tВам необходимо сменить ник своего персонажа!\n\n"RGB_WHITE);
	strcat(var, "  Каждый игрок 4 и выше уровня должен иметь ник в формате Имя_Фамилия\n");
	strcat(var, "Пожалуйста, придумайте новый ник своему персонажу и введите его в окно:\n");
	strcat(var, RGB_GREY"       Примеры правильных ников: John_Williams, Dolan_Tadros и так далее.\n");
	strcat(var, "             Если Вы нажмете кнопку Отмена, Вы будете кикнуты с сервера!");
	ShowPlayerDialog(playerid, 20, DIALOG_STYLE_INPUT, RGB_SERVER"Смените свой ник", var, "Сменить", "Отмена");

	SetPVarInt(playerid, "CantUseCommand", 1);
	return 1; 
}
dcmd_lox(playerid, params[])
{
		new Float:p[6];
		sscanf(params, "ffffff", p[0], p[1], p[2], p[3], p[4], p[5]);
	    
	    SetPlayerCameraPos(playerid, p[0], p[1], p[2]);
	    SetPlayerCameraLookAt(playerid, p[3], p[4], p[5]);
	    

	 	return 1;
}
dcmd_vho(playerid, params[])
{
	new Slot, Float:pos[6], objectid, vid = GetPlayerVehicleID(playerid);
	
	if(sscanf(params, "ddffffff", Slot, objectid, pos[0], pos[1], pos[2], pos[3], pos[4], pos[5]))
	    return SendClientMessage(playerid, COLOR_WHITE, "/vho slot id x y z rx ry rz");
	    
    new string[256];
	if (Slot >= MAX_VEHOBJECT || Slot < 0)
	{
	    format(string, sizeof(string), "Слот от 0 до %d", MAX_VEHOBJECT);
		return SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	if(vid > MAX_VEHICLES || vid < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Сядьте в авто");
	
	
	if(AttachOjects[playerid][Slot] != 0)
	{
		DestroyObject(AttachOjects[playerid][Slot]);
		AttachOjects[playerid][Slot] = 0;
	}
	
	AttachOjects[playerid][Slot] = CreateObject(objectid, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.0);
	AttachObjectToVehicle(AttachOjects[playerid][Slot], vid, pos[0], pos[1], pos[2], pos[3], pos[4], pos[5]);
	
	format(string, sizeof(string), "Слот [%d] ~ Объект: [%d] ~ [x  %f] ~ [y  %f] ~ [z  %f]",Slot, objectid, pos[0], pos[1], pos[2]);
	SendClientMessage(playerid, COLOR_GRAD1, string);

	format(string, sizeof(string), "Ротация: [rx %f] ~ [ry %f] ~ [rz %f]", pos[3], pos[4], pos[5]);
	return SendClientMessage(playerid, COLOR_GRAD1, string);
}
dcmd_rvho(playerid, params[])
{
	new Slot;
	if(sscanf(params, "d", Slot)) return SendClientMessage(playerid, COLOR_WHITE, "/rvho [слот]");
	if(AttachOjects[playerid][Slot] != 0)
	{
		DestroyObject(AttachOjects[playerid][Slot]);
		AttachOjects[playerid][Slot] = 0;
	}
	return SendClientMessage(playerid, COLOR_GRAD1, "Удалено");
}
dcmd_ho(playerid, params[])
{
	new model,bone, playa;
	//SendClientMessage(playerid, COLOR_GREY, "Используйте: /ho [id игрока] [id объекта] [часть тела] [x] [y] [z] [rx] [ry] [rz]");
	new Float:x,Float:y,Float:z, Float:rox,Float:roy,Float:roz,Float:sx,Float:sy,Float:sz;
	if (sscanf(params, "uiifffffffff", playa,model,bone,x,y,z, rox, roy, roz,sx,sy,sz)) return HoHelpDialog(playerid);
	if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GREY, " Игрок не найден ");
	//if (IsPlayerHoldingObject(playa)) return SendClientMessage(playerid, COLOR_GREY, "На этом игроке уже есть объект !");
	if (bone >= 19 || bone == 0) return SendClientMessage(playerid, COLOR_GREY, " Часть тела указана неверно !");
	SetPlayerAttachedObject(playa, 0, model, bone, x, y, z, rox, roy, roz,sx,sy,sz);
	new name[MAX_PLAYER_NAME];
	new string[256];
	GetPlayerName(playa, name, sizeof(name));
	new skin = GetPlayerSkin(playa);
	format(string, sizeof(string), "* Прицеплен объект к %s: [id %d] ~ [часть тела %d] ~ [x %f] ~ [y %f] ~ [z %f]", name, model, bone,x,y,z);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	format(string, sizeof(string), "* Ротация: [rx %f] ~ [ry %f] ~ [rz %f]", rox, roy, roz);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	printf("SetPlayerAttachedObject(playerid, 0, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f); //Skin %d",model, bone, x, y, z, rox, roy, roz,sx,sy,sz,skin);
	SendClientMessage(playa, COLOR_GRAD3, "* К Вам прицепили объект, чтобы удалить его используйте /rmho ");
	return 1;
}
dcmd_setmypos(playerid, params[])
{
	//SendClientMessage(playerid, COLOR_GREY, "Используйте: /ho [id игрока] [id объекта] [часть тела] [x] [y] [z] [rx] [ry] [rz]");
	new Float:x,Float:y,Float:z, string[128];
	if (sscanf(params, "fff",x,y,z)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /setmypos [x] [y] [z]");
	format(string, sizeof(string), "* Вы телепортировались в позицию: [x %f] [y %f] [z %f]",x,y,z);
	oSetPlayerPos(playerid,x,y,z);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	return 1;
}
dcmd_spincar(playerid, params[])
{
	//SendClientMessage(playerid, COLOR_GREY, "Используйте: /ho [id игрока] [id объекта] [часть тела] [x] [y] [z] [rx] [ry] [rz]");
	new Float:x,Float:y,Float:z;
	if (sscanf(params, "fff",x,y,z)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /spincar [x] [y] [z]");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Используйте только в авто !");
 	SetVehicleAngularVelocity(GetPlayerVehicleID(playerid), x, y, z);
	return 1;
}
dcmd_explosion(playerid, params[])
{
	new Float:x,Float:y,Float:z, Float:radius, type;
	if (sscanf(params, "if",type,radius)) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /explosion [type 0-13] [radius]");
	if(type > 13 || type < 0) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /explosion [type 0-13] [radius]");

    GetPlayerPos(playerid, x, y, z);
    CreateExplosion(x, y, z, type, radius);
 	
	return 1;
}

dcmd_sellexp(playerid, params[])
{
	new id,
		Pexp,
		Expprice;

	if ( sscanf(params,"udd", id, Pexp, Expprice) ) return SendClientMessage(playerid, COLOR_GREY, "Используйте: /sellexp [ид/имя игрока] [кол-во респектов] [цена за все респекты]");

	if (playerid == id) return SendClientMessage(playerid, COLOR_GREY, "Нельзя продавать самому себе");

	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_GREY, "Этот игрок не в сети");

	if(Pexp > GetPVarInt(playerid, "Respect")) return SendClientMessage(playerid, COLOR_GREY, "У Вас нет столько респектов");

	if(Pexp < 1 || Pexp > 1000)  return SendClientMessage(playerid, COLOR_GREY, "За раз можно продать от 1 до 1000 респектов");

	if(Expprice > Pexp*10000 || Expprice < 1) return SendClientMessage(playerid, COLOR_GREY,  "Установите цену от $1 до $10000 за 1exp");

	if(!ProxDetectorS(8.0, playerid, id)) return SendClientMessage(playerid, COLOR_GREY, "Игрок далеко от Вас");

	if(GetPVarInt(playerid, "CantuseSellexp") == 1) return SendClientMessage(playerid, COLOR_YELLOW, "Нельзя вводить команду 2 раза");

	if(GetPVarInt(id, "Accept_Type") != 0) return SendClientMessage(playerid, COLOR_YELLOW, "Игроку уже предложили что-то");
	
	
	SetPVarInt(id, "ExpPrice", Expprice);
	SetPVarInt(id, "ExpSeller", playerid);
	SetPVarInt(id, "Pexp", Pexp);
	SetPVarInt(id, "Accept_Type", 16);

	SetPVarInt(playerid, "CantuseSellexp", 1);
	SetPVarInt(playerid, "SellExpBuyer", id);

	new string[144];
	format(string, sizeof(string), RGB_GREEN"%s"RGB_WHITE" предлагает Вам купить %d респект(ов) за %d$", GetName(playerid), Pexp, Expprice);
	SendClientMessage(id, COLOR_WHITE, string);
	SendClientMessage(id, COLOR_WHITE, "Нажмите "RGB_GREEN"[~k~~CONVERSATION_YES~]"RGB_WHITE" для согласия, для отказа нажмите "RGB_RED"[~k~~CONVERSATION_NO~]");


	format(string, sizeof(string), "Вы предложили "RGB_GREEN"%s"RGB_WHITE" купить %d респектов за %d$", GetName(id), Pexp, Expprice);
	SendClientMessage(playerid, COLOR_WHITE, string);

	return 1;
}

SetPlayerHealthUAC(playerid,Float:health)
{
	if(!GetPVarInt(playerid, "HealthDelay"))
	{
        SetTimerEx("ClearHealthDelay", 2500, false, "i", playerid);
        SetPVarInt(playerid, "HealthDelay", 1);
	}
	SetPVarFloat(playerid, "Health",health);
	SetPlayerHealth(playerid,health);
	return 1;
}

forward ClearHealthDelay(playerid);
public ClearHealthDelay(playerid)
{
	DeletePVar(playerid, "HealthDelay");
	return 1;
}

new OldCar[MAX_PLAYERS];
new CurrentCar;
public OnPlayerUpdate(playerid)
{
	AFKText[playerid] = 0;
    CurrentCar = GetPlayerVehicleID(playerid);
	if(CurrentCar != OldCar[playerid])
	{
	    if(CurrentCar != 0 && OldCar[playerid] != 0)
	    {
			Kick(playerid);
		}
	    OldCar[playerid] = CurrentCar;
	}

	return 1;
}

forward ClearCarHelpPressed(playerid);
public ClearCarHelpPressed(playerid)
{
    DeletePVar(playerid, "CarHelpPressed");
}
stock DestroyCannabisObject(h)
{
	DestroyObject(Cannabis[h]);
	return 1;
}
stock DestroyCannabisPickup(h)
{
    DestroyPickup(CannabisPickup[h]);
    return 1;
}
stock CreateCannabisObject(h)
{
	switch(h)
	{
		case 1: Cannabis[0] = CreateObject(3409,-1192.74060059,-1006.08270264,128.21875000,0.00000000,0.00000000,1.99951172);
		case 2: Cannabis[1] = CreateObject(3409,-1178.37500000,-1053.70800781,128.21875000,0.00000000,0.00000000,1.99951172);
		case 3: Cannabis[2] = CreateObject(3409,-1162.70410156,-1053.56347656,128.21875000,0.00000000,0.00000000,1.99951172);
		case 4: Cannabis[3] = CreateObject(3409,-1146.71386719,-1053.34179688,128.21875000,0.00000000,0.00000000,1.99951172);
		case 5: Cannabis[4] = CreateObject(3409,-1131.37792969,-1053.26855469,128.21875000,0.00000000,0.00000000,359.99450684);
		case 6: Cannabis[5] = CreateObject(3409,-1112.13891602,-1053.53283691,128.21875000,0.00000000,0.00000000,359.98901367);
		case 7: Cannabis[6] = CreateObject(3409,-1192.57519531,-1054.13476562,128.21875000,0.00000000,0.00000000,0.24951172);
		case 8: Cannabis[7] = CreateObject(3409,-1017.49163818,-1023.65789795,128.21875000,0.00000000,0.00000000,1.99951172);
		case 9: Cannabis[8] = CreateObject(3409,-1017.55914307,-994.27551270,128.21264648,0.00000000,0.00000000,1.99951172);
		case 10: Cannabis[9] = CreateObject(3409,-1162.25659180,-1007.20330811,128.21875000,0.00000000,0.00000000,1.99951172);
		case 11: Cannabis[10] = CreateObject(3409,-1177.71386719,-1006.77825928,128.21875000,0.00000000,0.00000000,358.99951172);
		case 12: Cannabis[11] = CreateObject(3409,-1017.44696045,-1053.52001953,128.21875000,0.00000000,0.00000000,1.99951172);
		case 13: Cannabis[12] = CreateObject(3409,-1065.69274902,-1038.98620605,128.21875000,0.00000000,0.00000000,1.99951172);
		case 14: Cannabis[13] = CreateObject(3409,-1065.76025391,-1053.72656250,128.21875000,0.00000000,0.00000000,1.99951172);
		case 15: Cannabis[14] = CreateObject(3409,-1090.36254883,-1054.22607422,128.21192932,0.00000000,0.00000000,359.99450684);
		case 16: Cannabis[15] = CreateObject(3409,-1040.74499512,-1053.65344238,128.21875000,0.00000000,0.00000000,359.98901367);
		case 17: Cannabis[16] = CreateObject(3409,-1090.26367188,-1039.57666016,128.21875000,0.00000000,0.00000000,359.98901367);
		case 18: Cannabis[17] = CreateObject(3409,-1130.86157227,-1040.01892090,128.21875000,0.00000000,0.00000000,359.98901367);
		case 19: Cannabis[18] = CreateObject(3409,-1130.09582520,-991.11578369,128.21875000,0.00000000,0.00000000,359.99450684);
		case 20: Cannabis[19] = CreateObject(3409,-1146.02734375,-1039.85229492,128.21875000,0.00000000,0.00000000,359.99450684);
		case 21: Cannabis[20] = CreateObject(3409,-1145.69067383,-1007.43011475,128.21875000,0.00000000,0.00000000,359.98901367);
		case 22: Cannabis[21] = CreateObject(3409,-1039.64001465,-1023.46740723,128.21192932,0.00000000,0.00000000,359.98901367);
		case 23: Cannabis[22] = CreateObject(3409,-1162.50830078,-1039.31506348,128.21875000,0.00000000,0.00000000,359.98901367);
		case 24: Cannabis[23] = CreateObject(3409,-1178.39367676,-1039.19628906,128.21875000,0.00000000,0.00000000,359.98901367);
		case 25: Cannabis[24] = CreateObject(3409,-1110.42919922,-991.71569824,128.21875000,0.00000000,0.00000000,359.98901367);
		case 26: Cannabis[25] = CreateObject(3409,-1111.63476562,-1039.63037109,128.21192932,0.00000000,0.00000000,359.98901367);
		case 27: Cannabis[26] = CreateObject(3409,-1192.67980957,-1039.40417480,128.21875000,0.00000000,0.00000000,359.98901367);
		case 28: Cannabis[27] = CreateObject(3409,-1193.07873535,-1023.17224121,128.21875000,0.00000000,0.00000000,359.98901367);
		case 29: Cannabis[28] = CreateObject(3409,-1040.55908203,-1038.56982422,128.21875000,0.00000000,0.00000000,359.98901367);
		case 30: Cannabis[29] = CreateObject(3409,-1090.03466797,-992.02038574,128.21875000,0.00000000,0.00000000,359.98901367);
		case 31: Cannabis[30] = CreateObject(3409,-1161.66052246,-989.70532227,128.21875000,0.00000000,0.00000000,359.98901367);
		case 32: Cannabis[31] = CreateObject(3409,-1177.49108887,-988.61297607,128.21875000,0.00000000,0.00000000,359.98901367);
		case 33: Cannabis[32] = CreateObject(3409,-1065.63208008,-1023.88592529,128.21875000,0.00000000,0.00000000,359.98901367);
		case 34: Cannabis[33] = CreateObject(3409,-1065.93713379,-992.58581543,128.21875000,0.00000000,0.00000000,359.98901367);
		case 35: Cannabis[34] = CreateObject(3409,-1017.58514404,-1039.00634766,128.21875000,0.00000000,0.00000000,359.98901367);
		case 36: Cannabis[35] = CreateObject(3409,-1039.58593750,-1009.86883545,128.21192932,0.00000000,0.00000000,359.98901367);
		case 37: Cannabis[36] = CreateObject(3409,-1192.51184082,-988.52795410,128.21875000,0.00000000,0.00000000,359.98901367);
		case 38: Cannabis[37] = CreateObject(3409,-1162.46350098,-1023.77734375,128.21875000,0.00000000,0.00000000,359.98901367);
		case 39: Cannabis[38] = CreateObject(3409,-1111.37561035,-1025.38366699,128.21875000,0.00000000,0.00000000,359.98901367);
		case 40: Cannabis[39] = CreateObject(3409,-1177.84826660,-1023.57666016,128.21875000,0.00000000,0.00000000,359.98901367);
		case 41: Cannabis[40] = CreateObject(3409,-1145.60461426,-1024.44409180,128.21875000,0.00000000,0.00000000,359.98901367);
		case 42: Cannabis[41] = CreateObject(3409,-1130.43334961,-1024.70361328,128.21875000,0.00000000,0.00000000,359.98901367);
		case 43: Cannabis[42] = CreateObject(3409,-1090.40234375,-1025.30688477,128.21875000,0.00000000,0.00000000,359.98901367);
		case 44: Cannabis[43] = CreateObject(3409,-1145.65527344,-990.29754639,128.21875000,0.00000000,0.00000000,359.98901367);
		case 45: Cannabis[44] = CreateObject(3409,-1129.47656250,-1008.14746094,128.21875000,0.00000000,0.00000000,359.99450684);
		case 46: Cannabis[45] = CreateObject(3409,-1110.93359375,-1007.71777344,128.21875000,0.00000000,0.00000000,359.98901367);
		case 47: Cannabis[46] = CreateObject(3409,-1090.11035156,-1009.20507812,128.21875000,0.00000000,0.00000000,359.98901367);
		case 48: Cannabis[47] = CreateObject(3409,-1065.75585938,-1009.16308594,128.21875000,0.00000000,0.00000000,359.98901367);
		case 49: Cannabis[48] = CreateObject(3409,-1039.26159668,-993.38281250,128.21875000,0.00000000,0.00000000,359.98901367);
		case 50: Cannabis[49] = CreateObject(3409,-1017.54296875,-1009.41601562,128.21260071,0.00000000,0.00000000,1.99951172);
		case 51: Cannabis[50] = CreateObject(3409,-1017.08087158,-978.24975586,128.21875000,0.00000000,0.00000000,1.99951172);
		case 52: Cannabis[51] = CreateObject(3409,-1039.86096191,-977.57965088,128.21875000,0.00000000,0.00000000,359.98901367);
		case 53: Cannabis[52] = CreateObject(3409,-1066.34765625,-976.94030762,128.21875000,0.00000000,0.00000000,359.98901367);
		case 54: Cannabis[53] = CreateObject(3409,-1090.39892578,-976.40478516,128.21875000,0.00000000,0.00000000,359.98901367);
		case 55: Cannabis[54] = CreateObject(3409,-1109.52392578,-975.50292969,128.21875000,0.00000000,0.00000000,359.98901367);
		case 56: Cannabis[55] = CreateObject(3409,-1130.18029785,-974.71759033,128.21875000,0.00000000,0.00000000,359.99450684);
		case 57: Cannabis[56] = CreateObject(3409,-1145.63085938,-974.48205566,128.21875000,0.00000000,0.00000000,359.98901367);
		case 58: Cannabis[57] = CreateObject(3409,-1161.60632324,-974.36035156,128.21875000,0.00000000,0.00000000,359.98901367);
		case 59: Cannabis[58] = CreateObject(3409,-1177.16333008,-974.27777100,128.21875000,0.00000000,0.00000000,359.98901367);
		case 60: Cannabis[59] = CreateObject(3409,-1192.13146973,-973.74450684,128.21192932,0.00000000,0.00000000,359.98901367);
		case 61: Cannabis[60] = CreateObject(3409,-1017.59368896,-961.00091553,128.21875000,0.00000000,0.00000000,1.99951172);
		case 62: Cannabis[61] = CreateObject(3409,-1039.03955078,-961.15631104,128.21875000,0.00000000,0.00000000,359.98901367);
		case 63: Cannabis[62] = CreateObject(3409,-1066.90942383,-961.16162109,128.21875000,0.00000000,0.00000000,359.98901367);
		case 64: Cannabis[63] = CreateObject(3409,-1090.25964355,-960.89739990,128.21875000,0.00000000,0.00000000,359.98901367);
		case 65: Cannabis[64] = CreateObject(3409,-1108.13513184,-960.52606201,128.21875000,0.00000000,0.00000000,359.98901367);
		case 66: Cannabis[65] = CreateObject(3409,-1129.60266113,-960.47192383,128.21875000,0.00000000,0.00000000,359.99450684);
		case 67: Cannabis[66] = CreateObject(3409,-1144.89465332,-960.07586670,128.21875000,0.00000000,0.00000000,359.98901367);
		case 68: Cannabis[67] = CreateObject(3409,-1161.61779785,-960.12048340,128.21875000,0.00000000,0.00000000,359.98901367);
		case 69: Cannabis[68] = CreateObject(3409,-1177.77050781,-959.65521240,128.21192932,0.00000000,0.00000000,359.99450684);
		case 70: Cannabis[69] = CreateObject(3409,-1190.82507324,-959.58007812,128.21192932,0.00000000,0.00000000,359.98901367);
		case 71: Cannabis[70] = CreateObject(3409,-1017.73376465,-949.71936035,128.21875000,0.00000000,0.00000000,1.99951172);
		case 72: Cannabis[71] = CreateObject(3409,-1017.66436768,-936.24945068,128.21875000,0.00000000,0.00000000,1.99951172);
		case 73: Cannabis[72] = CreateObject(3409,-1017.90966797,-922.96966553,128.21266174,0.00000000,0.00000000,1.99951172);
		case 74: Cannabis[73] = CreateObject(3409,-1038.59252930,-948.95910645,128.21875000,0.00000000,0.00000000,359.98901367);
		case 75: Cannabis[74] = CreateObject(3409,-1038.13317871,-936.76184082,128.21875000,0.00000000,0.00000000,359.98901367);
		case 76: Cannabis[75] = CreateObject(3409,-1037.67932129,-922.68627930,128.21875000,0.00000000,0.00000000,359.98901367);
		case 77: Cannabis[76] = CreateObject(3409,-1066.20007324,-948.30541992,128.21875000,0.00000000,0.00000000,359.98901367);
		case 78: Cannabis[77] = CreateObject(3409,-1066.00769043,-935.96289062,128.21875000,0.00000000,0.00000000,359.98901367);
		case 79: Cannabis[78] = CreateObject(3409,-1065.58520508,-921.86968994,128.21875000,0.00000000,0.00000000,359.98901367);
		case 80: Cannabis[79] = CreateObject(3409,-1090.70141602,-947.73626709,128.21875000,0.00000000,0.00000000,359.98901367);
		case 81: Cannabis[80] = CreateObject(3409,-1090.48986816,-935.43817139,128.21875000,0.00000000,0.00000000,359.98901367);
		case 82: Cannabis[81] = CreateObject(3409,-1090.24768066,-921.34045410,128.21875000,0.00000000,0.00000000,359.98901367);
		case 83: Cannabis[82] = CreateObject(3409,-1108.22412109,-947.58557129,128.21875000,0.00000000,0.00000000,359.98901367);
		case 84: Cannabis[83] = CreateObject(3409,-1108.32690430,-935.13586426,128.21875000,0.00000000,0.00000000,359.98901367);
		case 85: Cannabis[84] = CreateObject(3409,-1108.44396973,-920.88586426,128.21875000,0.00000000,0.00000000,359.98901367);
		case 86: Cannabis[85] = CreateObject(3409,-1129.11730957,-947.48205566,128.21875000,0.00000000,0.00000000,359.99450684);
		case 87: Cannabis[86] = CreateObject(3409,-1129.05969238,-934.73205566,128.21875000,0.00000000,0.00000000,359.99450684);
		case 88: Cannabis[87] = CreateObject(3409,-1128.99584961,-920.48236084,128.21875000,0.00000000,0.00000000,359.99450684);
		case 89: Cannabis[88] = CreateObject(3409,-1144.25891113,-947.08770752,128.21875000,0.00000000,0.00000000,359.98901367);
		case 90: Cannabis[89] = CreateObject(3409,-1144.38476562,-934.60473633,128.21875000,0.00000000,0.00000000,359.98901367);
		case 91: Cannabis[90] = CreateObject(3409,-1144.32080078,-920.35498047,128.21875000,0.00000000,0.00000000,359.98901367);
		case 92: Cannabis[91] = CreateObject(3409,-1160.92309570,-946.91772461,128.21875000,0.00000000,0.00000000,359.98901367);
		case 93: Cannabis[92] = CreateObject(3409,-1160.48022461,-934.87615967,128.21875000,0.00000000,0.00000000,359.98901367);
		case 94: Cannabis[93] = CreateObject(3409,-1159.82788086,-920.09436035,128.21875000,0.00000000,0.00000000,359.98901367);
		case 95: Cannabis[94] = CreateObject(3409,-1177.19592285,-946.62677002,128.21875000,0.00000000,0.00000000,359.98901367);
		case 96: Cannabis[95] = CreateObject(3409,-1176.54479980,-934.18182373,128.21875000,0.00000000,0.00000000,359.98901367);
		case 97: Cannabis[96] = CreateObject(3409,-1189.64379883,-946.49462891,128.21192932,0.00000000,0.00000000,359.98901367);
		case 98: Cannabis[97] = CreateObject(3409,-1188.89343262,-934.25177002,128.21192932,0.00000000,0.00000000,359.98901367);
		case 99: Cannabis[98] = CreateObject(3409,-1174.51367188,-920.17547607,128.21192932,0.00000000,0.00000000,359.98901367);
		case 100: Cannabis[99] = CreateObject(3409,-1188.22131348,-920.25708008,128.21875000,0.00000000,0.00000000,359.98901367);
	}
	return 1;
}
stock CreateCannabisPickup(h)
{
	switch(h)
	{
		case 1: CannabisPickup[0] = CreatePickup(1489,14, -1192.74060059,-1006.08270264,128.21875000,-1);
		case 2: CannabisPickup[1] = CreatePickup(1489,14,-1178.37500000,-1053.70800781,128.21875000,-1);
		case 3: CannabisPickup[2] = CreatePickup(1489,14,-1162.70410156,-1053.56347656,128.21875000,-1);
		case 4: CannabisPickup[3] = CreatePickup(1489,14,-1146.71386719,-1053.34179688,128.21875000,-1);
		case 5: CannabisPickup[4] = CreatePickup(1489,14,-1131.37792969,-1053.26855469,128.21875000,-1);
		case 6: CannabisPickup[5] = CreatePickup(1489,14,-1112.13891602,-1053.53283691,128.21875000,-1);
		case 7: CannabisPickup[6] = CreatePickup(1489,14,-1192.57519531,-1054.13476562,128.21875000,-1);
		case 8: CannabisPickup[7] = CreatePickup(1489,14,-1017.49163818,-1023.65789795,128.21875000,-1);
		case 9: CannabisPickup[8] = CreatePickup(1489,14,-1017.55914307,-994.27551270,128.21264648,-1);
		case 10: CannabisPickup[9] = CreatePickup(1489,14,-1162.25659180,-1007.20330811,128.21875000,-1);
		case 11: CannabisPickup[10] = CreatePickup(1489,14,-1177.71386719,-1006.77825928,128.21875000,-1);
		case 12: CannabisPickup[11] = CreatePickup(1489,14,-1017.44696045,-1053.52001953,128.21875000,-1);
		case 13: CannabisPickup[12] = CreatePickup(1489,14,-1065.69274902,-1038.98620605,128.21875000,-1);
		case 14: CannabisPickup[13] = CreatePickup(1489,14,-1065.76025391,-1053.72656250,128.21875000,-1);
		case 15: CannabisPickup[14] = CreatePickup(1489,14,-1090.36254883,-1054.22607422,128.21192932,-1);
		case 16: CannabisPickup[15] = CreatePickup(1489,14,-1040.74499512,-1053.65344238,128.21875000,-1);
		case 17: CannabisPickup[16] = CreatePickup(1489,14,-1090.26367188,-1039.57666016,128.21875000,-1);
		case 18: CannabisPickup[17] = CreatePickup(1489,14,-1130.86157227,-1040.01892090,128.21875000,-1);
		case 19: CannabisPickup[18] = CreatePickup(1489,14,-1130.09582520,-991.11578369,128.21875000,-1);
		case 20: CannabisPickup[19] = CreatePickup(1489,14,-1146.02734375,-1039.85229492,128.21875000,-1);
		case 21: CannabisPickup[20] = CreatePickup(1489,14,-1145.69067383,-1007.43011475,128.21875000,-1);
		case 22: CannabisPickup[21] = CreatePickup(1489,14,-1039.64001465,-1023.46740723,128.21192932,-1);
		case 23: CannabisPickup[22] = CreatePickup(1489,14,-1162.50830078,-1039.31506348,128.21875000,-1);
		case 24: CannabisPickup[23] = CreatePickup(1489,14,-1178.39367676,-1039.19628906,128.21875000,-1);
		case 25: CannabisPickup[24] = CreatePickup(1489,14,-1110.42919922,-991.71569824,128.21875000,-1);
		case 26: CannabisPickup[25] = CreatePickup(1489,14,-1111.63476562,-1039.63037109,128.21192932,-1);
		case 27: CannabisPickup[26] = CreatePickup(1489,14,-1192.67980957,-1039.40417480,128.21875000,-1);
		case 28: CannabisPickup[27] = CreatePickup(1489,14,-1193.07873535,-1023.17224121,128.21875000,-1);
		case 29: CannabisPickup[28] = CreatePickup(1489,14,-1040.55908203,-1038.56982422,128.21875000,-1);
		case 30: CannabisPickup[29] = CreatePickup(1489,14,-1090.03466797,-992.02038574,128.21875000,-1);
		case 31: CannabisPickup[30] = CreatePickup(1489,14,-1161.66052246,-989.70532227,128.21875000,-1);
		case 32: CannabisPickup[31] = CreatePickup(1489,14,-1177.49108887,-988.61297607,128.21875000,-1);
		case 33: CannabisPickup[32] = CreatePickup(1489,14,-1065.63208008,-1023.88592529,128.21875000,-1);
		case 34: CannabisPickup[33] = CreatePickup(1489,14,-1065.93713379,-992.58581543,128.21875000,-1);
		case 35: CannabisPickup[34] = CreatePickup(1489,14,-1017.58514404,-1039.00634766,128.21875000,-1);
		case 36: CannabisPickup[35] = CreatePickup(1489,14,-1039.58593750,-1009.86883545,128.21192932,-1);
		case 37: CannabisPickup[36] = CreatePickup(1489,14,-1192.51184082,-988.52795410,128.21875000,-1);
		case 38: CannabisPickup[37] = CreatePickup(1489,14,-1162.46350098,-1023.77734375,128.21875000,-1);
		case 39: CannabisPickup[38] = CreatePickup(1489,14,-1111.37561035,-1025.38366699,128.21875000,-1);
		case 40: CannabisPickup[39] = CreatePickup(1489,14,-1177.84826660,-1023.57666016,128.21875000,-1);
		case 41: CannabisPickup[40] = CreatePickup(1489,14,-1145.60461426,-1024.44409180,128.21875000,-1);
		case 42: CannabisPickup[41] = CreatePickup(1489,14,-1130.43334961,-1024.70361328,128.21875000,-1);
		case 43: CannabisPickup[42] = CreatePickup(1489,14,-1090.40234375,-1025.30688477,128.21875000,-1);
		case 44: CannabisPickup[43] = CreatePickup(1489,14,-1145.65527344,-990.29754639,128.21875000,-1);
		case 45: CannabisPickup[44] = CreatePickup(1489,14,-1129.47656250,-1008.14746094,128.21875000,-1);
		case 46: CannabisPickup[45] = CreatePickup(1489,14,-1110.93359375,-1007.71777344,128.21875000,-1);
		case 47: CannabisPickup[46] = CreatePickup(1489,14,-1090.11035156,-1009.20507812,128.21875000,-1);
		case 48: CannabisPickup[47] = CreatePickup(1489,14,-1065.75585938,-1009.16308594,128.21875000,-1);
		case 49: CannabisPickup[48] = CreatePickup(1489,14,-1039.26159668,-993.38281250,128.21875000,-1);
		case 50: CannabisPickup[49] = CreatePickup(1489,14,-1017.54296875,-1009.41601562,128.21260071,-1);
		case 51: CannabisPickup[50] = CreatePickup(1489,14,-1017.08087158,-978.24975586,128.21875000,-1);
		case 52: CannabisPickup[51] = CreatePickup(1489,14,-1039.86096191,-977.57965088,128.21875000,-1);
		case 53: CannabisPickup[52] = CreatePickup(1489,14,-1066.34765625,-976.94030762,128.21875000,-1);
		case 54: CannabisPickup[53] = CreatePickup(1489,14,-1090.39892578,-976.40478516,128.21875000,-1);
		case 55: CannabisPickup[54] = CreatePickup(1489,14,-1109.52392578,-975.50292969,128.21875000,-1);
		case 56: CannabisPickup[55] = CreatePickup(1489,14,-1130.18029785,-974.71759033,128.21875000,-1);
		case 57: CannabisPickup[56] = CreatePickup(1489,14,-1145.63085938,-974.48205566,128.21875000,-1);
		case 58: CannabisPickup[57] = CreatePickup(1489,14,-1161.60632324,-974.36035156,128.21875000,-1);
		case 59: CannabisPickup[58] = CreatePickup(1489,14,-1177.16333008,-974.27777100,128.21875000,-1);
		case 60: CannabisPickup[59] = CreatePickup(1489,14,-1192.13146973,-973.74450684,128.21192932,-1);
		case 61: CannabisPickup[60] = CreatePickup(1489,14,-1017.59368896,-961.00091553,128.21875000,-1);
		case 62: CannabisPickup[61] = CreatePickup(1489,14,-1039.03955078,-961.15631104,128.21875000,-1);
		case 63: CannabisPickup[62] = CreatePickup(1489,14,-1066.90942383,-961.16162109,128.21875000,-1);
		case 64: CannabisPickup[63] = CreatePickup(1489,14,-1090.25964355,-960.89739990,128.21875000,-1);
		case 65: CannabisPickup[64] = CreatePickup(1489,14,-1108.13513184,-960.52606201,128.21875000,-1);
		case 66: CannabisPickup[65] = CreatePickup(1489,14,-1129.60266113,-960.47192383,128.21875000,-1);
		case 67: CannabisPickup[66] = CreatePickup(1489,14,-1144.89465332,-960.07586670,128.21875000,-1);
		case 68: CannabisPickup[67] = CreatePickup(1489,14,-1161.61779785,-960.12048340,128.21875000,-1);
		case 69: CannabisPickup[68] = CreatePickup(1489,14,-1177.77050781,-959.65521240,128.21192932,-1);
		case 70: CannabisPickup[69] = CreatePickup(1489,14,-1190.82507324,-959.58007812,128.21192932,-1);
		case 71: CannabisPickup[70] = CreatePickup(1489,14,-1017.73376465,-949.71936035,128.21875000,-1);
		case 72: CannabisPickup[71] = CreatePickup(1489,14,-1017.66436768,-936.24945068,128.21875000,-1);
		case 73: CannabisPickup[72] = CreatePickup(1489,14,-1017.90966797,-922.96966553,128.21266174,-1);
		case 74: CannabisPickup[73] = CreatePickup(1489,14,-1038.59252930,-948.95910645,128.21875000,-1);
		case 75: CannabisPickup[74] = CreatePickup(1489,14,-1038.13317871,-936.76184082,128.21875000,-1);
		case 76: CannabisPickup[75] = CreatePickup(1489,14,-1037.67932129,-922.68627930,128.21875000,-1);
		case 77: CannabisPickup[76] = CreatePickup(1489,14,-1066.20007324,-948.30541992,128.21875000,-1);
		case 78: CannabisPickup[77] = CreatePickup(1489,14,-1066.00769043,-935.96289062,128.21875000,-1);
		case 79: CannabisPickup[78] = CreatePickup(1489,14,-1065.58520508,-921.86968994,128.21875000,-1);
		case 80: CannabisPickup[79] = CreatePickup(1489,14,-1090.70141602,-947.73626709,128.21875000,-1);
		case 81: CannabisPickup[80] = CreatePickup(1489,14,-1090.48986816,-935.43817139,128.21875000,-1);
		case 82: CannabisPickup[81] = CreatePickup(1489,14,-1090.24768066,-921.34045410,128.21875000,-1);
		case 83: CannabisPickup[82] = CreatePickup(1489,14,-1108.22412109,-947.58557129,128.21875000,-1);
		case 84: CannabisPickup[83] = CreatePickup(1489,14,-1108.32690430,-935.13586426,128.21875000,-1);
		case 85: CannabisPickup[84] = CreatePickup(1489,14,-1108.44396973,-920.88586426,128.21875000,-1);
		case 86: CannabisPickup[85] = CreatePickup(1489,14,-1129.11730957,-947.48205566,128.21875000,-1);
		case 87: CannabisPickup[86] = CreatePickup(1489,14,-1129.05969238,-934.73205566,128.21875000,-1);
		case 88: CannabisPickup[87] = CreatePickup(1489,14,-1128.99584961,-920.48236084,128.21875000,-1);
		case 89: CannabisPickup[88] = CreatePickup(1489,14,-1144.25891113,-947.08770752,128.21875000,-1);
		case 90: CannabisPickup[89] = CreatePickup(1489,14,-1144.38476562,-934.60473633,128.21875000,-1);
		case 91: CannabisPickup[90] = CreatePickup(1489,14,-1144.32080078,-920.35498047,128.21875000,-1);
		case 92: CannabisPickup[91] = CreatePickup(1489,14,-1160.92309570,-946.91772461,128.21875000,-1);
		case 93: CannabisPickup[92] = CreatePickup(1489,14,-1160.48022461,-934.87615967,128.21875000,-1);
		case 94: CannabisPickup[93] = CreatePickup(1489,14,-1159.82788086,-920.09436035,128.21875000,-1);
		case 95: CannabisPickup[94] = CreatePickup(1489,14,-1177.19592285,-946.62677002,128.21875000,-1);
		case 96: CannabisPickup[95] = CreatePickup(1489,14,-1176.54479980,-934.18182373,128.21875000,-1);
		case 97: CannabisPickup[96] = CreatePickup(1489,14,-1189.64379883,-946.49462891,128.21192932,-1);
		case 98: CannabisPickup[97] = CreatePickup(1489,14,-1188.89343262,-934.25177002,128.21192932,-1);
		case 99: CannabisPickup[98] = CreatePickup(1489,14,-1174.51367188,-920.17547607,128.21192932,-1);
		case 100: CannabisPickup[99] = CreatePickup(1489,14,-1188.22131348,-920.25708008,128.21875000,-1);
	}
	return 1;
}
stock SendMail( const szReceiver[ ], const szSenderMail[ ], const szSenderName[ ], const szSubject[ ], const szMessage[ ] )
{
	new
		szBuffer[ MAILER_MAX_MAIL_SIZE ] = "t=",
		iPos    = strlen( szBuffer ),
		iLength = strlen( szReceiver )
	;
	memcpy( szBuffer, szReceiver, iPos * 4, ( iLength + 1 ) * 4 );
	StringURLEncode( szBuffer[ iPos ], 1024 - iPos );
	strcat( szBuffer, "&f=" );
	iPos    = strlen( szBuffer );
	iLength = strlen( szSenderName );
	memcpy( szBuffer, szSenderName, iPos * 4, ( iLength + 1 ) * 4 );
	StringURLEncode( szBuffer[ iPos ], 1024 - iPos );
	strcat( szBuffer, "&n=" );
	iPos    = strlen( szBuffer );
	iLength = strlen( szSenderMail );
	memcpy( szBuffer, szSenderMail, iPos * 4, ( iLength + 1 ) * 4 );
	StringURLEncode( szBuffer[ iPos ], 1024 - iPos );
	strcat( szBuffer, "&s=" );
	iPos    = strlen( szBuffer );
	iLength = strlen( szSubject );
	memcpy( szBuffer, szSubject, iPos * 4, ( iLength + 1 ) * 4 );
	StringURLEncode( szBuffer[ iPos ], 1024 - iPos );
	strcat( szBuffer, "&m=" );
	iPos    = strlen( szBuffer );
	iLength = strlen( szMessage );
	memcpy( szBuffer, szMessage, iPos * 4, ( iLength + 1 ) * 4 );
	StringURLEncode( szBuffer[ iPos ], 1024 - iPos );
	HTTP( 0xD00D, HTTP_POST, MAILER_URL, szBuffer, "OnMailScriptResponse" );
}

forward OnMailScriptResponse( iIndex, iResponseCode, const szData[ ] );
public  OnMailScriptResponse( iIndex, iResponseCode, const szData[ ] )
{
	return 1;
}

stock StringURLEncode( szString[ ], iSize = sizeof( szString ) )
{
	for ( new i = 0, l = strlen( szString ); i < l; i++ )
	{
		switch ( szString[ i ] )
		{
			case '!', '(', ')', '\'', '*',
			     '0' .. '9',
			     'A' .. 'Z',
			     'a' .. 'z':
			{
				continue;
			}

			case ' ':
			{
				szString[ i ] = '+';

				continue;
			}
		}

		new
			s_szHex[ 8 ]
		;

		if ( i + 3 >= iSize )
		{
			szString[ i ] = EOS;

			break;
		}

		if ( l + 3 >= iSize )
			szString[ iSize - 3 ] = EOS;

		format( s_szHex, sizeof( s_szHex ), "%02h", szString[ i ] );

		szString[ i ] = '%';

		strins( szString, s_szHex, i + 1, iSize );

		l += 2;
		i += 2;

		if ( l > iSize - 1 )
			l = iSize - 1;
	}
}

stock UpdateMatsDrugsTexts()
{
	new string[128];
	format(string, sizeof(string), ">> Склад фермы: %d/15000 <<\n>> Склад притона: %d/5000 <<",DrugsFarmAmmount,DrugsPritonAmmount);
	Update3DTextLabelText(KolhozText,0xFF8000FF,string);
	
	format(string, sizeof(string), ">> Склад притона: %d/5000 <<",DrugsPritonAmmount);
	Update3DTextLabelText(PritonText,0xFF8000FF,string);
	
	format(string, sizeof(string), "Склад материалов: %d/50000\n\nПродать мат-ы на склад /sellmats",MatsAmmount);
	Update3DTextLabelText(RifaText,0xFF8000FF,string);
	
}
forward HideDialogDM(playerid);
public HideDialogDM(playerid)
{
	ShowPlayerDialog(playerid,-1,-2," "," "," "," ");
	DeletePVar(playerid,"NoShowDialog");
	order[playerid] = 0;
	return 1;
}

forward ShowTime(playerid, sek);
public ShowTime(playerid, sek)
{
	if(sek == 0)
	{
	    KillTimer(TimeShowTimer[playerid]);
	    TimeShowTimer[playerid] = -1;
	    ShowPlayerDialog(playerid,-1,-2," "," "," "," ");
	    return 1;
	}
    TimeShowTimer[playerid] = SetTimerEx("ShowTime", 1000, 0, "dd", playerid, sek-1);
    
	new mtext[20], string[128];
	new year, month,day;
	getdate(year, month, day);
	switch(month)
	{
		case 1: mtext = "января";
		case 2: mtext = "февраля";
		case 3: mtext = "марта";
		case 4: mtext = "апреля";
		case 5: mtext = "мая";
		case 6: mtext = "июня";
		case 7: mtext = "июля";
		case 8: mtext = "августа";
		case 9: mtext = "сентября";
		case 10: mtext = "октября";
		case 11: mtext = "ноября";
		case 12: mtext = "декабря";
	}
	new hour,minuite,second;
	gettime(hour,minuite,second);
	

	if (GetPVarInt(playerid,"JailTime")) format(string, sizeof(string), "Дата: %d %s %d года\nВремя: %d : %d : %d\nОсталось сидеть: %s", day, mtext, year, hour, minuite, second, Convert(GetPVarInt(playerid,"JailTime")));
	else format(string, sizeof(string), "Дата: %d %s %d года\nВремя: %d : %d : %d", day, mtext, year, hour, minuite, second);

	return ShowPlayerDialog(playerid,21,DIALOG_STYLE_MSGBOX, RGB_SERVER"Дата/Время",string,"Ок","");
}


stock ShowFactionPickup(playerid) // Когда встаешь на пикап новостей
{
    switch(GetPVarInt(playerid, "Team"))
	{
		case 5, 6, 10, 12..18: ShowPlayerDialog(playerid, 237, DIALOG_STYLE_LIST, RGB_SERVER"Меню организации", "Новости\nОбщак", "Далее", "Отмена");
		default: ShowPlayerGangNews(playerid);
	}
	return 1;
}
stock ShowPlayerGangNews(playerid)
{
	new str[1024];
	new team = GetPVarInt(playerid,"Team");
	format(str, 1000, "%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s %s",
	GangDialogNews[team-1][0],
	GangDialogNews[team-1][1],
	GangDialogNews[team-1][2],
	GangDialogNews[team-1][3],
	GangDialogNews[team-1][4],
	GangDialogNews[team-1][5],
	GangDialogNews[team-1][6],
	GangDialogNews[team-1][7],
	GangDialogNews[team-1][8],
	GangDialogNews[team-1][9],
	GangDialogNews[team-1][10]);
	ShowPlayerDialog(playerid, 236, DIALOG_STYLE_MSGBOX, RGB_SERVER"Новости организации", str, "Готово", "");
	return 1;
}

stock Elevator_Initialize()
{
	// Initializes the elevator.

	Obj_Elevator 			= CreateObject(18755, 1786.678100, -1303.459472, GROUND_Z_COORD + ELEVATOR_OFFSET, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[0] 	= CreateObject(18757, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[1] 	= CreateObject(18756, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);

	Label_Elevator          = Create3DTextLabel("Нажмите 'F' чтобы выбрать этаж", 0xFFFFDD, 1784.9822, -1302.0426, 13.6491, 4.0, 0, 1);

	new string[128],
		Float:z;

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    Obj_FloorDoors[i][0] 	= CreateObject(18757, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);
		Obj_FloorDoors[i][1] 	= CreateObject(18756, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);

		format(string, sizeof(string), "%s\nНажмите 'F' чтобы вызвать лифт", FloorNames[i]);

		if(i == 0)
		    z = 13.4713;
		else
		    z = 13.4713 + 8.7396 + ((i-1) * 5.45155);

		Label_Floors[i]         = Create3DTextLabel(string, 0xFFFFDD, 1783.9799, -1300.7660, z, 10.5, 0, 1);
		// Label_Elevator, Text3D:Label_Floors[21];
	}

	// Open ground floor doors:
	Floor_OpenDoors(0);
	Elevator_OpenDoors();

	return 1;
}

stock Elevator_Destroy()
{
	// Destroys the elevator.

	DestroyObject(Obj_Elevator);
	DestroyObject(Obj_ElevatorDoors[0]);
	DestroyObject(Obj_ElevatorDoors[1]);
	Delete3DTextLabel(Label_Elevator);

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    DestroyObject(Obj_FloorDoors[i][0]);
		DestroyObject(Obj_FloorDoors[i][1]);
		Delete3DTextLabel(Label_Floors[i]);
	}

	return 1;
}

stock Elevator_OpenDoors()
{
	// Opens the elevator's doors.

	new Float:x, Float:y, Float:z;

	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_L_OPENED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_R_OPENED, y, z, DOORS_SPEED);

	return 1;
}

stock Elevator_CloseDoors()
{
    // Closes the elevator's doors.

    if(ElevatorState == ELEVATOR_STATE_MOVING)
	    return 0;

    new Float:x, Float:y, Float:z;

	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, y, z, DOORS_SPEED);

	return 1;
}

stock Floor_OpenDoors(floorid)
{
    // Opens the doors at the specified floor.

    MoveObject(Obj_FloorDoors[floorid][0], X_DOOR_L_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveObject(Obj_FloorDoors[floorid][1], X_DOOR_R_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);

	return 1;
}

stock Floor_CloseDoors(floorid)
{
    // Closes the doors at the specified floor.

    MoveObject(Obj_FloorDoors[floorid][0], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveObject(Obj_FloorDoors[floorid][1], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);

	return 1;
}

stock Elevator_MoveToFloor(floorid)
{
	// Moves the elevator to specified floor (doors are meant to be already closed).

	ElevatorState = ELEVATOR_STATE_MOVING;
	ElevatorFloor = floorid;

	// Move the elevator slowly, to give time to clients to sync the object surfing. Then, boost it up:
	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), 0.5);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.5);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.5);
    Delete3DTextLabel(Label_Elevator);

	ElevatorBoostTimer = SetTimerEx("Elevator_Boost", 2000, 0, "i", floorid);

	return 1;
}

public Elevator_Boost(floorid)
{
	// Increases the elevator's speed until it reaches 'floorid'

	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);

	return 1;
}

public Elevator_TurnToIdle()
{
	ElevatorState = ELEVATOR_STATE_IDLE;
	ReadNextFloorInQueue();

	return 1;
}

stock RemoveFirstQueueFloor()
{
	// Removes the data in ElevatorQueue[0], and reorders the queue accordingly.

	for(new i; i < sizeof(ElevatorQueue) - 1; i ++)
	    ElevatorQueue[i] = ElevatorQueue[i + 1];

	ElevatorQueue[sizeof(ElevatorQueue) - 1] = INVALID_FLOOR;

	return 1;
}

stock AddFloorToQueue(floorid)
{
 	// Adds 'floorid' at the end of the queue.

	// Scan for the first empty space:
	new slot = -1;
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(ElevatorQueue[i] == INVALID_FLOOR)
	    {
	        slot = i;
	        break;
	    }
	}

	if(slot != -1)
	{
	    ElevatorQueue[slot] = floorid;

     	// If needed, move the elevator.
	    if(ElevatorState == ELEVATOR_STATE_IDLE)
	        ReadNextFloorInQueue();

	    return 1;
	}

	return 0;
}

stock ResetElevatorQueue()
{
	// Resets the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    ElevatorQueue[i] 	= INVALID_FLOOR;
	    FloorRequestedBy[i] = INVALID_PLAYER_ID;
	}

	return 1;
}

stock IsFloorInQueue(floorid)
{
	// Checks if the specified floor is currently part of the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	    if(ElevatorQueue[i] == floorid)
	        return 1;

	return 0;
}

stock ReadNextFloorInQueue()
{
	// Reads the next floor in the queue, closes doors, and goes to it.

	if(ElevatorState != ELEVATOR_STATE_IDLE || ElevatorQueue[0] == INVALID_FLOOR)
	    return 0;

	Elevator_CloseDoors();
	Floor_CloseDoors(ElevatorFloor);

	return 1;
}

stock DidPlayerRequestElevator(playerid)
{
	for(new i; i < sizeof(FloorRequestedBy); i ++)
	    if(FloorRequestedBy[i] == playerid)
	        return 1;

	return 0;
}

stock ShowElevatorDialog(playerid)
{
	new string[512];
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(FloorRequestedBy[i] != INVALID_PLAYER_ID)
	        strcat(string, "{FF0000}");

	    strcat(string, FloorNames[i]);
	    strcat(string, "\n");
	}

	ShowPlayerDialog(playerid, 45, DIALOG_STYLE_LIST, RGB_SERVER"Выберите этаж", string, "Выбрать", "Отмена");

	return 1;
}

stock CallElevator(playerid, floorid)
{
	// Calls the elevator (also used with the elevator dialog).

	if(FloorRequestedBy[floorid] != INVALID_PLAYER_ID || IsFloorInQueue(floorid))
	    return 0;

	FloorRequestedBy[floorid] = playerid;
	AddFloorToQueue(floorid);

	return 1;
}

stock Float:GetElevatorZCoordForFloor(floorid)
    return (GROUND_Z_COORD + FloorZOffsets[floorid] + ELEVATOR_OFFSET); // A small offset for the elevator object itself.

stock Float:GetDoorsZCoordForFloor(floorid)
	return (GROUND_Z_COORD + FloorZOffsets[floorid]);

ConnectMySQL()
{
    new MySQL:connection = mysql_init(LOG_ONLY_ERRORS, 1);//LOG_ONLY_ERRORS
	mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASS, MYSQL_DB, connection, 1);
	if(mysql_ping() == 0)
	{
		print("[MySQL] Connection to the MySQL Database was successfully!");
	}
	else
	{
		print("[MySQL] Could not connect to the MySQL Database!");
	}
}

CheckMySQL()
{
	if(mysql_ping() != 0) ConnectMySQL();
	return 1;
}

stock OnPlayerUpdateGF(playerid)
{
    if(GetPVarInt(playerid,"Logged") == 0) return 1;
    new count = GetTickCount();
    new query[1740], src[120];
    
    new name[24];
    GetPlayerName(playerid,name,sizeof(name));

   	format(query,sizeof(query),"UPDATE `"UsersTable"` SET ");

    
	format(src,sizeof(src),"`Money` = %d,", GetPVarInt(playerid,"Money")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`BankMoney` = %d,", GetPVarInt(playerid,"BankMoney")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`ConnectedTime` = %d,", GetPVarInt(playerid,"ConnectedTime")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Registered` = %d,", GetPVarInt(playerid,"Registered")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Origin` = %d,", GetPVarInt(playerid,"Origin")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Respect` = %d,", GetPVarInt(playerid,"Respect")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Crimes` = %d,", GetPVarInt(playerid,"Crimes")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Kills` = %d,", GetPVarInt(playerid,"Kills")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Deaths` = %d,", GetPVarInt(playerid,"Deaths")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Job` = %d,", GetPVarInt(playerid,"Job")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Paycheck` = %d,", GetPVarInt(playerid,"Paycheck")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Jailed` = %d,", GetPVarInt(playerid,"Jailed")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`JailTime` = %d,", GetPVarInt(playerid,"JailTime")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Materials` = %d,", GetPVarInt(playerid,"Materials")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Drugs` = %d,", GetPVarInt(playerid,"Drugs")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Leader` = %d,", GetPVarInt(playerid,"Leader")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Member` = %d,", GetPVarInt(playerid,"Member")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Rank` = %d,", GetPVarInt(playerid,"Rank")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Skin` = %d,", GetPVarInt(playerid,"Skin")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CurrentSkin` = %d,", GetPVarInt(playerid,"CurrentSkin")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`DetSkill` = %d,", GetPVarInt(playerid,"DetSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`SexSkill` = %d,", GetPVarInt(playerid,"SexSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`TrainerSkill` = %d,", GetPVarInt(playerid,"TrainerSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`LawSkill` = %d,", GetPVarInt(playerid,"LawSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`MechSkill` = %d,", GetPVarInt(playerid,"MechSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`JackSkill` = %d,", GetPVarInt(playerid,"JackSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarSkill` = %d,", GetPVarInt(playerid,"CarSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`NewsSkill` = %d,", GetPVarInt(playerid,"NewsSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`DrugsSkill` = %d,", GetPVarInt(playerid,"DrugsSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`FishSkill` = %d,", GetPVarInt(playerid,"FishSkill")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`FightStyle` = %d,", GetPVarInt(playerid,"FightStyle")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarTime` = %d,", GetPVarInt(playerid,"CarTime")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`PayDay` = %d,", GetPVarInt(playerid,"PayDay")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Fuel` = %d,", GetPVarInt(playerid,"Fuel")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarKey` = %d,", GetPVarInt(playerid,"CarKey")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Married` = %d,", GetPVarInt(playerid,"Married")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Peint` = %d,", GetPVarInt(playerid,"Achievement_Peint")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Duel` = %d,", GetPVarInt(playerid,"Achievement_Duel")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_First_Peint` = %d,", GetPVarInt(playerid,"Achievement_First_Peint")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_First_Race` = %d,", GetPVarInt(playerid,"Achievement_First_Race")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Rich_Taxi` = %d,", GetPVarInt(playerid,"Achievement_Rich_Taxi")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Best_Mechanic` = %d,", GetPVarInt(playerid,"Achievement_Best_Mechanic")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Rich_Race` = %d,", GetPVarInt(playerid,"Achievement_Rich_Race")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Rich_Peint` = %d,", GetPVarInt(playerid,"Achievement_Rich_Peint")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Scavenger` = %d,", GetPVarInt(playerid,"Achievement_Scavenger")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Taxpayer` = %d,", GetPVarInt(playerid,"Achievement_Taxpayer")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Drug_Addict` = %d,", GetPVarInt(playerid,"Achievement_Drug_Addict")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Criminal` = %d,", GetPVarInt(playerid,"Achievement_Criminal")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Worker` = %d,", GetPVarInt(playerid,"Achievement_Worker")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Loader` = %d,", GetPVarInt(playerid,"Achievement_Loader")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Fisher` = %d,", GetPVarInt(playerid,"Achievement_Fisher")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Shooter` = %d,", GetPVarInt(playerid,"Achievement_Shooter")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Gangwar` = %d,", GetPVarInt(playerid,"Achievement_Gangwar")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Achievement_Copjail` = %d,", GetPVarInt(playerid,"Achievement_Copjail")); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Drugs_Ad` = %d,", GetPVarInt(playerid,"Drugs_Ad")); strcat(query,src,sizeof(query));

 	format(src,sizeof(src),"`LastVisit` = NOW() WHERE `id` = %d LIMIT 1",GetPVarInt(playerid, "MySQL_id")); strcat(query,src,sizeof(query));
 	mysql_query(query);
  	printf("%s",query);
  	
	printf("OnPlayerUpdateGF time: %d", GetTickCount() - count);
    return 1;
}
stock OnPlayerLogin(playerid,password[])
{
    if(IsPlayerNPC(playerid) || GetPVarInt(playerid, "MySQL_id") != 0) return 1; // Тут менял
    
    KillTimer(LoginDelay[playerid]);
    LoginDelay[playerid] = -1;
    
    CheckMySQL();
    new count = GetTickCount();
    new query[256];
    new name[24];
    GetPlayerName(playerid,name,sizeof(name));
    format(query,sizeof(query), "SELECT * FROM `"UsersTable"` WHERE `Name` = '%s' AND `Password` = '%s' LIMIT 1",name,password);
    mysql_query(query);
    mysql_store_result();
    new tmp[100];
    if(mysql_num_rows())
    {
        mysql_fetch_field("id", tmp); SetPVarInt(playerid,"MySQL_id",strval(tmp));
  	 	mysql_fetch_field("Password", tmp); SetPVarString(playerid,"Password",tmp);
        mysql_fetch_field("Level", tmp); SetPVarInt(playerid,"Level",strval(tmp));
        mysql_fetch_field("AdminLevel", tmp); SetPVarInt(playerid,"AdminLevel",strval(tmp));
        mysql_fetch_field("Money", tmp); SetPVarInt(playerid,"Money",strval(tmp));
        mysql_fetch_field("BankMoney", tmp); SetPVarInt(playerid,"BankMoney",strval(tmp));
        mysql_fetch_field("DonateMoney", tmp); SetPVarInt(playerid,"DonateMoney",strval(tmp));
        mysql_fetch_field("ConnectedTime", tmp); SetPVarInt(playerid,"ConnectedTime",strval(tmp));
        mysql_fetch_field("Registered", tmp); SetPVarInt(playerid,"Registered",strval(tmp));
        mysql_fetch_field("Sex", tmp); SetPVarInt(playerid,"Sex",strval(tmp));
        mysql_fetch_field("Age", tmp); SetPVarInt(playerid,"Age",strval(tmp));
        mysql_fetch_field("Ban", tmp); SetPVarInt(playerid,"Ban",strval(tmp));
        mysql_fetch_field("Origin", tmp); SetPVarInt(playerid,"Origin",strval(tmp));
        mysql_fetch_field("Respect", tmp); SetPVarInt(playerid,"Respect",strval(tmp));
        mysql_fetch_field("Crimes", tmp); SetPVarInt(playerid,"Crimes",strval(tmp));
        mysql_fetch_field("Kills", tmp); SetPVarInt(playerid,"Kills",strval(tmp));
        mysql_fetch_field("Deaths", tmp); SetPVarInt(playerid,"Deaths",strval(tmp));
        mysql_fetch_field("Arrested", tmp); SetPVarInt(playerid,"Arrested",strval(tmp));
        mysql_fetch_field("Phonebook", tmp); SetPVarInt(playerid,"Phonebook",strval(tmp));
        mysql_fetch_field("Job", tmp); SetPVarInt(playerid,"Job",strval(tmp));
        mysql_fetch_field("Paycheck", tmp); SetPVarInt(playerid,"Paycheck",strval(tmp));
        mysql_fetch_field("HeadValue", tmp); SetPVarInt(playerid,"HeadValue",strval(tmp));
        mysql_fetch_field("Jailed", tmp); SetPVarInt(playerid,"Jailed",strval(tmp));
        mysql_fetch_field("JailTime", tmp); SetPVarInt(playerid,"JailTime",strval(tmp));
        mysql_fetch_field("Materials", tmp); SetPVarInt(playerid,"Materials",strval(tmp));
        mysql_fetch_field("Drugs", tmp); SetPVarInt(playerid,"Drugs",strval(tmp));
        mysql_fetch_field("Leader", tmp); SetPVarInt(playerid,"Leader",strval(tmp));
        mysql_fetch_field("Member", tmp); SetPVarInt(playerid,"Member",strval(tmp));
        mysql_fetch_field("Rank", tmp); SetPVarInt(playerid,"Rank",strval(tmp));
        mysql_fetch_field("Skin", tmp); SetPVarInt(playerid,"Skin",strval(tmp));
        mysql_fetch_field("Skin1", tmp); SetPVarInt(playerid,"Skin1",strval(tmp));
        mysql_fetch_field("Skin2", tmp); SetPVarInt(playerid,"Skin2",strval(tmp));
        mysql_fetch_field("Skin3", tmp); SetPVarInt(playerid,"Skin3",strval(tmp));
        mysql_fetch_field("Skin4", tmp); SetPVarInt(playerid,"Skin4",strval(tmp));
        mysql_fetch_field("Skin5", tmp); SetPVarInt(playerid,"Skin5",strval(tmp));
        mysql_fetch_field("Skin6", tmp); SetPVarInt(playerid,"Skin6",strval(tmp));
        mysql_fetch_field("Skin7", tmp); SetPVarInt(playerid,"Skin7",strval(tmp));
        mysql_fetch_field("Skin8", tmp); SetPVarInt(playerid,"Skin8",strval(tmp));
        mysql_fetch_field("Skin9", tmp); SetPVarInt(playerid,"Skin9",strval(tmp));
        mysql_fetch_field("Skin10", tmp); SetPVarInt(playerid,"Skin10",strval(tmp));
        mysql_fetch_field("CurrentSkin", tmp); SetPVarInt(playerid,"CurrentSkin",strval(tmp));
        mysql_fetch_field("OldSkin", tmp); SetPVarInt(playerid,"OldSkin",strval(tmp));
        mysql_fetch_field("DetSkill", tmp); SetPVarInt(playerid,"DetSkill",strval(tmp));
        mysql_fetch_field("SexSkill", tmp); SetPVarInt(playerid,"SexSkill",strval(tmp));
        mysql_fetch_field("TrainerSkill", tmp); SetPVarInt(playerid,"TrainerSkill",strval(tmp));
        mysql_fetch_field("LawSkill", tmp); SetPVarInt(playerid,"LawSkill",strval(tmp));
        mysql_fetch_field("MechSkill", tmp); SetPVarInt(playerid,"MechSkill",strval(tmp));
        mysql_fetch_field("JackSkill", tmp); SetPVarInt(playerid,"JackSkill",strval(tmp));
        mysql_fetch_field("CarSkill", tmp); SetPVarInt(playerid,"CarSkill",strval(tmp));
        mysql_fetch_field("NewsSkill", tmp); SetPVarInt(playerid,"NewsSkill",strval(tmp));
        mysql_fetch_field("DrugsSkill", tmp); SetPVarInt(playerid,"DrugsSkill",strval(tmp));
        mysql_fetch_field("FishSkill", tmp); SetPVarInt(playerid,"FishSkill",strval(tmp));
        mysql_fetch_field("FactorySkill", tmp); SetPVarInt(playerid,"FactorySkill",strval(tmp));
        mysql_fetch_field("FightStyle", tmp); SetPVarInt(playerid,"FightStyle",strval(tmp));
        mysql_fetch_field("PhoneNumber", tmp); SetPVarInt(playerid,"PhoneNumber",strval(tmp));
        mysql_fetch_field("House", tmp); SetPVarInt(playerid,"House",strval(tmp));
        mysql_fetch_field("Bizz", tmp); SetPVarInt(playerid,"Bizz",strval(tmp));
        mysql_fetch_field("CarLic", tmp); SetPVarInt(playerid,"CarLic",strval(tmp));
        mysql_fetch_field("FlyLic", tmp); SetPVarInt(playerid,"FlyLic",strval(tmp));
        mysql_fetch_field("BoatLic", tmp); SetPVarInt(playerid,"BoatLic",strval(tmp));
        mysql_fetch_field("FishLic", tmp); SetPVarInt(playerid,"FishLic",strval(tmp));
        mysql_fetch_field("GunLic", tmp); SetPVarInt(playerid,"GunLic",strval(tmp));
        mysql_fetch_field("CarTime", tmp); SetPVarInt(playerid,"CarTime",strval(tmp));
        mysql_fetch_field("PayDay", tmp); SetPVarInt(playerid,"PayDay",strval(tmp));
        mysql_fetch_field("CDPlayer", tmp); SetPVarInt(playerid,"CDPlayer",strval(tmp));
        mysql_fetch_field("Warnings", tmp); SetPVarInt(playerid,"Warnings",strval(tmp));
        mysql_fetch_field("TimeWarn", tmp); SetPVarInt(playerid,"TimeWarn",strval(tmp));
        mysql_fetch_field("Fuel", tmp); SetPVarInt(playerid,"Fuel",strval(tmp));
        mysql_fetch_field("Married", tmp); SetPVarInt(playerid,"Married",strval(tmp));
        mysql_fetch_field("Cigars", tmp); SetPVarInt(playerid,"Cigars",strval(tmp));
        mysql_fetch_field("Lighter", tmp); SetPVarInt(playerid,"Lighter",strval(tmp));
        mysql_fetch_field("Sprunk", tmp); SetPVarInt(playerid,"Sprunk",strval(tmp));
        mysql_fetch_field("Beer", tmp); SetPVarInt(playerid,"Beer",strval(tmp));
        mysql_fetch_field("Wine", tmp); SetPVarInt(playerid,"Wine",strval(tmp));
        mysql_fetch_field("Helper", tmp); SetPVarInt(playerid,"Helper",strval(tmp));
        mysql_fetch_field("FWarns", tmp); SetPVarInt(playerid,"FWarns",strval(tmp));
        mysql_fetch_field("fMute", tmp); SetPVarInt(playerid,"fMute",strval(tmp));
        mysql_fetch_field("MuteTime", tmp); SetPVarInt(playerid,"MuteTime",strval(tmp));
        mysql_fetch_field("AllowHouseChange", tmp); SetPVarInt(playerid,"AllowHouseChange",strval(tmp));
        mysql_fetch_field("DelayMailChange", tmp); SetPVarInt(playerid,"DelayMailChange",strval(tmp));
        mysql_fetch_field("AllowNameChange", tmp); SetPVarInt(playerid,"AllowNameChange",strval(tmp));
        mysql_fetch_field("AllowCarNumberChange", tmp); SetPVarInt(playerid,"AllowCarNumberChange",strval(tmp));
        mysql_fetch_field("Total_Quests", tmp); SetPVarInt(playerid,"Total_Quests",strval(tmp));

        mysql_fetch_field("Achievement_Peint", tmp); SetPVarInt(playerid,"Achievement_Peint",strval(tmp));
        mysql_fetch_field("Achievement_Duel", tmp); SetPVarInt(playerid,"Achievement_Duel",strval(tmp));
        mysql_fetch_field("Achievement_First_Peint", tmp); SetPVarInt(playerid,"Achievement_First_Peint",strval(tmp));
        mysql_fetch_field("Achievement_First_Race", tmp); SetPVarInt(playerid,"Achievement_First_Race",strval(tmp));
        mysql_fetch_field("Achievement_Rich_Taxi", tmp); SetPVarInt(playerid,"Achievement_Rich_Taxi",strval(tmp));
        mysql_fetch_field("Achievement_Best_Mechanic", tmp); SetPVarInt(playerid,"Achievement_Best_Mechanic",strval(tmp));
        mysql_fetch_field("Achievement_Rich_Race", tmp); SetPVarInt(playerid,"Achievement_Rich_Race",strval(tmp));
        mysql_fetch_field("Achievement_Rich_Peint", tmp); SetPVarInt(playerid,"Achievement_Rich_Peint",strval(tmp));
        mysql_fetch_field("Achievement_Scavenger", tmp); SetPVarInt(playerid,"Achievement_Scavenger",strval(tmp));
        mysql_fetch_field("Achievement_Taxpayer", tmp); SetPVarInt(playerid,"Achievement_Taxpayer",strval(tmp));
        mysql_fetch_field("Achievement_Drug_Addict", tmp); SetPVarInt(playerid,"Achievement_Drug_Addict",strval(tmp));
        mysql_fetch_field("Achievement_Criminal", tmp); SetPVarInt(playerid,"Achievement_Criminal",strval(tmp));
        mysql_fetch_field("Achievement_Worker", tmp); SetPVarInt(playerid,"Achievement_Worker",strval(tmp));
        mysql_fetch_field("Achievement_Loader", tmp); SetPVarInt(playerid,"Achievement_Loader",strval(tmp));
        mysql_fetch_field("Achievement_Fisher", tmp); SetPVarInt(playerid,"Achievement_Fisher",strval(tmp));
        mysql_fetch_field("Achievement_Shooter", tmp); SetPVarInt(playerid,"Achievement_Shooter",strval(tmp));
        mysql_fetch_field("Achievement_Gangwar", tmp); SetPVarInt(playerid,"Achievement_Gangwar",strval(tmp));
        mysql_fetch_field("Achievement_Copjail", tmp); SetPVarInt(playerid,"Achievement_Copjail",strval(tmp));
        mysql_fetch_field("Drugs_Ad", tmp); SetPVarInt(playerid,"Drugs_Ad",strval(tmp));

        mysql_fetch_field("CarKey", tmp); SetPVarInt(playerid,"CarKey",strval(tmp));
        mysql_fetch_field("MarriedTo", tmp); SetPVarString(playerid,"MarriedTo",tmp);
        mysql_fetch_field("Mail", tmp); SetPVarString(playerid,"Mail",tmp);
        mysql_fetch_field("Forum", tmp); SetPVarString(playerid,"Forum",tmp);
        mysql_fetch_field("FriendID", tmp); SetPVarInt(playerid,"FriendID",strval(tmp));
        
        mysql_fetch_field("LastVisit", tmp); SetPVarString(playerid,"LastVisit",tmp);
        mysql_fetch_field("RegDate", tmp); SetPVarString(playerid,"RegDate",tmp);
        
        mysql_free_result();
        
    }
    else
    {
    	GivePVarInt(playerid,"LoginTries",1);
		if(GetPVarInt(playerid,"LoginTries") == 5)
		{
			MySQL_Banip(playerid, 1, "Неверный пароль");
		}
		else
		{
			ShowLoginDialog(playerid);
			new st[128];
			format(st, 128, "Неверный пароль. Осталось попыток ввода: %d", 5-GetPVarInt(playerid, "LoginTries"));
			SendClientMessage(playerid, COLOR_RED, st);
		}
		mysql_free_result();
        return 1;
    }
    if(GetPVarInt(playerid, "Leader")) SetPVarInt(playerid, "Team", GetPVarInt(playerid, "Leader"));
	if(GetPVarInt(playerid, "Member")) SetPVarInt(playerid, "Team", GetPVarInt(playerid, "Member"));
	if(GetPVarInt(playerid, "Member") == 0 && GetPVarInt(playerid, "Leader") == 0) SetPVarInt(playerid, "Team", 0);
    SetPlayerPCash(playerid, GetPVarInt(playerid, "Money"));
	if(GetPVarInt(playerid, "Registered") == 0)
	{
		SetPVarInt(playerid,"Level",1);
		SetPVarInt(playerid,"Skin",79);
		SetPVarInt(playerid,"House",-1);
		SetPVarInt(playerid,"Bizz", 255);
		SetPVarInt(playerid,"BankMoney", 100);
        ResetPlayerPCash(playerid);
		GivePlayerPCash(playerid, 300, "Registered");
	}
	new string2[128];
	format(query,sizeof(query), "SELECT * FROM `"BanTable"` WHERE `Name` = '%s' LIMIT 1", name);
	mysql_query(query);
	mysql_store_result();
	if(mysql_num_rows())
	{
	    new reasontmp[64];
	    mysql_fetch_field("FinishTime", tmp);
	    mysql_fetch_field("Reason", reasontmp);
	    format(string2, sizeof(string2), "Вы забанены на этом сервере! Бан до %s, причина бана: %s",tmp, reasontmp);
	    SendClientMessage(playerid, COLOR_RED, string2);
		mysql_free_result();
		Kick_(playerid);
		return 1;
	}
	mysql_free_result();
	format(string2, sizeof(string2), "Добро пожаловать, "RGB_BLUE"%s", name);
	SendClientMessage(playerid, COLOR_WHITE,string2);
	CheckVip(playerid);
	
	if (GetPVarInt(playerid,"AdminLevel") > 0)
	{
		format(string2, sizeof(string2), "Вы вошли как администратор "RGB_BLUE"%d"RGB_WHITE" уровня",GetPVarInt(playerid,"AdminLevel"));
		SendClientMessage(playerid, COLOR_WHITE,string2);
	}
	switch(GetPVarInt(playerid,"FightStyle"))
	{
        case 1: SetPlayerFightingStyle(playerid, 4 );
		case 2: SetPlayerFightingStyle(playerid, 15);
		case 3: SetPlayerFightingStyle(playerid, 5 );
		case 4: SetPlayerFightingStyle(playerid, 6 );
		case 5: SetPlayerFightingStyle(playerid, 7 );
	}
	
	format(string2, sizeof(string2), "%s[%d] прокрался на сервер", name, playerid);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(DClog[i] == 1) SendClientMessage(i, COLOR_GREY, string2);
	}

	GetPlayerPos(playerid, Dop_CheckPos[playerid][0], Dop_CheckPos[playerid][1], Dop_CheckPos[playerid][2]);
    SetPVarInt(playerid, "GameSession", gettime());
    SetPVarInt(playerid, "DelayWeapon", gettime()+4);
    SetPVarInt(playerid, "Logged", 1);
    DeletePVar(playerid, "LoginTries");
    
    Dop_CheckPos[playerid][3] = 1958.33;
	Dop_CheckPos[playerid][4] = 1343.12;
	Dop_CheckPos[playerid][5] = 15.36;
	SetSpawnInfo(playerid, GetPVarInt(playerid,"Team"), GetPVarInt(playerid,"Skin"), 1958.33, 1343.12, 15.36,0,0,0,0,0,0,0);

	SetPlayerMapIcons(playerid);
	SpawnPlayer(playerid);
	SetPlayerScore(playerid, GetPVarInt(playerid,"Level"));
    TextDrawShowForPlayer(playerid, WelcomeText);
    SetTimerEx("HideWelcomeText", 4000, 0, "d", playerid);


	
 	printf("MySQL_OnPlayerLogin time: %d", GetTickCount() - count);
 	
 	

	
	if(GetPVarInt(playerid, "Level") > 3 && CheckRPname(name) != 1 && GetPVarInt(playerid, "VipLevel") < 3)
	{
	    ChangeRPNameDialog(playerid);
	}
	new Var[64];
	GetPVarString(playerid, "Mail", Var, sizeof(Var));
	if(strcmp(Var, "no", true ) == 0 )
	{
		SendClientMessage(playerid, COLOR_RED, "[Внимание] "RGB_WHITE"На Вашем аккаунте не указан E-Mail адрес, подробности: /menu - Безопасность");
	}
	if(GetPVarInt(playerid, "Level") > 3)
	{
		GetPVarString(playerid, "Forum", Var, sizeof(Var));
		if(strcmp(Var, "no", true ) == 0)
		{
			SendClientMessage(playerid, COLOR_RED, "[Внимание] "RGB_WHITE"Вы можете зарегистрировать аккаунт на форуме, подробности: /menu - Регистрация на форуме");
		}
	}
	if(GetPVarInt(playerid, "Level") < 3 && GetPVarInt(playerid, "Total_Quests") < 6 && GetPVarInt(playerid, "CarLic") == 1)
	{
	    SetPVarInt(playerid, "Next_Quest", rand(gettime()+1800, gettime()+2100));
	}
	if(GetPVarInt(playerid, "Level") >= 5)
	{
		new Fid = GetPVarInt(playerid, "FriendID");
		if(Fid != 0)
		{
		    for(new i; i < MAX_PLAYERS; i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(IsPlayerNPC(i)) continue;
		        if(i == playerid) continue;

		        if(GetPVarInt(i, "MySQL_id") == Fid)
		        {
		            new ip[2][20];
		            GetPlayerIp(playerid, ip[0], sizeof(ip[]));
		            GetPlayerIp(i, ip[1], sizeof(ip[]));

		            if(strcmp(ip[0], ip[1], true) != 0 || (strcmp(ip[0], ip[1], true) == 0 && AFKText[i] < 3))
		            {
		                PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
						SendClientMessage(i, COLOR_YELLOW, "Вы получили 20 респектов по акции за приведенного друга!");
						GivePVarInt(i, "Respect", 20);
		            }
		            SetPVarInt(playerid, "FriendID", 0);
		            MySQL_UpdateInt(playerid, "FriendID");

		            break;
		        }
		    }
		}
	}
	if(GetPVarInt(playerid, "TimeWarn") < gettime() && GetPVarInt(playerid, "Warnings") > 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "С Вашего аккаунта были сброшены все предупреждения");
	    SetPVarInt(playerid, "TimeWarn", 0);
	    SetPVarInt(playerid, "Warnings", 0);
	    MySQL_UpdateInt(playerid, "TimeWarn");
	    MySQL_UpdateInt(playerid, "Warnings");
	}
 	VisitorsDay++;
 	LoadPlayerCar(playerid);
	return 1;
}

stock MySQL_Player_Exist(playerid)
{
    //CheckMySQL();
	new query[128];
	new name[24];
    GetPlayerName(playerid,name,sizeof(name));
	format(query,sizeof(query), "SELECT Name FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", name);
	mysql_query(query);
	mysql_store_result();
	if(mysql_num_rows())
	{
		mysql_free_result();
		return 1;
	}
	mysql_free_result();
	return 0;
}

stock MySQL_Exist_Name(string[])
{
    //CheckMySQL();
	new query[128];
	format(query,sizeof(query), "SELECT Name FROM `"UsersTable"` WHERE `Name` = '%s' LIMIT 1", string);
	mysql_query(query);
	mysql_store_result();
	if(mysql_num_rows())
	{
		mysql_free_result();
		return 1;
	}
	mysql_free_result();
	return 0;
}

stock MySQL_Update_Name(playerid)
{
    //CheckMySQL();
	new query[128];
	new name[24];
    GetPlayerName(playerid,name,sizeof(name));
	format(query,sizeof(query),"UPDATE `"UsersTable"` SET `Name` = '%s' WHERE `id` = %d",name, GetPVarInt(playerid, "MySQL_id"));
	mysql_query(query);
}


stock MySQL_Register(playerid, password[])
{
    RegDayUsers++;
    new query[600];
    new name[24];
    GetPlayerName(playerid,name,sizeof(name));
    format(query,sizeof(query), "INSERT INTO `"UsersTable"` (`Name`, `Password`, `LastVisit`, `RegDate`, `Level`, `CarKey`, `House`, `Bizz`, `Age`, `Mail`, `Forum`, `Registered`, `Money`, `Skin`) VALUES ('%s', '%s', NOW(), NOW(), 1, 0, -1, 255, 21, 'no', 'no', 1, 200, 79)", name, password);
    mysql_query(query);
    mysql_query("SELECT MAX(id) FROM `"UsersTable"`");
    mysql_store_result();
    new SQL[20];
    mysql_fetch_row(SQL, "|");
    new id = strval(SQL);
    mysql_free_result();

    SetPVarInt(playerid, "MySQL_id", id);
    SetPVarInt(playerid, "Age", 21);
	SetPVarInt(playerid, "Logged", 1);
	SetPVarInt(playerid, "Registered", 1);
	SetPVarInt(playerid, "Level",1);
	SetPVarInt(playerid, "CarKey", 0);
	SetPVarInt(playerid, "House",-1);
	SetPVarInt(playerid, "Bizz", 255);
	SetPVarInt(playerid, "Skin", 79);
	SetPVarInt(playerid, "RegNowLic", 1);
	SetPVarString(playerid, "Mail", "no");
	SetPVarString(playerid, "Forum", "no");
	
	new time[3], date[3];
	getdate(date[0], date[1], date[2]);
	gettime(time[0], time[1], time[2]);
	new st[60];
	
	format(st, sizeof(st), "%d-%d-%d %d:%d:%d", date[0], date[1], date[2], time[0], time[1], time[2]);
	SetPVarString(playerid,"LastVisit",st);
    SetPVarString(playerid,"RegDate",st);

 	ResetPlayerPCash(playerid);
	GivePlayerPCash(playerid, 200, "MySQL_Register");
	SetPlayerScore(playerid, 1);
	
	SetPlayerMapIcons(playerid);
	
	format(query, sizeof(query), "%s[%d] прокрался на сервер", name, playerid);
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(DClog[i] == 1) SendClientMessage(i, COLOR_GREY, query);
	}
	return 1;
}

stock SaveAllBizzes()
{
	for(new id = 0; id < sizeof(BizzInfo); id++)
	{
		SaveBizz(id);
	}
}
stock SaveAllSBizzes()
{
	for(new id = 0; id < sizeof(SBizzInfo); id++)
	{
		SaveSBizz(id);
	}
}

forward SaveHouse(id); // Паблик для таймера
public SaveHouse(id)
{
    new query[700];
    new count = GetTickCount();
    format(query, sizeof(query), "UPDATE `"HousesTable"` SET `Owned` = %d, `Owner` = '%s', `Price` = %d, `Level` = %d, `EntranceX` = '%f',\
    `EntranceY` = '%f',`EntranceZ` = '%f', `Interior` = %d, `ExitX` = '%f', `ExitY` = '%f', `ExitZ` = '%f', `Health` = %d, `Armour` = %d, `Signal` = %d, `Narks` = %d, `Mats` = %d,`Bar` = %d, `Lock` = %d, `RentPrice` = %d,\
	`Rentabil` = %d, `Money` = %d, `DonatePrice` = %d, `LastVisit` = NOW() WHERE id = %d LIMIT 1",
	HouseInfo[id][hOwned],
  	HouseInfo[id][hOwner],
  	HouseInfo[id][hPrice],
  	HouseInfo[id][hLevel],
  	HouseInfo[id][hEntrancex],
	HouseInfo[id][hEntrancey],
	HouseInfo[id][hEntrancez],
	HouseInfo[id][hInt],
	HouseInfo[id][hExitx],
	HouseInfo[id][hExity],
	HouseInfo[id][hExitz],
	HouseInfo[id][hHel],
	HouseInfo[id][hArm],
	HouseInfo[id][hSignal],
	HouseInfo[id][hNarks],
	HouseInfo[id][hMats],
    HouseInfo[id][hBar],
    HouseInfo[id][hLock],
    HouseInfo[id][hRent],
	HouseInfo[id][hRentabil],
	HouseInfo[id][hMoney],
	HouseInfo[id][hDonatePrice], id);
	mysql_query(query);
//	OnHouse3DLabelUpdate(id);
	printf("Saving house to MySQL time: %d", GetTickCount() - count);
}
forward SaveBizz(id);
public SaveBizz(id)
{
    new query[700];
    new count = GetTickCount();
    format(query, sizeof(query), "UPDATE `"BizzesTable"` SET `Owned` = %d, `Owner` = '%s', `Discription` = '%s', `Extortion` = %d, `EntranceX` = '%f',\
    `EntranceY` = '%f',`EntranceZ` = '%f', `Interior` = %d, `ExitX` = '%f', `ExitY` = '%f', `ExitZ` = '%f', `Level` = %d,\
	`Price` = %d,`EntranceCost` = %d, `Products` = %d, `MaxProducts` = %d, `Lock` = %d, `Money` = %d, `PriceProd` = %d,\
	`World` = %d, `Icon` = %d, `Procent` = %d, `DonatePrice` = %d WHERE id = %d LIMIT 1",
	BizzInfo[id][bOwned],
	BizzInfo[id][bOwner],
	BizzInfo[id][bDiscription],
	BizzInfo[id][bExtortion],
	BizzInfo[id][bEntranceX],
	BizzInfo[id][bEntranceY],
	BizzInfo[id][bEntranceZ],
	BizzInfo[id][bInterior],
	BizzInfo[id][bExitX],
	BizzInfo[id][bExitY],
	BizzInfo[id][bExitZ],
	BizzInfo[id][bLevel],
	BizzInfo[id][bPrice],
	BizzInfo[id][bEntranceCost],
	BizzInfo[id][bProducts],
	BizzInfo[id][bMaxProducts],
	BizzInfo[id][bLocked],
	BizzInfo[id][bMoney],
	BizzInfo[id][bPriceProd],
	BizzInfo[id][bWorld],
	BizzInfo[id][bIcon],
	BizzInfo[id][bProcent],
	BizzInfo[id][bDonatePrice], id);
	mysql_query(query);
	OnBizz3DLabelUpdate(id);
	printf("Saving biz to MySQL time: %d", GetTickCount() - count);
}
forward SaveSBizz(id);
public SaveSBizz(id)
{
    new query[700];
    new count = GetTickCount();
    format(query, sizeof(query), "UPDATE `"SBizzesTable"` SET `Owned` = %d, `Owner` = '%s', `Discription` = '%s', `Extortion` = %d, `EntranceX` = '%f',\
    `EntranceY` = '%f',`EntranceZ` = '%f', `Level` = %d, `Price` = %d,`EntranceCost` = %d, `Products` = %d,\
	`MaxProducts` = %d, `Lock` = %d, `Money` = %d, `PriceProd` = %d, `Procent` = %d, `DonatePrice` = %d WHERE id = %d LIMIT 1",
	SBizzInfo[id][sbOwned],
	SBizzInfo[id][sbOwner],
	SBizzInfo[id][sbDiscription],
	SBizzInfo[id][sbExtortion],
	SBizzInfo[id][sbEntranceX],
	SBizzInfo[id][sbEntranceY],
	SBizzInfo[id][sbEntranceZ],
	SBizzInfo[id][sbLevel],
	SBizzInfo[id][sbPrice],
	SBizzInfo[id][sbEntranceCost],
	SBizzInfo[id][sbProducts],
	SBizzInfo[id][sbMaxProducts],
	SBizzInfo[id][sbLocked],
	SBizzInfo[id][sbMoney],
	SBizzInfo[id][sbPriceProd],
	SBizzInfo[id][sbProcent],
	SBizzInfo[id][sbDonatePrice],
	id);
	mysql_query(query);
//	OnSBizz3DLabelUpdate(id);
	printf("Saving sbiz to MySQL time: %d", GetTickCount() - count);
}
stock UpdateBizzLastVisit(playerid, id)
{
	if(GetPVarInt(playerid,"Logged") == 0) return 1;
	if(id == 255) return 1;
	new query[200];
	new count = GetTickCount();
	new name[25];
	GetPlayerName(playerid, name, sizeof(name));
	
	if(id >= 0 && id < sizeof(BizzInfo))
	{
	    if(strcmp(name, BizzInfo[id][bOwner], true) == 0)
	    {
			format(query, sizeof(query), "UPDATE `"BizzesTable"` SET `LastVisit` = NOW() WHERE id = %d LIMIT 1", id);
			mysql_query(query);
			printf("UpdateBizzLastVisit: %d", GetTickCount() - count);
		}
	}
	else if(id >= 100 && id < sizeof(SBizzInfo)+100)
	{
	    id -= 100;
	    if(strcmp(name, SBizzInfo[id][sbOwner], true) == 0)
	    {
	    	format(query, sizeof(query), "UPDATE `"SBizzesTable"` SET `LastVisit` = NOW() WHERE id = %d LIMIT 1", id);
	    	mysql_query(query);
	    	printf("UpdateSBizzLastVisit: %d", GetTickCount() - count);
	    }
	}
    
    return 1;
}
stock LoadHouses()
{
	new count = GetTickCount();
	new DataString[64], Query[128];
    //format( Query, sizeof( Query ), "SELECT * FROM `"HousesTable"`");
    mysql_query("SELECT * FROM `"HousesTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
		    HouseInfo[id][hWorld] = id+1; // +1 чтобы небыло в 0 мире
			mysql_fetch_field("Owned", DataString); HouseInfo[id][hOwned] = strval(DataString);
			mysql_fetch_field("Owner", DataString); strmid(HouseInfo[id][hOwner], DataString, 0, strlen(DataString), 255);
			mysql_fetch_field("Price", DataString); HouseInfo[id][hPrice] = strval(DataString);
			mysql_fetch_field("Level", DataString); HouseInfo[id][hLevel] = strval(DataString);
			mysql_fetch_field("EntranceX", DataString); HouseInfo[id][hEntrancex] = floatstr(DataString);
			mysql_fetch_field("EntranceY", DataString); HouseInfo[id][hEntrancey] = floatstr(DataString);
			mysql_fetch_field("EntranceZ", DataString); HouseInfo[id][hEntrancez] = floatstr(DataString);
			mysql_fetch_field("Interior", DataString); HouseInfo[id][hInt] = strval(DataString);
			mysql_fetch_field("ExitX", DataString); HouseInfo[id][hExitx] = floatstr(DataString);
			mysql_fetch_field("ExitY", DataString); HouseInfo[id][hExity] = floatstr(DataString);
			mysql_fetch_field("ExitZ", DataString); HouseInfo[id][hExitz] = floatstr(DataString);
			mysql_fetch_field("Health", DataString); HouseInfo[id][hHel] = strval(DataString);
			mysql_fetch_field("Armour", DataString); HouseInfo[id][hArm] = strval(DataString);
			mysql_fetch_field("Signal", DataString); HouseInfo[id][hSignal] = strval(DataString);
			mysql_fetch_field("Narks", DataString); HouseInfo[id][hNarks] = strval(DataString);
			mysql_fetch_field("Mats", DataString); HouseInfo[id][hMats] = strval(DataString);
			mysql_fetch_field("Bar", DataString); HouseInfo[id][hBar] = strval(DataString);
			mysql_fetch_field("Lock", DataString); HouseInfo[id][hLock] = strval(DataString);
			mysql_fetch_field("RentPrice", DataString); HouseInfo[id][hRent] = strval(DataString);
			mysql_fetch_field("Rentabil", DataString); HouseInfo[id][hRentabil] = strval(DataString);
			mysql_fetch_field("Money", DataString); HouseInfo[id][hMoney] = strval(DataString);
			mysql_fetch_field("DonatePrice", DataString); HouseInfo[id][hDonatePrice] = strval(DataString);
		}
	}
	mysql_free_result();
	printf("Loading houses from MySQL time: %d", GetTickCount() - count);
	return 1;
}
stock LoadBizzes()
{
	new count = GetTickCount();
    new DataString[64], Query[150];
    mysql_query("SELECT * FROM `"BizzesTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("Owned", DataString); BizzInfo[id][bOwned] = strval(DataString);
			mysql_fetch_field("Owner", DataString); strmid(BizzInfo[id][bOwner], DataString, 0, strlen(DataString), 255);
			mysql_fetch_field("Discription", DataString); strmid(BizzInfo[id][bDiscription], DataString, 0, strlen(DataString), 255);
			mysql_fetch_field("Extortion", DataString); BizzInfo[id][bExtortion] = strval(DataString);
			mysql_fetch_field("EntranceX", DataString); BizzInfo[id][bEntranceX] = floatstr(DataString);
			mysql_fetch_field("EntranceY", DataString); BizzInfo[id][bEntranceY] = floatstr(DataString);
			mysql_fetch_field("EntranceZ", DataString); BizzInfo[id][bEntranceZ] = floatstr(DataString);
			mysql_fetch_field("Interior", DataString); BizzInfo[id][bInterior] = strval(DataString);
			mysql_fetch_field("ExitX", DataString); BizzInfo[id][bExitX] = floatstr(DataString);
			mysql_fetch_field("ExitY", DataString); BizzInfo[id][bExitY] = floatstr(DataString);
			mysql_fetch_field("ExitZ", DataString); BizzInfo[id][bExitZ] = floatstr(DataString);
			mysql_fetch_field("Level", DataString); BizzInfo[id][bLevel] = strval(DataString);
			mysql_fetch_field("Price", DataString); BizzInfo[id][bPrice] = strval(DataString);
			mysql_fetch_field("EntranceCost", DataString); BizzInfo[id][bEntranceCost] = strval(DataString);
			mysql_fetch_field("Products", DataString); BizzInfo[id][bProducts] = strval(DataString);
			mysql_fetch_field("Money", DataString); BizzInfo[id][bMoney] = strval(DataString);
			mysql_fetch_field("Lock", DataString); BizzInfo[id][bLocked] = strval(DataString);
			mysql_fetch_field("MaxProducts", DataString); BizzInfo[id][bMaxProducts] = strval(DataString);
			mysql_fetch_field("PriceProd", DataString); BizzInfo[id][bPriceProd] = strval(DataString);
			mysql_fetch_field("World", DataString); BizzInfo[id][bWorld] = strval(DataString);
			mysql_fetch_field("Icon", DataString); BizzInfo[id][bIcon] = strval(DataString);
			mysql_fetch_field("DonatePrice", DataString); BizzInfo[id][bDonatePrice] = strval(DataString);
			mysql_fetch_field("Procent", DataString); BizzInfo[id][bProcent] = strval(DataString);
			
		//	if(BizzInfo[id][bOwned] == 0) BizzMapIcon[id] = CreateMapIcon(52,COLOR_LIGHTRED,BizzInfo[id][bEntranceX],BizzInfo[id][bEntranceY],BizzInfo[id][bEntranceZ]);
		//	else if(BizzInfo[id][bOwned] == 1) BizzMapIcon[id] = CreateMapIcon(BizzInfo[id][bIcon],0xFFFFFF00,BizzInfo[id][bEntranceX],BizzInfo[id][bEntranceY],BizzInfo[id][bEntranceZ]);

		}
	}
	mysql_free_result();
	printf("Loading bizzes from MySQL time: %d", GetTickCount() - count);
	return 1;
}

stock LoadSBizzes()
{
	new count = GetTickCount();
    new DataString[64], Query[128];
    mysql_query("SELECT * FROM `"SBizzesTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("Owned", DataString); SBizzInfo[id][sbOwned] = strval(DataString);
			mysql_fetch_field("Owner", DataString); strmid(SBizzInfo[id][sbOwner], DataString, 0, strlen(DataString), 255);
			mysql_fetch_field("Discription", DataString); strmid(SBizzInfo[id][sbDiscription], DataString, 0, strlen(DataString), 255);
			mysql_fetch_field("Extortion", DataString); SBizzInfo[id][sbExtortion] = strval(DataString);
			mysql_fetch_field("EntranceX", DataString); SBizzInfo[id][sbEntranceX] = floatstr(DataString);
			mysql_fetch_field("EntranceY", DataString); SBizzInfo[id][sbEntranceY] = floatstr(DataString);
			mysql_fetch_field("EntranceZ", DataString); SBizzInfo[id][sbEntranceZ] = floatstr(DataString);
			mysql_fetch_field("Level", DataString); SBizzInfo[id][sbLevel] = strval(DataString);
			mysql_fetch_field("Price", DataString); SBizzInfo[id][sbPrice] = strval(DataString);
			mysql_fetch_field("EntranceCost", DataString); SBizzInfo[id][sbEntranceCost] = strval(DataString);
			mysql_fetch_field("Products", DataString); SBizzInfo[id][sbProducts] = strval(DataString);
			mysql_fetch_field("MaxProducts", DataString); SBizzInfo[id][sbMaxProducts] = strval(DataString);
			mysql_fetch_field("Lock", DataString); SBizzInfo[id][sbLocked] = strval(DataString);
			mysql_fetch_field("Money", DataString); SBizzInfo[id][sbMoney] = strval(DataString);
			mysql_fetch_field("PriceProd", DataString); SBizzInfo[id][sbPriceProd] = strval(DataString);
			mysql_fetch_field("DonatePrice", DataString); SBizzInfo[id][sbDonatePrice] = strval(DataString);
			mysql_fetch_field("Procent", DataString); SBizzInfo[id][sbProcent] = strval(DataString);
			
	//		if(SBizzInfo[id][sbOwned] == 0) SBizzMapIcon[id] = CreateMapIcon(52,COLOR_LIGHTRED,SBizzInfo[id][sbEntranceX],SBizzInfo[id][sbEntranceY],SBizzInfo[id][sbEntranceZ]);
	//		else if(SBizzInfo[id][sbOwned] == 1) SBizzMapIcon[id] = CreateMapIcon(38,COLOR_LIGHTRED,SBizzInfo[id][sbEntranceX],SBizzInfo[id][sbEntranceY],SBizzInfo[id][sbEntranceZ]);

		}
	}
	mysql_free_result();
	printf("Loading sbizzes from MySQL time: %d", GetTickCount() - count);
	return 1;
}



stock LoadOther()
{
	new count = GetTickCount();
    new DataString[64], Query[128];
    mysql_query("SELECT * FROM `"OtherTable"`");
    mysql_store_result();
    if(mysql_num_rows())
	{
  		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
   			mysql_fetch_field("Tax", DataString); Tax = strval(DataString);
			mysql_fetch_field("TaxValue", DataString); TaxValue = strval(DataString);
			mysql_fetch_field("MatsAmmount", DataString); MatsAmmount = strval(DataString);
			mysql_fetch_field("DrugsPritonAmmount", DataString); DrugsPritonAmmount = strval(DataString);
			mysql_fetch_field("DrugsFarmAmmount", DataString); DrugsFarmAmmount = strval(DataString);
			mysql_fetch_field("Password", DataString); Password = strval(DataString);
			mysql_fetch_field("TotalProds", DataString); totalprods = strval(DataString);
			mysql_fetch_field("DumpLoad", DataString); DumpLoad = strval(DataString);

		}
	}
	mysql_free_result();
	printf("Loading other from MySQL time: %d", GetTickCount() - count);
	return 1;
}

stock SaveOther()
{
    new query[512];
    new count = GetTickCount();
    
    format(query, sizeof(query), "UPDATE `"OtherTable"` SET `Tax` = %d, `TaxValue` = %d, `MatsAmmount` = %d,\
	`DrugsPritonAmmount` = %d, `DrugsFarmAmmount` = %d, `Password` = %d, `TotalProds` = %d, `DumpLoad` = %d",
	Tax,
	TaxValue,
	MatsAmmount,
	DrugsPritonAmmount,
	DrugsFarmAmmount,
	Password,
	totalprods,
	DumpLoad);
	
	mysql_query(query);
    UpdateMatsDrugsTexts();
	printf("Saving other to MySQL time: %d", GetTickCount() - count);
}

stock JoinIRCChannel(playerid, channel)
{
    new string[128];
    SetPVarInt(playerid, "IrcChannel",channel);
    format(string, sizeof(string), "Вы присоединились к  IRC каналу " RGB_GREEN "%d", channel);
    SendClientMessage(playerid, COLOR_GREEN, string);
    format(string, sizeof(string), "IRC " RGB_ICHAT1 "%s " RGB_WHITE "присоединился к  каналу, игроков в канале: " RGB_ICHAT1 "%d", GetName(playerid), CountIRCMembers(channel));
    SendIRCMessage(channel, COLOR_GREEN, string);
}
stock LeaveIRCChannel(playerid, channel)
{
	new string[128];
    DeletePVar(playerid, "IrcChannel");
    format(string, sizeof(string), "Вы покинули IRC канал " RGB_GREEN "%d", channel);
    SendClientMessage(playerid, COLOR_GREEN, string);
    format(string, sizeof(string), "IRC " RGB_ICHAT1 "%s " RGB_WHITE "вышел из канала, игроков в канале: " RGB_ICHAT1 "%d", GetName(playerid), CountIRCMembers(channel));
    SendIRCMessage(channel, COLOR_GREEN, string);
}
stock CountIRCMembers(channel)
{
    new members = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		if(GetPVarInt(i,"IrcChannel") == channel) members++;
	}
	return members;
}
stock SendIRCMessage(channel, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		if(GetPVarInt(i,"IrcChannel") == channel) SendClientMessage(i, color, string);
	}
}



stock MySQL_Ban(playerid, adminid, hours, reason[], bantype)
{
	//bantype 1 - normal, 2 - sban

    new PlayerName[24],
		AdminName[24],
		pip[24],
		query[256],
		string[256];

	new  year, month, day, hour, minuite;
	gettime(hour,minuite);
	getdate(year, month, day);
	GetPlayerName(playerid, PlayerName, 24 );
    GetPlayerName(adminid, AdminName, 24 );
	GetPlayerIp(playerid, pip, sizeof(pip));
	if(bantype == 1)
	{
		format( string, sizeof(string), "Crime Streets RPG: %s забанен админом %s на %d часов, причина: %s", PlayerName, AdminName, hours, reason);
		SendClientMessage(playerid, COLOR_RED, string );
		ABroadCast(string);
	}
	else if (bantype == 2)
	{
	    format( string, sizeof(string), "[S-BAN]: %s забанен админом %s на %d часов, причина: %s", PlayerName, AdminName, hours, reason);
		ABroadCast(string);
	}

    format(query,sizeof(query), "INSERT INTO `"BanTable"` (`Name`, `BanDate`, `Duration`, `FinishTime`, `AdminName`, `Reason`, `Ip`) VALUES ('%s', NOW(), %d, NOW() + INTERVAL %d HOUR, '%s', '%s', '%s')",PlayerName, hours, hours, AdminName, reason, pip);
	mysql_query(query);

	format(string, sizeof(string), "Вам выдан бан на %d часов, дата и время бана: %d-%d-%d %02d:%02d", hours, year, month, day, hour, minuite);
	SendClientMessage(playerid, COLOR_RED, string);
	SendClientMessage(playerid, COLOR_RED, "Оспорить свой бан можно на www.crime-streets.ru ");
	SendClientMessage(playerid, COLOR_RED, "Обязательно сделайте скриншот с этим сообщением (F8) если хотите написать заявку на разбан" );
    Ban(playerid);
	return 1;
}



// каждый час
stock MySQL_UpdateBans()
{
	new count = GetTickCount();
	new DataString[32], Query[128];
    format( Query, sizeof( Query ), "SELECT Ip FROM `"BanTable"` WHERE FinishTime <= NOW()");
    mysql_query(Query);
    mysql_store_result();
    if(mysql_num_rows())
	{
	   	new row[64];
		for(new v=0; mysql_fetch_row(row, "|"); v++)
		{
		    mysql_fetch_field("Ip", DataString);
			printf("ip: %s unbanned",DataString);
			format(Query,sizeof(Query),"unbanip %s",DataString);
			SendRconCommand(Query);
		}
	}
	SendRconCommand("reloadbans");
	mysql_free_result();
//	format( Query, sizeof( Query ), "DELETE FROM `"BanTable"` WHERE FinishTime <= NOW()");

	mysql_query("DELETE FROM `"BanTable"` WHERE FinishTime <= NOW()");

	printf("Testban: %d", GetTickCount() - count);
	return 1;
}

stock MySQL_Banip(playerid, hours, reason[])
{
    new PlayerName[24],
		pip[24],
		query[256];

	GetPlayerName(playerid, PlayerName, 24 );
	GetPlayerIp(playerid, pip, sizeof(pip));
    format(query,sizeof(query), "INSERT INTO `"BanipTable"` (`Ip`, `BanDate`, `Duration`, `FinishTime`, `Reason`, `Name`) VALUES ('%s', NOW(), %d, NOW() + INTERVAL %d HOUR, '%s', '%s')",pip,hours,hours,reason,PlayerName);
	mysql_query(query);
    Ban(playerid);
}

stock MySQL_UpdateBansIp()
{
	new count = GetTickCount();
	new DataString[32], Query[128];
    format( Query, sizeof( Query ), "SELECT Ip FROM `"BanipTable"` WHERE FinishTime <= NOW()");
    mysql_query(Query);
    mysql_store_result();
    if(mysql_num_rows())
	{
	   	new row[64];
		for(new v=0; mysql_fetch_row(row, "|"); v++)
		{
		    mysql_fetch_field("Ip", DataString);
			printf("ip: %s unbanned",DataString);
			format(Query,sizeof(Query),"unbanip %s",DataString);
			SendRconCommand(Query);
		}
	}
	mysql_free_result();
	SendRconCommand("reloadbans");
	format( Query, sizeof( Query ), "DELETE FROM `"BanipTable"` WHERE FinishTime <= NOW()");
    mysql_query(Query);
	printf("TestbanIP: %d", GetTickCount() - count);
	return 1;
}

stock IsContainsBadSymbol(string[])
{
	if(strfind(string , "`" , true ) != -1
	|| strfind(string , "'" , true ) != -1
	|| strfind(string , "(" , true ) != -1
	|| strfind(string , ")" , true ) != -1
	|| strfind(string , "=" , true ) != -1
	|| strfind(string , ">" , true ) != -1
	|| strfind(string , "<" , true ) != -1
	|| strfind(string , ";" , true ) != -1
	|| strfind(string , ":" , true ) != -1
	|| strfind(string , "," , true ) != -1
	|| strfind(string , "|" , true ) != -1
	|| strfind(string , "\"" , true ) != -1
	|| strfind(string , "*" , true ) != -1) return 1;
	return 0;
}

forward KickAll(playerid);
public KickAll(playerid)
{
	if(playerid < MAX_PLAYERS)
	{
		if(IsPlayerConnected(playerid) && GetPVarInt(playerid, "AdminLevel") < 1)
		{
			new name[24], str[200];
			GetPlayerName(playerid, name, 24);
			format(str, 200, "Crime Streets: %s "RGB_WHITE"кикнут сервером, причина: " RGB_ORANGE"рестарт", name);
			SendClientMessageToAll(COLOR_LIGHTRED, str);
			OnPlayerUpdateGF(playerid);
			SetTimerEx("KickAll", 350, 0, "d", playerid+1);
			Kick_(playerid);
		}
		else KickAll(playerid+1);
	}
}

forward animliftup(playerid);
public animliftup(playerid) return ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1,1);

forward AnimationOTB(playerid);
public AnimationOTB(playerid) return ApplyAnimation(playerid,"OTB","betslp_loop",4.1, 0, 1, 1, 0, 12000, 1);
stock ShowHelpDialogp(playerid)
{
	return ShowPlayerDialog(playerid,64,DIALOG_STYLE_LIST, RGB_SERVER"Помощь","\
    Команды игрового аккаунта\n\
	Интерактивные команды\n\
	Команды управления домом\n\
	Прочие команды","Выбрать","Отмена");
}


stock oGetPlayerSpeed(playerid)
{
	new Float:ST[4];
 	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[3]);
 	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[3]);
  	ST[2] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0)) * 180;
   	return floatround(ST[2]);
}
stock ProgressBar(playerid,interval, controllable)
{
	ProgressBarStep(playerid,1);
	TogglePlayerControllable(playerid, controllable);
	SetTimerEx("ProgressBarStep", interval, false, "ii", playerid, 2);
	SetTimerEx("ProgressBarStep", interval*2, false, "ii", playerid, 3);
	SetTimerEx("ProgressBarStep", interval*3, false, "ii", playerid, 4);
	SetTimerEx("ProgressBarStep", interval*4, false, "ii", playerid, 5);
	SetTimerEx("ProgressBarStep", interval*6, false, "ii", playerid, 0);
}
forward ProgressBarStep(playerid,step);
public ProgressBarStep(playerid,step)
{
	switch(step)
	{
	    case 0:
		{
		    for(new c = 0; c < 5; c++)
			{
		 		TextDrawHideForPlayer(playerid, ProgressBarText[c]);
			}
			TogglePlayerControllable(playerid, 1);
		}
		case 1: TextDrawShowForPlayer(playerid, ProgressBarText[0]);
		case 2: TextDrawShowForPlayer(playerid, ProgressBarText[1]);
		case 3: TextDrawShowForPlayer(playerid, ProgressBarText[2]);
		case 4: TextDrawShowForPlayer(playerid, ProgressBarText[3]);
		case 5: TextDrawShowForPlayer(playerid, ProgressBarText[4]);
	}
}
stock MySQL_UpdateInt(playerid,varname[])
{
    if(GetPVarInt(playerid,"Logged") == 0) return 1;
    new count = GetTickCount();
    new query[128];
   	format(query,sizeof(query),"UPDATE `"UsersTable"` SET `%s` = %d WHERE `id` = %d LIMIT 1",varname,GetPVarInt(playerid,varname), GetPVarInt(playerid, "MySQL_id"));
 	mysql_query(query);
  	printf("%s",query);
	printf("MySQL_UpdateInt time: %d", GetTickCount() - count);
    return 1;
}
stock MySQL_UpdateString(playerid,varname[])
{
    if(GetPVarInt(playerid,"Logged") == 0) return 1;
    new count = GetTickCount();
    new query[128], string[64];
	GetPVarString(playerid, varname, string, sizeof(string));
   	format(query,sizeof(query),"UPDATE `"UsersTable"` SET `%s` = '%s' WHERE `id` = %d LIMIT 1",varname,string, GetPVarInt(playerid, "MySQL_id"));
 	mysql_query(query);
  	printf("%s",query);
	printf("MySQL_UpdateString time: %d", GetTickCount() - count);
    return 1;
}
stock AddRandomVehicleEx(Float:x,Float:y,Float:z,Float:a)
{
	new rand = random(sizeof(RandomVehicleID));
	AddStaticVehicleEx(RandomVehicleID[rand][0], x, y, z, a, -1, -1, 300);
}
stock UpdateWantedCars()
{
    for(new i = 0; i < 10; i ++)
	{
		new rand = random(sizeof(RandomVehicleID));
		WantedCars[0][i] = RandomVehicleID[rand][0];
		WantedCars[1][i] = 0;
	}
	UpdateWantedCarsText();
}
stock UpdateWantedCarsText()
{
	new string[512], src[64];
	format(string, sizeof(string), "{008cf0}>> Wanted Cars <<\n");
    for(new i = 0; i < 10; i ++)
	{
	    if(WantedCars[1][i]) strcat(string,"{ff0000}(V) ",sizeof(string));
	    format(src,sizeof(string),"{008cf0}%d. {ffffff}%s\n",i+1,VehiclesName[WantedCars[0][i]-400]);
	    strcat(string,src,sizeof(string));
	}
	//printf("%s",string);
	Update3DTextLabelText(WantedCarsText,COLOR_GREEN3D,string);
}


stock StartAttack(gang, attacker, zoneid, killerid, start, playerid)
{
	new str[144];
	if(ZoneInfo[zoneid][zAttacked] == 0) // Если только что напали (зона не была атакована)
	{
	    if(start == 0) return 1;
	    if(ZoneInfo[zoneid][zOwner] != gang) return 1;  // зона не принадлежит тем на кого напали
		if(ThisGangWar[attacker][zoneid] == 1 || ThisGangWar[gang][zoneid] == 1) return 1; // уже воюют если, так же начать войну можно только с высокого ранга

		ThisGangWar[attacker][zoneid] = true; // Начали воевать
		ThisGangWar[gang][zoneid] = true;  // Начали воевать

		ZoneInfo[zoneid][zAttacked] = attacker; // Кем была атакована
		GangZoneFlashForAll(ZoneInfo[zoneid][zID], GetFactionColor(ZoneInfo[zoneid][zAttacked]));

		SetTimerEx("StopAttack", 480000, 0, "ddd", gang, attacker, zoneid);
		new name[24];
		GetPlayerName(killerid, name, 24);
		format(str, sizeof(str), RGB_LAZUREGREY"%s "RGB_WHITE"напали на территорию "RGB_LAZUREGREY"%s(%d)"RGB_WHITE", войну начал: %s", GetGangName(attacker), GetGangName(gang), zoneid, name);
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		    if(GetPVarInt(i,"Team") == gang || GetPVarInt(i,"Team") == attacker)
		    {
				SendClientMessage(i, COLOR_YELLOW, str);
		    }
		}
		GangCapture[ReturnFractionID(killerid)] = gettime() + 3600;
		return 1;
	}
	else
	{
		if((GetPVarInt(killerid,"Team") == ZoneInfo[zoneid][zAttacked] || GetPVarInt(killerid,"Team") == ZoneInfo[zoneid][zOwner]) &&
		   (GetPVarInt(playerid,"Team") == ZoneInfo[zoneid][zAttacked] || GetPVarInt(playerid,"Team") == ZoneInfo[zoneid][zOwner]))// чтоб другие банды не могли помогать
		{
			KillPoint[attacker][zoneid] ++;
			
			format(str, sizeof(str), "[KILL] %s[%d] (%s) убил %s[%d] (%s). Территория: %d. Счет %d:%d",
			GetName(killerid), killerid, GetGangName(attacker),
			GetName(playerid), playerid, GetGangName(gang),
			zoneid,
			KillPoint[attacker][zoneid], KillPoint[gang][zoneid]);
			
			for(new i; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
			    if(GetPVarInt(i,"Team") == gang || GetPVarInt(i,"Team") == attacker)
			    {
					SendClientMessage(i, COLOR_GREY, str);
			    }
			}
		
		}
	}
	return 1;
}
// При окончании войны
forward StopAttack(gang, attacker, zoneid);
public StopAttack(gang, attacker, zoneid)
{
	new str[150];
    ThisGangWar[gang][zoneid] = false; // война закончена
    ThisGangWar[attacker][zoneid] = false; // война закончена
    ZoneInfo[zoneid][zAttacked] = 0; // зона не атакована
    GangZoneStopFlashForAll(ZoneInfo[zoneid][zID]);
    if(KillPoint[gang][zoneid] > KillPoint[attacker][zoneid]) // У кого сколько убийств
    {
		new conter;
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(	GetPVarInt(i, "Team") == gang &&
				AFKText[i] < 4 && GetPlayerInterior(i) == 0 &&
				GetPlayerVirtualWorld(i) == 0 &&
				IsPlayerInArea(i, ZoneInfo[zoneid][zoneX], ZoneInfo[zoneid][zoneY], ZoneInfo[zoneid][zoneX2], ZoneInfo[zoneid][zoneY2]))
			{
				conter++;
			}
		}
		if(conter < 3) // Если небыло защитников
		{
		    for(new i; i < MAX_PLAYERS; i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(GetPVarInt(i, "Team") == attacker && GetPlayerState(i) == PLAYER_STATE_ONFOOT && IsPlayerInArea(i, ZoneInfo[zoneid][zoneX], ZoneInfo[zoneid][zoneY], ZoneInfo[zoneid][zoneX2], ZoneInfo[zoneid][zoneY2]))
		        {
		            GiveAchievement(i, 19, 1);
		        }
		    }
	        ZoneInfo[zoneid][zOwner] = attacker; // Зона принадлежит тем кто напал
	        GangZoneShowForAll(ZoneInfo[zoneid][zID], GetFactionColor(ZoneInfo[zoneid][zOwner]));
	        SaveZone(zoneid);
       		format(str, sizeof(str), RGB_LAZUREGREY"%s"RGB_WHITE" покинули защищаемую территорию(%d) и отдали её "RGB_LAZUREGREY"%s", GetGangName(gang), zoneid, GetGangName(attacker));

		}
		else
		{
        	ZoneInfo[zoneid][zOwner] = gang; // Осталась у кого и была...
       		format(str, sizeof(str), "Территория "RGB_LAZUREGREY"%d "RGB_WHITE"осталась под контролем "RGB_LAZUREGREY"%s"RGB_WHITE", счет "RGB_LAZUREGREY"%d:%d!", zoneid, GetGangName(gang), KillPoint[gang][zoneid],KillPoint[attacker][zoneid]);

		}
	}
    else
    {
		new attack;
		
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(	GetPVarInt(i, "Team") == attacker &&
				AFKText[i] < 4 &&
				GetPlayerInterior(i) == 0 &&
				GetPlayerVirtualWorld(i) == 0 &&
				IsPlayerInArea(i, ZoneInfo[zoneid][zoneX], ZoneInfo[zoneid][zoneY], ZoneInfo[zoneid][zoneX2], ZoneInfo[zoneid][zoneY2]))
			{
				attack++;
			}
		}
		if(attack < 3)
		{
        	ZoneInfo[zoneid][zOwner] = gang; // Осталась у кого и была...
       		format(str, sizeof(str), RGB_LAZUREGREY"%s "RGB_WHITE"покинули захватываемую территорию(%d)", GetGangName(attacker), zoneid);

		}
		else
		{
		    for(new i; i < MAX_PLAYERS; i++)
		    {
		        if(!IsPlayerConnected(i)) continue;
		        if(GetPVarInt(i, "Team") == attacker && GetPlayerState(i) == PLAYER_STATE_ONFOOT && IsPlayerInArea(i, ZoneInfo[zoneid][zoneX], ZoneInfo[zoneid][zoneY], ZoneInfo[zoneid][zoneX2], ZoneInfo[zoneid][zoneY2]))
		        {
		            GiveAchievement(i, 19, 1);
		        }
		    }
	        format(str, sizeof(str), RGB_LAZUREGREY"%s "RGB_WHITE"отвоевали территорию у "RGB_LAZUREGREY"'%s'(%d) "RGB_WHITE"счет "RGB_LAZUREGREY"%d:%d!", GetGangName(attacker), GetGangName(gang), zoneid, KillPoint[attacker][zoneid], KillPoint[gang][zoneid]);
	        ZoneInfo[zoneid][zOwner] = attacker; // Зона принадлежит тем кто напал
	        GangZoneShowForAll(ZoneInfo[zoneid][zID], GetFactionColor(ZoneInfo[zoneid][zOwner]));
	        SaveZone(zoneid);
        }
    }
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(GetPVarInt(i,"Team") == gang || GetPVarInt(i,"Team") == attacker)
	    {
			SendClientMessage(i, COLOR_WHITE, str);
   		}
	}
	KillPoint[gang][zoneid] = 0; // обнулили счетчик убийств
	KillPoint[attacker][zoneid] = 0;  // обнулили счетчик убийств
	return 1;
}

stock LoadZones()
{
    print("Starting Load Zones..");
    new DataString[64], Query[128];
	mysql_query("SELECT * FROM `"ZonesTable"` ORDER BY `id` ASC");
	mysql_store_result();

	if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
		    mysql_fetch_field("Owner", DataString); ZoneInfo[id][zOwner] = strval(DataString);
		}
	}
	mysql_free_result();
    ZoneInfo[20][zOwner] = 99;

	for(new i; i < sizeof(ZoneInfo); i ++)
	{
	    ZoneInfo[i][zoneX]  = GangZones[i][0];
		ZoneInfo[i][zoneY]  = GangZones[i][1];
		ZoneInfo[i][zoneX2] = GangZones[i][2];
		ZoneInfo[i][zoneY2] = GangZones[i][3];
		ZoneInfo[i][zID] = GangZoneCreate(GangZones[i][0], GangZones[i][1], GangZones[i][2], GangZones[i][3]);
		ZoneInfo[i][zType] = floatround(GangZones[i][4]);
		
	}
	print("Zones Loaded");
	return 1;
}
stock SaveZone(zoneid)
{
	new query[512];
    format(query, sizeof(query), "UPDATE `"ZonesTable"` SET `Owner` = %d WHERE id = %d",ZoneInfo[zoneid][zOwner], zoneid);
	mysql_query(query);
	return 1;
}

stock GetFactionColor(factionid) // Вернет цвет фраки
{
	switch(factionid)
	{
		case 5:  return 0xF9400270;  //LCN
		case 6:  return 0xFFFF0070;  //Yakuza
		case 10: return 0xFFFF6670;  //Байкеры
		case 12: return 0x00008070;  // РМ
		case 13: return 0xB000B070;  //Баллас
		case 14: return 0x00FF0070; // Грув
		case 15: return 0xB67D0A70; // Вагос
		case 16: return 0x007BB770; // Коронос
		case 17: return 0x71B8FF70; //Рифа
		case 18: return 0x93939370; //колхоз
	}
	return 0xFFFFFFAA;
}

stock ShowPlayerZones(playerid, show) // Показывает зоны игроку
{
	for(new i = 1; i < sizeof(ZoneInfo); i ++)
	{
 		if(show == 0) GangZoneHideForPlayer(playerid, ZoneInfo[i][zID]);
  		else
	  	{
	  		GangZoneShowForPlayer(playerid, ZoneInfo[i][zID], GetFactionColor(ZoneInfo[i][zOwner]));
	  		if(ZoneInfo[i][zAttacked] != 0)
		  	{
		  	    if(i == 20) GangZoneFlashForPlayer(playerid, ZoneInfo[i][zID], COLOR_GREY);
			  	else GangZoneFlashForPlayer(playerid, ZoneInfo[i][zID], GetFactionColor(ZoneInfo[i][zAttacked]));
			}
		}
	}
    return 1;
}

stock GetGangName(gangid) // Вернет название банды по её ИД
{
	new Text[20];
	switch(gangid)
	{
	    case 5:  Text = "La Cosa Nostra";
	    case 6:  Text = "Yakuza";
	    case 10: Text = "Байкеры";
	    case 12: Text = "Russian Mafia";
	    case 13: Text = "Ballas Gang";
	    case 14: Text = "Grove St.";
	    case 15: Text = "Vagos Gang";
	    case 16: Text = "El Coronos";
	    case 17: Text = "Rifa Gang";
	    case 18: Text = "Колхоз";
	}
	return Text;
}

stock IsPlayerInArea(playerid, Float:min_x, Float:min_y ,Float:max_x, Float:max_y) // Определяет находится ли человек в квадрате
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return 1;
	return 0;
}
stock PlayerInGangZone(playerid) // Определяет в какой ганг зоне находится игрок
{
	new i;
	for(i = 1; i < sizeof(ZoneInfo); i++) if(IsPlayerInArea(playerid, ZoneInfo[i][zoneX], ZoneInfo[i][zoneY], ZoneInfo[i][zoneX2], ZoneInfo[i][zoneY2])) return i;
	return -1;
}


stock ShowDonateDialog(playerid, dialog)
{
	switch(dialog)
	{
		case 0:
		{
		    new string[300];
	        format(string, sizeof(string), "{ffffff}На вашем счете: {34c924}%d {ffffff}DonateMoney\n\n\n\
			Введите номер желаемого действия ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t1.  Пополнить счет\n\
			\t2.  Donate услуги для вашего персонажа\n\
			\t3.  Donate услуги для личного автомобиля\n\
			\t4.  Donate услуги для дома", GetPVarInt(playerid, "DonateMoney"));
			ShowPlayerDialog(playerid,80,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Выйти");
		}
		case 1:
		{
		    ShowPlayerDialog(playerid,81,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите код, полученный вами при оплате с сайта и нажмите {34c924}'Далее':","Далее","Назад");
		}
		case 2:
		{
		    ShowPlayerDialog(playerid,82,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите номер желаемого действия ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t1.  Оплатить VIP-аккаунт\n\
			\t2.  Продлить VIP-аккаунт\n\
			\t3.  Покупка респектов\n\
			\t4.  Повысить skill профессии\n\
			\t5.  Покупка скинов","Далее","Назад");
		}
		case 3:
		{
		    ShowPlayerDialog(playerid,83,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите уровень желаемого VIP аккаунта ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t{ffffff}1.  {cd7f32}Bronze (100 Donate Money)\n\
			\t{ffffff}2.  {c0c0c0}Silver (150 Donate Money)\n\
			\t{ffffff}3.  {ffd700}Gold (200 Donate Money)","Далее","Назад");
		}
		case 4:
		{
		    if(GetPVarInt(playerid, "VipLevel") < 1)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "У Вас нет VIP аккаунта");
		        ShowDonateDialog(playerid, 2);
		        return 1;
			}
		    ShowPlayerDialog(playerid,85,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите количество дней, на которое Вы хотите\n\
			продлить Ваш VIP аккаунт (от 1 до 300) и нажмите {34c924}'Далее'{ffffff}.\n\n\
			Стоимость продления VIP аккаунта на 1 календарный день:\n\
			\t{ffffff}1 уровень - {34c924}3 Donate Money\n\
			\t{ffffff}2 уровень - {34c924}5 Donate Money\n\
			\t{ffffff}3 уровень - {34c924}7 Donate Money","Далее","Назад");
		}
		case 5:
		{
		    ShowPlayerDialog(playerid,87,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите количество респектов(от 1 до 500),\n\
			которое вы хотите приобрести и нажмите {34c924}'Далее'{ffffff}.\n\n\
			Стоимость {34c924}1 {ffffff}респекта - {34c924}8 Donate Money{ffffff}.","Далее","Назад");
		}
		case 6:
		{
		    ShowPlayerDialog(playerid,89,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите номер профессии, skill которой вы хотите повысить\n\
			и нажмите {34c924}'Далее'{ffffff}.\n\n\
			1.	Детектив\n\
			2.	Адвокат\n\
			3.	Проститутка\n\
			4.	Наркодилер\n\
			5.	Автоугонщик\n\
			6.	Репортер\n\
			7.	Механик\n\
			8.	Автодилер\n\
			9.	Тренер\n\n\
			Стоимость повышения skill'a на {34c924}1 уровень {ffffff}- {34c924}50 DonateMoney","Далее","Назад");
		}
		case 7:
		{
		    ShowPlayerDialog(playerid,120,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите номер желаемого действия ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t1.  Сменить личный автомобиль\n\
			\t2.  Покупка автомобиля","Далее","Назад");
		}
		case 8:
		{
            new string[500];
            strcat(string, "\
            {ffffff}Введите номер категории желаемого автомобиля ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t1.	Обычные автомобили 1 (200 Donate Money)\n\
			\t2.	Обычные автомобили 2 (200 Donate Money)\n\
			\t3.	Дорогие автомобили (300 Donate Money)\n");

			strcat(string, "\
			\t4.	Редкие автомобили/спецтехника (400 Donate Money)\n\
			\t5.	Бигфуты (500 Donate Money)\n\n\
			Список всех автомобилей:\n\
			{34c924}http://wiki.sa-mp.com/wiki/Vehicle_Model_ID_List");
			
		    ShowPlayerDialog(playerid,121,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");
		}
		case 9:
		{
		    new string[800];
			strcat(string, "{ffffff}Введите id желаемого автомобиля ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
		 	400-Landstalker\t\t\t401-Bravura\t\t\t404-Perenniel\n\
			405-Sentinel\t\t\t\t410-Manana\t\t\t412-Voodoo\n\
			413-Pony\t\t\t\t414-Mule\t\t\t418-Moonbeam\n\
			419-Esperanto\t\t\t\t421-Washington\t\t422-Bobcat\n");

			strcat(string, "\
		 	426-Premier\t\t\t\t436-Previon\t\t\t439-Stallion\n\
			440-Rumpo\t\t\t\t445-Admiral\t\t\t448-Pizzaboy\n\
			458-Solair\t\t\t\t461-PCJ-600\t\t\t462-Faggio\n\
			463-Freeway\t\t\t\t466-Glendale\t\t\t467-Oceanic\n");
			
			strcat(string, "\
		 	468-Sanchez\t\t\t\t474-Hermes\t\t\t475-Sabre\n\
			478-Walton\t\t\t\t479-Regina\t\t\t481-BMX\n\
			482-Burrito\t\t\t\t489-Rancher\t\t\t491-Virgo\n\
			492-Greenwood\t\t\t496-Blista Compact\t\t500-Mesa\n\
			505-Rancher");
			
			ShowPlayerDialog(playerid,122,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");
		}
		case 10:
		{
		    new string[800];
			strcat(string, "{ffffff}Введите id желаемого автомобиля ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
		 	507-Elegant\t\t\t\t509-Bike\t\t\t510-Mountain Bike\n\
			516-Nebula\t\t\t\t517-Majestic\t\t\t518-Buccaneer\n\
			521-FCR-900\t\t\t\t526-Fortune\t\t\t527-Cadrona\n\
			529-Willard\t\t\t\t534-Remington\t\t536-Blade\n");

			strcat(string, "\
		 	540-Vincent\t\t\t\t542-Clover\t\t\t543-Sadler\n\
			546-Intruder\t\t\t\t547-Primo\t\t\t549-Tampa\n\
			550-Sunrise\t\t\t\t551-Merit\t\t\t554-Yosemite\n\
			566-Tahoma\t\t\t\t567-Savanna\t\t\t575-Broadway\n");

			strcat(string, "\
		 	576-Tornado\t\t\t\t579-Huntley\t\t\t580-Stafford\n\
			581-BF-400\t\t\t\t585-Emperor\t\t\t586-Wayfarer\n\
			589-Club\t\t\t\t600-Picador");

			ShowPlayerDialog(playerid,124,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");
		}
		case 11:
		{
		    new string[700];
			strcat(string, "{ffffff}Введите id желаемого автомобиля ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
		 	402-Buffalo\t\t\t\t409-Stretch\t\t\t411-Infernus\n\
			415-Cheetah\t\t\t\t424-BF Injection\t\t429-Banshee\n\
			434-Hotknife\t\t\t\t451-Turismo\t\t\t477-ZR-350\n\
			480-Comet\t\t\t\t494-Hotring\t\t\t495-Sandking\n");

			strcat(string, "\
		 	502-Hotring\t\t\t\t503-Hotring\t\t\t506-Super GT\n\
			522-NRG-500\t\t\t\t535-Slamvan\t\t\t541-Bullet\n\
			555-Windsor\t\t\t\t558-Uranus\t\t\t559-Jester\n\
			560-Sultan\t\t\t\t561-Stratum\t\t\t562-Elegy\n");

			strcat(string, "\
		 	565-Flash\t\t\t\t568-Bandito\t\t\t587-Euros\n\
			602-Alpha\t\t\t\t603-Phoenix");

			ShowPlayerDialog(playerid,126,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");
		}
		case 12:
		{
		    new string[700];
			strcat(string, "{ffffff}Введите id желаемого автомобиля ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
		 	403-Linerunner\t\t\t408-Trashmaster\t\t423-Mr Whoopee\n\
			427-Enforcer\t\t\t\t428-Securicar\t\t\t433-Barracks\n\
			455-Flatbed\t\t\t\t457-Caddy\t\t\t470-Patriot\n\
			471-Quad\t\t\t\t483-Camper\t\t\t485-Baggage\n");

			strcat(string, "\
		 	490-FBI Rancher\t\t\t504-Bloodring Banger\t\t508-Journey\n\
			514-Tanker\t\t\t\t515-Roadtrain\t\t\t524-Cement Truck\n\
			525-Towtruck\t\t\t\t528-FBI Truck\t\t\t531-Tractor\n\
			539-Vortex\t\t\t\t572-Mower\t\t\t573-Dune\n");

			strcat(string, "\
		 	574-Sweeper\t\t\t\t583-Tug\t\t\t588-Hotdog\n\
			596-Police Car\t\t\t\t599-Police Ranger\n\
			545-Hustler");

			ShowPlayerDialog(playerid,128,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");
		}
		case 13:
		{
			ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите id желаемого автомобиля ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			444-Monster\n\
			556-Monster 'A'\n\
			557-Monster 'B'","Далее","Назад");
		}
		case 14:
		{
			ShowPlayerDialog(playerid,163,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Введите номер желаемого действия ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t1.  Приобрести бар в дом (200 Donate Money)\n\
			\t2.  Перенести дом в другое место (500 Donate Money)\n\
			\t3.  Сменить интерьер в доме (от 100 Donate Money)","Далее","Назад");
		}
		case 15:
		{
			ShowPlayerDialog(playerid,164,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Вы уверены, что хотите приобрести  бар в свой дом?\n\
			Стоимость услуги: {34c924}200 Donate Money","Оплатить","Назад");
		}
		case 16:
		{
			ShowPlayerDialog(playerid,165,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate","\
			{ffffff}Вы уверены, что хотите приобрести  возможность переноса Вашего дома в другое место?\n\
			Стоимость услуги: {34c924}500 Donate Money","Оплатить","Назад");
		}
		case 17:
		{
		    new playername[24],
				house = GetPVarInt(playerid,"House");
				
			GetPlayerName(playerid, playername, sizeof(playername));
			if(house != -1 && strcmp(playername, HouseInfo[house][hOwner], false) == 0)
			{
			    if(GetPVarInt(playerid,"Local") != house+1000)
			    {
      				SendClientMessage(playerid, COLOR_GREY, "Вы должны находиться в своем доме");
					ShowDonateDialog(playerid, 14);
					return 1;
				}
				oSetPlayerPos(playerid,InteriorsForChange[0][0],InteriorsForChange[0][1],InteriorsForChange[0][2]);
				SetPlayerInterior(playerid,InteriorsForChange2[0][0]);
				ShowMenuForPlayer(changeInteriorMenu[0],playerid);
				SetPlayerVirtualWorld(playerid, playerid+10000);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "У Вас нет дома");
				ShowDonateDialog(playerid, 14);
				return 1;
			}
		}
		case 18:
		{
			new string[256];
			format(string, sizeof(string),
			"{ffffff}Вы уверены, что хотите сменить интерьер?\n\
			Стоимость услуги: {34c924}%d Donate Money {ffffff}.",InteriorsForChange2[GetPVarInt(playerid, "CurrentChangeInt")][1]);
			ShowPlayerDialog(playerid,167,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
		}
		case 19:
		{
		    new string[512];
		    strcat(string, "\
			{34c924}ID - название:\t\t\tЦена:\n\n\
		    {ffffff}404 - Perenniel\t\t300 DonateMoney\n\
		    410 - Manana\t\t\t300 DonateMoney\n\
		    467 - Oceanic\t\t\t350 DonateMoney\n\
		    496 - Blista Compact\t\t400 DonateMoney\n\n\
		    Укажите ID автомобиля, который хотите приобрести:");
		    ShowPlayerDialog(playerid,132,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Оплатить","Назад");
		}
		case 20://список скинов
		{
			ShowPlayerDialog(playerid,223,DIALOG_STYLE_INPUT,"{ffffff}Crime Streets: {34c924}Donate","\
			{ffffff}Введите номер желаемой категории ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			\t1.  Мужские скины (200 Donate Money)\n\
			\t2.  Женские скины (200 Donate Money)\n\
			\t3.  Уникальные скины (300 Donate Money)\n\n\
			Список всех cкинов:\n\
				{34c924}http://wiki.sa-mp.com/wiki/Skins:All","Далее","Назад");
		}
		case 21://мужские скины
		{
			new string[512];
			strcat(string, "{ffffff}Введите id желаемого скина ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
		 	1,2,7,14,16,18,19,20,23,24,26,27,29,30,35,43,45,49,50,\n\
			51,52,57,58,61,62,66,67,68,72,78,79,80,81,82,83,84,94,\n\
			96,97,99,101,128,132,133,134,135,136,137,143,144,146,\n");

			strcat(string, "\
			153,154,155,156,158,159,160,161,162,167,168,177,180,\n\
		 	182,183,202,203,204,206,209,212,217,220,221,230,235,\n\
			239,252,253,255,258,259,260,264,296,297,299\n");

			ShowPlayerDialog(playerid,224,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Далее","Назад");
			SetPVarInt(playerid, "donateSkinType",1);
		}
		case 22://женские скины
		{
			ShowPlayerDialog(playerid,224,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
	  		{ffffff}Введите id желаемого скина ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			9,10,31,38,39,53,54,63,75,77,87,88,89,92,130,131,138,\n\
			139,140,145,151,178,194,197,198,199,205,207,215,218,\n\
			224,231,232,238,243,244,245,251,257,298","Далее","Назад");

			SetPVarInt(playerid, "donateSkinType",2);
		}
		case 23://уникальные скины
		{
			ShowPlayerDialog(playerid,224,DIALOG_STYLE_INPUT, RGB_SERVER"Crime Streets: {34c924}Donate","\
	  		{ffffff}Введите id желаемого скина ниже и нажмите {34c924}'Далее'{ffffff}:\n\n\
			3,4,5,6,8,42,65,86,119,208,273,289,294\n","Далее","Назад");

			SetPVarInt(playerid, "donateSkinType",3);
		}
	}
	return 1;
}

stock GivePlayerVip(playerid, lvl, days)
{
	new query[256];
	format(query,sizeof(query), "INSERT INTO `"VipTable"` (`id`, `Date`, `Duration`, `FinishTime`, `lvl`) VALUES (%d, NOW(), %d, NOW() + INTERVAL %d DAY, %d)", GetPVarInt(playerid, "MySQL_id"), days, days, lvl);
	mysql_query(query);
	SetPVarInt(playerid, "VipLevel", lvl);
	
	if(lvl > 1)
	{
		if((days / 30) > 0)
		{
		    SetPVarInt(playerid, "AllowNameChange", (days/30) * lvl);
		    MySQL_UpdateInt(playerid, "AllowNameChange");
		    
		    SetPVarInt(playerid, "AllowCarNumberChange", (days/30) * lvl);
		    MySQL_UpdateInt(playerid, "AllowCarNumberChange");
		}
	}
	return 1;
}

stock MySQL_UpdateVips()
{
	new Query[128];
	format( Query, sizeof( Query ), "DELETE FROM `"VipTable"` WHERE FinishTime <= CURDATE()");
    mysql_query(Query);
	return 1;
}

stock UpdatePlayerVip(playerid, lvl)
{
	new query[300];
	format(query,sizeof(query), "UPDATE `"VipTable"` SET `lvl` = %d, `FinishTime` = `FinishTime` + INTERVAL 30 DAY WHERE `id` = %d LIMIT 1", lvl, GetPVarInt(playerid, "MySQL_id"));
	mysql_query(query);
	SetPVarInt(playerid, "VipLevel", lvl);
	
	if(lvl > 1)
	{
	 	GivePVarInt(playerid, "AllowNameChange", lvl);
	  	MySQL_UpdateInt(playerid, "AllowNameChange");

		GivePVarInt(playerid, "AllowCarNumberChange", lvl);
	 	MySQL_UpdateInt(playerid, "AllowCarNumberChange");
 	}
	return 1;
}


stock ExtendPlayerVip(playerid, days)
{
    new query[256];
    format(query,sizeof(query), "UPDATE `"VipTable"` SET `FinishTime` = `FinishTime` + INTERVAL %d DAY WHERE `id` = %d LIMIT 1", days, GetPVarInt(playerid, "MySQL_id"));
	mysql_query(query);

	if(GetPVarInt(playerid, "VipLevel") > 1)
	{
		if((days / 30) > 0)
		{
		    GivePVarInt(playerid, "AllowNameChange", (days/30)*GetPVarInt(playerid, "VipLevel"));
		    MySQL_UpdateInt(playerid, "AllowNameChange");

		    GivePVarInt(playerid, "AllowCarNumberChange", (days/30)*GetPVarInt(playerid, "VipLevel"));
		    MySQL_UpdateInt(playerid, "AllowCarNumberChange");
		}
	}
	return 1;
}

stock CheckVip(playerid)
{
    new name[24], query[256];
	GetPlayerName(playerid, name, 24);
	format(query,sizeof(query), "SELECT * FROM `"VipTable"` WHERE `id` = %d LIMIT 1", GetPVarInt(playerid, "MySQL_id"));
	mysql_query(query);
	mysql_store_result();
	if(mysql_num_rows())
	{
	    new tmp[24], year, month, day;
	    mysql_fetch_field("lvl", tmp); SetPVarInt(playerid, "VipLevel", strval(tmp));
     	mysql_fetch_field("FinishTime", tmp);
		getdate(year, month, day);
  		format(query, sizeof(query), "Вы вошли как "RGB_BLUE "VIP игрок [%d lvl]" RGB_WHITE", VIP действителен до "RGB_BLUE"%s "RGB_WHITE"(сегодня: %d-%d-%d)", GetPVarInt(playerid, "VipLevel"), tmp, year, month, day);
	    SendClientMessage(playerid, COLOR_WHITE, query);
	}
	mysql_free_result();
	return 1;
}




//==============================================================================
//==============================================================================
//==============================================================================

stock ShowNoobsHelp(playerid)
{
    new listitems[1024];
	switch(GetPVarInt(playerid, "PageHelp"))
	{
		case 2:
		{
			strcat(listitems, "{e2e2e1}«Информация о сервере (1/7)»\n\n\
			{f5f6f4}Данный сервер относится к жанру РПГ. Этот жанр предполагает прокачку\n\
			персонажа — увеличение уровня, покупку различных игровых предметов, таких, как дома\n\
			машины, бизнесы и прочее. Так же возможно вступить в банду, мафию или фракцию.");
		}
		case 3:
		{
			strcat(listitems, "{e2e2e1}«Общение с игроками, использование команд (2/7)»\n\n\
			{f5f6f4}Для ввода команд и для написания сообщений используйте клавишу F6.\n\
			Все команды начинаются с символа «/». Список основных команд сервера Вы\n\
			можете посмотреть с помощью /help");
		}
		case 4:
		{
			strcat(listitems, "{e2e2e1}«Куда обратиться за помощью по игре (3/7)»\n\n\
			{f5f6f4}По всем возникшим вопросам Вы можете обратиться к нашим помощникам,\n\
			связаться с ними можно через команду /ask. Большинство ответов на Ваши вопросы\n\
			Вы можете найти так же на нашем форуме в разделе FAQ и Помощь по игре.");
		}
		case 5:
		{
			strcat(listitems, "{e2e2e1}«Как прокачать своего персонажа (4/7)»\n\n\
			{f5f6f4}Для того, чтобы прокачать своего персонажа по уровню (lvl), нужно иметь определенное\n\
			количество денег и респектов. Каждый час Вам будет начисляться 1 респект и\n\
			зарплата. Если же Вы хотите прокачать персонажа быстрее, Вы можете устроиться на\n\
			работу и получать деньги, а так же покупать респекты у других игроков.");
		}
		case 6:
		{
			strcat(listitems, "{e2e2e1}«Вступление в мафию/банду/фракцию (5/7)»\n\n\
			{f5f6f4}Чтобы попасть в банду, мафию или фракцию необходимо связаться с лидером.\n\
			Список лидеров онлайн можно посмотреть при помощь команды /online. Если нужный\n\
			Вам лидер отсутствует, попробуйте оставить ему сообщение на форуме.");
		}
		case 7:
		{
			strcat(listitems, "{e2e2e1}«Как заработать денег (6/7)»\n\n\
			{f5f6f4}Зарплата начисляется игрокам каждый час. Список работ и их\n\
			расположение можно узнать через /gps. Так же зарплату можно получать,\n\
			находясь в какой-либо организации.");
		}
		case 8:
		{
			strcat(listitems, "{e2e2e1}«Как зарегистрироваться на форуме (7/7)»\n\n\
			{f5f6f4}Чтобы завести аккаунт на форуме, необходимо прокачать своего\n\
			персонажа до 3 уровня, после чего Вам будет предложено завести форумный\n\
			аккаунт. Зарегистрировать аккаунт на форуме можно только один раз.\n\
			Адрес нашего форума: forum.crime-streets.ru\n\
			Адрес нашего сайта: crime-streets.ru");
			ShowPlayerDialog(playerid,74,DIALOG_STYLE_MSGBOX,"  ", listitems ,"<<","В меню");
			return 1;
		}

	}
	return ShowPlayerDialog(playerid,73,DIALOG_STYLE_MSGBOX,"  ", listitems ,"В меню",">>");
}


stock ShowNoobsHelpDialog(playerid)
{
	new listitems[256];
	strcat(listitems, "\
	1)\tИнформация о сервере\n\
	2)\tОбщение, команды\n\
	3)\tКак получить помощь по игре\n\
	4)\tКак прокачать своего персонажа\n\
	5)\tКак вступить в банду, фракцию\n\
	6)\tКак заработать денег\n\
	7)\tКак зарегистрироваться на форуме");
	return ShowPlayerDialog(playerid,75,DIALOG_STYLE_LIST,"   ",listitems,"Выбрать","Отмена");
}

forward GoToNextCP(playerid);
public GoToNextCP(playerid)
{
    SetPlayerBusCP(playerid);
	return 1;
}
stock SetPlayerBusCP(playerid)
{
	new CP = GetPVarInt(playerid, "TotalCPbus");


	switch(GetPVarInt(playerid, "BusCourse"))
	{
	    case 0:
		{
			if(CP + 1 < sizeof(CourseLS1))
			{
			    if(CourseLS1[CP][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseLS1[CP][0], CourseLS1[CP][1], CourseLS1[CP][2], CourseLS1[CP+1][0], CourseLS1[CP+1][1], CourseLS1[CP+1][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseLS1[CP][0], CourseLS1[CP][1], CourseLS1[CP][2], CourseLS1[CP+1][0], CourseLS1[CP+1][1], CourseLS1[CP+1][2], 5.0);
				}
			}
			else
			{
				SetPVarInt(playerid, "TotalCPbus", 0);
			    if(CourseLS1[0][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseLS1[0][0], CourseLS1[0][1], CourseLS1[0][2], CourseLS1[1][0], CourseLS1[1][1], CourseLS1[1][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseLS1[0][0], CourseLS1[0][1], CourseLS1[0][2], CourseLS1[1][0], CourseLS1[1][1], CourseLS1[1][2], 5.0);
				}
			}
		}
		case 1:
		{
			if(CP + 1 < sizeof(CourseLS2))
			{
			    if(CourseLS2[CP][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseLS2[CP][0], CourseLS2[CP][1], CourseLS2[CP][2], CourseLS2[CP+1][0], CourseLS2[CP+1][1], CourseLS2[CP+1][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseLS2[CP][0], CourseLS2[CP][1], CourseLS2[CP][2], CourseLS2[CP+1][0], CourseLS2[CP+1][1], CourseLS2[CP+1][2], 5.0);
				}
			}
			else
			{
			    SetPVarInt(playerid, "TotalCPbus", 1);
			    if(CourseLS2[1][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseLS2[1][0], CourseLS2[1][1], CourseLS2[1][2], CourseLS2[2][0], CourseLS2[2][1], CourseLS2[2][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseLS2[1][0], CourseLS2[1][1], CourseLS2[1][2], CourseLS2[2][0], CourseLS2[2][1], CourseLS2[2][2], 5.0);
				}
			}
		}
		case 2:
		{
			if(CP + 1 < sizeof(CourseBetweenLSSF))
			{
			    if(CourseBetweenLSSF[CP][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseBetweenLSSF[CP][0], CourseBetweenLSSF[CP][1], CourseBetweenLSSF[CP][2], CourseBetweenLSSF[CP+1][0], CourseBetweenLSSF[CP+1][1], CourseBetweenLSSF[CP+1][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseBetweenLSSF[CP][0], CourseBetweenLSSF[CP][1], CourseBetweenLSSF[CP][2], CourseBetweenLSSF[CP+1][0], CourseBetweenLSSF[CP+1][1], CourseBetweenLSSF[CP+1][2], 5.0);
				}
			}
			else
			{
			    SetPVarInt(playerid, "TotalCPbus", 1);
			    if(CourseBetweenLSSF[1][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseBetweenLSSF[1][0], CourseBetweenLSSF[1][1], CourseBetweenLSSF[1][2], CourseBetweenLSSF[2][0], CourseBetweenLSSF[2][1], CourseBetweenLSSF[2][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseBetweenLSSF[1][0], CourseBetweenLSSF[1][1], CourseBetweenLSSF[1][2], CourseBetweenLSSF[2][0], CourseBetweenLSSF[2][1], CourseBetweenLSSF[2][2], 5.0);
				}
			}
		}
		case 3:
		{
			if(CP + 1 < sizeof(CourseSF))
			{
			    if(CourseSF[CP][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseSF[CP][0], CourseSF[CP][1], CourseSF[CP][2], CourseSF[CP+1][0], CourseSF[CP+1][1], CourseSF[CP+1][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseSF[CP][0], CourseSF[CP][1], CourseSF[CP][2], CourseSF[CP+1][0], CourseSF[CP+1][1], CourseSF[CP+1][2], 5.0);
				}
			}
			else
			{
			    SetPVarInt(playerid, "TotalCPbus", 25);
			    if(CourseSF[1][3] != 1.0) SetPlayerRaceCheckpoint(playerid, 0, CourseSF[25][0], CourseSF[25][1], CourseSF[25][2], CourseSF[26][0], CourseSF[26][1], CourseSF[26][2], 5.0);
				else
				{
				    SetPVarInt(playerid, "BusStation", 1);
					SetPlayerRaceCheckpoint(playerid, 1, CourseSF[25][0], CourseSF[25][1], CourseSF[25][2], CourseSF[26][0], CourseSF[26][1], CourseSF[26][2], 5.0);
				}
			}
		}
	}
	return 1;
}





forward Untazer(playerid);
public Untazer(playerid)  // cuff & tazer, добавить проверку на то что игрок уже связан (!)
{
	TogglePlayerControllable(playerid, 1);
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	return 1;
}

forward Canusedrugs(playerid);
public Canusedrugs(playerid) // usedrugs, таймер на 15 секунд
{
    DeletePVar(playerid,"UseDrugsTime");
	return 1;
}

forward Findtimer(playerid);
public Findtimer(playerid) // Вызывать в команде "/find" (SetTimerEx), время в зависимости от скила
{
	FindTime[playerid] = 0;
	FindTimePoints[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
	GameTextForPlayer(playerid, "~r~Red marker gone", 2500, 1);
	return 1;
}


forward Usefind(playerid);
public Usefind(playerid) // Вызывать в команде "/find" (SetTimerEx), 1 минута
{
	UsedFind[playerid] = 0;
	return 1;
}



forward NullSpeedHack(playerid);
public NullSpeedHack(playerid) // для античита
{
	DeletePVar(playerid, "KickSpeedHack");
}
forward TimeAdOn();
public TimeAdOn()
{
    TimeAdv = 0;
    return 1;
}
//------------------------------------------------------------------------------



stock SetPlayerCollectorRoute(playerid)
{
	DisablePlayerCheckpoint(playerid);
    if(GetPVarInt(playerid, "CollRoute") == 7)
    {
        SendClientMessage(playerid, COLOR_GREEN, "Отвезите деньги в контору");
        SetPlayerCheckpoint(playerid, -2444.288085,522.186462,29.917373, 5.0 );
        gPlayerCheckpointStatus[playerid] = COLLECTORENDJOB_CHECKPOINT;
        return 1;
    }
    gPlayerCheckpointStatus[playerid] = COLLECTORSJOB_CHECKPOINT;
	switch(GetPVarInt(playerid, "IDroute"))
	{
		case 0:
		{
			switch(GetPVarInt(playerid, "CollRoute"))
			{
			    case 0: SetPVarInt(playerid, "GetMoneyCP", Mayors), SetPlayerCheckpoint(playerid,1476.968261,-1737.640136,13.546875,  2.0); // Mayors
			    case 1: SetPVarInt(playerid, "GetMoneyCP", LSDEP), SetPlayerCheckpoint(playerid, 1540.484863,-1675.937500,13.550685,  2.0); // LSDEP
			    case 2: SetPVarInt(playerid, "GetMoneyCP", BANKLS), SetPlayerCheckpoint(playerid,1448.432861,-1028.504638,23.828125,  2.0);// BANKLS
			    case 3: SetPVarInt(playerid, "GetMoneyCP", LSBAR), SetPlayerCheckpoint(playerid, 2301.854980,-1653.718994,14.637237,  2.0); // LSBAR ЛС
			    case 4: SetPVarInt(playerid, "GetMoneyCP", StoreLS), SetPlayerCheckpoint(playerid, 1342.989868,-1747.701782,13.373059,  2.0); // StoreLS 24/7
			    case 5: SetPVarInt(playerid, "GetMoneyCP", BurgerLS), SetPlayerCheckpoint(playerid, 1215.215454,-909.579711,42.919727,  2.0);// бургер шот ЛС
			    case 6: SetPVarInt(playerid, "GetMoneyCP", SportZalls), SetPlayerCheckpoint(playerid, 2222.749267,-1708.996337,13.610545,  2.0); // SportZalls ЛС
			}
		}
		case 1:
		{
			switch(GetPVarInt(playerid, "CollRoute"))
			{
			    case 0: SetPVarInt(playerid, "GetMoneyCP", LSDEP), SetPlayerCheckpoint(playerid, 1540.484863,-1675.937500,13.550685,  2.0);  // LSDEP
			    case 1: SetPVarInt(playerid, "GetMoneyCP", BANKLS), SetPlayerCheckpoint(playerid, 1448.432861,-1028.504638,23.828125,  2.0);  // BANKLS
			    case 2: SetPVarInt(playerid, "GetMoneyCP", Mayors ), SetPlayerCheckpoint(playerid,1476.968261,-1737.640136,13.546875,  2.0);// Mayors
			    case 3: SetPVarInt(playerid, "GetMoneyCP", SportZalls ), SetPlayerCheckpoint(playerid, 2222.749267,-1708.996337,13.610545,  2.0);// SportZalls
			    case 4: SetPVarInt(playerid, "GetMoneyCP", BurgerLS), SetPlayerCheckpoint(playerid, 1215.215454,-909.579711,42.919727,  2.0);// бургершот
			    case 5: SetPVarInt(playerid, "GetMoneyCP", StoreLS ), SetPlayerCheckpoint(playerid, 1342.989868,-1747.701782,13.373059,  2.0);// StoreLS 24/7
			    case 6: SetPVarInt(playerid, "GetMoneyCP", LSBAR ), SetPlayerCheckpoint(playerid, 2301.854980,-1653.718994,14.637237,  2.0);// LSBAR ЛС
			}
		}
		case 2:
		{
			switch(GetPVarInt(playerid, "CollRoute"))
			{
			    case 0: SetPVarInt(playerid, "GetMoneyCP", LSBAR ), SetPlayerCheckpoint(playerid, 2301.854980,-1653.718994,14.637237,  2.0);// LSBAR ЛС
			    case 1: SetPVarInt(playerid, "GetMoneyCP", SportZalls ), SetPlayerCheckpoint(playerid, 2222.749267,-1708.996337,13.610545,  2.0);// SportZalls
			    case 2: SetPVarInt(playerid, "GetMoneyCP", BurgerLS), SetPlayerCheckpoint(playerid,1215.215454,-909.579711,42.919727,  2.0);// бургершот
			    case 3: SetPVarInt(playerid, "GetMoneyCP", Mayors ), SetPlayerCheckpoint(playerid, 1476.968261,-1737.640136,13.546875,  2.0);// Mayors
			    case 4: SetPVarInt(playerid, "GetMoneyCP", StoreLS ), SetPlayerCheckpoint(playerid,1342.989868,-1747.701782,13.373059,  2.0);// StoreLS 24/7
			    case 5: SetPVarInt(playerid, "GetMoneyCP", BANKLS ), SetPlayerCheckpoint(playerid,1448.432861,-1028.504638,23.828125,  2.0);// BANKLS
			    case 6: SetPVarInt(playerid, "GetMoneyCP", LSDEP ), SetPlayerCheckpoint(playerid,1540.484863,-1675.937500,13.550685,  2.0);// LSDEP
			}
		}
		default:
		{
			switch(GetPVarInt(playerid, "CollRoute"))
			{
			    case 0: SetPVarInt(playerid, "GetMoneyCP",  StoreLS), SetPlayerCheckpoint(playerid,1342.989868,-1747.701782,13.373059,  2.0);// StoreLS 24/7
			    case 1: SetPVarInt(playerid, "GetMoneyCP",  BurgerLS), SetPlayerCheckpoint(playerid, 1215.215454,-909.579711,42.919727,  2.0);// бургершот
			    case 2: SetPVarInt(playerid, "GetMoneyCP",  LSDEP), SetPlayerCheckpoint(playerid, 1540.484863,-1675.937500,13.550685,  2.0);// LSDEP
			    case 3: SetPVarInt(playerid, "GetMoneyCP",  Mayors), SetPlayerCheckpoint(playerid, 1476.968261,-1737.640136,13.546875,  2.0);// Mayors
			    case 4: SetPVarInt(playerid, "GetMoneyCP",  BANKLS), SetPlayerCheckpoint(playerid, 1448.432861,-1028.504638,23.828125, 2.0);// BANKLS
			    case 5: SetPVarInt(playerid, "GetMoneyCP",  LSBAR), SetPlayerCheckpoint(playerid, 2301.854980,-1653.718994,14.637237,  2.0);// LSBAR ЛС
			    case 6: SetPVarInt(playerid, "GetMoneyCP",  SportZalls), SetPlayerCheckpoint(playerid, 2222.749267,-1708.996337,13.610545, 2.0);// SportZalls ЛС
			}
		}
	}
	return 1;
}

stock SetPlayerCheckpointMoney(playerid)
{
	DisablePlayerCheckpoint(playerid);
    gPlayerCheckpointStatus[playerid] = COLLECTORSJOBLOAD_CHECKPOINT;
	switch(GetPVarInt(playerid, "GetMoneyCP"))
	{
		case Mayors: SetPlayerCheckpoint(playerid, 358.954040,186.403274,1008.382812, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Зайдите в здание мэрии )) ");
		case LSDEP: SetPlayerCheckpoint(playerid, 256.788391,64.866958,1003.640625, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Зайдите в здание LSPD )) ");
		case BANKLS: SetPlayerCheckpoint(playerid, 1462.403808,-1012.199707,26.843750, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Зайдите в офис банка )) ");
		case LSBAR: SetPlayerCheckpoint(playerid, 2307.522705,-1643.700073,14.827047, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Заберите деньги из бара )) ");
		case StoreLS: SetPlayerCheckpoint(playerid, -29.014652,-187.156372,1003.546875, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Зайдите в магазин '24/7' )) ");
		case BurgerLS: SetPlayerCheckpoint(playerid,  380.128204,-58.441856,1001.507812, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Зайдите в столовую 'Бургершот' )) ");
		case SportZalls: SetPlayerCheckpoint(playerid, 756.526489,9.250666,1000.700988, 1.0), SendClientMessage(playerid, COLOR_GREEN, " (( Зайдите в спортзал )) ");
	}
	return 1;
}




stock ShowPAdvs(playerid)
{
	new form[136];
    globalstr = "";
    strcat(globalstr, "{bbbbbb}");
	format(form,136, "1. %s\n",    AdvInfo[0][Textad]); strcat(globalstr, form);
	format(form,136, "2. %s\n",    AdvInfo[1][Textad]); strcat(globalstr, form);
	format(form,136, "3. %s\n",    AdvInfo[2][Textad]); strcat(globalstr, form);
	format(form,136, "4. %s\n",    AdvInfo[3][Textad]); strcat(globalstr, form);
	format(form,136, "5. %s\n",    AdvInfo[4][Textad]); strcat(globalstr, form);
	format(form,136, "6. %s\n",    AdvInfo[5][Textad]); strcat(globalstr, form);
	format(form,136, "7. %s\n",    AdvInfo[6][Textad]); strcat(globalstr, form);
	format(form,136, "8. %s\n",    AdvInfo[7][Textad]); strcat(globalstr, form);
	format(form,136, "9. %s\n",    AdvInfo[8][Textad]); strcat(globalstr, form);
	format(form,136, "10. %s\n",   AdvInfo[9][Textad]); strcat(globalstr, form);
	format(form,136, "11. %s\n",   AdvInfo[10][Textad]); strcat(globalstr, form);
	format(form,136, "12. %s\n",   AdvInfo[11][Textad]); strcat(globalstr, form);
	format(form,136, "13. %s\n",   AdvInfo[12][Textad]); strcat(globalstr, form);
	format(form,136, "14. %s\n",   AdvInfo[13][Textad]); strcat(globalstr, form);
	format(form,136, "15. %s",     AdvInfo[14][Textad]); strcat(globalstr, form);
	if(GetPVarInt(playerid, "OnPhone"))
	{
		DeletePVar(playerid, "OnPhone");
		ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Phone",globalstr,"Ok","");
		globalstr = "";
	}
	else
	{
		ShowPlayerDialog(playerid,96,DIALOG_STYLE_MSGBOX, RGB_SERVER"ATM",globalstr,"Меню","Написать");
		globalstr = "";
	}
	return 1;
}









forward CountRaceSF();
public CountRaceSF()
{
    CountRace ++;
	switch(CountRace)
	{
	    // Метка [Гонка] Тут добавить проверку на трассу
	    case 3: SendClientMessageToAll(COLOR_INFO, "Начало гонок через 5 минут, регистрация у аэропорта San Fierro");
	    case 5: SendClientMessageToAll(COLOR_INFO, "Начало гонок через 2 минуты, регистрация у аэропорта San Fierro");
	    case 7:
		{
		    RaceOpen = false;
		    KillTimer(TimerRace);
		    TimerRace = 0;
			if(RacersReg > 5) // ВЕРНУТЬ НА 5
			{
		 		StartRaceSF();

				switch(RaceTrack)
				{
				    case 0: SendClientMessageToAll(COLOR_INFO, "Гонка началась! Трасса: Аэропорт San Fierro");
				    case 1: SendClientMessageToAll(COLOR_INFO, "Гонка началась! Трасса: Las Venturas");
					case 2: SendClientMessageToAll(COLOR_INFO, "Гонка началась! Трасса: Пустыня");
					case 3: SendClientMessageToAll(COLOR_INFO, "Гонка началась! Трасса: San Andreas");
					case 4: SendClientMessageToAll(COLOR_INFO, "Гонка началась! Трасса: Дамба");
					case 5: SendClientMessageToAll(COLOR_INFO, "Гонка началась! Трасса: LV-LS-SF");
				}
		  		// Метка [Гонка] Тут добавить проверку на трассу
		  		CountRace = 10;
		  		TimerRace = SetTimer("RaceEndex", 60000*8, 0);
			}
			else
			{
				SendClientMessageToAll(COLOR_INFO, "Гонка была отменена! Набралось менее 6 участников");
   				for(new p; p < MAX_PLAYERS; p++)
				{
	    			if(!GetPVarInt(p, "OnRace")) continue;
	    			GivePlayerPCash(p, 500, "gonka otmenena");
					DeletePVar(p, "OnRace");
					DeletePVar(p, "CPoint");
					DeletePVar(p, "WaitRace");
					ResetPlayerWeaponsUAC(p);
				}
				RacePrize = 0; // Сколько денег выделится на призы с гонки
			 	RacersReg = 0; // Сколько человек зарегалось на гонку (макс = 24, мин = 5)
			 	CountRace = 0;
			}
		}
	}
	return 1;
}

stock StartRaceSF()
{
	new i = 0;
    RaceOpen = false;
    
    new racecar = 560;
    switch(random(10))
    {
        case 0: racecar = 402;
        case 1: racecar = 411;
        case 2: racecar = 415;
        case 3: racecar = 429;
        case 4: racecar = 434;
        case 5: racecar = 451;
        case 6: racecar = 494;
        case 7: racecar = 502;
        case 8: racecar = 503;
        default: racecar = 504;
	}

	for(new c; c < RacersReg; c++)
	{
		switch(RaceTrack)
		{
			case 0: RaceCar[c] = CreateVehicle(racecar, RaceCars[c][0], RaceCars[c][1], RaceCars[c][2], RaceCars[c][3], -1, -1, 20);
			case 1: RaceCar[c] = CreateVehicle(racecar, RaceCarsLV[c][0], RaceCarsLV[c][1], RaceCarsLV[c][2], RaceCarsLV[c][3], -1, -1, 20);
			case 2: RaceCar[c] = CreateVehicle(racecar, RaceCarsDesert[c][0], RaceCarsDesert[c][1], RaceCarsDesert[c][2], RaceCarsDesert[c][3], -1, -1, 20);
			case 3: RaceCar[c] = CreateVehicle(racecar, RaceCarsAllSA[c][0], RaceCarsAllSA[c][1], RaceCarsAllSA[c][2], RaceCarsAllSA[c][3], -1, -1, 20);
			case 4: RaceCar[c] = CreateVehicle(495, RaceCarsDamba[c][0], RaceCarsDamba[c][1], RaceCarsDamba[c][2], RaceCarsDamba[c][3], -1, -1, 20);
			case 5: RaceCar[c] = CreateVehicle(522, RaceCarsBikes[c][0], RaceCarsBikes[c][1], RaceCarsBikes[c][2], RaceCarsBikes[c][3], -1, -1, 20);
		}
	    // Метка: [Гонка] Тут добавить спавны для тачек на гонки создав новый массив
	    
	    Gas[RaceCar[c]] = 100; // заправили
	    new engine,lights,alarm,door,bonnet,boot,objective;
		GetVehicleParamsEx(RaceCar[c], engine,lights,alarm,door,bonnet,boot,objective);
		SetVehicleParamsEx(RaceCar[c], VEHICLE_PARAMS_ON,  lights,alarm,door,bonnet,boot,objective);
		
		
	    SetVehicleVirtualWorld(RaceCar[c], 2);
	    for( ; i < MAX_PLAYERS; i ++)
	    {
	        if(GetPVarInt(i, "OnRace") == 1 && !GetPVarInt(i, "ReadyToRace"))
	        {
	            SetPVarInt(i, "ReadyToRace", 1);
	            SetPlayerVirtualWorld(i, 2);
	            SetPlayerInterior(i, 0);
	            SetPVarInt(i, "InCar",  RaceCar[c]);
	            
	            HealthChanged[RaceCar[c]] = true;
	            PutPlayerInVehicleEx(i, RaceCar[c], 0);
	            break;
	        }
	    }
	}
	for(new p; p < MAX_PLAYERS; p ++) DeletePVar(p, "ReadyToRace");

	StartCount();
	return 1;
}

forward StartCount();
public StartCount()
{
    CountRace--;
    if(CountRace > 0)
    {
        new s[10];
        SetTimer("StartCount", 1000, 0);
    	format(s, 10, "~y~%d", CountRace);
    	for(new p; p < MAX_PLAYERS; p ++)
    	{
    	    if(!GetPVarInt(p, "OnRace")) continue;
    		GameTextForPlayer(p, s, 1100, 6);
    		PlayerPlaySound(p, 1056, 0.0, 0.0, 0.0);
    		ShowPlayerDialog(p, 53 ,DIALOG_STYLE_MSGBOX, RGB_SERVER"Дождитесь начала гонки!"," ","Ок","");
    	}
	}
	else
	{
    	for(new p; p < MAX_PLAYERS; p ++)
    	{
    	    if(!GetPVarInt(p, "OnRace")) continue;
    		GameTextForPlayer(p, "~g~GO GO GO!!!", 3000, 6);
    		ShowPlayerDialog(p,-1,-2," "," "," "," ");
			PlayerPlaySound(p, 1057, 0.0, 0.0, 0.0);
			DeletePVar(p, "WaitRace");
			gPlayerCheckpointStatus[p] = RACESF_CHECKPOINT;
			
			switch(RaceTrack)
			{
				case 0: SetPlayerCheckpoint(p, -1603.115844,-500.595062,21.766389 ,10.0);
				case 1: SetPlayerCheckpoint(p, 2014.046142,843.161621,7.945058 ,20.0);
				case 2: SetPlayerCheckpoint(p, 648.136901,1086.506347,28.114835 ,15.0);
				case 3: SetPlayerCheckpoint(p, 2866.495117,-1661.279418,10.602070 ,30.0);
				case 4: SetPlayerCheckpoint(p, -463.411529,2045.135986,61.222198 ,15.0);
				case 5: SetPlayerCheckpoint(p, 1048.381835,1765.133300,10.383703 ,15.0);
			}

			// Метка: [Гонка] Тут добавить первый чекпоинт, который после старта появляется
    	}
	}
}



stock FinishRace(playerid)
{
	DisablePlayerCheckpoint(playerid);
	gPlayerCheckpointStatus[playerid] = 0;
	DeletePVar(playerid, "OnRace");
	DeletePVar(playerid, "CPoint");
	new currentveh;
	for(new i = 0; i < 5; i ++)
	{
 		if( !strcmp(racersdialog[i], "none", true) )
   		{
			new n[24], s[32];
			GetPlayerName(playerid, n, 24);
			strmid(racersdialog[i], n , 0, strlen(n), 255);
			if(i == 4)
			{
				SetPlayerVirtualWorld(playerid, playerid);
				SetPlayerInterior(playerid, 3);
				oSetPlayerPos(playerid, 830.645507,7.429725,1004.179687);
			}
			if(i < 4)
			{
 				format(s, 32, "Вы приехали %d", i+1);
			 	SendClientMessage(playerid, COLOR_WHITE, s);

          		currentveh = GetPlayerVehicleID(playerid);

				SetPlayerInterior(playerid, 3);
				oSetPlayerPos(playerid, 830.645507,7.429725,1004.179687);
				SetPlayerVirtualWorld(playerid, playerid);

				SetVehiclePos(currentveh, 0.0, 0.0, 0.0);
				if(i < 3)
				{
				    new priz;
					switch(i)
					{
					    case 0: priz = RacePrize/2, GiveAchievement(playerid, 4, 1);
					    case 1: priz = RacePrize/2;
					    case 2: priz = RacePrize;
					}
					RacePrize -= priz;
					format(s, 32, "Ваш выигрыш %d$", priz);
     				SendClientMessage(playerid, COLOR_WHITE, s);
     				GivePlayerPCash(playerid, priz, "priz na gonke");
     				GiveAchievement(playerid, 8, priz);
				}

	 		}
			else
			{
				for(new p = 0; p < MAX_PLAYERS; p ++)
				{
    				if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
				    if(GetPVarInt(p, "OnRace"))
					{
					    
		 				DisablePlayerCheckpoint(p);
		   				DeletePVar(p, "OnRace");
						DeletePVar(p, "CPoint");
						gPlayerCheckpointStatus[p] = 0;

						SetPlayerVirtualWorld(p, p);
						SetPlayerInterior(p, 3);
						oSetPlayerPos(p, 830.645507,7.429725,1004.179687);
						DeletePVar(p, "Exit_Type");
						SendClientMessage(p, COLOR_WHITE, "Вы проиграли эту гонку. Список победителей можно увидеть в /rinfo");
					}
				}
				SendClientMessageToAll(COLOR_INFO, "Гонка закончена! Просмотреть список победителей - /rinfo");
				for(new cc; cc < 24; cc++)
				{
			 		if(RaceCar[cc] != 0)
				    {
						DestroyVehicle(RaceCar[cc]);
						RaceCar[cc] = 0;
					}
				}
				if(TimerRace != 0) KillTimer(TimerRace);
			}
			break;
   		}
	}
	return 1;
}
forward RaceEndex();
public RaceEndex()
{
	for(new p = 0; p < MAX_PLAYERS; p ++)
	{
		if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
    	if(GetPVarInt(p, "OnRace"))
		{
			DisablePlayerCheckpoint(p);
			DeletePVar(p, "OnRace");
			DeletePVar(p, "CPoint");
			gPlayerCheckpointStatus[p] = 0;
			SetPlayerVirtualWorld(p, p);
			SetPlayerInterior(p, 3);
			oSetPlayerPos(p, 830.645507,7.429725,1004.179687);
			SendClientMessage(p, COLOR_WHITE, "Прошло более 8 минут с начала гонки, поэтому она была досрочно закончена ");
		}
	}
	for(new cc; cc < 24; cc++)
	{
		if(RaceCar[cc] != 0)
  		{
			DestroyVehicle(RaceCar[cc]);
			RaceCar[cc] = 0;
		}
	}
    SendClientMessageToAll(COLOR_INFO, "Гонка закончена! Просмотреть список победителей - /rinfo");
	return 1;
}

stock SetPlayerMapIcons(playerid)
{
 	SetPlayerMapIcon(playerid, 0, 1697.713134,-1473.033325,13.546875, 	63, 	0, 	0 	);  //  Покраска личных тачек
	SetPlayerMapIcon(playerid, 1, 2166.3772, -1675.3829, 15.0859, 		11, 	0, 	0	);	//  Наркодиллер
	SetPlayerMapIcon(playerid, 2, 1628.8853,-1903.1516,13.5533, 		11, 	0, 	0	);	//  Механики
	SetPlayerMapIcon(playerid, 4, 1366.4325,-1275.2096,13.5469, 		11, 	0, 	0	);	//  Гандиллер
	SetPlayerMapIcon(playerid, 5, 531.7930,-1292.4044,17.2422, 			11, 	0, 	0	);	//  Автодиллер
	SetPlayerMapIcon(playerid, 6, 2282.152832,2424.313232,3.476562,     30, 	0,  0   );	//	FBI
	SetPlayerMapIcon(playerid, 7, -2070.807373,8.063130,35.320312, 		11, 	0, 	0	);	//  Уборщик улиц СФ
	SetPlayerMapIcon(playerid, 8, 1623.443725,-1552.276611,13.683534, 	11, 	0, 	0	);	//  Уборщик улиц ЛС
	SetPlayerMapIcon(playerid, 9, 337.029235, 1397.828247, 6.809699, 	11, 	0, 	0	);	//  Нефтезавод
	SetPlayerMapIcon(playerid, 10, -2440.827148,515.837036,29.914199, 	11, 	0, 	0	);	//  Инкассатор
	SetPlayerMapIcon(playerid, 11, 2199.009033,-1973.465942,13.558123, 	11, 	0, 	0	);	//  Свалка
	SetPlayerMapIcon(playerid, 12, -2227.8464,286.9478,35.3203, 		11, 	0, 	0	);	//  Такси
	SetPlayerMapIcon(playerid, 13, 1479.9272,-1790.9811,13.5469, 		11, 	0, 	0	);	//  Мэрия
	SetPlayerMapIcon(playerid, 14, 2418.6343,-1219.4904,25.5123, 		11, 	0, 	0	);	//  Пиг пен
	SetPlayerMapIcon(playerid, 16, -1559.4141,125.3769,3.5547, 			11, 	0, 	0	);	//  Автоугонщик
	SetPlayerMapIcon(playerid, 17, 1004.0070,-939.3102,42.1797, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 18, 1944.3260,-1772.9254,13.3906, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 19, -90.5515,-1169.4578,2.4079, 			56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 20, -1609.7958,-2718.2048,48.5391, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 21, -2029.4968,156.4366,28.9498, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 22, -2408.7590,976.0934,45.4175, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 23, -2243.9629,-2560.6477,31.8841, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 24, -1676.6323,414.0262,6.9484, 			56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 25, 2202.2349,2474.3494,10.5258, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 26, 614.9333,1689.7418,6.6968, 			56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 27, -1328.8250,2677.2173,49.7665, 		56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 28, 70.3882,1218.6783,18.5165, 			56, 	0, 	0	);	//  Заправка
	SetPlayerMapIcon(playerid, 29, 2113.7390,920.1079,10.5255, 			56, 	0,	0 	);	//  Заправка
	SetPlayerMapIcon(playerid, 30, -1327.7218,2678.8723,50.0625,		56, 	0,	0 	);	//  Заправка
	SetPlayerMapIcon(playerid, 31, 653.2737,-565.6024,16.0574, 			56, 	0,	0 	);	//  Заправка
	SetPlayerMapIcon(playerid, 32, 1383.04785,465.23913,20.19624, 		56, 	0,	0 	);	//  Заправка
	// 33
	// 34
	SetPlayerMapIcon(playerid, 35, -2027.644409,-103.012840,38.921875,  	36, 0, 	0	);	// 	Автошкола
	SetPlayerMapIcon(playerid, 36, -1664.158569,-315.514678,14.143965, 		 5, 0, 	0	);	// 	Аэропорт СФ
	SetPlayerMapIcon(playerid, 37, 1960.944335,-2210.165039,108.642601, 	 5, 0, 	0	);	// 	Аэропорт ЛС
	SetPlayerMapIcon(playerid, 38, 1641.277709,1584.265991,10.820312, 	 	 5, 0, 	0	);	// 	Аэропорт ЛВ
	SetPlayerMapIcon(playerid, 39, 382.981628,-1895.057983,7.835937,  		60, 0, 	0	);	// 	Пейнтболл
	SetPlayerMapIcon(playerid, 40, -1546.839843,-438.929412,6.000000,  		53, 0, 	0	);	//  Гонки
	SetPlayerMapIcon(playerid, 41, 1551.146606,-1675.495361,15.720036,      30, 0,  0   );  // 	LSPD
	SetPlayerMapIcon(playerid, 42, -1024.114013,-687.062866,32.007812, 		11, 0, 	0	);	//  Водитель бензовоза

	SetPlayerMapIcon(playerid, 43, BizzInfo[0][bEntranceX], BizzInfo[0][bEntranceY], BizzInfo[0][bEntranceZ], 		6, 0, 	0	);	//  biz 0 ammo LS
	SetPlayerMapIcon(playerid, 44, BizzInfo[1][bEntranceX], BizzInfo[1][bEntranceY], BizzInfo[1][bEntranceZ], 		6, 0, 	0	);	//  biz 1 ammo LS2
	SetPlayerMapIcon(playerid, 45, BizzInfo[2][bEntranceX], BizzInfo[2][bEntranceY], BizzInfo[2][bEntranceZ], 		50, 0, 	0	);	//  biz 2 restaurant
	// 46
	SetPlayerMapIcon(playerid, 47, BizzInfo[4][bEntranceX], BizzInfo[4][bEntranceY], BizzInfo[4][bEntranceZ], 		52, 0, 	0	);	//  biz 4 bank LS
	SetPlayerMapIcon(playerid, 48, BizzInfo[5][bEntranceX], BizzInfo[5][bEntranceY], BizzInfo[5][bEntranceZ], 		48, 0, 	0	);	//  biz 5 jizzy
	SetPlayerMapIcon(playerid, 49, BizzInfo[6][bEntranceX], BizzInfo[6][bEntranceY], BizzInfo[6][bEntranceZ], 		49, 0, 	0	);	//  biz 6 misty
	SetPlayerMapIcon(playerid, 50, BizzInfo[7][bEntranceX], BizzInfo[7][bEntranceY], BizzInfo[7][bEntranceZ], 		6, 0, 	0	);	//  biz 7 ammo SF
	SetPlayerMapIcon(playerid, 51, BizzInfo[8][bEntranceX], BizzInfo[8][bEntranceY], BizzInfo[8][bEntranceZ], 		38, 0, 	0	);	//  biz 8 sexshop LS
	SetPlayerMapIcon(playerid, 52, BizzInfo[9][bEntranceX], BizzInfo[9][bEntranceY], BizzInfo[9][bEntranceZ], 		38, 0, 	0	);	//  biz 9 sexshop SF
	SetPlayerMapIcon(playerid, 53, BizzInfo[10][bEntranceX], BizzInfo[10][bEntranceY], BizzInfo[10][bEntranceZ], 		33, 0, 	0	);	//  biz 10 racing LS
	SetPlayerMapIcon(playerid, 54, BizzInfo[11][bEntranceX], BizzInfo[11][bEntranceY], BizzInfo[11][bEntranceZ], 		33, 0, 	0	);	//  biz 11 racing SF

	SetPlayerMapIcon(playerid, 55, BizzInfo[12][bEntranceX], BizzInfo[12][bEntranceY], BizzInfo[12][bEntranceZ], 		52, 0, 	0	);	//  biz 12 bank SF
	SetPlayerMapIcon(playerid, 56, BizzInfo[13][bEntranceX], BizzInfo[13][bEntranceY], BizzInfo[13][bEntranceZ], 		52, 0, 	0	);	//  biz 13 bank LV
	SetPlayerMapIcon(playerid, 57, BizzInfo[14][bEntranceX], BizzInfo[14][bEntranceY], BizzInfo[14][bEntranceZ], 		6, 0, 	0	);	//  biz 14 ammo FC
	SetPlayerMapIcon(playerid, 58, BizzInfo[15][bEntranceX], BizzInfo[15][bEntranceY], BizzInfo[15][bEntranceZ], 		6, 0, 	0	);	//  biz 15 ammo LV
	SetPlayerMapIcon(playerid, 59, BizzInfo[16][bEntranceX], BizzInfo[16][bEntranceY], BizzInfo[16][bEntranceZ], 		6, 0, 	0	);	//  biz 16 ammo LV2
	SetPlayerMapIcon(playerid, 60, BizzInfo[17][bEntranceX], BizzInfo[17][bEntranceY], BizzInfo[17][bEntranceZ], 		6, 0, 	0	);	//  biz 17 ammo AP
	SetPlayerMapIcon(playerid, 61, BizzInfo[18][bEntranceX], BizzInfo[18][bEntranceY], BizzInfo[18][bEntranceZ], 		44, 0, 	0	);	//  biz 18 casino 4 dragons
	SetPlayerMapIcon(playerid, 62, BizzInfo[19][bEntranceX], BizzInfo[19][bEntranceY], BizzInfo[19][bEntranceZ], 		25, 0, 	0	);	//  biz 19 casino caligula
	SetPlayerMapIcon(playerid, 63, BizzInfo[20][bEntranceX], BizzInfo[20][bEntranceY], BizzInfo[20][bEntranceZ], 		48, 0, 	0	);	//  biz 20 club
	SetPlayerMapIcon(playerid, 64, BizzInfo[21][bEntranceX], BizzInfo[21][bEntranceY], BizzInfo[21][bEntranceZ], 		49, 0, 	0	);	//  biz 21 road bar
	SetPlayerMapIcon(playerid, 65, BizzInfo[22][bEntranceX], BizzInfo[22][bEntranceY], BizzInfo[22][bEntranceZ], 		48, 0, 	0	);	//  biz 22 alhambra
	SetPlayerMapIcon(playerid, 66, BizzInfo[23][bEntranceX], BizzInfo[23][bEntranceY], BizzInfo[23][bEntranceZ], 		49, 0, 	0	);	//  biz 23 bar SF
	SetPlayerMapIcon(playerid, 67, BizzInfo[24][bEntranceX], BizzInfo[24][bEntranceY], BizzInfo[24][bEntranceZ], 		50, 0, 	0	);	//  jays dinner
	SetPlayerMapIcon(playerid, 68, BizzInfo[25][bEntranceX], BizzInfo[25][bEntranceY], BizzInfo[25][bEntranceZ], 		49, 0, 	0	);	//  biz 25 bar FC
	SetPlayerMapIcon(playerid, 69, BizzInfo[26][bEntranceX], BizzInfo[26][bEntranceY], BizzInfo[26][bEntranceZ], 		49, 0, 	0	);	//  biz 26 ten green bottles
	SetPlayerMapIcon(playerid, 70, BizzInfo[27][bEntranceX], BizzInfo[27][bEntranceY], BizzInfo[27][bEntranceZ], 		49, 0, 	0	);	//  biz 27 bar AP
	SetPlayerMapIcon(playerid, 71, BizzInfo[28][bEntranceX], BizzInfo[28][bEntranceY], BizzInfo[28][bEntranceZ], 		49, 0, 	0	);	//  biz 28 bar LV

	new house = GetPVarInt(playerid,"House");
 	if(house > -1 && house < sizeof(HouseInfo))
 	{
 		SaveHouse(house);
 		SetPlayerMapIcon(playerid, HOUSE_ICON, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey], HouseInfo[house][hEntrancez], 35, 0, 1 );
	}
	return 1;
}



stock IsAValidDonateCarid1(carid)
{
	switch(carid)
	{
	    case 400,401,404,405,410,412..414,418,419,421,422: return true;
	    case 426,436,439,440,445,448,458,461..463,466..468: return true;
	    case 474,475,478,479,481,482,489,491,492,496,500,505: return true;
	    case 507,509,510,516,517,518,521,526,527,529,534,536,540: return true;
		case 542,543,546,547,549,550,551,554,566,567,575,576,579: return true;
		case 580,581,585,586,589,600: return true;
	}
	return false;
}

stock IsAValidDonateCarid2(carid)
{
	switch(carid)
	{
	    case 402,409,411,415,424,429,434,451,477,480,494,495,502,503: return true;
	    case 506,522,535,541,555,558..562,565,568,587,602,603: return true;
	}
	return false;
}

stock IsAValidDonateCarid3(carid)
{
	switch(carid)
	{
	    case 403,408,423,427,428,433,455,457,470,471,483,485,490,504,545: return true;
	    case 508,514,515,524,525,528,531,539,572,573,574,583,588,596,599: return true;
	}
	return false;
}

stock IsAValidDonateCarid4(carid)
{
	switch(carid)
	{
	    case 444,556,557: return true;
	}
	return false;
}

stock KickCheater(playerid, code)
{
	new str[80];
	for(new i; i < 21; i++) SendClientMessage(playerid, COLOR_GREY, " ");

	format(str, 80, "Вы кикнуты по подозрению в использовании читов (#%d)", code);
	SendClientMessage(playerid, COLOR_RED, str);
	SendClientMessage(playerid, COLOR_RED, "Если Вы считаете, что произошла ошибка, сообщите об этом на наш форум, указав код чита");

	printf("[AC] %s[%d] кикнут античитом %d | %d lvl", GetName(playerid), playerid, code, GetPVarInt(playerid, "Level"));
	
	Kick_(playerid);
	return 1;
}


stock oSetPlayerPos(playerid, Float:ACx, Float:ACy, Float:ACz)
{
	GetPlayerPos(playerid,
		Dop_CheckPos[playerid][0],
		Dop_CheckPos[playerid][1],
		Dop_CheckPos[playerid][2]
	);
	
	Dop_CheckPos[playerid][3] = ACx;
	Dop_CheckPos[playerid][4] = ACy;
	Dop_CheckPos[playerid][5] = ACz;
	
	SpeedPos[playerid][0] = ACx;
	SpeedPos[playerid][1] = ACy;
	
	SetPlayerPos(playerid, ACx, ACy, ACz);
}


forward CheckCJRun(playerid);
public CheckCJRun(playerid)
{
	GivePVarInt(playerid, "StopTimerCjRun", 1);
	if(GetPVarInt(playerid, "StopTimerCjRun") > 29)
	{
		KillTimer(CheckCJRunTimer[playerid]);
		CheckCJRunTimer[playerid] = 0;
		DeletePVar(playerid, "StopTimerCjRun");
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
 	{
		new Skin = GetPlayerSkin(playerid);
	 	if(GetPlayerAnimationIndex(playerid) == 1231 && Skin != 0 && Skin != 5)
	 	{
	 		SendClientMessage(playerid, COLOR_RED, "Для игры на нашем сервере удалите чит программы");
			KillTimer(CheckCJRunTimer[playerid]);
			CheckCJRunTimer[playerid] = 0;
			KickCheater(playerid, CJRUN);
	 	}
 	}
	return 1;
}

stock ShowGPS(playerid)
{
	if(gPlayerCheckpointStatus[playerid] != 0 && gPlayerCheckpointStatus[playerid] != CHECKPOINT_GPS) return SendClientMessage(playerid, COLOR_WHITE, RGB_BLUE"GPS:"RGB_WHITE" В данный момент недоступно");
	return ShowPlayerDialog(playerid,116,DIALOG_STYLE_LIST, RGB_SERVER"GPS","\
	1) Основные места\n\
	2) Работы\n\
	3) Найти мой автомобиль\n\
	4) Клубы и бары\n\
	5) Аммуниции\n\
	6) Эвакуаторы\n\
	7) Банки\n\
	8) По работе\n\
	9) Отключить GPS\
	","Далее","Отмена");
}
stock ShowFixs(playerid)
{
	return ShowPlayerDialog(playerid,175,DIALOG_STYLE_LIST, RGB_SERVER"GPS » Эвакуаторы", "1) Los Santos\n2) San Fierro\n3) Las Venturas","Выбрать","Назад");
}
stock ShowGPSjobs(playerid)
{
	new str[512];
	strcat(str, "1) Проститутка\n");
	strcat(str, "2) Наркодиллер\n");
	strcat(str, "3) Угонщик\n");
	strcat(str, "4) Почтальон\n");
	strcat(str, "5) Продавец оружия\n");
	strcat(str, "6) Уборщик улиц (SF)\n");
	strcat(str, "7) Уборщик улиц (LS)\n");
	strcat(str, "8) Грузчик\n");
	strcat(str, "9) Свалка\n");
	strcat(str, "10) Развозщик пиццы\n");
	strcat(str, "11) Водитель бензовоза\n");
	strcat(str, "12) Рыболов (FC)\n");
	strcat(str, "13) Рыболов (SF)\n");
	strcat(str, "14) Завод продуктов\n");
	strcat(str, "15) Добыча нефти\n");
	strcat(str, "16) Карьер\n");
	strcat(str, "17) Гос. Работы");
	return ShowPlayerDialog(playerid,117,DIALOG_STYLE_LIST, RGB_SERVER"GPS » Работы", str ,"Выбрать","Назад");
}
stock ShowPlaces(playerid)
{
	new str[600];
	strcat(str, "1) Департамент полиции\n");
	strcat(str, "2) Городская мэрия\n");
	strcat(str, "3) Автошкола\n");
	strcat(str, "4) Регистрация на гонки\n");
	strcat(str, "5) Банк\n");
	strcat(str, "6) Магазин 24/7\n");
	strcat(str, "7) Магазин одежды LS\n");
	strcat(str, "8) Магазин одежды SF\n");
	strcat(str, "9) Магазин одежды LV\n");
	strcat(str, "10) Спортивный зал\n");
	strcat(str, "11) Наркопритон\n");
	strcat(str, "12) Клуб 'Джиззи'\n");
	strcat(str, "13) Клуб 'Алхамбра'\n");
	strcat(str, "14) Клуб 'Pig Pen'\n");
	strcat(str, "15) Магазин очков\n");
	strcat(str, "16) Магазин шляп\n");
	strcat(str, "17) Регистрация на пейнтболл\n");
	strcat(str, "18) Продуктовый завод\n");
	strcat(str, "19) Проведение дуэлей\n");
	strcat(str, "20) Проведение гонок\n");
	strcat(str, "21) ЗАГС\n");
	strcat(str, "22) Регистрация на ТДМ\n");
	return ShowPlayerDialog(playerid,118,DIALOG_STYLE_LIST, RGB_SERVER"GPS » Основные места", str ,"Выбрать","Назад");
}
stock ShowClubsAndBars(playerid)
{
	new str[290];
	strcat(str, "1) Ресторан\n");
	strcat(str, "2) Jizzy\n");
	strcat(str, "3) Misty\n");
	strcat(str, "4) Casino 4 Dragons\n");
	strcat(str, "5) Casino Caligula\n");
	strcat(str, "6) Клуб\n");
	strcat(str, "7) Придорожное кафэ\n");
	strcat(str, "8) Alhambra\n");
	strcat(str, "9) Ten Green Bottles\n");
	strcat(str, "10) Jays Dinner\n");
	strcat(str, "11) Бар (FC)\n");
	strcat(str, "12) Бар (SF)\n");
	strcat(str, "13) Бар (AP)\n");
	strcat(str, "14) Бар (LV)");
	return ShowPlayerDialog(playerid,119,DIALOG_STYLE_LIST, RGB_SERVER"GPS » Клубы и бары", str ,"Выбрать","Назад");
}
stock ShowBanks(playerid)
{
	new str[290];
	strcat(str, "1) Банк LS\n");
	strcat(str, "2) Банк SF\n");
	strcat(str, "3) Банк LV");
	return ShowPlayerDialog(playerid,113,DIALOG_STYLE_LIST, RGB_SERVER"GPS » Банки", str ,"Выбрать","Назад");
}
stock ShowAmmos(playerid)
{
	new str[290];
	strcat(str, "1) Аммуниция LS\n");
	strcat(str, "2) Аммуниция LS (2)\n");
	strcat(str, "3) Аммуниция SF\n");
	strcat(str, "4) Аммуниция FC\n");
	strcat(str, "5) Аммуниция LV\n");
	strcat(str, "6) Аммуниция LV (2)\n");
	strcat(str, "7) Аммуниция AP");
	return ShowPlayerDialog(playerid,114,DIALOG_STYLE_LIST, RGB_SERVER"GPS » Аммуниции", str ,"Выбрать","Назад");
}
stock ShowAboutJob(playerid)
{
	new str[290];
	strcat(str, "1) Автобусная база\n");
	strcat(str, "2) База таксистов");
	return ShowPlayerDialog(playerid, 115, DIALOG_STYLE_LIST, RGB_SERVER"GPS » По работе", str ,"Выбрать","Назад");
}


forward ServeiceDel(playerid);
public ServeiceDel(playerid)
{
	DeletePVar(playerid, "ServeiceDelay");
	return 1;
}
stock SendHelpersMessage(color, const string[])
{
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || GetPVarInt(i, "Helper") < 1) continue;
	    SendClientMessage(i, color, string);
	}
	return 1;
}

stock Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	format(string, 100, "%d : %02d : %02d", hours, mins, secs);
	return string;
}






forward PeintTim(min);
public PeintTim(min)
{
	if(PaintOpenReg == true)
	{
        if(min == 4)
		{
			SendClientMessageToAll(COLOR_INFO, "Начало пейнтболла через 4 минуты, регистрация у колеса обозрения в Los Santos");
			PeintTimer = SetTimerEx("PeintTim", 2*1000*60, 0, "d", 2);
		}
        else if(min == 2)
		{
			SendClientMessageToAll(COLOR_INFO, "Начало пейнтболла через 2 минуты, регистрация у колеса обозрения в Los Santos");
			PeintTimer = SetTimerEx("PeintTim", 2*1000*60, 0, "d", 0);
		}
        else if(min == 0)
		{
            PeintMap = random(4);
            switch(PeintMap)
            {
                case 0:  SendClientMessageToAll(COLOR_INFO, "Пейнтболл начался! Карта: Zero RC, Окончание матча через 10 минут");
                case 1:  SendClientMessageToAll(COLOR_INFO, "Пейнтболл начался! Карта: K.A.C.C, Окончание матча через 10 минут");
                case 2:  SendClientMessageToAll(COLOR_INFO, "Пейнтболл начался! Карта: Ферма, Окончание матча через 10 минут");
				default: SendClientMessageToAll(COLOR_INFO, "Пейнтболл начался! Карта: Деревня, Окончание матча через 10 минут");
			}
			StartPeintBall();
		}
	}
}


stock StartPeintBall()
{
    PaintOpenReg = false;
	SetTimer("PeintBallEnd", 10*1000*60, 0);
	for(new i; i < 15; i ++)
	{
	    if(PaintList[i][PlayerID] != -1)
	    {
	        if(GetPVarInt(PaintList[i][PlayerID], "RegOnPaint") == 1)
	        {

				new randspawn = GetPVarInt(PaintList[i][PlayerID], "OnPaint");
           		switch(PeintMap)
				{
				    case 0:
				    {
						oSetPlayerPos(PaintList[i][PlayerID], SpawnPeint[randspawn][0], SpawnPeint[randspawn][1], SpawnPeint[randspawn][2]);
						SetPlayerFacingAngle(PaintList[i][PlayerID], SpawnPeint[randspawn][3]);
						SetPlayerInterior(PaintList[i][PlayerID], 10);
					}
					case 1:
				    {
						oSetPlayerPos(PaintList[i][PlayerID], FactoryPeint[randspawn][0], FactoryPeint[randspawn][1], FactoryPeint[randspawn][2]);
						SetPlayerFacingAngle(PaintList[i][PlayerID], FactoryPeint[randspawn][3]);
						SetPlayerInterior(PaintList[i][PlayerID], 0);
					}
					case 2:
				    {
						oSetPlayerPos(PaintList[i][PlayerID], FarmPeint[randspawn][0], FarmPeint[randspawn][1], FarmPeint[randspawn][2]);
						SetPlayerFacingAngle(PaintList[i][PlayerID], FarmPeint[randspawn][3]);
						SetPlayerInterior(PaintList[i][PlayerID], 0);
					}
					default:
				    {
						oSetPlayerPos(PaintList[i][PlayerID], VilPeint[randspawn][0], VilPeint[randspawn][1], VilPeint[randspawn][2]);
						SetPlayerFacingAngle(PaintList[i][PlayerID], VilPeint[randspawn][3]);
						SetPlayerInterior(PaintList[i][PlayerID], 0);
					}
				}

				ResetPlayerWeaponsUAC(PaintList[i][PlayerID]);
 				GivePlayerWeaponUAC(PaintList[i][PlayerID], 24, 999);
				GivePlayerWeaponUAC(PaintList[i][PlayerID], 25, 999);
				GivePlayerWeaponUAC(PaintList[i][PlayerID], 31, 999);
				GivePlayerWeaponUAC(PaintList[i][PlayerID], 34, 999);
				GivePlayerWeaponUAC(PaintList[i][PlayerID], 29, 999);

				SetPlayerVirtualWorld(PaintList[i][PlayerID], 2);
				TogglePlayerControllable(PaintList[i][PlayerID], 0);

    			SetPlayerHealthUAC(PaintList[i][PlayerID], 100.0);
        		SetPlayerArmour(PaintList[i][PlayerID], 0.0);
        		
				SetPVarInt(PaintList[i][PlayerID], "CantGiveWeapon", 1);

	        }
	    }
	}
	PeintCount = 10;
	StartCountPaint();
	return 1;
}

forward StartCountPaint();
public StartCountPaint()
{
	PeintCount --;
	if(PeintCount > 0)
	{
	    SetTimer("StartCountPaint", 1000, 0);
		new st[15];
		format(st, 15, "~g~%d", PeintCount);
		for(new i; i < 15; i++)
		{
		    if(PaintList[i][PlayerID] != -1)
		    {
		        if(GetPVarInt(PaintList[i][PlayerID], "RegOnPaint") == 1)
		        {
		        	GameTextForPlayer(PaintList[i][PlayerID], st, 1100, 6);
		        	PlayerPlaySound(PaintList[i][PlayerID], 1056, 0.0, 0.0, 0.0);
		        }
		    }
		}
	}
	else
	{
		for(new i; i < 15; i++)
		{
		    if(PaintList[i][PlayerID] != -1)
		    {
		        if(GetPVarInt(PaintList[i][PlayerID], "RegOnPaint") == 1)
		        {
		        	GameTextForPlayer(PaintList[i][PlayerID], "~g~GO GO GO!!!", 3000, 6);
		        	TogglePlayerControllable(PaintList[i][PlayerID], 1);
		        	PlayerPlaySound(PaintList[i][PlayerID], 1057, 0.0, 0.0, 0.0);
		        	PeintCount = 10;
		        }
		    }
		}
	}
	return 1;
}
forward PeintBallEnd();
public PeintBallEnd()
{
	SendClientMessageToAll(COLOR_INFO, "Пейнтболл закончен. Просмотреть список участников - /pbinfo");
	for(new i; i < 15; i++)
	{
		if(PaintList[i][PlayerID] != -1)
		{
			if(GetPVarInt(PaintList[i][PlayerID], "RegOnPaint") == 1)
			{
				oSetPlayerPos(PaintList[i][PlayerID], -2168.424316, 643.964355, 1052.375000);
				ResetPlayerWeaponsUAC(PaintList[i][PlayerID]);
				SetPlayerVirtualWorld(PaintList[i][PlayerID], i);
				SetPlayerInterior(PaintList[i][PlayerID], 1);
				DeletePVar(PaintList[i][PlayerID], "RegOnPaint");
				DeletePVar(PaintList[i][PlayerID], "OnPaint");
				DeletePVar(PaintList[i][PlayerID], "CantGiveWeapon");
			}
		}
	}
    new point[15];
	for(new m; m < 15; m ++)
	{
		for(new i; i < 15; i ++)
		{
			if(PaintList[i][DamagePoint] >= point[m] && PaintList[i][Sortirovan] != 1)
			{
			    point[m] = PaintList[i][DamagePoint];
				mesto[m] = i;
			}
		}
		PaintList[mesto[m]][Sortirovan] = 1;
	}


	new priz = PeintMoney/2;
	new str[64];
	if(PaintList[mesto[0]][PlayerID] != -1)
	{
		format(str, 64, "Вы заняли 1 место и выиграли %d$", priz);
		SendClientMessage(PaintList[mesto[0]][PlayerID], COLOR_WHITE, str);
	    PeintMoney -= priz;
		GivePlayerPCash(PaintList[mesto[0]][PlayerID], priz, "pb priz");
		
		GiveAchievement(PaintList[mesto[0]][PlayerID], 3, 1);
		GiveAchievement(PaintList[mesto[0]][PlayerID], 9, priz);
	}
	if(PaintList[mesto[1]][PlayerID] != -1)
	{
		priz = PeintMoney/2;
		format(str, 64, "Вы заняли 2 место и выиграли %d$", priz);
		SendClientMessage(PaintList[mesto[1]][PlayerID], COLOR_WHITE, str);
		PeintMoney -= priz;
		GivePlayerPCash(PaintList[mesto[1]][PlayerID], priz, "pb priz");
		
		GiveAchievement(PaintList[mesto[1]][PlayerID], 9, priz);
	}
	if(PaintList[mesto[2]][PlayerID] != -1)
	{
		priz = PeintMoney;
		format(str, 64, "Вы заняли 3 место и выиграли %d$", priz);
		SendClientMessage(PaintList[mesto[2]][PlayerID], COLOR_WHITE, str);
		GivePlayerPCash(PaintList[mesto[2]][PlayerID], priz, "pb priz");
		
		GiveAchievement(PaintList[mesto[2]][PlayerID], 9, priz);
		PeintMoney = 0;
	}
	return 1;
}
// проверка на тюнинг
stock IsValidTuning(model, component)
{
	switch(model)
	{
		case 400:
		{
			switch(component)
			{
				case 1020, 1021, 1019, 1018, 1013, 1024, 1009, 1008, 1010, 1082, 1085, 1096, 1097, 1098, 1025, 1074, 1081, 1078, 1076, 1086, 1087: return 1;
			}
			return 0;
		}
		case 401:
		{
			switch(component)
			{
				case 1005,1004,1143,1145,1020,1019,1013,1009,1008,1010,1006,1001,1003,1007,1082,1085,1096,1097,1086,1076,1098,1025,1074,1081,1078,1087: return 1;
			}
			return 0;
		}
		case 402:
		{
			switch(component)
			{
				case 1009,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 404:
		{
			switch(component)
			{
				case 1020,1021,1019,1013,1009,1008,1010,1002,1016,1000,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 405:
		{
			switch(component)
			{
				case 1020,1021,1019,1018,1009,1008,1010,1001,1014,1023,1000,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 409:
		{
			switch(component)
			{
				case 1009,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 410:
		{
			switch(component)
			{
				case 1020,1021,1019,1013,1024,1009,1008,1010,1001,1023,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 411:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 412:
		{
			switch(component)
			{
				case 1078,1076,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 415:
		{
			switch(component)
			{
				case 1019,1018,1009,1008,1010,1001,1023,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 418:
		{
			switch(component)
			{
				case 1020,1021,1009,1008,1010,1006,1002,1016,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 419:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 420:
		{
			switch(component)
			{
				case 1005, 1004,1021,1019,1009,1008,1010,1001,1003,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 421:
		{
			switch(component)
			{
				case 1020,1021,1019,1018,1009,1008,1010,1014,1023,1016,1000,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 422:
		{
			switch(component)
			{
				case 1020,1021,1019,1013,1009,1008,1010,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 426:
		{
			switch(component)
			{
				case 1005,1004,1021,1019,1009,1008,1010,1006,1001,1003,1082,1085,1096,1097,1098,1025,1074,1081,1078,1086,1076,1087: return 1;
			}
			return 0;
		}
		case 429:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 436:
		{
			switch(component)
			{
				case 1020,1021,1019,1022,1013,1009,1010,1008,1006,1001,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 438:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 439:
		{
			switch(component)
			{
				case 1143,1145,1013,1009,1008,1010,1001,1023,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 442:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 445:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 451:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 458:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 466:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1081,1074,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 467:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 474:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1098,1097,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 475:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 477:
		{
			switch(component)
			{
				case 1020,1021,1019,1018,1009,1010,1008,1006,1007,1082,1085,1096,1098,1097,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 478:
		{
			switch(component)
			{
				case 1025, 1087, 1086, 1076, 1078, 1074, 1081, 1005, 1004, 1012, 1020, 1021, 1022, 1013, 1024, 1009, 1008, 1010, 1082, 1085, 1096, 1097, 1098: return 1;
			}
			return 0;
		}
		case 479:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087,1086: return 1;
			}
			return 0;
		}
		case 480:
		{
			switch(component)
			{
				case 1009,1010,1008,1087,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076: return 1;
			}
			return 0;
		}
		case 489:
		{
			switch(component)
			{
				case 1005,1004,1020,1019,1018,1013,1024,1009,1008,1010,1006,1002,1016,1000,1082,1085,1096,1086,1087,1097,1098,1025,1074,1081,1078,1076: return 1;
			}
			return 0;
		}
		case 491:
		{
			switch(component)
			{
				case 1143,1145,1020,1021,1019,1018,1009,1010,1008,1014,1023,1003,1007,1082,1085,1096,1097,1025,1098,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 492:
		{
			switch(component)
			{
				case 1005,1004,1009,1008,1010,1006,1016,1000,1086,1087,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076: return 1;
			}
			return 0;
		}
		case 496:
		{
			switch(component)
			{
				case 1011,1143,1020,1019,1009,1008,1010,1006,1001,1002,1023,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 500:
		{
			switch(component)
			{
				case 1020,1021,1019,1024,1013,1009,1008,1010,1086,1087,1082,1096,1085,1097,1025,1098,1074,1081,1078,1076: return 1;
			}
			return 0;
		}
		case 506:
		{
			switch(component)
			{
				case 1009,1082,1085,1096,1097,1025,1098,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 507:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1096,1085,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 516:
		{
			switch(component)
			{
				case 1004,1020,1021,1019,1018,1009,1010,1008,1002,1015,1016,1000,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 517:
		{
			switch(component)
			{
				case 1143,1145,1020,1019,1018,1009,1008,1010,1002,1023,1003,1016,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 518:
		{
			switch(component)
			{
				case 1005,1143,1145,1020,1018,1013,1009,1008,1010,1006,1001,1023,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 526:
		{
			switch(component)
			{
				case 1009,1010,1008,1082,1085,1096,1087,1086,1097,1025,1098,1074,1081,1078,1076: return 1;
			}
			return 0;
		}
		case 527:
		{
			switch(component)
			{
				case 1020,1018,1021,1009,1010,1008,1001,1014,1015,1007,1082,1085,1097,1096,1098,1025,1074,1081,1076,1078,1086,1087: return 1;
			}
			return 0;
		}
		case 529:
		{
			switch(component)
			{
				case 1012,1011,1020,1018,1019,1009,1010,1008,1006,1001,1023,1003,1007,1082,1085,1097,1096,1086,1098,1025,1074,1081,1076,1078,1087: return 1;
			}
			return 0;
		}
		case 533:
		{
			switch(component)
			{
				case 1009,1010,1008,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 534:
		{
			switch(component)
			{
				case 1126,1127,1179,1185,1100,1123,1125,1180,1178,1122,1106,1077,1083,1078,1076,1084,1079,1075,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 535:
		{
			switch(component)
			{
				case 1113,1114,1117,1115,1116,1109,1110,1118,1119,1077,1083,1078,1076,1084,1079,1075,1097,1098,1086,1087,1009,1010,1008: return 1;
			}
			return 0;
		}
		case 536:
		{
			switch(component)
			{
			    case 1128,1103,1184,1183,1182,1181,1104,1105,1108,1077,1083,1078,1076,1084,1079,1075,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
		}
		case 540:
		{
			switch(component)
			{
				case 1019,1024,1009,1008,1010,1006,1001,1023,1007,1082,1085,1096,1097,1098,1025,1074,1081,1076,1086,1087,1004,1143,1145,1020,
					 1018,1078: return 1;
			}
			return 0;
		}
		case 541:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 542:
		{
			switch(component)
			{
				case 1145,1020,1021,1019,1018,1009,1008,1010,1014,1015,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 545:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 546:
		{
			switch(component)
			{
				case 1004,1143,1145,1019,1018,1024,1010,1008,1009,1006,1001,1002,1023,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 547:
		{
			switch(component)
			{
				case 1143,1020,1021,1019,1018,1009,1008,1010,1016,1003,1000,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 549:
		{
			switch(component)
			{
				case 1012,1011,1143,1145,1020,1019,1018,1009,1008,1010,1001,1023,1003,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 550:
		{
			switch(component)
			{
				case 1005,1004,1143,1145,1020,1019,1018,1009,1008,1010,1006,1001,1023,1003,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 551:
		{
			switch(component)
			{
				case 1005,1020,1021,1019,1018,1009,1008,1010,1006,1002,1023,1016,1003,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 555:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 558:
		{
			switch(component)
			{
				case 1092,1089,1166,1165,1168,1167,1088,1091,1164,1163,1090,1093,1079,1075,1074,1081,1080,1073,1077,1083,1082,1085,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 559:
		{
			switch(component)
			{
				case 1065,1066,1160,1173,1159,1161,1067,1068,1162,1158,1069,1070,1079,1075,1074,1081,1080,1073,1077,1083,1082,1085,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 560:
		{
			switch(component)
			{
				case 1009,1008,1010,1087,1086,1079,1075,1074,1081,1080,1073,1077,1083,1082,1085,1026,1031,1138,1139,1032,1033,1141,1140,1169,1170,1028,1029: return 1;
			}
			return 0;
		}
		case 561:
		{
			switch(component)
			{
				case 1064,1059,1155,1157,1154,1156,1055,1061,1058,1060,1056,1057,1079,1075,1074,1081,1080,1073,1077,1083,1082,1085,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 562:
		{
			switch(component)
			{
				case 1034,1037,1171,1172,1149,1148,1038,1035,1147,1146,1036,1039,1079,1075,1074,1081,1080,1073,1077,1083,1082,1085,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 565:
		{
			switch(component)
			{
				case 1046,1045,1153,1152,1150,1151,1054,1053,1049,1050,1047,1048,1079,1075,1074,1081,1080,1073,1077,1083,1082,1085,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 566:
		{
			switch(component)
			{
				case 1078,1076,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 567:
		{
			switch(component)
			{
				case 1130,1131,1189,1188,1187,1186,1129,1132,1133,1077,1083,1078,1076,1084,1079,1075,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 575:
		{
			switch(component)
			{
				case 1044,1043,1174,1175,1176,1177,1042,1077,1083,1078,1076,1084,1079,1075,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 576:
		{
			switch(component)
			{
				case 1136,1135,1191,1190,1192,1193,1134,1077,1083,1078,1076,1084,1079,1075,1097,1098,1086,1087,1009,1008,1010: return 1;
			}
			return 0;
		}
		case 579:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 580:
		{
			switch(component)
			{
				case 1020,1018,1009,1008,1010,1006,1001,1023,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1087: return 1;
			}
			return 0;
		}
		case 585:
		{
			switch(component)
			{
				case 1087,1086,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1007,1001,1023,1003,1006,1009,1008,1010,1013,1020,1019,1018,1143,1145: return 1;
			}
			return 0;
		}
		case 587:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 589:
		{
			switch(component)
			{
				case 1005,1004,1145,1020,1018,1013,1024,1009,1008,1010,1006,1016,1000,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 600:
		{
			switch(component)
			{
				case 1005,1004,1020,1022,1018,1013,1009,1008,1010,1006,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 602:
		{
			switch(component)
			{
				case 1009,1008,1010,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
		case 603:
		{
			switch(component)
			{
				case 1143,1145,1020,1019,1018,1024,1009,1008,1010,1006,1001,1023,1007,1082,1085,1096,1097,1098,1025,1074,1081,1078,1076,1086,1087: return 1;
			}
			return 0;
		}
	}
	return 0;
}


// ================ ЗАКРЫТИЕ ВОРОТ =============================================

forward FactoryCloseSlagb();
public FactoryCloseSlagb()
{
    slagbclose = 0;
	MoveObject(slagbfactory, -2124.00000000,-81.09999847,35.20000076, 0.06, 0.00000000,269.24975586,0.00000000);
	return 1;
}

forward LicClose();
public LicClose()
{
	Licgateaction = 0;
    MoveObject(LICENZERSrotate,-2043.6999512,-80.4000015,35.0000000, 0.06, 0.0000000,269.5000000,0.0000000);
    return 1;
}

forward Hellclose2();
public Hellclose2()
{
	HELLgateaction[1] = 0;
    MoveObject(HALLgate[1], 1418.04455566,-1840.04785156,15.11677742, 10.0); // закрыл
    return 1;
}
forward Hellclose1();
public Hellclose1()
{
	HELLgateaction[0] = 0;
    MoveObject(HALLgate[0], 1544.05834961,-1840.02307129,14.71682930, 10.0); // закрыл
    return 1;
}

forward Angar3close();
public Angar3close()
{
	Angaraction[2] = 0;
    MoveObject(ARMYangar[2], 2774.29541016,-2493.99267578,15.20078659, 10.0); // закрыл
    return 1;
}
forward Angar2close();
public Angar2close()
{
	Angaraction[1] = 0;
    MoveObject(ARMYangar[1], 2774.33105469,-2455.84106445,15.17098427, 10.0); // закрыл
    return 1;
}
forward Angar1close();
public Angar1close()
{
	Angaraction[0] = 0;
    MoveObject(ARMYangar[0], 2774.33105469,-2417.80571289,15.18078423, 10.0); // закрыл
    return 1;
}
forward Armygateclose();
public Armygateclose()
{
	Armygateaction = 0;
    MoveObject(ARMYgate, 2720.03222656,-2405.21191406,15.70587540, 10.0); // закрыл
    return 1;
}



forward FBIgateclose1();
public FBIgateclose1()
{
	FBIgateaction[0] = 0;
    MoveObject(FBIgate[0],2294.0000000,2498.6999500,4.5000000, 10.0); // close
    return 1;
}
forward FBIgateclose2();
public FBIgateclose2()
{
	FBIgateaction[1] = 0;
    MoveObject(FBIgate[1], 2335.1001000,2443.5000000,7.0000000, 10.0); // close
    return 1;
}
forward FBIcloserotate();
public FBIcloserotate()
{
    FBIrotaction = 0;
    MoveObject(FBIrotate, 2238.1999500,2450.5000000,10.6000000, 0.06, 0.0000000,269.7500000,270.0000000);
    return 1;
}
forward CNNcloserotate();
public CNNcloserotate()
{
    CNNrotaction = 0;
    MoveObject(CNNrotate, 1803.1999512 ,-1277.8000488, 13.4, 0.06, 0.0000000,270.0000000,34.5000305);
    return 1;
}
forward LSPDcloserot();
public LSPDcloserot()
{
	LSPDrotateaction = 0;
    MoveObject(LSPDrotate, 1544.69360352,-1630.80761719,13.07956696, 0.01, 0.00000000,90.00000000,90.00000000); // Закрыл
    return 1;
}
forward LSPDclosegat();
public LSPDclosegat()
{
	LSPDgateaction = 0;
    MoveObject(LSPDgate, 1588.39440918,-1638.14953613,14.68334770, 10.0); // закрыл
    return 1;
}
forward LSPDclosedoor();
public LSPDclosedoor()
{
	LSPDdooraction = 0;
    MoveObject(LSPDdoor, 247.24900818,72.40412903,1005.27746582, 4.0); // закрыл
    return 1;
}
// ====================== ВОРОТА КОНЕЦ =========================================
forward HideWelcomeText(playerid);
public HideWelcomeText(playerid)
{
    TextDrawHideForPlayer(playerid, WelcomeText);
	return 1;
}


stock VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

stock SetVehicleHealthEx(vehicleid, Float:health) // только когда ремонт тачки до 1000 хп
{
    if(health == 1000.0) HealthChanged[vehicleid] = true;
   	SetVehicleHealth(vehicleid, health);
}
stock RepairVehicleEx(vehicleid)
{
    HealthChanged[vehicleid] = true;
	RepairVehicle(vehicleid);
}

stock VehicleUpdateHealth(vehicleid, Float:newhealth, Float:oldhealth)
{
	if(newhealth == 1000.0 && 0.0 < oldhealth < 1000.0 )
 	{
		if(HealthChanged[vehicleid] == false)
		{
	   		if(VehicleToPoint(50.0, vehicleid, -1787.25, 1202.00, 25.84) ||
			   VehicleToPoint(50.0, vehicleid, 720.10, -470.93, 17.07) ||
			   VehicleToPoint(50.0, vehicleid, -1420.21, 2599.45, 56.43) ||
			   VehicleToPoint(50.0, vehicleid, -100.16, 1100.79, 20.34) ||
			   VehicleToPoint(50.0, vehicleid, 2078.44, -1831.44, 14.13) ||
			   VehicleToPoint(50.0, vehicleid, -2426.89, 1036.61, 51.14) ||
			   VehicleToPoint(50.0, vehicleid, 1957.96, 2161.96, 11.56) ||
			   VehicleToPoint(50.0, vehicleid, 488.29, -1724.85, 12.01) ||
			   VehicleToPoint(50.0, vehicleid, 1025.08, -1037.28, 32.28) ||
			   VehicleToPoint(50.0, vehicleid, 2393.70, 1472.80, 11.42) ||
			   VehicleToPoint(50.0, vehicleid, -1904.97, 268.51, 41.04) ||
			   VehicleToPoint(60.0, vehicleid, 616.783081,-74.815002,997.729553) ||
		       VehicleToPoint(60.0, vehicleid, 617.535949,-1.99,1001.004455) ||
			   VehicleToPoint(60.0, vehicleid, 615.0000, -124.000000, 997.0000)) return 1;

			for(new i; i < MAX_PLAYERS; i ++)
			{
			    if(!IsPlayerConnected(i)) continue;
			    if(GetPVarInt(i, "AdminLevel") > 0) return 1;
			    if(GetPlayerVehicleID(i) != vehicleid) continue;
				if(GetPlayerVehicleSeat(i) != 0) continue;

				SetVehicleToRespawn(vehicleid);
				SendClientMessage(i, COLOR_RED, "Использование читов запрещено правилами сервера (code: #"REPAIRVEHICLE")");
				return 1;
			}
		}
		HealthChanged[vehicleid] = false;
  	}
  	else if(newhealth < 400.0)
  	{
  	    SetVehicleHealth(vehicleid, 400.0);

  	    new engine, lig, bonnet, boot, objective, alarm, door;
		GetVehicleParamsEx(vehicleid, engine, lig, alarm, door, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, VEHICLE_PARAMS_OFF, lig, alarm, door, bonnet, boot, objective);
		for(new i; i < MAX_PLAYERS; i ++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(GetPlayerVehicleID(i) != vehicleid) continue;
		    if(GetPlayerVehicleSeat(i) != 0) continue;

		    GameTextForPlayer(i, "~r~engine has broken", 3000, 4);
		    UpdateCarSystemTextForPlayer(i);
		    break;
  	    }
  	}
   	return 1;
}


stock ReturnFractionID(playerid)
{
	switch(GetPVarInt(playerid, "Team"))
	{
	    case 5: return 0;
	    case 6: return 1;
	    case 10: return 2;
	    case 12: return 3;
	    case 13: return 4;
	    case 14: return 5;
	    case 15: return 6;
	    case 16: return 7;
	    case 17: return 8;
	    case 18: return 9;
	    default: return 255;
	}
	return 255;
}

stock LoadFactionsCars()
{
	new DataString[64], Query[512], fid = 0;
    mysql_query("SELECT * FROM `"Gang_LCNCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 1;
	mysql_query("SELECT * FROM `"Gang_YakuzaCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 2;
	mysql_query("SELECT * FROM `"Gang_BikersCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 3;
	mysql_query("SELECT * FROM `"Gang_RMCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 4;
	mysql_query("SELECT * FROM `"Gang_BallasCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 5;
	mysql_query("SELECT * FROM `"Gang_GroveCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 6;
	mysql_query("SELECT * FROM `"Gang_VagosCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 7;
	mysql_query("SELECT * FROM `"Gang_CoronosCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 8;
	mysql_query("SELECT * FROM `"Gang_RifaCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();

	fid = 9;
	mysql_query("SELECT * FROM `"Gang_KolhozCarsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("CarSpawnX", DataString); GangCarInfo[fid][id][gCarSpawnX] = floatstr(DataString);
			mysql_fetch_field("CarSpawnY", DataString); GangCarInfo[fid][id][gCarSpawnY] = floatstr(DataString);
			mysql_fetch_field("CarSpawnZ", DataString); GangCarInfo[fid][id][gCarSpawnZ] = floatstr(DataString);
			mysql_fetch_field("CarSpawnA", DataString); GangCarInfo[fid][id][gCarSpawnA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 	GangCarInfo[fid][id][gCarModel] = strval(DataString);
			mysql_fetch_field("CarColor1", DataString); GangCarInfo[fid][id][gCarColor1] = strval(DataString);
			mysql_fetch_field("CarColor2", DataString); GangCarInfo[fid][id][gCarColor2] = strval(DataString);
			mysql_fetch_field("RespDelay", DataString); GangCarInfo[fid][id][gRespDelay] = strval(DataString);
			mysql_fetch_field("CarRank", DataString); GangCarInfo[fid][id][gCarRank] = strval(DataString);

			GangCarInfo[fid][id][gVehId] = CreateVehicle(GangCarInfo[fid][id][gCarModel],GangCarInfo[fid][id][gCarSpawnX],GangCarInfo[fid][id][gCarSpawnY],GangCarInfo[fid][id][gCarSpawnZ],GangCarInfo[fid][id][gCarSpawnA],GangCarInfo[fid][id][gCarColor1],GangCarInfo[fid][id][gCarColor2],GangCarInfo[fid][id][gRespDelay]);
		}
	}
	mysql_free_result();
	
	UpdateRifaWorkCars();
	print("Fractions cars loaded");
	return 1;
}


stock LoadFactionsSpawns()
{
	new DataString[64], Query[512];
	mysql_query("SELECT * FROM `"Gang_SpawnsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("SpawnX", DataString); GangSpawn[id][gSpawnX] = floatstr(DataString);
			mysql_fetch_field("SpawnY", DataString); GangSpawn[id][gSpawnY] = floatstr(DataString);
			mysql_fetch_field("SpawnZ", DataString); GangSpawn[id][gSpawnZ] = floatstr(DataString);
			mysql_fetch_field("SpawnA", DataString); GangSpawn[id][gSpawnA] = floatstr(DataString);
			mysql_fetch_field("Interior", DataString); GangSpawn[id][gInterior] = strval(DataString);
			mysql_fetch_field("VirtWorld", DataString); GangSpawn[id][gVirtWorld] = strval(DataString);
		}
	}
	mysql_free_result();
	print("Fractions spawns loaded");
	return 1;
}

stock SaveFractionSpawn(fraction)
{
	new query[512], src[64];
    format(query,sizeof(query),"UPDATE `"Gang_SpawnsTable"` SET ");
	format(src,sizeof(src),"`SpawnX` = '%f',", GangSpawn[fraction][gSpawnX]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`SpawnY` = '%f',", GangSpawn[fraction][gSpawnY]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`SpawnZ` = '%f',", GangSpawn[fraction][gSpawnZ]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`SpawnA` = '%f',", GangSpawn[fraction][gSpawnA]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Interior` = %d,", GangSpawn[fraction][gInterior]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`VirtWorld` = %d ", GangSpawn[fraction][gVirtWorld]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"WHERE id = %d LIMIT 1",fraction); strcat(query,src,sizeof(query));
	mysql_query(query);
}

stock SaveFractionCar(fraction, carid)
{
	new TableName[24];
	switch(fraction)
	{
	    case 0: TableName = Gang_LCNCarsTable;
	    case 1: TableName = Gang_YakuzaCarsTable;
	    case 2: TableName = Gang_BikersCarsTable;
	    case 3: TableName = Gang_RMCarsTable;
	    case 4: TableName = Gang_BallasCarsTable;
	    case 5: TableName = Gang_GroveCarsTable;
	    case 6: TableName = Gang_VagosCarsTable;
	    case 7: TableName = Gang_CoronosCarsTable;
	    case 8: TableName = Gang_RifaCarsTable;
	    case 9: TableName = Gang_KolhozCarsTable;
	}
	new query[512], src[64];
    format(query,sizeof(query),"UPDATE `%s` SET ",TableName);
	format(src,sizeof(src),"`CarSpawnX` = '%f',", GangCarInfo[fraction][carid][gCarSpawnX]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarSpawnY` = '%f',", GangCarInfo[fraction][carid][gCarSpawnY]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarSpawnZ` = '%f',", GangCarInfo[fraction][carid][gCarSpawnZ]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarSpawnA` = '%f',", GangCarInfo[fraction][carid][gCarSpawnA]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`Model` = %d,", GangCarInfo[fraction][carid][gCarModel]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarColor1` = %d,", GangCarInfo[fraction][carid][gCarColor1]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarColor2` = %d,", GangCarInfo[fraction][carid][gCarColor2]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`RespDelay` = %d,", GangCarInfo[fraction][carid][gRespDelay]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`CarRank` = %d ", GangCarInfo[fraction][carid][gCarRank]); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"WHERE id = %d LIMIT 1",carid); strcat(query,src,sizeof(query));
	mysql_query(query);
}

stock UpdateRifaWorkCars()
{
    for(new i = 0; i < sizeof(GangCarInfo[]); i++)
	{
	    if(GangCarInfo[8][i][gCarModel] == 482) MatsInfo[i][mCapacity] = 1000;
	    else if(GangCarInfo[8][i][gCarModel] == 499) MatsInfo[i][mCapacity] = 2000;
	    else MatsInfo[i][mCapacity] = 0;
	}
}

stock GetFactionCarId(faction,carid)
{
	for(new c = 0; c < sizeof(GangCarInfo[]); c++)
	{
 		if(carid == GangCarInfo[faction][c][gVehId]) return c;
	}
	return 0;
}

stock IsFactionGetVehicle(faction,model)
{
	for(new c = 0; c < sizeof(GangCarInfo[]); c++)
	{
 		if(GangCarInfo[faction][c][gCarModel] == model) return 1;
	}
	return 0;
}

stock ShowJobsHall(playerid)
{
	new str[512];
	strcat(str, "Механик\t\t\t"RGB_GREEN"[2 лвл]"RGB_WHITE"\n");
	strcat(str, "Водитель автобуса\t\t"RGB_GREEN"[2 лвл]"RGB_WHITE"\n");
	strcat(str, "Таксист\t\t\t"RGB_GREEN"[1 лвл]"RGB_WHITE"\n");
	strcat(str, "Тренер\t\t\t\t"RGB_GREEN"[3 лвл]"RGB_WHITE"\n");
	strcat(str, "Детектив\t\t\t"RGB_GREEN"[3 лвл]"RGB_WHITE"\n");\
	strcat(str, "Оформитель\t\t\t"RGB_GREEN"[4 лвл]"RGB_WHITE"\n");
	strcat(str, "Инкассатор\t\t\t"RGB_GREEN"[5 лвл]"RGB_WHITE"\n");
	strcat(str, "Адвокат\t\t\t"RGB_GREEN"[Мэрия]\n");
	strcat(str, "Уволиться");
	
	return ShowPlayerDialog(playerid, 181, DIALOG_STYLE_LIST, RGB_SERVER"Устройство на работу", str, "Выбрать","Отмена");
}


stock IsAValidFactionCarid(faction,carid)
{
	switch(faction)
	{
	    case 0,1,3:
		{
			switch(carid)
			{
			    case 400,401,404,405,410,412..414,418,419,421,422: return true;
			    case 426,436,439,440,445,448,458,461..463,466..468: return true;
			    case 474,475,479,481,482,489,491,492,496,500,505: return true;
			    case 507,509,510,516,517,518,521,526,527,529,534,536,540: return true;
				case 542,543,546,547,549,550,551,554,566,567,575,576,579: return true;
				case 580,581,585,586,589,600,471,522,402,411,415,429,442,451,477,506,535: return true;
				case 541,545,555,558,559,560,562,587,602,603,487,409: return true;
			}
		}
	    case 2:
		{
			switch(carid)
			{
			    case 400,401,404,405,410,412..414,418,419,421,422: return true;
			    case 426,436,439,440,445,448,458,461..463,466..468: return true;
			    case 474,475,479,481,482,489,491,492,496,500,505: return true;
			    case 507,509,510,516,517,518,521,526,527,529,534,536,540: return true;
				case 542,543,546,547,549,550,551,554,566,567,575,576,579: return true;
				case 580,581,585,586,589,600,471,522,535: return true;
			}
		}
		case 4..7:
		{
			switch(carid)
			{
			    case 400,401,404,405,410,412..414,418,419,421,422: return true;
			    case 426,436,439,440,445,448,458,461,462,466..468: return true;
			    case 474,475,479,481,482,489,491,492,496,500,505: return true;
			    case 507,509,510,516,517,518,521,526,527,529,534,536,540: return true;
				case 542,543,546,547,549,550,551,554,566,567,575,576,579: return true;
				case 580,581,585,586,589,600,535: return true;
			}
		}
		case 8:
		{
		    switch(carid)
			{
			    case 400,401,404,405,410,412..414,418,419,421,422: return true;
			    case 426,436,439,440,445,448,458,461..463,466..468: return true;
			    case 474,475,479,481,482,489,491,492,496,500,505: return true;
			    case 507,509,510,516,517,518,521,526,527,529,534,536,540: return true;
				case 542,543,546,547,549,550,551,554,566,567,575,576,579: return true;
				case 580,581,585,586,589,600,471,499,535: return true;
			}
		}
        case 9:
		{
		    switch(carid)
			{
			    case 400,401,404,405,410,412..414,418,419,421,422: return true;
			    case 426,436,439,440,445,448,458,461..463,466..468: return true;
			    case 474,475,478,479,481,482,489,491,492,496,500,505: return true;
			    case 507,509,510,516,517,518,521,526,527,529,534,536,540: return true;
				case 542,543,546,547,549,550,551,554,566,567,575,576,579: return true;
				case 580,581,585,586,589,600,471,508,532,604,605,531: return true;
			}
		}
	}
	return false;
}

stock LoadFactionsNewsPickups()
{
	new DataString[64], Query[512], Float:x, Float:y, Float:z;
	mysql_query("SELECT * FROM `"Gang_NewsTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id=0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("PosX", DataString); x = floatstr(DataString);
			mysql_fetch_field("PosY", DataString); y = floatstr(DataString);
			mysql_fetch_field("PosZ", DataString); z = floatstr(DataString);
			
			GangNewsPickup[id] = CreatePickup(1239, 23,x,y,z,-1);
			Gang3dTextNews[id] = Create3DTextLabel( "Новости организации\nОбновлено: none", COLOR_GREEN3D, x,y,z+1, 30.0, 0, 2 );
		}
	}
	mysql_free_result();
	print("Fractions news loaded");
	return 1;
}

stock SaveFactionNewsPickup(id,Float:x,Float:y,Float:z)
{
	new query[512], src[64];
    format(query,sizeof(query),"UPDATE `"Gang_NewsTable"` SET ");
	format(src,sizeof(src),"`PosX` = '%f',", x); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`PosY` = '%f',", y); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"`PosZ` = '%f' ", z); strcat(query,src,sizeof(query));
	format(src,sizeof(src),"WHERE id = %d LIMIT 1",id); strcat(query,src,sizeof(query));
	mysql_query(query);
}


stock ShowLoginDialog(playerid)
{
    return ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "  ", "{ffffff}                 Добро пожаловать на Crime Streets RPG!\n    Данный аккаунт уже зарегистрирован, введите пароль:\n"RGB_SERVER"Если Вы утратили доступ к аккаунту, нажмите кнопку E-Mail.", "Войти", "E-Mail");
}
stock ShowDialogRegistration(playerid)
{
    return ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "  ", "{ffffff}  Добро пожаловать на Crime Streets RPG!\n     Вы не зарегистрированы на сервере.\n"RGB_SERVER"Для регистрации придумайте себе пароль:", "Готово", "Выход");
}
stock ShowMailDialog(playerid)
{
	return ShowPlayerDialog(playerid, 6, DIALOG_STYLE_INPUT, RGB_SERVER"Восстановление доступа", "{ffffff}\
	Если Вы забыли пароль, либо Ваш аккаунт угнали, Вы можете\n\
	выслать пароль на почту, которую указывали в /menu.\n\
	Введите E-Mail указанный на данном аккаунте:", "Готово", "Назад");
}
stock EnterMail(playerid)
{
	new st[1000];
	strcat(st, "{bbbbbb}Привязка E-Mail к игровому аккаунту может понадобиться для его восстановления в случае утраты пароля.\n");
	strcat(st, "Будьте внимательны при вводе E-Mail адреса: E-Mail указывается 1 раз, изменить его можно будет только\n");
	strcat(st, "через 2 недели! Пожалуйста, убедитесь в том, что Вашей почтой воспользоваться можете только Вы, в противном\n");
	strcat(st, "случае пароль может попасть в чужие руки. Введите E-Mail в окно ниже, либо нажмите 'Назад' для возврата к меню:");
	return ShowPlayerDialog(playerid, 193, DIALOG_STYLE_INPUT, RGB_SERVER"E-Mail", st, "Ввод", "Назад");
}


stock CreatePlayerCar(playerid, model, Float:x, Float:y, Float:z, Float:a)
{
	new checkmodel = GetVehicleModel(CarInfo[playerid][cMaincar]);
	if(checkmodel > 400 && checkmodel < 611)
	{
	    Delete3DTextLabel(CarInfo[playerid][c3d]);
	    DestroyVehicle(CarInfo[playerid][cMaincar]);
	}

	mysql_query("SELECT MAX(id) FROM `"CarsTable"`");
 	mysql_store_result();
  	new SQL[20];
   	mysql_fetch_row(SQL, "|");
   	new id = strval(SQL);
    mysql_free_result();

    new query[700];



   	format(query,sizeof(query),
	   "INSERT INTO `"CarsTable"` (`id`, `carX`, `carY`, `carZ`,`carA`,`Model`, `Color1`, `Color2`,`PaintJob`)\
	   				        VALUES (%d,   '%f',   '%f',   '%f',  '%f',   %d,       -1,       -1,       -1)",
                                    id+1, x, y, z, a, model);
    mysql_query(query);

   	CarInfo[playerid][carX] = x;
	CarInfo[playerid][carY] = y;
	CarInfo[playerid][carZ] = z;
	CarInfo[playerid][carA] = a;

	CarInfo[playerid][cModel] = model;

	CarInfo[playerid][cSpoiler] = 0;
	CarInfo[playerid][cHood] = 0;
	CarInfo[playerid][cSideskirt] = 0;
	CarInfo[playerid][cNitro] = 0;
	CarInfo[playerid][cLamps] = 0;
	CarInfo[playerid][cExhaust] = 0;
	CarInfo[playerid][cWheels] = 0;
	CarInfo[playerid][cRoof] = 0;
	CarInfo[playerid][cStereo] = 0;
	CarInfo[playerid][cHydraulics] = 0;
	CarInfo[playerid][cBullbar] = 0;
	CarInfo[playerid][cRearBullbars] = 0;
	CarInfo[playerid][cFrontSign] = 0;
	CarInfo[playerid][cFrontBullbars] = 0;
	CarInfo[playerid][cFrontBumper] = 0;
	CarInfo[playerid][cRearBumper] = 0;
	CarInfo[playerid][cVents] = 0;

	CarInfo[playerid][cColor1] = -1;
	CarInfo[playerid][cColor2] = -1;
	CarInfo[playerid][cPaintJob] = -1;

	CarInfo[playerid][cSQL] = id+1;

	SetPVarInt(playerid, "CarKey", id+1);
	MySQL_UpdateInt(playerid, "CarKey");

	CarInfo[playerid][cMaincar] = CreateVehicle(CarInfo[playerid][cModel],
												CarInfo[playerid][carX], CarInfo[playerid][carY],
												CarInfo[playerid][carZ], CarInfo[playerid][carA],
												CarInfo[playerid][cColor1], CarInfo[playerid][cColor2],-1);
	new name[24];
	GetPlayerName(playerid, name, 24);
	format(query, sizeof(query), "{85ff00}Owner: {fffacd}%s\n{85ff00}ID: {fffacd}%d", name, CarInfo[playerid][cSQL]);

	CarInfo[playerid][c3d] = Create3DTextLabel(query , 0x587B9540, 0.0, 0.0, 0.0, 3.0, 0, 2 );
	Attach3DTextLabelToVehicle(CarInfo[playerid][c3d], CarInfo[playerid][cMaincar], 0.0, 0.0, 0.8);
    IsForSaleCar[CarInfo[playerid][cMaincar]] = true;
	return 1;
}
stock UpdatePlayerVehicleText(playerid) // /changename; смена ника в диалоге.
{
	if(GetPVarInt(playerid, "CarKey") == 0) return 0;

	new st[100];
	GetPlayerName(playerid, st, 24);

	format(st, 100, "{85ff00}Owner: {fffacd}%s\n{85ff00}ID: {fffacd}%d", st, CarInfo[playerid][cSQL]);
	Update3DTextLabelText(CarInfo[playerid][c3d], 0x587B9540, st);

	return 1;
}
stock LoadPlayerCar(playerid) // MySQL_OnPlaeyrLogin
{
	if(GetPVarInt(playerid, "CarKey") > 0)
	{
 		if(dodebug == true) printf("DEBUG LOG: LoadPlayerCar(%d);", playerid);

		new qe[200], count = GetTickCount();

		format(qe,sizeof(qe), "SELECT * FROM `"CarsTable"` WHERE `id` = %d LIMIT 1", GetPVarInt(playerid, "CarKey"));
		mysql_query(qe);
		mysql_store_result();
		if(mysql_num_rows() != 0)
		{
			new DataString[30];

			mysql_fetch_field("carX", DataString); 			CarInfo[playerid][carX] = floatstr(DataString);
			mysql_fetch_field("carY", DataString); 			CarInfo[playerid][carY] = floatstr(DataString);
			mysql_fetch_field("carZ", DataString); 			CarInfo[playerid][carZ] = floatstr(DataString);
			mysql_fetch_field("carA", DataString); 			CarInfo[playerid][carA] = floatstr(DataString);
			mysql_fetch_field("Model", DataString); 		CarInfo[playerid][cModel] 	  = strval(DataString);

			mysql_fetch_field("Number", CarInfo[playerid][cNumber]);

			mysql_fetch_field("Spoiler", DataString); 		CarInfo[playerid][cSpoiler]   = strval(DataString);
			mysql_fetch_field("Hood", DataString); 			CarInfo[playerid][cHood]      = strval(DataString);
			mysql_fetch_field("Sideskirt", DataString); 	CarInfo[playerid][cSideskirt] = strval(DataString);
			mysql_fetch_field("Nitro", DataString); 		CarInfo[playerid][cNitro]     = strval(DataString);
			mysql_fetch_field("Lamps", DataString); 		CarInfo[playerid][cLamps]     = strval(DataString);
			mysql_fetch_field("Exhaust", DataString);	 	CarInfo[playerid][cExhaust]   = strval(DataString);
			mysql_fetch_field("Wheels", DataString); 		CarInfo[playerid][cWheels]    = strval(DataString);
			mysql_fetch_field("Roof", DataString); 			CarInfo[playerid][cRoof]      = strval(DataString);
			mysql_fetch_field("Stereo", DataString); 		CarInfo[playerid][cStereo]    = strval(DataString);
			mysql_fetch_field("Hydraulics", DataString); 	CarInfo[playerid][cHydraulics] = strval(DataString);
			mysql_fetch_field("Bullbar", DataString); 		CarInfo[playerid][cBullbar]    = strval(DataString);
			mysql_fetch_field("RearBullbars", DataString); 	CarInfo[playerid][cRearBullbars]  = strval(DataString);
			mysql_fetch_field("FrontSign", DataString); 	CarInfo[playerid][cFrontSign]     = strval(DataString);
			mysql_fetch_field("FrontBullbars", DataString); CarInfo[playerid][cFrontBullbars] = strval(DataString);
			mysql_fetch_field("FrontBumper", DataString); 	CarInfo[playerid][cFrontBumper]   = strval(DataString);
			mysql_fetch_field("RearBumper", DataString); 	CarInfo[playerid][cRearBumper]    = strval(DataString);
			mysql_fetch_field("Vents", DataString); 		CarInfo[playerid][cVents]    = strval(DataString);
			mysql_fetch_field("Color1", DataString); 		CarInfo[playerid][cColor1]   = strval(DataString);
			mysql_fetch_field("Color2", DataString); 		CarInfo[playerid][cColor2]   = strval(DataString);
			mysql_fetch_field("PaintJob", DataString);	 	CarInfo[playerid][cPaintJob] = strval(DataString);
			mysql_fetch_field("id", DataString);	 		CarInfo[playerid][cSQL] = strval(DataString);

			if(CarInfo[playerid][cMaincar] != 0) // Тут менял
			{
				DestroyVehicle(CarInfo[playerid][cMaincar]);
				Delete3DTextLabel(CarInfo[playerid][c3d]);
			}
			
			if(CarInfo[playerid][carX] > 4000.0 || CarInfo[playerid][carX] < -4000.0 ||
               CarInfo[playerid][carY] > 4000.0 || CarInfo[playerid][carY] < -4000.0 ||
               CarInfo[playerid][carZ] > 4000.0 || CarInfo[playerid][carZ] < -4000.0 ||
               CarInfo[playerid][carA] > 4000.0 || CarInfo[playerid][carZ] < -4000.0)
			{
			    CarInfo[playerid][carX] = 0.0;
			    CarInfo[playerid][carY] = 0.0;
			    CarInfo[playerid][carZ] = 0.0;
			    CarInfo[playerid][carA] = 0.0;
			}
			
		    CarInfo[playerid][cMaincar] = CreateVehicle(CarInfo[playerid][cModel],
														CarInfo[playerid][carX],
														CarInfo[playerid][carY],
														CarInfo[playerid][carZ],
														CarInfo[playerid][carA],
														CarInfo[playerid][cColor1],
														CarInfo[playerid][cColor2],-1);

			new name[24];
			GetPlayerName(playerid, name, 24);
			format(qe, sizeof(qe), "{85ff00}Owner: {fffacd}%s\n{85ff00}ID: {fffacd}%d", name, CarInfo[playerid][cSQL]);

			CarInfo[playerid][c3d] = Create3DTextLabel(qe , 0x587B9540, 0.0, 0.0, 0.0, 3.0, 0, 2 );
			Attach3DTextLabelToVehicle(CarInfo[playerid][c3d], CarInfo[playerid][cMaincar], 0.0, 0.0, 0.8);

			IsForSaleCar[CarInfo[playerid][cMaincar]] = true;

			Gas[CarInfo[playerid][cMaincar]] = 100;

			TunePlayerCar(playerid);
   		}
	    mysql_free_result();

	    printf("Loading Car [Time: %d | SQL: %d | playerid: %d]", GetTickCount() - count, CarInfo[playerid][cSQL], playerid);
	}
	return 1;
}
stock SavePlayerCar(playerid)
{
	if(GetPVarInt(playerid, "CarKey") > 0)
	{
	    if(dodebug == true) printf("DEBUG LOG: SavePlayerCar(%d);", playerid);
	    new form[50], st[512], count = GetTickCount();

	    format(form, 50, "UPDATE `"CarsTable"` SET `carX` = '%f',", 		CarInfo[playerid][carX]), strcat(st, form);
	    format(form, 50, "`carY` = '%f',", 		CarInfo[playerid][carY]), strcat(st, form);
	    format(form, 50, "`carZ` = '%f',", 		CarInfo[playerid][carZ]), strcat(st, form);
	    format(form, 50, "`carA` = '%f',", 		CarInfo[playerid][carA]), strcat(st, form);

	    format(form, 50, "`Model` = %d,", 		CarInfo[playerid][cModel]), 	strcat(st, form);
	    format(form, 50, "`Number` = '%s',", 	CarInfo[playerid][cNumber]), 	strcat(st, form);

	    format(form, 50, "`Spoiler` = %d,", 		CarInfo[playerid][cSpoiler]), 	strcat(st, form);
	    format(form, 50, "`Hood` = %d,", 			CarInfo[playerid][cHood]), 		strcat(st, form);
	    format(form, 50, "`Sideskirt` = %d,", 		CarInfo[playerid][cSideskirt]), strcat(st, form);
	    format(form, 50, "`Nitro` = %d,", 			CarInfo[playerid][cNitro]), 	strcat(st, form);
	    format(form, 50, "`Lamps` = %d,", 			CarInfo[playerid][cLamps]), 	strcat(st, form);
	    format(form, 50, "`Exhaust` = %d,", 		CarInfo[playerid][cExhaust]), 	strcat(st, form);
	    format(form, 50, "`Wheels` = %d,", 			CarInfo[playerid][cWheels]), 	strcat(st, form);
	    format(form, 50, "`Roof` = %d,", 			CarInfo[playerid][cRoof]), 		strcat(st, form);
	    format(form, 50, "`Stereo` = %d,", 			CarInfo[playerid][cStereo]), 	strcat(st, form);
	    format(form, 50, "`Hydraulics` = %d,",		CarInfo[playerid][cHydraulics]),strcat(st, form);
	    format(form, 50, "`Bullbar` = %d,", 		CarInfo[playerid][cBullbar]), 	strcat(st, form);
	    format(form, 50, "`RearBullbars` = %d,",	CarInfo[playerid][cRearBullbars]), 	strcat(st, form);
	    format(form, 50, "`FrontSign` = %d,", 		CarInfo[playerid][cFrontSign]), 	strcat(st, form);
	    format(form, 50, "`FrontBullbars` = %d,",	CarInfo[playerid][cFrontBullbars]), strcat(st, form);
	    format(form, 50, "`FrontBumper` = %d,", 	CarInfo[playerid][cFrontBumper]), 	strcat(st, form);
	    format(form, 50, "`RearBumper` = %d,", 		CarInfo[playerid][cRearBumper]), 	strcat(st, form);
	    format(form, 50, "`Vents` = %d,", 			CarInfo[playerid][cVents]), 		strcat(st, form);

	    format(form, 50, "`Color1` = %d,",		CarInfo[playerid][cColor1]), 	strcat(st, form);
	    format(form, 50, "`Color2` = %d,", 		CarInfo[playerid][cColor2]), 	strcat(st, form);

	    format(form, 50, "`PaintJob` = %d WHERE `id` = %d LIMIT 1", CarInfo[playerid][cPaintJob], CarInfo[playerid][cSQL]), 	strcat(st, form);

	    mysql_query(st);

		printf("Saving Car: [Carid: %d | Time: %d]", CarInfo[playerid][cSQL], GetTickCount() - count);
	}
	return 1;
}
stock DestroyPlayerCar(playerid) // OnPlayerDisconnect
{
	if(GetPVarInt(playerid, "CarKey") > 0)
	{
		SavePlayerCar(playerid);

        IsForSaleCar[CarInfo[playerid][cMaincar]] = false;

	    Delete3DTextLabel(CarInfo[playerid][c3d]);
	    DestroyVehicle(CarInfo[playerid][cMaincar]);

        CarInfo[playerid][cMaincar] = 0;
	}
	return 1;
}
stock TunePlayerCar(playerid) // затюнить тачку
{
	if(!IsForSaleCar[CarInfo[playerid][cMaincar]]) return 0;

	if(CarInfo[playerid][cSpoiler] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cSpoiler])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cSpoiler]);
	if(CarInfo[playerid][cHood] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cHood])) 				AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cHood]);
	if(CarInfo[playerid][cSideskirt] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cSideskirt])) 		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cSideskirt]);
	if(CarInfo[playerid][cNitro] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cNitro])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cNitro]);
	if(CarInfo[playerid][cLamps] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cLamps])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cLamps]);
	if(CarInfo[playerid][cExhaust] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cExhaust])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cExhaust]);
	if(CarInfo[playerid][cWheels] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cWheels])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cWheels]);
	if(CarInfo[playerid][cRoof] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cRoof]))				AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cRoof]);
	if(CarInfo[playerid][cStereo] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cStereo])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cStereo]);
	if(CarInfo[playerid][cHydraulics] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cHydraulics])) 		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cHydraulics]);
	if(CarInfo[playerid][cBullbar] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cBullbar]))  			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cBullbar]);
	if(CarInfo[playerid][cRearBullbars] != 0 	&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cRearBullbars]))		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cRearBullbars]);
	if(CarInfo[playerid][cFrontSign] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cFrontSign])) 		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cFrontSign]);
	if(CarInfo[playerid][cFrontBullbars] != 0 	&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cFrontBullbars]))		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cFrontBullbars]);
	if(CarInfo[playerid][cFrontBumper] != 0 	&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cFrontBumper])) 		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cFrontBumper]);
	if(CarInfo[playerid][cRearBumper] != 0 		&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cRearBumper])) 		AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cRearBumper]);
	if(CarInfo[playerid][cVents] != 0 			&& IsValidTuning(CarInfo[playerid][cModel], CarInfo[playerid][cVents])) 			AddVehicleComponent(CarInfo[playerid][cMaincar],   CarInfo[playerid][cVents]);

	if(CarInfo[playerid][cPaintJob] > -1 		&& CarInfo[playerid][cPaintJob] < 3)												ChangeVehiclePaintjob(CarInfo[playerid][cMaincar], CarInfo[playerid][cPaintJob]);
	if(ValidCarForNumber(CarInfo[playerid][cModel]))																				SetVehicleNumberPlate(CarInfo[playerid][cMaincar], CarInfo[playerid][cNumber]);

	return 1;
}
stock RespawnPlayerCar(playerid)
{
	if(GetPVarInt(playerid, "CarKey") == 0) return 0;

    IsForSaleCar[CarInfo[playerid][cMaincar]] = false;

	Delete3DTextLabel(CarInfo[playerid][c3d]);
 	DestroyVehicle(CarInfo[playerid][cMaincar]);

	CarInfo[playerid][cMaincar] = CreateVehicle(CarInfo[playerid][cModel],
												CarInfo[playerid][carX],
												CarInfo[playerid][carY],
												CarInfo[playerid][carZ],
												CarInfo[playerid][carA],
												CarInfo[playerid][cColor1],
												CarInfo[playerid][cColor2],-1);

 	IsForSaleCar[CarInfo[playerid][cMaincar]] = true;

	new st[100];
	new name[24];
	GetPlayerName(playerid, name, sizeof(name));
	format(st, sizeof(st), "{85ff00}Owner: {fffacd}%s\n{85ff00}ID: {fffacd}%d", name, CarInfo[playerid][cSQL]);

	CarInfo[playerid][c3d] = Create3DTextLabel(st , 0x587B9540, 0.0, 0.0, 0.0, 3.0, 0, 2 );
	Attach3DTextLabelToVehicle(CarInfo[playerid][c3d], CarInfo[playerid][cMaincar], 0.0, 0.0, 0.8);

	TunePlayerCar(playerid);

	return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z)
{
	if(passenger_seat != 0)
	{
		if(GetPVarInt(playerid, "Level") == 1)
  		{
			if(GetPlayerVehicleID(playerid) == vehicleid)
			{
				if(GetPVarInt(playerid, "CheckDelayCarHack") > gettime())
				{
					if(GetPlayerDistanceFromPoint(playerid,
					    GetPVarFloat(playerid, "CheckPos0"),
					    GetPVarFloat(playerid, "CheckPos1"),
					    GetPVarFloat(playerid, "CheckPos2")) > 20.0)
					{
						SetVehicleToRespawn(vehicleid);
					}
				}
				else
				{
					new Float:pos[3];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					SetPVarFloat(playerid, "CheckPos0", pos[0]);
					SetPVarFloat(playerid, "CheckPos1", pos[1]);
					SetPVarFloat(playerid, "CheckPos2", pos[2]);
					SetPVarInt(playerid, "CheckDelayCarHack", gettime()+1);
				}
			}
			else
			{
				if(GetPVarInt(playerid, "no_a_message") < gettime())
	 			{
	  				SetPVarInt(playerid, "no_a_message", gettime()+10);

					new str[128];
	 				format(str, sizeof(str), "[A] %s[%d] телепортирует тачки читом", GetName(playerid), playerid);
	  				ABroadCast(str);
	     		}
			}
		}
	}
	return 1;
}


forward NowStartFishing(playerid);
public NowStartFishing(playerid)
{
	if(GetPVarInt(playerid, "Fisher") == 1)
	{
		ApplyAnimation(playerid,"POOL","POOL_ChalkCue", 4.1,1,0,0,0,2000,1);

		switch(random(10))
		{
   			case 0: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 3), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Язь, весом "RGB_BLUE"3кг.");
			case 1: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 4), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Щуку, весом "RGB_BLUE"4кг.");
   			case 2: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 4), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Судака, весом "RGB_BLUE"4кг.");
   			case 3: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 5), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Леща, весом "RGB_BLUE"5кг.");
   			case 4: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 6), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Сазана, весом "RGB_BLUE"6кг.");
   			case 5: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 7), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Сома, весом "RGB_BLUE"7кг.");
   			case 6: GiveAchievement(playerid, 17, 1), GivePVarInt(playerid, "KgFish", 2), SendClientMessage(playerid, COLOR_WHITE, "Вы поймали Окуня, весом "RGB_BLUE"2кг.");
   			case 7..8: SendClientMessage(playerid, COLOR_WHITE, "Рыба сорвалась");
			default: SendClientMessage(playerid, COLOR_WHITE, "Вы ничего не поймали");
		}
		if(GetPVarInt(playerid, "KgFish") >= 50)
		{
			SendClientMessage(playerid, COLOR_GREEN, "Вы не сможете увезти больше рыбы, отправляйтесь на сушу");
		}
		else
		{
			switch(random(30))
			{
    			case 0..10:
    			{
			    	new rand = random(sizeof(FisherJobPlace));
			    	if(IsPlayerInRangeOfPoint(playerid, 60.0, FisherJobPlace[rand][0], FisherJobPlace[rand][1], FisherJobPlace[rand][2]))
					{
						SetPVarInt(playerid, "CanStartFishing", 1);
					}
					else
					{
					    gPlayerCheckpointStatus[playerid] = CHECKPOINT_FISHER;
						SetPlayerRaceCheckpoint(playerid, 1, FisherJobPlace[rand][0], FisherJobPlace[rand][1], FisherJobPlace[rand][2], FisherJobPlace[rand][0], FisherJobPlace[rand][1], FisherJobPlace[rand][2], 60.0); // тут можно рандомно несколько точек
		    		}
				}
		    	default:
		    	{
			    	SetPVarInt(playerid, "CanStartFishing", 1);
		    	}
			}
		}
	}
	return 1;
}


stock MySQL_SaveRank(team, rank)
{
    new count = GetTickCount();
	new str[256];
	switch(rank)
	{
	    case 0: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank1` = '%s' WHERE `id` = %d", FactionRanks[team][0], team);
	    case 1: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank2` = '%s' WHERE `id` = %d", FactionRanks[team][1], team);
	    case 2: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank3` = '%s' WHERE `id` = %d", FactionRanks[team][2], team);
	    case 3: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank4` = '%s' WHERE `id` = %d", FactionRanks[team][3], team);
	    case 4: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank5` = '%s' WHERE `id` = %d", FactionRanks[team][4], team);
	    case 5: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank6` = '%s' WHERE `id` = %d", FactionRanks[team][5], team);
	    case 6: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank7` = '%s' WHERE `id` = %d", FactionRanks[team][6], team);
	    case 7: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank8` = '%s' WHERE `id` = %d", FactionRanks[team][7], team);
	    case 8: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank9` = '%s' WHERE `id` = %d", FactionRanks[team][8], team);
	    case 9: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank10` = '%s' WHERE `id` = %d", FactionRanks[team][9], team);
	    case 10: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank11` = '%s' WHERE `id` = %d", FactionRanks[team][10], team);
	    case 11: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank12` = '%s' WHERE `id` = %d", FactionRanks[team][11], team);
	    case 12: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank13` = '%s' WHERE `id` = %d", FactionRanks[team][12], team);
	    case 13: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank14` = '%s' WHERE `id` = %d", FactionRanks[team][13], team);
	    case 14: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank15` = '%s' WHERE `id` = %d", FactionRanks[team][14], team);
	    case 15: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank16` = '%s' WHERE `id` = %d", FactionRanks[team][15], team);
	    case 16: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank17` = '%s' WHERE `id` = %d", FactionRanks[team][16], team);
	    case 17: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank18` = '%s' WHERE `id` = %d", FactionRanks[team][17], team);
	    case 18: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank19` = '%s' WHERE `id` = %d", FactionRanks[team][18], team);
	    case 19: format(str, sizeof(str), "UPDATE `"RankTable"` SET `Rank20` = '%s' WHERE `id` = %d", FactionRanks[team][19], team);
	}
	mysql_query(str);
	printf("Saving rank MySQL time: %d", GetTickCount() - count);
	return 1;
}

stock LoadRanks()
{
	new count = GetTickCount();
	new Query[700];
    mysql_query("SELECT * FROM `"RankTable"` ORDER BY `id` ASC");
    mysql_store_result();
    if(mysql_num_rows())
	{
		for(new id = 0; mysql_fetch_row(Query, "|"); id++)
		{
			mysql_fetch_field("Rank1", FactionRanks[id][0]);
			mysql_fetch_field("Rank2", FactionRanks[id][1]);
			mysql_fetch_field("Rank3", FactionRanks[id][2]);
			mysql_fetch_field("Rank4", FactionRanks[id][3]);
			mysql_fetch_field("Rank5", FactionRanks[id][4]);
			mysql_fetch_field("Rank6", FactionRanks[id][5]); 
			mysql_fetch_field("Rank7", FactionRanks[id][6]);
			mysql_fetch_field("Rank8", FactionRanks[id][7]);
			mysql_fetch_field("Rank9", FactionRanks[id][8]);
			mysql_fetch_field("Rank10", FactionRanks[id][9]);
			mysql_fetch_field("Rank11", FactionRanks[id][10]); 
			mysql_fetch_field("Rank12", FactionRanks[id][11]); 
			mysql_fetch_field("Rank13", FactionRanks[id][12]);
			mysql_fetch_field("Rank14", FactionRanks[id][13]);
			mysql_fetch_field("Rank15", FactionRanks[id][14]); 
			mysql_fetch_field("Rank16", FactionRanks[id][15]);
			mysql_fetch_field("Rank17", FactionRanks[id][16]); 
			mysql_fetch_field("Rank18", FactionRanks[id][17]); 
			mysql_fetch_field("Rank19", FactionRanks[id][18]);
			mysql_fetch_field("Rank20", FactionRanks[id][19]);
		}
	}
	mysql_free_result();
	printf("Loading ranks from MySQL time: %d", GetTickCount() - count);
	return 1;
}


stock ReturnSlot(weaponid)
{
	switch(weaponid)
	{
	    case 0,1: 	return 0;
	    case 2..9: 	return 1;
	    case 10..15: return 10;
	    case 16..18, 39: return 8;
        case 22..24: return 2;
	    case 25..27: return 3;
	    case 28..29, 32: return 4;
	    case 30..31: return 5;
	    case 33..34: return 6;
	    case 35..38: return 7;
	    case 40: return 12;
	    case 41..43: return 9;
	    case 44..46: return 11;
	}
	return 0;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
    if(CheckFCalls(playerid, 23)) return 1;
	switch(weaponid)
	{
	    case 22..34:
	    {
	        if(GetPVarInt(issuerid, "Shoot_Sound") == 1) PlayerPlaySound(issuerid, 6401, 0.0, 0.0, 0.0);
		}
	}
	if(GetPVarInt(playerid, "RegOnPaint") == 1 && GetPVarInt(issuerid, "RegOnPaint") == 1 && PaintOpenReg == false)
	{
		PaintList[GetPVarInt(issuerid, "OnPaint")][DamagePoint] += floatround(amount);
	}
	return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
    if(CheckFCalls(playerid, 24)) return 1;
    if(damagedid != INVALID_PLAYER_ID)
    {
		if(GetPVarInt(playerid, "nodm") == 1)
  		{
			if(GetPVarInt(playerid, "NoShowDialog") == 0)
			{
   				ShowPlayerDialog(playerid,39,DIALOG_STYLE_MSGBOX,"  ",RGB_WHITE"В зеленых зонах запрещено драться!\nВы заморожены на 5 секунд!","Ок","");
				SetPVarInt(playerid, "NoShowDialog", 1);
				SetTimerEx("HideDialogDM", 5000, false, "d", playerid);
				ApplyAnimation(playerid, "FAT", "IDLE_TIRED", 4.1, 1, 0, 0, 0, 5000, 1);
				SetCameraBehindPlayer(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_RED, "Здесь ДМ запрещен, Вы были кикнуты");
				Kick_(playerid);
			    return 1;
			}
		}
		switch(weaponid)
		{
		    case 22..34:
		    {
				new Float:pos[3];
				GetPlayerPos(damagedid, pos[0], pos[1], pos[2]);

				if(GetPlayerDistanceFromPoint(playerid, pos[0], pos[1], pos[2]) > 5.0)
				{
			        if(GetPVarInt(playerid, "DelayAmmo") < gettime())
			        {
			            new slot = ReturnSlot(weaponid);
			            if(PlayerAmmo[playerid][slot] > 0) PlayerAmmo[playerid][slot] --;
			            SetPVarInt(playerid, "DelayAmmo", gettime()+1);
					}
				}
			}
			case 3:
			{
			    if(IsACop(playerid))
			    {
			        if(GetPVarInt(playerid, "NowCanTazer") < gettime() && GetPVarInt(damagedid, "Cuff_Player") == 0 && !IsACop(damagedid))
			        {
			        	ApplyAnimation(damagedid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 5000);
			        	SetPVarInt(playerid, "NowCanTazer", gettime()+10);
			        	SetPVarInt(playerid, "Cuff_Player_Susp", damagedid);
			        	SendClientMessage(playerid, COLOR_WHITE, "Нажмите клавишу ~k~~SNEAK_ABOUT~, чтобы надеть наручники");
					}
					else SendClientMessage(playerid, COLOR_GREY, "У Вас мало сил, чтобы повалить преступника на землю");
			    }
			}
		}
    }
    return 1;
}

stock RegistrationForum(playerid)
{
	new st[512];
	strcat(st, "{ffffff}Вам предлагается создать себе аккаунт на нашем форуме forum.crime-streets.ru\n");
	strcat(st, "Ник на форуме будет такой же, как на данный момент у Вас в игре. Пароль так же сохранится,\n");
	strcat(st, "такой же как и в игре. Регистрация на форуме разрешена только 1 раз с 1 аккаунта.\n");
	strcat(st, "Нажмите 'Далее', чтобы создать аккаунт на форуме, либо 'Отмена', чтобы отменить регистрацию:");
	return ShowPlayerDialog(playerid, 176, DIALOG_STYLE_MSGBOX, RGB_SERVER"Регистрация на форуме", st, "Далее", "Отмена");
}

forward ResponseReg(playerid, code, data[]);
public ResponseReg(playerid, code, data[])
{
	print("ResponseReg");
    if(code == 200)
    {
        switch(strval(data))
		{
            case 1:
	        {
				new name[24];
				new pass[60];
				new string[700];
				GetPVarString(playerid, "Password", pass, 60);
				GetPlayerName(playerid, name, 24);

				format(string, sizeof(string), RGB_WHITE"Вы зарегистрировались на форуме!\n\n\
				\tВаш ник:\t%s\n\
				\tПароль:\t%s\n\n\
				Используйте эти данные для авторизации на форуме forum.crime-streets.ru\n\
				"RGB_RED"Никому не показывайте свой пароль и скриншот с этим сообщением!", name, pass);

				SetPVarString(playerid, "Forum", name);
				MySQL_UpdateString(playerid, "Forum");
			}
			case 2:  SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при регистрации (#2). Ошибка регистрации");
			case -1: SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при регистрации (#-1). Данный ник уже занят");
			case -2: SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при регистрации (#-2). Данный E-Mail уже занят");
			default: SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при регистрации. Неизвестная ошибка");
		}
	}
    else
    {
        SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при регистрации (#3). Форум недоступен");
    }
	return 1;
}

forward ResponseDonate(playerid, code, data[]);
public ResponseDonate(playerid, code, data[])
{
	new str[256];
    if(code == 200)
    {
        print("ResponseDonate(200)");
        
        new cash, string[200];
        
		switch(strval(data))
		{
			case 100..199: cash = 100;
			case 200..499: cash = 250;
			case 500..999: cash = 600;
			case 1000..1999: cash = 1300;
			case 2000..4000: cash = 3000;
			default: cash = 0;
		}
		if(cash > 0)
		{
		    if(action_holiday > 0) cash = cash*2;
  			format(string, sizeof(string), RGB_WHITE"\tВы успешно пополнили свой счет на " RGB_GREEN"%d " RGB_WHITE"DonateMoney!", cash);
			ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",string,"Ок","");
			GivePVarInt(playerid, "DonateMoney", cash);
			MySQL_UpdateInt(playerid,"DonateMoney");
			
			format(str, sizeof(str), "INSERT INTO `"DonateLog"` (`id`, `Name`, `Code`, `Value`, `Date`) VALUES (%d, '%s', %d, %d, NOW())", GetPVarInt(playerid, "MySQL_id"), GetName(playerid), GetPVarInt(playerid, "Temp_Code"), cash, strval(data));
    		mysql_query(str);
    		
			DeletePVar(playerid, "Temp_Code");
			
			if (strval(data) >= 1000 && strval(data) < 2000) GivePVarInt(playerid, "AdminLevel", 1),MySQL_UpdateInt(playerid,"AdminLevel");
			if (strval(data) >= 2000) GivePVarInt(playerid, "AdminLevel", 2),MySQL_UpdateInt(playerid,"AdminLevel");
		}
		else
		{
		    return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"\tКод не найден в платежной базе","Ок","");
		}
    }
    else
    {
        print("ResponseDonate(Error)");
        
        return ShowPlayerDialog(playerid,999,DIALOG_STYLE_MSGBOX, RGB_SERVER"Crime Streets: {34c924}Donate",RGB_RED"\tОшибка. Повторите ввод через несколько минут.","Ок","");
    }
	return 1;
}

forward CheckJumpCheat(playerid, Float:x, Float:y, Float:z);
public CheckJumpCheat(playerid, Float:x, Float:y, Float:z)
{
	new Float:pos[3];
 	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	if((pos[2] - z) > 20.0)
	{
		KickCheater(playerid, MEGAJUMP);
	}
	return 1;
}

forward GetPackFactory(playerid);
public GetPackFactory(playerid)
{
	if(GetPVarInt(playerid, "OnFacJob") != 1) return 1;

	if(GetPVarInt(playerid, "FactoryObject") != 0) DestroyObject(GetPVarInt(playerid, "FactoryObject")), DeletePVar(playerid, "FactoryObject");

	DeletePVar(playerid, "HaveMat");
	RemovePlayerAttachedObject(playerid, 6);
	RemovePlayerAttachedObject(playerid, 7);

	switch(random(GetPVarInt(playerid, "FactorySkill")))
	{
	    case 0..10:
	    {
	        ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
	        GameTextForPlayer(playerid, "~r~FAIL", 3000, 1);
	        GivePVarInt(playerid, "FailFactory", 1);
	    }
	    default:
	    {
	        SetPlayerAttachedObject(playerid, 6, 1575, 1, 0.000000, 0.400000, 0.000000, 90.000000, 90.000000, 90.000000, 1.200000, 1.200000, 1.200000); //Skin 79
            ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1,1);
            
	        if(GetPVarInt(playerid, "FactorySkill") < 65) SendClientMessage(playerid, COLOR_GREEN, "Отнесите продукт на склад");
	        
			SetPVarInt(playerid, "HaveGoodProd", 1);

			GivePVarInt(playerid, "FactorySkill", 1);

			if((GetPVarInt(playerid, "FactorySkill") % 10) == 0)
			{
				new str[128];
				format(str, sizeof(str), "Ваш навык возрос, шанс выпустить бракованную продукцию теперь 1 к %d", GetPVarInt(playerid, "FactorySkill") /10);
				SendClientMessage(playerid, COLOR_GREEN, str);
				MySQL_UpdateInt(playerid, "FactorySkill");
			}
	    }
	}
	return 1;
}


forward EndBusWork(playerid);
public EndBusWork(playerid)
{
    BusTimer[playerid] = -1;

	if(StationTimer[playerid] != -1)
	{
	    KillTimer(StationTimer[playerid]);
	    StationTimer[playerid] = -1;
	}

	new TotalMoney = GetPVarInt(playerid, "TotalCPs") * 12;

	new str[128];
	format(str, sizeof(str), "Вы закончили работу. Перевезено пассажиров: %d, заработано: $%d, Зарплата государства: $%d", GetPVarInt(playerid, "TotalPassengers"), GetPVarInt(playerid, "TotalPassengers")* GetPVarInt(playerid, "BubPricePas"), TotalMoney);
	SendClientMessage(playerid, COLOR_GREEN, str);

	GivePVarInt(playerid, "Paycheck", TotalMoney*7); // 7 это деление в PayDay
	SendClientMessage(playerid, COLOR_GREEN, "Зарплата будет зачислена к Вашему PayDay");

	DeletePVar(playerid, "OnBusJob");// на работе или нет
	DeletePVar(playerid, "BusStation");// если 1 то на остановке придется остановиться
	DeletePVar(playerid, "TotalCPbus");// текущий чекпоинт
	DeletePVar(playerid, "TotalCPs");
	DeletePVar(playerid, "TotalPassengers");
	DeletePVar(playerid, "BubPricePas");

	Delete3DTextLabel(DutyText[playerid]);
	DisablePlayerRaceCheckpoint(playerid);
	gPlayerCheckpointStatus[playerid] = 0;
	return 1;
}

forward EndTaxiWork(playerid);
public EndTaxiWork(playerid)
{
    TaxiLeaveTimer[playerid] = -1;
	gPlayerCheckpointStatus[playerid] = 0;
	DisablePlayerRaceCheckpoint(playerid);

	new str[128];
	format(str, sizeof(str), "Работа закончена. Перевезено пассажиров: %d, общий заработок: $%d", GetPVarInt(playerid, "TotalPass"), GetPVarInt(playerid, "TotalTaxiMoney"));
	SendClientMessage(playerid, COLOR_GREEN, str);
	
	Delete3DTextLabel(DutyText[playerid]);
	
	DeletePVar(playerid, "TotalTaxiMoney");
	DeletePVar(playerid, "TotalPass");
	DeletePVar(playerid, "TaxiPrice");
	DeletePVar(playerid, "OnTaxiJob");
	return 1;
}

forward PlayerTaxiPassenger(playerid);
public PlayerTaxiPassenger(playerid)
{
	new PlayerTaxist = GetPVarInt(playerid, "pTaxist");
	new TaxPrice = GetPVarInt(playerid, "pTax");

	if(GetPlayerState(PlayerTaxist) != PLAYER_STATE_DRIVER || GetPVarInt(PlayerTaxist, "OnTaxiJob") == 0)
	{
		KillTimer(PassengerTimer[playerid]);
  		DeletePVar(playerid, "CountTaxiSec");
        DeletePVar(playerid, "LoopTimer");
        DeletePVar(playerid, "pTaxist");
        DeletePVar(playerid, "pTax");
        removePlayerFromVehicle(playerid);
	    SendClientMessage(playerid, COLOR_WHITE, "Таксист покинул авто");
	    return 1;
	}
	new string[64];
	GivePVarInt(playerid, "CountTaxiSec", 1);

	if(GetPVarInt(playerid, "CountTaxiSec") > 30)
	{
	    if(GetPlayerPCash(playerid) >= TaxPrice)
	    {
		    GivePVarInt(playerid, "LoopTimer", 1);

		    SetPVarInt(playerid, "CountTaxiSec", 0);

		    GivePlayerPCash(playerid, -TaxPrice, "TaxPrice");
		    GivePlayerPCash(PlayerTaxist, TaxPrice, "TaxPrice");
		    
		    GiveAchievement(PlayerTaxist, 6, TaxPrice);

	   		format(string, sizeof(string), "~g~+$%d", TaxPrice);
	        GameTextForPlayer(PlayerTaxist, string, 5000, 6);

			GivePVarInt(PlayerTaxist, "TotalTaxiMoney", TaxPrice);
		}
		else
		{
		    KillTimer(PassengerTimer[playerid]);
		    removePlayerFromVehicle(playerid);
		    SendClientMessage(playerid, COLOR_WHITE, "У Вас кончились деньги");
	        SendClientMessage(PlayerTaxist, COLOR_GREEN, "У пассажира кончились деньги");

	        DeletePVar(playerid, "CountTaxiSec");
	        DeletePVar(playerid, "LoopTimer");
	        DeletePVar(playerid, "pTaxist");
	        DeletePVar(playerid, "pTax");
	        return 1;
		}
 	}
	format(string, sizeof(string), "~b~%d:~r~$%d", GetPVarInt(playerid, "CountTaxiSec"), GetPVarInt(playerid, "LoopTimer") * TaxPrice);
	GameTextForPlayer(playerid, string, 1500, 6);
	return 1;
}

stock ShowMainMenu(playerid)
{
	new st[60];
	new viptext[20];
	switch(GetPVarInt(playerid, "VipLevel"))
	{
	    case 0: viptext = "None";
	    case 1: viptext = "{cd7f32}Bronze";
	    case 2: viptext = "{c0c0c0}Silver";
	    case 3: viptext = "{ffd700}Gold";
	}
	format(st, sizeof(st), "Level: %d | Exp: %d | Vip: %s", GetPVarInt(playerid, "Level"), GetPVarInt(playerid, "Respect"), viptext);
	new str[256];
	str = "1) Статистика\n2) Настройки\n3) Безопасность\n4) Администрация\n5) Задать вопрос\n6) Смена ника\n7) Регистрация на форуме\n8) Достижения\n9) Донат";

	if(GetPVarInt(playerid, "VipLevel") > 0) strcat(str, "\n10) Премиум");

	return ShowPlayerDialog(playerid, 195, DIALOG_STYLE_LIST, st, str, "Далее","Выход");
}


stock ShowSettingsChats(playerid)
{
	new str[300];
	if(gOoc[playerid] == 1) strcat(str, "1) OOC чат\t\t— "RGB_RED"Отключено\n"RGB_WHITE);
	else  strcat(str, "1) OOC чат\t\t— "RGB_GREEN"Включено\n"RGB_WHITE);
	
	if(gNews[playerid] == 1) strcat(str, "2) News чат\t\t— "RGB_RED"Отключено\n"RGB_WHITE);
	else  strcat(str, "2) News чат\t\t— "RGB_GREEN"Включено\n"RGB_WHITE);
	
	if(gFam[playerid] == 1) strcat(str, "3) Family чат\t\t— "RGB_RED"Отключено\n"RGB_WHITE);
	else  strcat(str, "3) Family чат\t\t— "RGB_GREEN"Включено\n"RGB_WHITE);
	
	if(DClog[playerid] == 0) strcat(str, "4) Вход/Выход\t\t— "RGB_RED"Отключено\n"RGB_WHITE);
	else strcat(str, "4) Вход/Выход\t\t— "RGB_GREEN"Включено\n"RGB_WHITE);
	
	if(GetPVarInt(playerid, "VipLevel") < 1 && GetPVarInt(playerid,"AdminLevel") < 1 && GetPVarInt(playerid,"Leader") == 0)
	{
	    strcat(str, "5) ПМ сообщения\t— "RGB_GREY"Недоступно\n"RGB_WHITE);
	    strcat(str, "6) Телефон\t\t— "RGB_GREY"Недоступно\n"RGB_WHITE);
	}
	else
	{
		if(GetPVarInt(playerid, "TogWhisper") == 1) strcat(str, "5) ПМ сообщения\t— "RGB_RED"Отключено\n"RGB_WHITE);
		else  strcat(str, "5) ПМ сообщения\t— "RGB_GREEN"Включено\n"RGB_WHITE);
	
		if(GetPVarInt(playerid, "TogPhone") == 1) strcat(str, "6) Телефон\t\t— "RGB_RED"Отключено\n"RGB_WHITE);
		else  strcat(str, "6) Телефон\t\t— "RGB_GREEN"Включено\n"RGB_WHITE);
	}
	
	if(GetPVarInt(playerid, "Shoot_Sound") == 1) strcat(str, "7) Shoot Sound\t\t— "RGB_GREEN"Включено"RGB_WHITE);
	else strcat(str, "7) Shoot Sound\t\t— "RGB_RED"Отключено"RGB_WHITE);
	
    return ShowPlayerDialog(playerid, 203, DIALOG_STYLE_LIST, RGB_SERVER"Настройки", str, "Выбор","Назад");
}
stock ShowNameChangeMenu(playerid)
{
	if(GetPVarInt(playerid, "AllowNameChange") < 1) return ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена ника", "{bbbbbb}У Вас нет возможности менять ник. Для этого необходимо приобрести VIP аккаунт 2 и выше уровня.", "Ок", "");

	new getMail[64];
	GetPVarString(playerid, "Mail", getMail, 64);

	if(strcmp(getMail, "no", true ) == 0 ) return ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена ника", "{bbbbbb}Для смены ника необходимо иметь подтвержденный E-Mail.", "Ок", "");

	new st[256];
	format(st, sizeof(st), "{bbbbbb}Для смены ника Вам будет необходимо подтвердить операцию через привязанный E-Mail\nВы можете сменить ник еще "RGB_GREEN"%d{bbbbbb} раз(а)", GetPVarInt(playerid, "AllowNameChange"));
	return ShowPlayerDialog(playerid, 200, DIALOG_STYLE_MSGBOX, RGB_SERVER"Смена ника", st, "Далее", "Отмена");
}
stock ShowVipMenu(playerid)
{
	new NameCh = GetPVarInt(playerid, "AllowNameChange");
	new CarNumberCh = GetPVarInt(playerid, "AllowCarNumberChange");

	new str[256];
	if(NameCh > 0) format(str, sizeof(str), "1) Смена ника [Осталось: %d]\n", NameCh);
	else format(str, sizeof(str), "1) {bbbbbb}Смена ника [Недоступно]"RGB_WHITE"\n");

	if(CarNumberCh > 0) format(str, sizeof(str), "%s2) Смена автомобильного номера [Осталось: %d]\n", str, CarNumberCh);
	else format(str, sizeof(str), "%s2) {bbbbbb}Смена автомобильного номера [Недоступно]\n", str);
	
	if(GetPVarInt(playerid, "TogWhisper") == 0) strcat(str, "3) Отключить личные сообщения\n");
	else strcat(str, "3) Включить личные сообщения\n");

	if(GetPVarInt(playerid, "TogPhone") == 0) strcat(str, "4) Отключить телефон");
	else strcat(str, "4) Включить телефон");


    return ShowPlayerDialog(playerid, 303, DIALOG_STYLE_LIST, RGB_SERVER"VIP-опции", str, "Далее","Назад");
}
stock CheckRPname(name[])
{
	new isvalidname = 0;

	new namesize = strlen(name);
	new defisplace = 0; // Разделитель имени и фамилии "_"

	switch(name[namesize-1])
	{
	    case '_', 'A'..'Z': return 0; // Последний сивол ника не может быть "_" и заглавной буквой
	}

	for(new i; i < namesize; i++)
	{
    	switch(name[i])
		{
		    case '_':
			{
				isvalidname++;
				defisplace = i;
			}
		}
	}
	if(isvalidname != 1) return 0; // Проверям пробел между именем и фамилией, он может быть только 1


	switch(name[0])
	{
	    case 'A'..'Z': {}
	    default: return 0; // первый символ ника должен быть с заглавной буквой
	}

	if(defisplace+1 < namesize)
	{
		switch(name[defisplace+1])
		{
		    case 'A'..'Z': {}
		    default: return 0; // Первый символ фамилии только с заглавной буквы
		}
	}

	for(new i = 1; i < defisplace; i++) // Проверим Имя, без первой буквы
	{
	    switch(name[i])
	    {
	        case 'a'..'z': {}
	        default: return 0; // Все символы кроме первого в нике должны быть строчными, не допускаются др. символы
		}
	}

	new validsurname = 0;
	

	for(new i = defisplace+1; i < namesize; i ++) // Проверим фамилию
	{
  		switch(name[i])
  		{
      		case 'a'..'z': {}
			case 'A'..'Z': validsurname++;
			default: return 0; // Если в фамилии есть символы кроме букв
		}
	}
	if(validsurname == 0 || validsurname > 2) return 0; // можно 1 символ заглавный помимо первой буквы в фамилии

	return 1;
}

stock SendPmMessage(color, string[], sender, toPlayer)
{
	new checkPm;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
            checkPm = GetPVarInt(i, "readPmPlayer");
        	if(ReadPm[i] == 1 || checkPm == sender || checkPm == toPlayer) SendClientMessage(i, color, string);
		}
	}
}

stock SetCheckpointLoadOil(playerid, cp)
{
	switch(cp)
 	{
 	    case 0:  {}
  		case 1:  SetPlayerRaceCheckpoint(playerid, 1, 344.048095,1292.806030,12.48428, 0.0, 0.0, 0.0, 7.0);
    	case 2:  SetPlayerRaceCheckpoint(playerid, 1, 411.274871,1412.012084,7.585937, 0.0, 0.0, 0.0, 7.0);
     	case 3:  SetPlayerRaceCheckpoint(playerid, 1, 397.445678,1459.212768,6.959877, 0.0, 0.0, 0.0, 7.0);
      	case 4:  SetPlayerRaceCheckpoint(playerid, 1, 495.921600,1387.241943,4.496039, 0.0, 0.0, 0.0, 7.0);
       	default: SetPlayerRaceCheckpoint(playerid, 1, 483.156921,1306.229980,9.277858, 0.0, 0.0, 0.0, 7.0);
    }
    return 1;
}



stock ShowHPanel(playerid)
{
    new id = GetPVarInt(playerid, "House");

	if(CheckHouse(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#11)");

    new str[512];

    if(HouseInfo[id][hLock] == 1) format(str, sizeof(str), "Дверь:\t\t"RGB_RED"Закрыта"RGB_WHITE"\n");
	else format(str, sizeof(str), "Дверь:\t\t"RGB_GREEN"Открыта"RGB_WHITE"\n");

	if(HouseInfo[id][hRentabil] == 1) format(str, sizeof(str), "%sАренда:\t"RGB_GREEN"$%d"RGB_WHITE"\n", str, HouseInfo[id][hRent]);
	else format(str, sizeof(str), "%sАренда:\t"RGB_RED"Недоступна"RGB_WHITE"\n", str);

	if(HouseInfo[id][hHel] == 1) format(str, sizeof(str), "%sАптечка:\t"RGB_GREEN"Есть"RGB_WHITE"\n", str);
	else format(str, sizeof(str), "%sАптечка:\t"RGB_RED"Отсутствует"RGB_WHITE"\n", str);

	if(HouseInfo[id][hArm] == 1) format(str, sizeof(str), "%sБронежилет:\t"RGB_GREEN"Есть"RGB_WHITE"\n", str);
	else format(str, sizeof(str), "%sБронежилет:\t"RGB_RED"Отсутствует"RGB_WHITE"\n", str);

	if(HouseInfo[id][hSignal] == 1) format(str, sizeof(str), "%sСигнализация:\t"RGB_GREEN"Есть"RGB_WHITE"\n", str);
	else format(str, sizeof(str), "%sСигнализация:\t"RGB_RED"Отсутствует"RGB_WHITE"\n", str);
	
	format(str, sizeof(str), "%sДеньги:\t"RGB_GREEN"$%d\n", str, HouseInfo[id][hMoney]);
	format(str, sizeof(str), "%sНаркотики:\t"RGB_GREEN"%d\n", str, HouseInfo[id][hNarks]);
	format(str, sizeof(str), "%sМатериалы:\t"RGB_GREEN"%d", str, HouseInfo[id][hMats]);

	return ShowPlayerDialog(playerid, 245, DIALOG_STYLE_LIST, RGB_SERVER"Меню дома", str, "Выбор", "Готово");
}
// -----------------------------------------------
stock ShowBPanel(playerid)
{
	new id = GetPVarInt(playerid, "Bizz");
	
	if(CheckBiz(playerid, id)) return SendClientMessage(playerid, COLOR_WHITE, RGB_RED"x "RGB_WHITE"Произошла ошибка (#7)");
	
	new str[512];
	new bname[40];
	switch(id)
	{
  		case 0..99: // Бизнес
  		{
			format(str, sizeof(str), "Название: "RGB_SERVER"\t\t%s"RGB_WHITE"\n", BizzInfo[id][bDiscription]);
			format(str, sizeof(str), "%sКонтроль: "RGB_SERVER"\t\t%s"RGB_WHITE"\n", str, ReturnBSWName(BizzInfo[id][bExtortion]));
			format(str, sizeof(str), "%sСтоимость входа: "RGB_SERVER"\t$%d"RGB_WHITE"\n", str, BizzInfo[id][bEntranceCost]);
			format(str, sizeof(str), "%sБаланс: "RGB_SERVER"\t\t$%d"RGB_WHITE"\n", str, BizzInfo[id][bMoney]);

			if(BizzInfo[id][bLocked] == 0) format(str, sizeof(str), "%sВход: "RGB_GREEN"\t\t\tОткрыт"RGB_WHITE"\n", str);
			else format(str, sizeof(str), "%sВход: "RGB_RED"\t\t\tЗакрыт"RGB_WHITE"\n", str);
			format(str, sizeof(str), "%sЗакупка товара: "RGB_SERVER"\t$%d [%d/%d]"RGB_WHITE"\n", str, BizzInfo[id][bPriceProd], BizzInfo[id][bProducts], BizzInfo[id][bMaxProducts]);
            format(str, sizeof(str), "%sПроцент мафии: "RGB_SERVER"\t\t%d%%", str, BizzInfo[id][bProcent]);

			format(bname, sizeof(bname), RGB_SERVER"| %s |", BizzInfo[id][bDiscription]);
		}
		case 100..200: // Сбизнес
		{
		    id -= 100;

			format(str, sizeof(str), "Название: "RGB_SERVER"\t\t%s"RGB_WHITE"\n", SBizzInfo[id][sbDiscription]);
			format(str, sizeof(str), "%sКонтроль "RGB_SERVER"\t\t%s"RGB_WHITE"\n", str, ReturnBSWName(SBizzInfo[id][sbExtortion]));
			format(str, sizeof(str), "%sСтоимость услуг: "RGB_SERVER"\t$%d"RGB_WHITE"\n", str, SBizzInfo[id][sbEntranceCost]);
			
			format(str, sizeof(str), "%sБаланс: "RGB_SERVER"\t\t$%d"RGB_WHITE"\n", str, SBizzInfo[id][sbMoney]);

			if(SBizzInfo[id][sbLocked] == 0) format(str, sizeof(str), "%sСостояние: "RGB_GREEN"\t\tРаботает"RGB_WHITE"\n", str);
			else format(str, sizeof(str), "%sСостояние: "RGB_RED"\t\tНе работает"RGB_WHITE"\n", str);

			// Тут изменить на "Зарплата рабочим" для нефтезавода и т.д.
			if(id == OIL_COMPANY) format(str, sizeof(str), "%sЗарплата рабочим: "RGB_SERVER"\t$%d"RGB_WHITE"\n", str, SBizzInfo[id][sbPriceProd]);
			else format(str, sizeof(str), "%sЗакупка товара: "RGB_SERVER"\t$%d [%d/%d]"RGB_WHITE"\n", str, SBizzInfo[id][sbPriceProd], SBizzInfo[id][sbProducts], SBizzInfo[id][sbMaxProducts]);

            format(str, sizeof(str), "%sПроцент мафии: "RGB_SERVER"\t\t%d%%", str, SBizzInfo[id][sbProcent]);

			format(bname, sizeof(bname), RGB_SERVER"| %s |", SBizzInfo[id][sbDiscription]);
		}
		case 255: return SendClientMessage(playerid, COLOR_GREY, "У Вас нет бизнеса");
	}
	return ShowPlayerDialog(playerid, 214, DIALOG_STYLE_LIST, bname, str, "Выбор", "Готово");
}

stock ReturnBSWName(sname)
{
	new text[30];
	switch(sname)
	{
	    case 5: text = "La Cosa Nostra";
	    case 6: text = "Yakuza";
	    case 12: text = "Russian Mafia";
	    default: text = "Отсутствует";
	}
	return text;
}
	    
stock ShowBOptions(playerid, option)
{
	new id = GetPVarInt(playerid, "Bizz");
	new str[256];

	switch(option)
	{
	    case 0: // Название
	    {
			switch(id)
			{
			    case 0..99:     format(str, sizeof(str), RGB_WHITE"Название бизнеса: %s\nУкажите новое название: "RGB_GREY"(1-30 символов)", BizzInfo[id][bDiscription]);
			    case 100..200:  format(str, sizeof(str), RGB_WHITE"Название бизнеса: %s\nУкажите новое название: "RGB_GREY"(1-30 символов)", SBizzInfo[id-100][sbDiscription]);
	    	}
            return ShowPlayerDialog(playerid, 215, DIALOG_STYLE_INPUT, RGB_SERVER"Название бизнеса", str, "Готово", "Назад");
		}
	    case 1: // Совладелец
	    {
            return ShowPlayerDialog(playerid, 216, DIALOG_STYLE_LIST, RGB_SERVER"Контроль бизнеса", "La Cosa Nostra\nYakuza\nRussian Mafia\nНет", "Готово", "Назад");
		}
	    case 2: // Вход
	    {
			switch(id)
			{
			    case 0..99:     	 format(str, sizeof(str), RGB_WHITE"Стоимость входа: $%d\nУкажите стоимость входа: "RGB_GREY"(От $1 до $5000)", BizzInfo[id][bEntranceCost]);
/* Заправки */	case 103:  			 format(str, sizeof(str), RGB_WHITE"Стоимость бензина: $%d\nУкажите стоимость бензина: "RGB_GREY"(От $1 до $8 за 1 литр)", SBizzInfo[id-100][sbEntranceCost]);
				case 115..129:       format(str, sizeof(str), RGB_WHITE"Стоимость бензина: $%d\nУкажите стоимость бензина: "RGB_GREY"(От $9 до $12 за 1 литр)", SBizzInfo[id-100][sbEntranceCost]);
				case OIL_COMPANY+100:format(str, sizeof(str), RGB_WHITE"Стоимость продажи нефти: $%d\nУкажите стоимость нефти: "RGB_GREY"(От $1 до $7 за 1 баррель)", SBizzInfo[id-100][sbEntranceCost]);
				default:             format(str, sizeof(str), RGB_WHITE"Стоимость услуг: $%d\nУкажите стоимость услуг: "RGB_GREY"(Услуги Вашего бизнеса)", SBizzInfo[id-100][sbEntranceCost]);
			}
            return ShowPlayerDialog(playerid, 217, DIALOG_STYLE_INPUT, RGB_SERVER"Цены на услуги", str, "Готово", "Назад");
	    }
	    case 3: // Баланc
	    {
			switch(id)
			{
			    case 0..99:     format(str, sizeof(str), "Снять деньги ($%d)\nПоложить на баланс", BizzInfo[id][bMoney]);
				case 100..200:  format(str, sizeof(str), "Снять деньги ($%d)\nПоложить на баланс", SBizzInfo[id-100][sbMoney]);
			}
			return ShowPlayerDialog(playerid, 218, DIALOG_STYLE_LIST, RGB_SERVER"Баланс бизнеса", str, "Далее", "Назад");
	    }
	    case 4: // Закрыт открыт
	    {
			switch(id)
			{
			    case 0..99:
				{
					if(BizzInfo[id][bLocked] == 0) BizzInfo[id][bLocked] = 1;
					else BizzInfo[id][bLocked] = 0;
				}
				case 100..200:
				{
					if(SBizzInfo[id-100][sbLocked] == 0) SBizzInfo[id-100][sbLocked] = 1;
					else SBizzInfo[id-100][sbLocked] = 0;
				}
			}
			ShowBPanel(playerid);
			return 1;
	    }
	    case 5: // Цена продов
	    {
			switch(id)
			{
			    case 0..99:				format(str, sizeof(str), RGB_WHITE"Цена на закупку товара: $%d\nУкажите новую цену: "RGB_GREY"(Цена за единицу продукта)", BizzInfo[id][bPriceProd]);
				case 103:   			format(str, sizeof(str), RGB_WHITE"Цена на закупку нефти: $%d\nУкажите новую цену: "RGB_GREY"(Цена за 1 баррель (~3 литра))", SBizzInfo[id-100][sbPriceProd]);
				case 115..129:  		format(str, sizeof(str), RGB_WHITE"Цена на закупку бензина: $%d\nУкажите новую цену: "RGB_GREY"(Цена за 1 литр)", SBizzInfo[id-100][sbPriceProd]);
				case OIL_COMPANY+100:	format(str, sizeof(str), RGB_WHITE"Зарплата рабочим: $%d\nУкажите новую цену: "RGB_GREY"(Зарплата для грузчиков, за 1 бочку)", SBizzInfo[id-100][sbPriceProd]);
				default:  				format(str, sizeof(str), RGB_WHITE"Цена на закупку товара: $%d\nУкажите новую цену: "RGB_GREY"(Цена за единицу продукта)", SBizzInfo[id-100][sbPriceProd]);
	    	}
            return ShowPlayerDialog(playerid, 219, DIALOG_STYLE_INPUT, RGB_SERVER"Закупка товара", str, "Готово", "Назад");
	    }

	    case 6: // Снять деньги
		{
			switch(id)
			{
			    case 0..99:     format(str, sizeof(str), RGB_WHITE"На балансе: $%d\nСколько денег хотите снять: "RGB_GREY"(Не более, чем есть в бизнесе)", BizzInfo[id][bMoney]);
			    case 100..200:  format(str, sizeof(str), RGB_WHITE"На балансе: $%d\nСколько денег хотите снять: "RGB_GREY"(Не более, чем есть в бизнесе)", SBizzInfo[id-100][sbMoney]);
	    	}
            return ShowPlayerDialog(playerid, 220, DIALOG_STYLE_INPUT, RGB_SERVER"Снять деньги", str, "Готово", "Назад");
		}
		case 7: // Положить деньги
		{
			switch(id)
			{
			    case 0..99:     format(str, sizeof(str), RGB_WHITE"У Вас на руках: $%d\nСколько денег хотите положить: "RGB_GREY"(Не более $1.000.000)", GetPlayerPCash(playerid));
			    case 100..200:  format(str, sizeof(str), RGB_WHITE"У Вас на руках: $%d\nСколько денег хотите положить: "RGB_GREY"(Не более $1.000.000)", GetPlayerPCash(playerid));
	    	}
            return ShowPlayerDialog(playerid, 221, DIALOG_STYLE_INPUT, RGB_SERVER"Положить деньги", str, "Готово", "Назад");
		}
		case 8: // Процент заместителя
		{
			switch(id)
			{
			    case 0..99:     format(str, sizeof(str), RGB_WHITE"Укажите долю от прибыли для совладельца (Текущий процент: %d%%):"RGB_GREY" (От 0%% до 50%%)", BizzInfo[id][bProcent]);
			    case 100..200:  format(str, sizeof(str), RGB_WHITE"Укажите долю от прибыли для совладельца (Текущий процент: %d%%):"RGB_GREY" (От 0%% до 50%%)", SBizzInfo[id-100][sbProcent]);
	    	}
            return ShowPlayerDialog(playerid, 268, DIALOG_STYLE_INPUT, RGB_SERVER"Доля совладельца", str, "Готово", "Назад");
		}
	}
	return 1;
}

stock ShowGSInfo(playerid, FuelStation)
{
	new str[30], string[256];
	format(str, sizeof(str), RGB_SERVER"АЗС [%d]", FuelStation);
	format(string, sizeof(string), RGB_WHITE"Вы можете продать бензин по цене: $%d / литр\nЗаполнение заправки: %d / %d", SBizzInfo[FuelStation][sbPriceProd], SBizzInfo[FuelStation][sbProducts], SBizzInfo[FuelStation][sbMaxProducts]);
 	return ShowPlayerDialog(playerid, 222, DIALOG_STYLE_INPUT, str, string, "Продать", "Отмена");
}

stock isAValidDonateSkin1(carid)
{
	switch(carid)
	{
	    case 1,2,7,14,16,18,19,20,23,24,26,27,29,30,35,43,45,49,50: return true;
		case 51,52,57,58,61,62,66,67,68,72,78,79..84,94,96,97,99: 	return true;
		case 101,128,132..137,143,144,146,153,154,155,156,158,159: 	return true;
		case 160,161,162,167,168,177,180,182,183,202,203,204,206: 	return true;
		case 209,212,217,220,221,230,235,239,252,253,255,258,259: 	return true;
		case 260,264,296,297,299: return true;
	}
	return false;
}

stock isAValidDonateSkin2(carid)
{
	switch(carid)
	{
	    case 9,10,31,38,39,53,54,63,75,77,87,88,89,92,130,131,138,139,140,145: return true;
		case 151,178,194,197,198,199,205,207,215,218,224,231,232,238,243: return true;
		case 244,245,251,257,298: return true;
	}
	return false;
}

stock isAValidDonateSkin3(carid)
{
	switch(carid)
	{
	    case 3, 4, 5, 6, 8, 42, 65, 86, 119, 208, 273, 289,294: return true;

	}
	return false;
}

stock showPlayerSkinsDialog(playerid)
{
	new str[24], skin[11], string[160];

    skin[0] = GetPVarInt(playerid, "Skin");
	skin[1] = GetPVarInt(playerid, "Skin1");
	skin[2] = GetPVarInt(playerid, "Skin2");
	skin[3] = GetPVarInt(playerid, "Skin3");
	skin[4] = GetPVarInt(playerid, "Skin4");
	skin[5] = GetPVarInt(playerid, "Skin5");
	
	skin[6] = GetPVarInt(playerid, "Skin6");
	skin[7] = GetPVarInt(playerid, "Skin7");
	skin[8] = GetPVarInt(playerid, "Skin8");
	skin[9] = GetPVarInt(playerid, "Skin9");
	skin[10] = GetPVarInt(playerid, "Skin10");

	for (new i; i < sizeof(skin); i++)
	{
	    if(skin[i]) format(str, sizeof(str), RGB_SERVER"id %d\n", skin[i]);
	    else format(str, sizeof(str), RGB_GREY"Пусто\n");
        strcat(string, str);
	}

	ShowPlayerDialog(playerid, 227, DIALOG_STYLE_LIST, RGB_SERVER"Выберите cкин", string, "Выбрать", "Назад");
}


stock SetPlayerTrashPoint(playerid)
{
	new cp = GetPVarInt(playerid, "Clear_Point");
	new course = GetPVarInt(playerid, "Cleaner_Course");

	if(course < 0 || course >= sizeof(TrashCoords))
	{
	    DeletePVar(playerid, "Clear_Point");
	    DisablePlayerRaceCheckpoint(playerid);
	    gPlayerCheckpointStatus[playerid] = 0;
	    return 1;
	}
	if(cp > 0)
	{
		DestroyObject(TrashObject[course][cp-1]);
		TrashObject[course][cp-1] = 0;
	}
	if(cp == sizeof(TrashCoords[]))
	{
	    switch(course)
	    {
		    case 0: SendClientMessage(playerid, COLOR_GREEN, "Территория Автобазы [LS] очищена");
			case 1: SendClientMessage(playerid, COLOR_GREEN, "Территория Банка [LS] очищена"); // v
			case 2: SendClientMessage(playerid, COLOR_GREEN, "Территория Центра [LS] очищена"); // v
			case 3: SendClientMessage(playerid, COLOR_GREEN, "Территория Отеля [LS] очищена");
			case 4: SendClientMessage(playerid, COLOR_GREEN, "Территория Автошколы [SF] очищена"); // v
			case 5: SendClientMessage(playerid, COLOR_GREEN, "Территория Отеля [SF] очищена");
			case 6: SendClientMessage(playerid, COLOR_GREEN, "Территория Вокзала [SF] очищена"); // v
	    }
	    DisablePlayerRaceCheckpoint(playerid);
	    DeletePVar(playerid, "Clear_Point");
	    SetPVarInt(playerid, "Cleaner_Course", -1);
	    gPlayerCheckpointStatus[playerid] = 0;
	    PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	    
	    GiveAchievement(playerid, 10, 1);
		return 1;
	}
	else if(cp == sizeof(TrashCoords[])-1)
	{
		if(TrashObject[course][cp] == 0)
		{
		    GivePVarInt(playerid, "Clear_Point", 1);
		    SetPlayerTrashPoint(playerid);
		    return 1;
		}
		SetPlayerRaceCheckpoint(playerid, 1, TrashCoords[course][cp][0], TrashCoords[course][cp][1], TrashCoords[course][cp][2], 0.0, 0.0, 0.0, 3.0);
	}
	else
	{
		if(TrashObject[course][cp] == 0)
		{
		    GivePVarInt(playerid, "Clear_Point", 1);
		    SetPlayerTrashPoint(playerid);
		    return 1;
		}
		SetPlayerRaceCheckpoint(playerid, 0, TrashCoords[course][cp][0], TrashCoords[course][cp][1], TrashCoords[course][cp][2], TrashCoords[course][cp+1][0], TrashCoords[course][cp+1][1], TrashCoords[course][cp+1][2], 3.0);
	}
	return 1;
}
stock ShowCleanPlaces(playerid)
{
	new str[512];
	new tr;
	
	tr = GetTotalTrash(0)*10;
	format(str, sizeof(str), RGB_SERVER"Автобаза \t[LS]"RGB_WHITE"\t— Уровень загрязнения %s%d%%\n", ReturnColor(tr), tr);
	tr = GetTotalTrash(1)*10;
	format(str, sizeof(str), "%s"RGB_SERVER"Банк \t\t[LS]"RGB_WHITE"\t— Уровень загрязнения %s%d%%\n", str, ReturnColor(tr), tr);
	tr = GetTotalTrash(2)*10;
	format(str, sizeof(str), "%s"RGB_SERVER"Центр \t\t[LS]"RGB_WHITE"\t— Уровень загрязнения %s%d%%\n", str, ReturnColor(tr), tr);
	tr = GetTotalTrash(3)*10;
	format(str, sizeof(str), "%s"RGB_SERVER"Отель \t\t[LS]"RGB_WHITE"\t— Уровень загрязнения %s%d%%\n", str, ReturnColor(tr), tr);
	tr = GetTotalTrash(4)*10;
	format(str, sizeof(str), "%s"RGB_SERVER"Автошкола \t[SF]"RGB_WHITE"\t— Уровень загрязнения %s%d%%\n", str, ReturnColor(tr), tr);
	tr = GetTotalTrash(5)*10;
	format(str, sizeof(str), "%s"RGB_SERVER"Отель \t\t[SF]"RGB_WHITE"\t— Уровень загрязнения %s%d%%\n", str, ReturnColor(tr), tr);
	tr = GetTotalTrash(6)*10;
	format(str, sizeof(str), "%s"RGB_SERVER"Вокзал \t[SF]"RGB_WHITE"\t— Уровень загрязнения %s%d%%", str, ReturnColor(tr), tr);
	return ShowPlayerDialog(playerid,230,DIALOG_STYLE_LIST, RGB_SERVER"Выберите точку", str,"Выбрать", "Отмена");
}
stock GetTotalTrash(id)
{
	new trash;
	for(new i; i < sizeof(TrashObject[]); i ++)
	{
	    if(TrashObject[id][i] != 0) trash++;
	}
	return trash;
}

stock ReturnColor(value)
{
	new val[9];
	switch(value)
	{
		case 0..10:  val = "{fbf502}";
		case 11..20: val = "{fbca02}";
		case 21..30: val = "{fbb502}";
		case 31..40: val = "{fba102}";
		case 41..50: val = "{fb8f02}";
		case 51..60: val = "{fb7d02}";
		case 61..70: val = "{fb6802}";
		case 71..80: val = "{fb5402}";
		case 81..90: val = "{fb3e02}";
		default:     val = "{fb2a02}";
	}
	return val;
}

forward CleanerEndJob(playerid);
public CleanerEndJob(playerid)
{
	if(TimerEndCleanerWork[playerid] != -1)
	{
	    KillTimer(TimerEndCleanerWork[playerid]);
	    TimerEndCleanerWork[playerid] = -1;
	}
	if(GetPVarInt(playerid, "OnCleanerJob") == 1)
	{
	    new string[128];
		for(new i; i < sizeof(PlayerCleaner); i++)
		{
			if(PlayerCleaner[i] == playerid)
			{
				 PlayerCleaner[i] = -1;
				 break;
			}
		}

		new totalmoney = GetPVarInt(playerid, "TotalGetTrash") * 60;

		format(string, sizeof(string), "Вы закончили работу и заработали: $%d", totalmoney);
		SendClientMessage(playerid, COLOR_GREEN, string);

		format(string, 24, "~g~+%d$", totalmoney);
		GameTextForPlayer(playerid, string, 3500, 1);

		GivePlayerPCash(playerid, totalmoney, "CleanerEndJob");

		DeletePVar(playerid, "OnCleanerJob");
		DeletePVar(playerid, "TotalGetTrash");
		DeletePVar(playerid, "Cleaner_Course");
		RemovePlayerMapIcon(playerid, ICON_JOB);

        gPlayerCheckpointStatus[playerid] = 0;
	    DisablePlayerRaceCheckpoint(playerid);
	}
	return 1;
}


stock SetRandomDumpCP(playerid)
{
	new dot = random(sizeof(DumpDots));
	SetPlayerRaceCheckpoint(playerid, 1, DumpDots[dot][0], DumpDots[dot][1], DumpDots[dot][2], 0.0, 0.0, 0.0, 1.0);//cp1
	SetPVarInt(playerid, "DumpDot", dot);
	return 1;
}
forward FindTrashDump(playerid);
public FindTrashDump(playerid)
{
	if(GetPVarInt(playerid, "OnDumpJob") != 1) return 1;
	new rand = random(10);
	if(rand != 5)
	{
	    switch(random(3))
	    {
	    	case 0:  SetPlayerAttachedObject(playerid, 4, 1327, 1, 0.28, 0.6, 0.0, 0.0, 8.0, 0.0, 0.4, 0.4, 0.4); //Skin 258
	    	case 1:  SetPlayerAttachedObject(playerid, 4, 2937, 1, 0.05, 0.5, 0.0, 0.0, 98.0, 91.0, 1.0, 1.0, 1.0);
	    	default: SetPlayerAttachedObject(playerid, 4, 1335, 1, 0.35, 0.5, 0.0, 0.0, 98.0, 91.0, 0.3, 0.3, 0.3);
	    }
		ApplyAnimation(playerid,"CARRY","liftup",4.1,0,1,1,1,1,1);
		SetTimerEx("animliftup", 1000, false, "i", playerid);
		SetPlayerRaceCheckpoint(playerid, 2, 2115.214111,-2010.243408,13.546875, 0.0, 0.0, 0.0, 2.0);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_DUMPLOAD;
		SetPVarInt(playerid, "AntiCheatDump", gettime()+5);
		TotalPlayerRun[playerid] = 0;
	}
	else
	{
	    ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
     	gPlayerCheckpointStatus[playerid] = CHECKPOINT_FINDONDUMP;
	    SetRandomDumpCP(playerid);
	}
	return 1;
}

stock ShowCommons(playerid, step)
{
	new str[256];
	new fid = ReturnFractionID(playerid);
	if(fid == 255) return 1;
	switch(step)
	{
	    case 0:
	    {
	        if(GetPVarInt(playerid, "Leader") == 0) format(str, sizeof(str), "Наркотики\t— "RGB_SERVER"%d гр."RGB_WHITE"\nМатериалы\t— "RGB_SERVER"%d ед."RGB_WHITE"\nДеньги\t\t— "RGB_SERVER"$%d", CommonInfo[fid][Drugs], CommonInfo[fid][Materials], CommonInfo[fid][Cash]);
			else format(str, sizeof(str), "Наркотики\t— "RGB_SERVER"%d гр."RGB_WHITE"\nМатериалы\t— "RGB_SERVER"%d ед."RGB_WHITE"\nДеньги\t\t— "RGB_SERVER"$%d"RGB_WHITE"\nВзять наркотики\nВзять материалы\nВзять деньги\nСменить код", CommonInfo[fid][Drugs], CommonInfo[fid][Materials], CommonInfo[fid][Cash]);
			ShowPlayerDialog(playerid, 238, DIALOG_STYLE_LIST, RGB_SERVER"Общак", str, "Далее", "Назад");
		}
		case 1:
		{
		    format(str, sizeof(str), RGB_WHITE"В общаке %d грамм наркотиков\nСколько хотите положить наркотиков в общак?", CommonInfo[fid][Drugs]);
			ShowPlayerDialog(playerid, 239, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики",  str, "Готово", "Назад");
		}
		case 2:
		{
			format(str, sizeof(str), RGB_WHITE"В общаке %d единиц материалов\nСколько хотите положить материалов в общак?", CommonInfo[fid][Materials]);
			ShowPlayerDialog(playerid, 240, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы",  str, "Готово", "Назад");
		}
		case 3:
		{
			format(str, sizeof(str), RGB_WHITE"В общаке $%d\nСколько хотите положить денег в общак?", CommonInfo[fid][Cash]);
			ShowPlayerDialog(playerid, 241, DIALOG_STYLE_INPUT, RGB_SERVER"Деньги",  str, "Готово", "Назад");
		}

		// -------------- для лидера --------------
		case 4:
		{
		    if(GetPVarInt(playerid, "Access_Common") != 1)
			{
			    SetPVarInt(playerid, "Common_Return_To", 4);
				return ShowCommons(playerid, 8);
			}
		    format(str, sizeof(str), RGB_WHITE"В общаке %d грамм наркотиков\nСколько хотите взять наркотиков?", CommonInfo[fid][Drugs]);
			ShowPlayerDialog(playerid, 242, DIALOG_STYLE_INPUT, RGB_SERVER"Наркотики",  str, "Готово", "Назад");
		}
		case 5:
		{
		    if(GetPVarInt(playerid, "Access_Common") != 1)
			{
			    SetPVarInt(playerid, "Common_Return_To", 5);
				return ShowCommons(playerid, 8);
			}
			format(str, sizeof(str), RGB_WHITE"В общаке %d единиц материалов\nСколько хотите взять материалов?", CommonInfo[fid][Materials]);
			ShowPlayerDialog(playerid, 243, DIALOG_STYLE_INPUT, RGB_SERVER"Материалы",  str, "Готово", "Назад");
		}
		case 6:
		{
		    if(GetPVarInt(playerid, "Access_Common") != 1)
			{
			    SetPVarInt(playerid, "Common_Return_To", 6);
				return ShowCommons(playerid, 8);
			}
			format(str, sizeof(str), RGB_WHITE"В общаке $%d\nСколько хотите взять денег?", CommonInfo[fid][Cash]);
			ShowPlayerDialog(playerid, 244, DIALOG_STYLE_INPUT, RGB_SERVER"Деньги",  str, "Готово", "Назад");
		}
		case 7:
		{
		    if(GetPVarInt(playerid, "Access_Common") != 1)
			{
			    SetPVarInt(playerid, "Common_Return_To", 7);
				return ShowCommons(playerid, 8);
			}
		    ShowPlayerDialog(playerid, 338, DIALOG_STYLE_INPUT, RGB_SERVER"Установите код доступа",  RGB_WHITE"Введите новый код доступа:", "Готово", "Назад");
		}
		case 8:
		{
        	ShowPlayerDialog(playerid, 339, DIALOG_STYLE_INPUT, RGB_SERVER"Код доступа",  RGB_WHITE"Введите текущий код доступа:", "Готово", "Назад");
		}
	}
	return 1;
}

stock ShowWantedList(playerid)
{
	if(GetPVarInt(playerid, "AntiFloodSusp") > gettime())
	{
	    return SendClientMessage(playerid, COLOR_GREEN, "Компьютер не может обрабатывать базу преступников так часто, подождите...");
	}
	globalstr = "";
	new name[24];
	new totalcrim;
	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	for(new i; i < MAX_PLAYERS; i ++)
	{
  		if(WantedLevel[i] > 0)
    	{
			if(IsPlayerInRangeOfPoint(i, 1000.0, pos[0], pos[1], pos[2]))
			{
	     		GetPlayerName(i, name, sizeof(name));
				format(globalstr, sizeof(globalstr), "%s%s "RGB_GREEN"[ID: %d | WANTED: %d]"RGB_WHITE"\n", globalstr, name, i, WantedLevel[i]);
				totalcrim ++;
	 			if(totalcrim == 40)
				{
					break;
				}
			}
   		}
	}
	if(totalcrim == 0)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "В Вашем районе нет подозреваемых");
	    SetPVarInt(playerid, "AntiFloodSusp", gettime()+5); // чтобы не флудили лишними циклами
	}
	else
	{
		ShowPlayerDialog(playerid, 253, DIALOG_STYLE_LIST, RGB_SERVER"Wanted List", globalstr, "Выбрать", "Отмена");
	}
	globalstr = "";
	return 1;
}

forward Duel_Count(playerid, count);
public Duel_Count(playerid, count)
{
	if(GetPVarInt(playerid, "On_Duel") == 0) return 1;
    new id = GetPVarInt(playerid, "Duel_Play");

	switch(count)
	{
	    case 3:
		{
			GameTextForPlayer(playerid, "~g~3", 1100, 6);
			GameTextForPlayer(id, 		"~g~3", 1100, 6);
			
			PlayerPlaySound(id, 		1056, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1056, 0.0, 0.0, 0.0);
		}
	    case 2:
		{
			GameTextForPlayer(playerid, "~g~2", 1100, 6);
			GameTextForPlayer(id, 		"~g~2", 1100, 6);
			
			PlayerPlaySound(id, 		1056, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1056, 0.0, 0.0, 0.0);
		}
	    case 1:
		{
			GameTextForPlayer(playerid, "~g~1", 1100, 6);
			GameTextForPlayer(id, 		"~g~1", 1100, 6);
			
			PlayerPlaySound(id, 		1056, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1056, 0.0, 0.0, 0.0);
		}
	    case 0:
	    {
			GameTextForPlayer(playerid, "~g~GO!!!", 2000, 6);
			GameTextForPlayer(id, 		"~g~GO!!!", 2000, 6);
			
			PlayerPlaySound(id, 		1057, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1057, 0.0, 0.0, 0.0);
			
			
			if(GetPVarInt(id, "Duel_Gun_1") != 0)
			{
   				GivePlayerWeaponUAC(id, GetPVarInt(id, "Duel_Gun_1"), 999);
			    GivePlayerWeaponUAC(playerid, GetPVarInt(id, "Duel_Gun_1"), 999);
			}
			if(GetPVarInt(id, "Duel_Gun_2") != 0)
			{
   				GivePlayerWeaponUAC(id, GetPVarInt(id, "Duel_Gun_2"), 999);
			    GivePlayerWeaponUAC(playerid, GetPVarInt(id, "Duel_Gun_2"), 999);
			}
			if(GetPVarInt(id, "Duel_Gun_3") != 0)
			{
   				GivePlayerWeaponUAC(id, GetPVarInt(id, "Duel_Gun_3"), 999);
			    GivePlayerWeaponUAC(playerid, GetPVarInt(id, "Duel_Gun_3"), 999);
			}
			
			SetPVarInt(playerid, "CantGiveWeapon", 1);
			SetPVarInt(id, "CantGiveWeapon", 1);
	    }
	}
	return 1;
}
forward ReturnToHole_Duel(playerid);
public ReturnToHole_Duel(playerid)
{
	ResetPlayerWeaponsUAC(playerid);
	oSetPlayerPos(playerid, 308.648742,-163.928527,999.593750);
  	SetPlayerFacingAngle(playerid, 235.268737);
  	SetPlayerInterior(playerid, 6);
  	SetPlayerVirtualWorld(playerid, 1);
  	SetPlayerWeapons(playerid);
  	SetPlayerHealthUAC(playerid, 100.0);
  	
	return 1;
}
stock ClearPVars_Duel(playerid)
{
	DeletePVar(playerid, "Duel_Money");
	DeletePVar(playerid, "Duel_Map");
	DeletePVar(playerid, "Duel_Play");
	DeletePVar(playerid, "Duel_Gun_1");
	DeletePVar(playerid, "Duel_Gun_2");
	DeletePVar(playerid, "Duel_Gun_3");
	DeletePVar(playerid, "Weapon_Select");
	DeletePVar(playerid, "Duel_Create");
	DeletePVar(playerid, "On_Duel");
	DeletePVar(playerid, "CantGiveWeapon");
	return 1;
}
stock ShowWeaponSelect(playerid)
{
	new str[256];

	new Gun1[42] = {"[Не выбрано]"};
	new Gun2[42] = {"[Не выбрано]"};
	new Gun3[42] = {"[Не выбрано]"};

	if(GetPVarInt(playerid, "Duel_Gun_1") != 0) format(Gun1, sizeof(Gun1), "[%s]", aWeaponNames[GetPVarInt(playerid, "Duel_Gun_1")]);
	if(GetPVarInt(playerid, "Duel_Gun_2") != 0) format(Gun2, sizeof(Gun2), "[%s]", aWeaponNames[GetPVarInt(playerid, "Duel_Gun_2")]);
	if(GetPVarInt(playerid, "Duel_Gun_3") != 0) format(Gun3, sizeof(Gun3), "[%s]", aWeaponNames[GetPVarInt(playerid, "Duel_Gun_3")]);

	format(str, sizeof(str), "\
	Оружие 1:\t"RGB_SERVER"%s"RGB_WHITE"\n\
	Оружие 2:\t"RGB_SERVER"%s"RGB_WHITE"\n\
	Оружие 3:\t"RGB_SERVER"%s\
	", Gun1, Gun2, Gun3);
	return ShowPlayerDialog(playerid, 257, DIALOG_STYLE_LIST, RGB_SERVER"Выбор оружия", str, "Выбор","Назад");
}
stock ShowPlayerDuelInfo(playerid)
{
	new str[270];
	new map[20];
	
	switch(GetPVarInt(playerid, "Duel_Map"))
	{
	    case 1: map = "[Депо]";
	    case 2: map = "[Небоскреб]";
	    case 3: map = "[Скала]";
	    case 4: map = "[Пустыня]";
	    case 5: map = "[Корт]";
	}
	
	new Guns[70];
	new weap = GetPVarInt(playerid, "Duel_Gun_1");
	if(weap != 0) format(Guns, sizeof(Guns), "[%s] ", aWeaponNames[weap]);
	
	weap = GetPVarInt(playerid, "Duel_Gun_2");
	if(weap != 0) format(Guns, sizeof(Guns), "%s[%s] ",Guns, aWeaponNames[weap]);

	weap = GetPVarInt(playerid, "Duel_Gun_3");
	if(weap != 0) format(Guns, sizeof(Guns), "%s[%s]",Guns, aWeaponNames[weap]);
	
	new PlayerName[40];
	new d_play = GetPVarInt(playerid, "Duel_Play");
	if(d_play != -1)
	{
		if(!IsPlayerConnected(d_play) || !ProxDetectorS(15.0, playerid, d_play))
		{
		    PlayerName = RGB_RED"[Не доступен]";
		}
		else
		{
			format(PlayerName, sizeof(PlayerName), RGB_SERVER"[%s]", GetName(d_play));
		}
	}

	new money[11];
	if(GetPVarInt(playerid, "Duel_Money") > 0)
	{
	    format(money, sizeof(money), "[$%d]", GetPVarInt(playerid, "Duel_Money"));
	}
	
	format(str, sizeof(str), "\
	Выбрать карту\t\t"RGB_SERVER"%s"RGB_WHITE"\n\
	Выбрать оружие\t"RGB_SERVER"%s"RGB_WHITE"\n\
	Установить HP\t\t"RGB_SERVER"[%.1f]"RGB_WHITE"\n\
	Ваш соперник\t\t%s"RGB_WHITE"\n\
	Ставка\t\t\t"RGB_SERVER"%s\n\
	"RGB_YELLOW"Начать", map, Guns, GetPVarFloat(playerid, "Duel_HP"), PlayerName, money);

	return ShowPlayerDialog(playerid, 255, DIALOG_STYLE_LIST, RGB_SERVER"Создание дуэли", str, "Выбор","Отмена");
}




stock MovePlayerCameraTo(playerid, speed, Float:X, Float:Y, Float:Z, Float:LX, Float:LY, Float:LZ)
{
	new Float:pos[6];
	GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
	GetPlayerCameraLookAt(playerid, pos[3], pos[4], pos[5]);

	SetPVarFloat(playerid, "Cam_X", pos[0]);
	SetPVarFloat(playerid, "Cam_Y", pos[1]);
	SetPVarFloat(playerid, "Cam_Z", pos[2]);
	SetPVarFloat(playerid, "Cam_LX", pos[3]);
	SetPVarFloat(playerid, "Cam_LY", pos[4]);
	SetPVarFloat(playerid, "Cam_LZ", pos[5]);
	
	SetPVarFloat(playerid, "BackCam_X", X);
	SetPVarFloat(playerid, "BackCam_Y", Y);
	SetPVarFloat(playerid, "BackCam_Z", Z);
	SetPVarFloat(playerid, "BackCam_LX", LX);
	SetPVarFloat(playerid, "BackCam_LY", LY);
	SetPVarFloat(playerid, "BackCam_LZ", LZ);
	
	SetPVarInt(playerid, "Cam_Speed", speed);

	InterpolateCameraPos(playerid,
	pos[0],
	pos[1],
	pos[2],
	X,
	Y,
	Z,
	speed,
	CAMERA_MOVE);

	InterpolateCameraLookAt(playerid,
	pos[3],
	pos[4],
	pos[5],
	LX,
	LY,
	LZ,
	speed);

	return 1;
}
stock MovePlayerCameraBack(playerid)
{
	new speed = GetPVarInt(playerid, "Cam_Speed");
	InterpolateCameraPos(playerid,
	GetPVarFloat(playerid, "BackCam_X"),
	GetPVarFloat(playerid, "BackCam_Y"),
	GetPVarFloat(playerid, "BackCam_Z"),
	GetPVarFloat(playerid, "Cam_X"),
	GetPVarFloat(playerid, "Cam_Y"),
	GetPVarFloat(playerid, "Cam_Z"),
	speed,
	CAMERA_MOVE);

	InterpolateCameraLookAt(playerid,
	GetPVarFloat(playerid, "BackCam_LX"),
	GetPVarFloat(playerid, "BackCam_LY"),
	GetPVarFloat(playerid, "BackCam_LZ"),
	GetPVarFloat(playerid, "Cam_LX"),
	GetPVarFloat(playerid, "Cam_LY"),
	GetPVarFloat(playerid, "Cam_LZ"),
	speed);

	DeletePVar(playerid, "Cam_X");
	DeletePVar(playerid, "Cam_Y");
	DeletePVar(playerid, "Cam_Z");
	DeletePVar(playerid, "Cam_LX");
	DeletePVar(playerid, "Cam_LY");
	DeletePVar(playerid, "Cam_LZ");
	DeletePVar(playerid, "BackCam_LZ");
	DeletePVar(playerid, "BackCam_LZ");
	DeletePVar(playerid, "BackCam_LZ");
	DeletePVar(playerid, "BackCam_LZ");
	DeletePVar(playerid, "BackCam_LZ");
	DeletePVar(playerid, "BackCam_LZ");
	DeletePVar(playerid, "Cam_Speed");
	
	SetTimerEx("CameraBehind", speed, 0, "d", playerid);
	return 1;
}

forward CameraBehind(playerid);
public CameraBehind(playerid)
{
    SetCameraBehindPlayer(playerid);
	return 1;
}
stock GetPlayerCameraLookAt(playerid, &Float:X, &Float:Y, &Float:Z)
{
    new Float:Destination[3], Float:sCamera[3], Float:Vector[3];
    
    GetPlayerPos(playerid, Destination[0], Destination[1], Destination[2]);
    GetPlayerCameraPos(playerid, sCamera[0], sCamera[1], sCamera[2]);
    GetPlayerCameraFrontVector(playerid, Vector[0], Vector[1], Vector[2]);
    
    new Float: posAngle = atan2(floatsub(Destination[1],sCamera[1]),floatsub(Destination[0],sCamera[0]));
    if(posAngle > 360) posAngle-=360; posAngle+=270; posAngle *= -1;
    Destination[0] += 5.0 * floatsin(posAngle, degrees);
    Destination[1] += 5.0 * floatcos(posAngle, degrees);
    new Float:dis = floatsqroot((sCamera[0] - Destination[0]) * (sCamera[0] - Destination[0]) + (sCamera[1] - Destination[1]) * (sCamera[1] - Destination[1]) + (sCamera[2] - Destination[2]) * (sCamera[2] - Destination[2]));
    X = Vector[0] * dis + sCamera[0]; Y = Vector[1] * dis + sCamera[1]; Z = Vector[2] * dis + sCamera[2];
}



stock GiveBizMoney(bizid, money)
{
    if (bizid >= sizeof(BizzInfo) || bizid < 0) return 1;

    From_Biz_Nalog += money/15;
    money -= money/15;
    
    if (BizzInfo[bizid][bExtortion] == 0 || BizzInfo[bizid][bProcent] == 0 || BizzInfo[bizid][bProcent] > 50 || money < 1) // Если нет зама, нет процента или процент более 50
    {
        BizzInfo[bizid][bMoney] += money; // Выдадим деньги сразу в бизнес
    }
    else // Если зам должен получить процент
    {
 		new MoneyToMafia = (BizzInfo[bizid][bProcent] * money) / 100; // Найдем процент от всей суммы
		new MoneyToBizz = money - MoneyToMafia; // Найдем сколько должно остаться в бизнес

        BizzInfo[bizid][bMoney] += MoneyToBizz; // Выдадим часть денег в бизнес

        switch(BizzInfo[bizid][bExtortion])
        {
            case 5: CommonInfo[0][Cash] += MoneyToMafia;
            case 6: CommonInfo[1][Cash] += MoneyToMafia;
            case 12: CommonInfo[3][Cash] += MoneyToMafia;
            default: BizzInfo[bizid][bMoney] += MoneyToMafia;
		}
    }
	return 1;
}

stock GiveSBizMoney(sbizid, money)
{
    if (sbizid >= sizeof(SBizzInfo) || sbizid < 0) return 1;

    From_Biz_Nalog += money/15;
    money -= money/15;
    
    if (SBizzInfo[sbizid][sbExtortion] == 0 || SBizzInfo[sbizid][sbProcent] == 0 || SBizzInfo[sbizid][sbProcent] > 50 || money < 1) // Если нет зама, нет процента или процент более 50
    {
        SBizzInfo[sbizid][sbMoney] += money; // Выдадим деньги сразу в бизнес
    }
    else // Если зам должен получить процент
    {
 		new MoneyToMafia = (SBizzInfo[sbizid][sbProcent] * money) / 100; // Найдем процент от всей суммы
		new MoneyToBizz = money - MoneyToMafia; // Найдем сколько должно остаться в бизнес

        SBizzInfo[sbizid][sbMoney] += MoneyToBizz; // Выдадим часть денег в бизнес

        switch(SBizzInfo[sbizid][sbExtortion])
        {
            case 5: CommonInfo[0][Cash] += MoneyToMafia;
            case 6: CommonInfo[1][Cash] += MoneyToMafia;
            case 12: CommonInfo[3][Cash] += MoneyToMafia;
            default: SBizzInfo[sbizid][sbMoney] += MoneyToMafia;
		}
    }
	return 1;
}


stock ShowHitmansPanel(playerid, id)
{
	switch(id)
	{
		case 0: ShowPlayerDialog(playerid, 269, DIALOG_STYLE_LIST, RGB_SERVER"Hitman's panel", "Доступные контракты\nПакеты оружия\nОтказаться от контракта", "Далее", "Отмена");
		case 1:
		{
			globalstr = "";
			new name[24];
			new totalcrim;
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			for(new i; i < MAX_PLAYERS; i ++)
			{
		  		if(GetPVarInt(i, "HeadValue") > 0)
		    	{
     				GetPlayerName(i, name, sizeof(name));
					format(globalstr, sizeof(globalstr), "%s%s "RGB_GREEN"[Награда: $%d]"RGB_WHITE"\n", globalstr, name, GetPVarInt(i, "HeadValue"));
					totalcrim ++;
	 				if(totalcrim == 40)
					{
						break;
					}
		   		}
			}
			if(totalcrim == 0)
			{
			    SendClientMessage(playerid, COLOR_GREEN, "Нет доступных контрактов");
			    ShowHitmansPanel(playerid, 0);
			}
			else
			{
				ShowPlayerDialog(playerid, 270, DIALOG_STYLE_LIST, RGB_SERVER"Доступные заказы", globalstr, "Выбрать", "Назад");
			}
			globalstr = "";
		}
		case 2:
		{
		    globalstr = "";
		    strcat(globalstr, "[$200]   Desert Eagle | Shotgun | MP5 | Knife\n");
		    strcat(globalstr, "[$400]   Desert Eagle | Shotgun | MP5 | Knife | M4\n");
		    strcat(globalstr, "[$600]   Desert Eagle | Shotgun | MP5 | Knife | AK-47\n");
		    strcat(globalstr, "[$900]   Desert Eagle | Shotgun | MP5 | Knife | M4 | Sniper Rifle\n");
		    strcat(globalstr, "[$1000] Desert Eagle | Shotgun | MP5 | Knife | AK-47 | Sniper Rifle");
			ShowPlayerDialog(playerid, 271, DIALOG_STYLE_LIST, RGB_SERVER"Пакеты оружия", globalstr, "Выбрать", "Назад");
			globalstr = "";
		}
	}
	return 1;
}




forward Quest_4_Count(playerid, c);
public Quest_4_Count(playerid, c)
{
	if(GetPVarInt(playerid, "On_Quest") != 1) return 1;
	switch(c)
	{
	    case 0:
	    {
	        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
   			InterpolateCameraPos(playerid, -1901.716918,-1234.578247,42.880271, -1901.109985,-1320.931518,42.081634, 3000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, -1901.173706,-1311.110961,38.872489, -1901.173706,-1311.110961,38.872489,3000);
			GameTextForPlayer(playerid, "~g~3", 2000, 6);
			SetTimerEx("Quest_4_Count", 1000, 0, "dd", playerid, 1);
		}
		case 1:
		{
		    PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		    GameTextForPlayer(playerid, "~g~2", 2000, 6);
		    SetTimerEx("Quest_4_Count", 1000, 0, "dd", playerid, 2);
		}
		case 2:
		{
		    PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		    GameTextForPlayer(playerid, "~g~1", 2000, 6);
		    SetTimerEx("Quest_4_Count", 1000, 0, "dd", playerid, 3);
		}
		case 3:
		{
			Quest_4_Timer[playerid] = CreatePlayerTextDraw(playerid, 481.000000,291.000000,"~y~0: 3 : 00~n~~w~points : ~g~0/24");
			PlayerTextDrawAlignment(playerid, Quest_4_Timer[playerid],0);
			PlayerTextDrawBackgroundColor(playerid, Quest_4_Timer[playerid],0x000000ff);
			PlayerTextDrawFont(playerid, Quest_4_Timer[playerid],3);
			PlayerTextDrawLetterSize(playerid, Quest_4_Timer[playerid],0.599999,1.300000);
			PlayerTextDrawColor(playerid, Quest_4_Timer[playerid],0xffffffff);
			PlayerTextDrawSetOutline(playerid, Quest_4_Timer[playerid],1);
			PlayerTextDrawSetProportional(playerid, Quest_4_Timer[playerid],1);
			PlayerTextDrawSetShadow(playerid, Quest_4_Timer[playerid], 1);

            Update_Quest_4_Time(playerid, 180);
		    PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
		    GameTextForPlayer(playerid, "~g~GO GO GO!!!", 2000, 6);
		    SetCameraBehindPlayer(playerid);
		    PlayerTextDrawShow(playerid, Quest_4_Timer[playerid]);
		    gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_4_RACE;
		    SetPlayerRaceCheckpoint(playerid, 0, -1900.440307,-1255.295654,39.371532, -1899.254760,-478.550689,38.130241, 5.0);
		}
	}
	return 1;
}


forward Update_Quest_4_Time(playerid, time);
public Update_Quest_4_Time(playerid, time)
{
    if(GetPVarInt(playerid, "On_Quest") != 1) return 1;
    if(GetPVarInt(playerid, "Quest_4_StopTimer") == 1)
    {
        DeletePVar(playerid, "Quest_4_StopTimer");
        PlayerTextDrawHide(playerid, Quest_4_Timer[playerid]);
        PlayerTextDrawDestroy(playerid, Quest_4_Timer[playerid]);
        return 1;
	}
	if(time > 0)
	{
		SetTimerEx("Update_Quest_4_Time", 1000, 0, "dd", playerid, time-1);
		new st[60];
		format(st, sizeof(st), "~y~%s~n~~w~points : ~g~%d/24", Convert(time), GetPVarInt(playerid, "Quest_4_Cp"));
		PlayerTextDrawSetString(playerid, Quest_4_Timer[playerid], st);
	}
	else
	{
 		PlayerTextDrawDestroy(playerid, Quest_4_Timer[playerid]);
        PlayerTextDrawHide(playerid, Quest_4_Timer[playerid]);

        SetPVarInt(playerid, "Quest_4_Money", 1);

 		DisablePlayerRaceCheckpoint(playerid);
		DeletePVar(playerid, "Quest_4_Cp");
   		SendClientMessage(playerid, COLOR_YELLOW, "SMS: Ты ездишь медленнее черепахи... Верни машину в гараж, заплачу за потраченное время");
		PlayerPlaySound(playerid, 23000, 0.0, 0.0, 0.0);

		gPlayerCheckpointStatus[playerid] = CHECKPOINT_QUEST_4_GARAGE;
		SetPlayerCheckpoint(playerid, -2458.928955,-122.584518,25.796709, 5.0);
	}
	return 1;
}

stock StartQuest(playerid, id)
{
	switch(id)
	{
		case -1:
		{
		    switch(random(3))
			{
				case 0: SendClientMessage(playerid, COLOR_YELLOW, "SMS: Для тебя есть новое задание. Отправляйся к метке на радаре");
				case 1: SendClientMessage(playerid, COLOR_YELLOW, "SMS: Есть новая работа для тебя. Таксофон отмечен на радаре");
				default: SendClientMessage(playerid, COLOR_YELLOW, "SMS: Если хочешь подзаработать, жду тебя у таксофона, он отмечен на радаре");
			}
			PlayerPlaySound(playerid, 23000, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "Start_Quest", 1);

			if(GetPlayerDistanceFromPoint(playerid, -1967.312744,162.018173,27.687500) < GetPlayerDistanceFromPoint(playerid, 339.657135,-1398.872558,14.389949))
			{
			    SetPlayerMapIcon(playerid, ICON_QUEST, -1967.312744,162.018173,27.687500, 37, 0, 1 );
			}
			else
			{
				SetPlayerMapIcon(playerid, ICON_QUEST, 339.657135,-1398.872558,14.389949, 37, 0, 1 );
			}
		}
		case 0:
		{
			ShowPlayerDialog(playerid, 272, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			Привет. Каждый час я буду давать тебя задания, которые ты\n\
			должен будешь выполнить для меня. За успешно выполненные\n\
			задания я буду хорошо платить тебе. Оповещать о новых\n\
			заданиях я буду тебя через SMS сообщения...", "Далее", "Отмена");
		}
		case 1:
		{
			ShowPlayerDialog(playerid, 273, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			Привет. Сегодня мне нужно, чтобы ты отвез мои деньги в банк,\n\
			но не в один, а в 3, на случай, если копы захотят отобрать мои\n\
			доходы.", "Далее", "Отмена");
		}
		case 2:
		{
			ShowPlayerDialog(playerid, 274, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			Привет. Тут на стоянке моего друга, около клуба, кто-то сильно\n\
			намусорил, а уборщик как на зло заболел. Займись пока его работой,\n\
			а то в клубе должна пройти одна встреча, даже машину не припарковать.", "Далее", "Отмена");
		}
		case 3:
		{
			ShowPlayerDialog(playerid, 275, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			Один мой гонщик должен был установить новый рекорд на трассе,\n\
			но перед самой гонкой сильно заболел. Если ты поможешь нам\n\
			установить новый рекорд, то мы получим кучу денег, про тебя\n\
			конечно же не забудем.", "Далее", "Отмена");
		}
		case 4:
		{
			ShowPlayerDialog(playerid, 276, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			Сегодня мы закупили партию оружия, её оставили на свалке,\n\
			там всё равно никого не бывает. Это оружие нужно забрать\n\
			и отвезти в укромное место.", "Далее", "Отмена");
		}
		case 5:
		{
			ShowPlayerDialog(playerid, 277, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			Всю нашу коноплю сожрали какие-то насекомые, нужно срочно от них\n\
			избавиться, пока они не испортили весь урожай. Отправляйся на\n\
			ферму, там возьмешь самолет и пролетишь над нашими полями, чтобы\n\
			разбрызгать на них яд.", "Далее", "Отмена");
		}
		default:
		{
			ShowPlayerDialog(playerid, 22, DIALOG_STYLE_MSGBOX, RGB_SERVER"Таксофон", RGB_WHITE"\
			На сегодня нет новых заданий для тебя...", "Ок", "");
		}
	}
	return 1;
}

stock ShowAchievements(playerid)
{
	new line[] = "....................................................................................................";
	new procent = (GetPVarInt(playerid, "Achievement_Peint")*100)/500; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), RGB_WHITE"Убить 500 игроков на пейнтболе:\n[%s] %d%%\n", line, procent);

	line = "....................................................................................................";
	procent = GetPVarInt(playerid, "Achievement_Duel"); if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sВыиграть 100 дуэлей:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_First_Peint")*100)/10; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗанять 1 место на пейнтболе 10 раз:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_First_Race")*100)/10; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗанять 1 место на гонках 10 раз:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	if(GetPVarInt(playerid, "Level") < 20)
	{
		procent = (GetPVarInt(playerid, "Level")*100)/20;
		if(procent >= sizeof(line))procent = 100;
	}
	else procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sНабрать 20 уровень:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Rich_Taxi")*100)/20000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗаработать $20.000 на такси:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = GetPVarInt(playerid, "Achievement_Best_Mechanic"); if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sПринять 100 вызовов будучи механиком:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Rich_Race")*100)/20000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗаработать $20.000 на гонках:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Rich_Peint")*100)/20000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗаработать $20.000 на пейнтболе:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = GetPVarInt(playerid, "Achievement_Scavenger"); if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sУбрать 100 единиц мусора:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Taxpayer")*100)/500000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗаплатить налог в размере $500.000:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Drug_Addict")*100)/1000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sУпотребить 1000 гр. наркотиков:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Criminal")*100)/1000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sПолучить 1000 звезд розыска:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Worker")*100)/200; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sСдать 200 продуктов на завод:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Loader")*100)/500; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sОтнести 500 мешков:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = GetPVarInt(playerid, "Achievement_Fisher"); if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sПоймать 100 рыб:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = (GetPVarInt(playerid, "Achievement_Shooter")*100)/150000; if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sПотратить $150.000 на аммуницию:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = GetPVarInt(playerid, "Achievement_Gangwar"); if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sЗахватить 100 территорий:\n[%s] %d%%\n", globalstr, line, procent);

	line = "....................................................................................................";
	procent = GetPVarInt(playerid, "Achievement_Copjail"); if(procent >= sizeof(line)) procent = 100;
	for(new i; i < procent; i++) line[i] = '|';
	format(globalstr, sizeof(globalstr), "%sПоймать 100 преступников:\n[%s] %d%%", globalstr, line, procent);


	ShowPlayerDialog(playerid, 196, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ваши достижения",  globalstr, "Назад", "");
	globalstr = "";
	return 1;
}

stock GiveAchievement(playerid, id, value)
{
	switch(id)
	{
	    case 1:
		{
		    if(GetPVarInt(playerid, "Achievement_Peint") < 500) GivePVarInt(playerid, "Achievement_Peint", value);
		}
	    case 2:
		{
		    if(GetPVarInt(playerid, "Achievement_Duel") < 100) GivePVarInt(playerid, "Achievement_Duel", value);
		}
	    case 3:
		{
		    if(GetPVarInt(playerid, "Achievement_First_Peint") < 10) GivePVarInt(playerid, "Achievement_First_Peint", value);
		}
	    case 4:
		{
		    if(GetPVarInt(playerid, "Achievement_First_Race") < 10) GivePVarInt(playerid, "Achievement_First_Race", value);
		}
		/* case 5: level.... */
	    case 6:
		{
		    if(GetPVarInt(playerid, "Achievement_Rich_Taxi") < 20000) GivePVarInt(playerid, "Achievement_Rich_Taxi", value);
		}
	    case 7:
		{
		    if(GetPVarInt(playerid, "Achievement_Best_Mechanic") < 100) GivePVarInt(playerid, "Achievement_Best_Mechanic", value);
		}
	    case 8:
		{
		    if(GetPVarInt(playerid, "Achievement_Rich_Race") < 20000) GivePVarInt(playerid, "Achievement_Rich_Race", value);
		}
	    case 9:
		{
		    if(GetPVarInt(playerid, "Achievement_Rich_Peint") < 20000) GivePVarInt(playerid, "Achievement_Rich_Peint", value);
		}
	    case 10:
		{
		    if(GetPVarInt(playerid, "Achievement_Scavenger") < 100) GivePVarInt(playerid, "Achievement_Scavenger", value);
		}
		/// 11
	    case 12:
		{
		    if(GetPVarInt(playerid, "Achievement_Taxpayer") < 500000) GivePVarInt(playerid, "Achievement_Taxpayer", value);
		}
	    case 13:
		{
		    if(GetPVarInt(playerid, "Achievement_Drug_Addict") < 1000) GivePVarInt(playerid, "Achievement_Drug_Addict", value);
		}
	    case 14:
		{
		    if(GetPVarInt(playerid, "Achievement_Criminal") < 1000) GivePVarInt(playerid, "Achievement_Criminal", value);
		}
	    case 15:
		{
		    if(GetPVarInt(playerid, "Achievement_Worker") < 200) GivePVarInt(playerid, "Achievement_Worker", value);
		}
	    case 16:
		{
		    if(GetPVarInt(playerid, "Achievement_Loader") < 500) GivePVarInt(playerid, "Achievement_Loader", value);
		}
	    case 17:
		{
		    if(GetPVarInt(playerid, "Achievement_Fisher") < 500) GivePVarInt(playerid, "Achievement_Fisher", value);
		}
	    case 18:
		{
		    if(GetPVarInt(playerid, "Achievement_Shooter") < 150000) GivePVarInt(playerid, "Achievement_Shooter", value);
		}
	    case 19:
		{
		    if(GetPVarInt(playerid, "Achievement_Gangwar") < 100) GivePVarInt(playerid, "Achievement_Gangwar", value);
		}
	    case 20:
		{
		    if(GetPVarInt(playerid, "Achievement_Copjail") < 100) GivePVarInt(playerid, "Achievement_Copjail", value);
		}
	}
	return 1;
}


stock AttachRobObject(playerid, id)
{
	switch(id)
	{
	    case 1719: SetPlayerAttachedObject(playerid, 1, 1719, 1, 0.070000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
	    case 1518: SetPlayerAttachedObject(playerid, 1, 1518, 1, 0.300000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
	    case 1747: SetPlayerAttachedObject(playerid, 1, 1747, 1, -0.00999, 0.200000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
	    case 1748: SetPlayerAttachedObject(playerid, 1, 1748, 1, -0.00999, 0.100000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 1750: SetPlayerAttachedObject(playerid, 1, 1750, 1, -0.00999, 0.100000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 1752: SetPlayerAttachedObject(playerid, 1, 1752, 1, -0.00999, 0.250000, 0.100000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 1783: SetPlayerAttachedObject(playerid, 1, 1783, 1, 0.070000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 1788: SetPlayerAttachedObject(playerid, 1, 1788, 1, 0.070000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 1792: SetPlayerAttachedObject(playerid, 1, 1792, 1, 0.000000, 0.200000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2103: SetPlayerAttachedObject(playerid, 1, 2103, 1, 0.000000, 0.400000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2230: SetPlayerAttachedObject(playerid, 1, 2230, 1, 0.500000, 0.200000, 0.600000, 180.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2316: SetPlayerAttachedObject(playerid, 1, 2316, 1, 0.300000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2318: SetPlayerAttachedObject(playerid, 1, 2318, 1, 0.250000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2322: SetPlayerAttachedObject(playerid, 1, 2322, 1, 0.300000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2320: SetPlayerAttachedObject(playerid, 1, 2320, 1, 0.230000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2421: SetPlayerAttachedObject(playerid, 1, 2421, 1, 0.000000, 0.300000, 0.100000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2312: SetPlayerAttachedObject(playerid, 1, 2312, 1, 0.400000, 0.500000, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2229: SetPlayerAttachedObject(playerid, 1, 2229, 1, 0.449999, 0.300000, 0.600000, 180.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2190: SetPlayerAttachedObject(playerid, 1, 2190, 1, 0.000000, 0.200000, 0.200000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2028: SetPlayerAttachedObject(playerid, 1, 2028, 1, 0.100000, 0.449999, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2102: SetPlayerAttachedObject(playerid, 1, 2102, 1, 0.000000, 0.449999, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2149: SetPlayerAttachedObject(playerid, 1, 2149, 1, 0.140000, 0.449999, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
		case 2101: SetPlayerAttachedObject(playerid, 1, 2101, 1, 0.000000, 0.449999, 0.000000, 180.000000, 90.000000, 0.000000, 1.000000, 1.000000, 1.000000); //Skin 16
	}
	return 1;
}



public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(CheckFCalls(playerid, 25)) return 1;
	// index 9 - очки
	// index 8 - шляпы
	switch(index)
	{
	    case 9:
	    {
	        SetPVarInt(playerid, "Glass_ID", modelid);
	        SetPVarFloat(playerid, "Glass_X", fOffsetX);
	        SetPVarFloat(playerid, "Glass_Y", fOffsetY);
	        SetPVarFloat(playerid, "Glass_Z", fOffsetZ);
	        SetPVarFloat(playerid, "Glass_oX", fRotX);
	        SetPVarFloat(playerid, "Glass_oY", fRotY);
	        SetPVarFloat(playerid, "Glass_oZ", fRotZ);
	    }
		case 8:
		{
	        SetPVarInt(playerid, "Cap_ID", modelid);
	        SetPVarFloat(playerid, "Cap_X", fOffsetX);
	        SetPVarFloat(playerid, "Cap_Y", fOffsetY);
	        SetPVarFloat(playerid, "Cap_Z", fOffsetZ);
	        SetPVarFloat(playerid, "Cap_oX", fRotX);
	        SetPVarFloat(playerid, "Cap_oY", fRotY);
	        SetPVarFloat(playerid, "Cap_oZ", fRotZ);
	        SetPVarFloat(playerid, "Size_X", fScaleX);
	        SetPVarFloat(playerid, "Size_Y", fScaleY);
	        SetPVarFloat(playerid, "Size_Z", fScaleZ);
		}
	}
	return 1;
}


stock ScrollManSkin(playerid, val)
{
	if(GetPVarInt(playerid, "InClothShop") == 0)
    {
    //	HideMenuForPlayer(GetPlayerMenu(playerid), playerid);
    	KickCheater(playerid, SKINCHANGE2);
    	return 1;
    }
    
	GivePVarInt(playerid, "Scroll_Skins", val);
 	new skin = GetPVarInt(playerid, "Scroll_Skins");
  	if(skin == sizeof(NormalPedsMan)) skin = 0, DeletePVar(playerid, "Scroll_Skins");
   	else if(skin < 0) skin = sizeof(NormalPedsMan)-1, SetPVarInt(playerid, "Scroll_Skins", sizeof(NormalPedsMan)-1);

	new str[40];
 	format(str, sizeof(str), "~g~$%d", NormalPedsMan[skin][1]);
  	GameTextForPlayer(playerid, str, 990000, 6);

	SetPlayerSkinEx(playerid, NormalPedsMan[skin][0]);
	return 1;
}
stock BuyManSkin(playerid)
{
	new skin = GetPVarInt(playerid, "Scroll_Skins");
	if(skin >= sizeof(NormalPedsMan) || skin < 0) skin = 0;
	if(GetPlayerPCash(playerid) < NormalPedsMan[skin][1])
	{
        return ShowPlayerDialog(playerid, 288, DIALOG_STYLE_MSGBOX, "   ", RGB_WHITE"У Вас недостаточно денег для покупки этого скина!", "Ok", "");
	}
	new st[150];
	format(st, sizeof(st), RGB_WHITE"\
	Если Вы купите этот скин, то текущий "RGB_SERVER"скин %d"RGB_WHITE" в 1 слоте будет изменен.\n\
	Вы подтверждаете покупку скина?", GetPVarInt(playerid, "Skin"));
	ShowPlayerDialog(playerid, 290, DIALOG_STYLE_MSGBOX, "   ", st, "Да", "Нет");
	return 1;
}
stock ScrollWomanSkin(playerid, val)
{
	if(GetPVarInt(playerid, "InClothShop") == 0)
    {
    //	HideMenuForPlayer(GetPlayerMenu(playerid), playerid);
    	KickCheater(playerid, SKINCHANGE2);
    	return 1;
    }
	GivePVarInt(playerid, "Scroll_Skins2", val);
 	new skin = GetPVarInt(playerid, "Scroll_Skins2");
  	if(skin == sizeof(NormalPedsWoman)) skin = 0, DeletePVar(playerid, "Scroll_Skins2");
   	else if(skin < 0) skin = sizeof(NormalPedsWoman)-1, SetPVarInt(playerid, "Scroll_Skins2", sizeof(NormalPedsWoman)-1);

	new str[40];
 	format(str, sizeof(str), "~g~$%d", NormalPedsWoman[skin][1]);
  	GameTextForPlayer(playerid, str, 990000, 6);

	SetPlayerSkinEx(playerid, NormalPedsWoman[skin][0]);
	return 1;
}
stock BuyWomanSkin(playerid)
{
	new skin = GetPVarInt(playerid, "Scroll_Skins2");
	if(skin >= sizeof(NormalPedsWoman) || skin < 0) skin = 0;
	if(GetPlayerPCash(playerid) < NormalPedsWoman[skin][1])
	{
        return ShowPlayerDialog(playerid, 289, DIALOG_STYLE_MSGBOX, "   ", RGB_WHITE"У Вас недостаточно денег для покупки этого скина!", "Ok", "");
	}
	new st[150];
	format(st, sizeof(st), RGB_WHITE"\
	Если Вы купите этот скин, то текущий "RGB_SERVER"скин %d"RGB_WHITE" в 1 слоте будет изменен.\n\
	Вы подтверждаете покупку скина?", GetPVarInt(playerid, "Skin"));
	ShowPlayerDialog(playerid, 291, DIALOG_STYLE_MSGBOX, "   ", st, "Да", "Нет");
	return 1;
}


forward CrackAnim(playerid);
public CrackAnim(playerid)
{
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 0, 0, 0, 15000, 1);
    return 1;
}

stock ClearPVars_Race_Pvp(playerid)
{
	DeletePVar(playerid, "Race_Pvp_Map");
	DeletePVar(playerid, "Race_Pvp_Play");
	DeletePVar(playerid, "Race_Pvp_Car");
	DeletePVar(playerid, "Race_Pvp_Money");
	DeletePVar(playerid, "Race_Pvp_Create");
	DeletePVar(playerid, "Race_Pvp_Play");
	DeletePVar(playerid, "Race_Pvp_On");
	DeletePVar(playerid, "Wait_Pvp_Race");
	return 1;
}

stock ShowPlayerRacePvpInfo(playerid)
{
	new str[270];
	new map[20];

	switch(GetPVarInt(playerid, "Race_Pvp_Map"))
	{
 		case 1: map = "[LS кольцо]";
   		case 2: map = "[SF кольцо]";
    	case 3: map = "[LV кольцо #1]";
	    case 4: map = "[LV спринт]";
	    case 5: map = "[LS спринт]";
	    case 6: map = "[LV кольцо #2]";
	}

	new PlayerName[40];
	new r_play = GetPVarInt(playerid, "Race_Pvp_Play");
	if(r_play != -1)
	{
		if(!IsPlayerConnected(r_play) || !ProxDetectorS(15.0, playerid, r_play))
		{
		    PlayerName = RGB_RED"[Не доступен]";
		}
		else
		{
			format(PlayerName, sizeof(PlayerName), RGB_SERVER"[%s]", GetName(r_play));
		}
	}

	new money[11];
	if(GetPVarInt(playerid, "Race_Pvp_Money") > 0) format(money, sizeof(money), "[$%d]", GetPVarInt(playerid, "Race_Pvp_Money"));

	format(str, sizeof(str), "\
	Выбрать трассу\t"RGB_SERVER"%s"RGB_WHITE"\n\
	Автомобили\t\t"RGB_SERVER"[%s]"RGB_WHITE"\n\
	Ваш соперник\t\t%s"RGB_WHITE"\n\
	Ставка\t\t\t"RGB_SERVER"%s\n\
	"RGB_YELLOW"Начать", map, Racer_Cars_Pvp[GetPVarInt(playerid, "Race_Pvp_Car")][CarName], PlayerName, money);

	return ShowPlayerDialog(playerid, 295, DIALOG_STYLE_LIST, RGB_SERVER"Создание гонки", str, "Далее","Отмена");
}
forward Race_Pvp_Count(playerid, id, count);
public Race_Pvp_Count(playerid, id, count)
{
	if(GetPVarInt(playerid, "Race_Pvp_On") == 0 || GetPVarInt(id, "Race_Pvp_On") == 0)
	{
		if(Pvp_Race_Car[playerid] != 0)
		{
			DestroyVehicle(Pvp_Race_Car[playerid]);
			Pvp_Race_Car[playerid] = 0;
		}
	    return 1;
	}

	switch(count)
	{
	    case 3:
		{
			SetPVarInt(playerid, "Wait_Pvp_Race", 1);
			SetPVarInt(id, "Wait_Pvp_Race", 1);

			ShowPlayerDialog(playerid, 302 ,DIALOG_STYLE_MSGBOX, RGB_SERVER"Дождитесь начала гонки!", " ", "Ok", "");
			ShowPlayerDialog(id, 302 ,DIALOG_STYLE_MSGBOX, RGB_SERVER"Дождитесь начала гонки!", " ", "Ok", "");

			GameTextForPlayer(playerid, "~g~3", 1100, 6);
			GameTextForPlayer(id, 		"~g~3", 1100, 6);

			PlayerPlaySound(id, 		1056, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1056, 0.0, 0.0, 0.0);
		}
	    case 2:
		{
			GameTextForPlayer(playerid, "~g~2", 1100, 6);
			GameTextForPlayer(id, 		"~g~2", 1100, 6);

			PlayerPlaySound(id, 		1056, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1056, 0.0, 0.0, 0.0);
		}
	    case 1:
		{
			GameTextForPlayer(playerid, "~g~1", 1100, 6);
			GameTextForPlayer(id, 		"~g~1", 1100, 6);

			PlayerPlaySound(id, 		1056, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1056, 0.0, 0.0, 0.0);
		}
	    case 0:
	    {
			GameTextForPlayer(playerid, "~g~GO!!!", 2000, 6);
			GameTextForPlayer(id, 		"~g~GO!!!", 2000, 6);

			PlayerPlaySound(id, 		1057, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 	1057, 0.0, 0.0, 0.0);

			ShowPlayerDialog(playerid,-1,-2," "," "," "," ");
			ShowPlayerDialog(id,-1,-2," "," "," "," ");
			DeletePVar(playerid, "Wait_Pvp_Race");
			DeletePVar(id, "Wait_Pvp_Race");

			SetPVarInt(playerid, "Race_Pvp_CP", 0);
			SetPVarInt(id, "Race_Pvp_CP", 0);

			DisablePlayerCheckpoint(playerid);
			DisablePlayerCheckpoint(id);

			gPlayerCheckpointStatus[playerid] = CHECKPOINT_PVP_RACE;
			gPlayerCheckpointStatus[id] = CHECKPOINT_PVP_RACE;

			Race_Pvp_Next_CP(playerid);
			Race_Pvp_Next_CP(id);
	    }
	}
	return 1;
}

stock Race_Pvp_Next_CP(playerid)
{
	new CP = GetPVarInt(playerid, "Race_Pvp_CP");
	switch(GetPVarInt(playerid, "Race_Pvp_Map"))
	{
	    case 1:
		{
			if(CP < sizeof(CP_LS_Lap1)-1) SetPlayerRaceCheckpoint(playerid, 0, CP_LS_Lap1[CP][0], CP_LS_Lap1[CP][1], CP_LS_Lap1[CP][2], CP_LS_Lap1[CP+1][0], CP_LS_Lap1[CP+1][1], CP_LS_Lap1[CP+1][2], 7.0);
			else if(CP == sizeof(CP_LS_Lap1)-1) SetPlayerRaceCheckpoint(playerid, 1, CP_LS_Lap1[CP][0], CP_LS_Lap1[CP][1], CP_LS_Lap1[CP][2], 0.0, 0.0, 0.0, 7.0);
			else return Player_Win_Race_Pvp(playerid);
		}
	    case 2:
		{
			if(CP < sizeof(CP_SF_Lap1)-1) SetPlayerRaceCheckpoint(playerid, 0, CP_SF_Lap1[CP][0], CP_SF_Lap1[CP][1], CP_SF_Lap1[CP][2], CP_SF_Lap1[CP+1][0], CP_SF_Lap1[CP+1][1], CP_SF_Lap1[CP+1][2], 7.0);
			else if(CP == sizeof(CP_SF_Lap1)-1) SetPlayerRaceCheckpoint(playerid, 1, CP_SF_Lap1[CP][0], CP_SF_Lap1[CP][1], CP_SF_Lap1[CP][2], 0.0, 0.0, 0.0, 7.0);
			else return Player_Win_Race_Pvp(playerid);
		}
	    case 3:
		{
			if(CP < sizeof(CP_LV_Lap1)-1) SetPlayerRaceCheckpoint(playerid, 0, CP_LV_Lap1[CP][0], CP_LV_Lap1[CP][1], CP_LV_Lap1[CP][2], CP_LV_Lap1[CP+1][0], CP_LV_Lap1[CP+1][1], CP_LV_Lap1[CP+1][2], 7.0);
			else if(CP == sizeof(CP_LV_Lap1)-1) SetPlayerRaceCheckpoint(playerid, 1, CP_LV_Lap1[CP][0], CP_LV_Lap1[CP][1], CP_LV_Lap1[CP][2], 0.0, 0.0, 0.0, 7.0);
			else return Player_Win_Race_Pvp(playerid);
		}
	    case 4:
		{
			if(CP < sizeof(CP_LV_Sprint1)-1) SetPlayerRaceCheckpoint(playerid, 0, CP_LV_Sprint1[CP][0], CP_LV_Sprint1[CP][1], CP_LV_Sprint1[CP][2], CP_LV_Sprint1[CP+1][0], CP_LV_Sprint1[CP+1][1], CP_LV_Sprint1[CP+1][2], 7.0);
			else if(CP == sizeof(CP_LV_Sprint1)-1) SetPlayerRaceCheckpoint(playerid, 1, CP_LV_Sprint1[CP][0], CP_LV_Sprint1[CP][1], CP_LV_Sprint1[CP][2], 0.0, 0.0, 0.0, 7.0);
			else return Player_Win_Race_Pvp(playerid);
		}
	    case 5:
		{
			if(CP < sizeof(CP_LS_Sprint1)-1) SetPlayerRaceCheckpoint(playerid, 0, CP_LS_Sprint1[CP][0], CP_LS_Sprint1[CP][1], CP_LS_Sprint1[CP][2], CP_LS_Sprint1[CP+1][0], CP_LS_Sprint1[CP+1][1], CP_LS_Sprint1[CP+1][2], 7.0);
			else if(CP == sizeof(CP_LS_Sprint1)-1) SetPlayerRaceCheckpoint(playerid, 1, CP_LS_Sprint1[CP][0], CP_LS_Sprint1[CP][1], CP_LS_Sprint1[CP][2], 0.0, 0.0, 0.0, 7.0);
			else return Player_Win_Race_Pvp(playerid);
		}
	    case 6:
		{
			if(CP < sizeof(CP_LV_Lap2)-1) SetPlayerRaceCheckpoint(playerid, 0, CP_LV_Lap2[CP][0], CP_LV_Lap2[CP][1], CP_LV_Lap2[CP][2], CP_LV_Lap2[CP+1][0], CP_LV_Lap2[CP+1][1], CP_LV_Lap2[CP+1][2], 7.0);
			else if(CP == sizeof(CP_LV_Lap2)-1) SetPlayerRaceCheckpoint(playerid, 1, CP_LV_Lap2[CP][0], CP_LV_Lap2[CP][1], CP_LV_Lap2[CP][2], 0.0, 0.0, 0.0, 7.0);
			else return Player_Win_Race_Pvp(playerid);
		}
	}
	GivePVarInt(playerid, "Race_Pvp_CP", 1);
	return 1;
}
stock Player_Win_Race_Pvp(playerid)
{
	new id = GetPVarInt(playerid, "Race_Pvp_Play");

	if(GetPVarInt(id, "Race_Pvp_On") == 1)
	{
		GivePlayerPCash(playerid, GetPVarInt(id, "Race_Pvp_Money") * 2, "Player_Win_Race_Pvp");

		new str[64];
		format(str, sizeof(str), "~g~+$%d", GetPVarInt(id, "Race_Pvp_Money") * 2);
		GameTextForPlayer(playerid, str, 5000, 6);

		SendClientMessage(id, COLOR_GREEN, "Вы проиграли гонку!");
		SendClientMessage(playerid, COLOR_GREEN, "Вы выиграли гонку!");
  		
		DisablePlayerRaceCheckpoint(id);
		DisablePlayerRaceCheckpoint(playerid);
		
		DisablePlayerCheckpoint(id);
		DisablePlayerCheckpoint(playerid);
		
		gPlayerCheckpointStatus[id] = 0;
		gPlayerCheckpointStatus[playerid] = 0;

		SetTimerEx("Return_To_Hole_Race", 3000, 0, "dd", playerid, id);
	}
	return 1;
}

forward Return_To_Hole_Race(playerid, id);
public Return_To_Hole_Race(playerid, id)
{
	if(IsPlayerConnected(playerid) && GetPVarInt(playerid, "Race_Pvp_On") == 1)
	{
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		oSetPlayerPos(playerid, -1662.309448,1216.876586,7.250000);
		SetPlayerFacingAngle(playerid, 245.242095);
		if(Pvp_Race_Car[playerid] != 0)
		{
			DestroyVehicle(Pvp_Race_Car[playerid]);
			Pvp_Race_Car[playerid] = 0;
		}
 		ClearPVars_Race_Pvp(playerid);
 		SetPlayerToTeamColor(playerid);
	}
	if(id != -1)
	{
	    if(IsPlayerConnected(id) && GetPVarInt(id, "Race_Pvp_On") == 1)
	    {
		    if(Pvp_Race_Car[id] != 0)
			{
				DestroyVehicle(Pvp_Race_Car[id]);
				Pvp_Race_Car[id] = 0;
			}
			SetPlayerVirtualWorld(id, 0);
			SetPlayerInterior(id, 0);
			oSetPlayerPos(id, -1662.309448,1216.876586,7.250000);
			SetPlayerFacingAngle(id, 245.242095);
			ClearPVars_Race_Pvp(id);
			SetPlayerToTeamColor(id);
		}
	}
	return 1;
}

stock GiveTabulac(val)
{
	new t[15];
	switch(val)
	{
	    case 0..3: 		t = "\t\t\t\t\t";
	    case 4..9: 		t = "\t\t\t\t";
	    case 10..14: 	t = "\t\t\t";
	    case 15..20: 	t = "\t\t";
	    default: 		t = "\t";
	}
	return t;
}

stock Show247Menu(playerid)
{
	new str[400];
	format(str, sizeof(str), "Мобильный телефон\t"RGB_GREEN"$100"RGB_WHITE"\n\
	Телефонная книга\t"RGB_GREEN"$90"RGB_WHITE"\n\
	Игральные кости\t"RGB_GREEN"$50"RGB_WHITE"\n\
	Замок для авто\t"RGB_GREEN"$200"RGB_WHITE"\n\
	Презерватив\t\t"RGB_GREEN"$10"RGB_WHITE"\n");
	
	format(str, sizeof(str), "%smp3-плеер\t\t"RGB_GREEN"$200"RGB_WHITE"\n\
	Фотокамера\t\t"RGB_GREEN"$140"RGB_WHITE"\n\
	Пачка сигарет\t\t"RGB_GREEN"$20"RGB_WHITE"\n\
	Зажигалка\t\t"RGB_GREEN"$10"RGB_WHITE"\n\
	Банка спранка\t\t"RGB_GREEN"$10"RGB_WHITE"\n\
	Бутылка пива\t\t"RGB_GREEN"$10"RGB_WHITE"\n\
	Вино\t\t\t"RGB_GREEN"$30", str);
	
	return ShowPlayerDialog(playerid, 310, DIALOG_STYLE_LIST, RGB_SERVER"Магазин 24/7", str, "Купить", "Отмена");
}


stock PlayerDropObject(playerid)
{
	if(GetPVarInt(playerid, "JobProgress") && GetPVarInt(playerid, "GetPack") && !IsPlayerInRangeOfPoint(playerid, 4.0, -1547.518432,111.565849,3.554687)) // на работе и с мешком
 	{
  		DeletePVar(playerid, "GetPack");
    	RemovePlayerAttachedObject(playerid, 4);
     	SendClientMessage(playerid, COLOR_GREEN, "Вы уронили мешок");
      	ClearAnimations(playerid);
       	DeletePVar(playerid, "CheckCheakJob");

		gPlayerCheckpointStatus[playerid] = CHECKPOINT_WORKER2;
		SetPlayerCheckpoint(playerid, -1547.518432,111.565849,3.554687, 1.5);
  	}
   	else if(GetPVarInt(playerid, "HavePizza") == 1) // Если есть пицца
   	{
   		RemovePlayerAttachedObject(playerid, 6);
	    DeletePVar(playerid, "HavePizza");
	    SendClientMessage(playerid, COLOR_GREEN, "Вы уронили пиццу");
	    ClearAnimations(playerid);
    }
    else if(GetPVarInt(playerid, "OnDumpJob") == 1 && gPlayerCheckpointStatus[playerid] == CHECKPOINT_DUMPLOAD)
    {
    	SetPlayerAttachedObject(playerid, 4, 18635, 6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
     	SendClientMessage(playerid, COLOR_GREEN, "Вы уронили деталь");
    	ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,1,1,0,0,1);
	   	gPlayerCheckpointStatus[playerid] = CHECKPOINT_FINDONDUMP;
	 	SetRandomDumpCP(playerid);
   	}
	else if(GetPVarInt(playerid, "Have_RobObject") == 1)
	{
		RemovePlayerAttachedObject(playerid, 1);
  		DeletePVar(playerid, "Have_RobObject");
    	SendClientMessage(playerid, COLOR_GREEN, "Вы уронили предмет");
    	ClearAnimations(playerid);
	    gPlayerCheckpointStatus[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(GetPVarInt(playerid, "Taked_Mine") == 1)
	{
	    DeletePVar(playerid, "Taked_Mine");

		RemovePlayerAttachedObject(playerid, 2);
		SetPlayerAttachedObject(playerid, 3, 18634, 6, 0.078222, 0.000000, 0.110844, 298.897308, 264.126861, 193.350555, 1.000000, 1.000000, 1.000000);

        SendClientMessage(playerid, COLOR_GREEN, "Вы уронили руду");
        
        SetPlayerMineCp(playerid);
	}
	return 1;
}





forward TdmTim(min);
public TdmTim(min)
{
	if(OpenTDM == true)
	{
        if(min == 4)
		{
			SendClientMessageToAll(COLOR_INFO, "Начало ТДМ через 4 минуты, регистрация на заводе К.А.С.С.");
			TDM_Timer = SetTimerEx("TdmTim", 2*1000*60, 0, "d", 2);
		}
        else if(min == 2)
		{
			SendClientMessageToAll(COLOR_INFO, "Начало ТДМ через 2 минуты, регистрация на заводе К.А.С.С.");
			TDM_Timer = SetTimerEx("TdmTim", 2*1000*60, 0, "d", 0);
		}
        else if(min == 0)
		{
			StartTDM();
		}
	}
}



stock StartTDM()
{
    OpenTDM = false;
    if(TDM_Players < 4)
    {
		for(new i; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i)) continue;
		    if(GetPVarInt(i, "RegOnTDM") == 1)
		    {
		        GivePlayerPCash(i, 700);
		        DeletePVar(i, "RegOnTDM");
			}
		}
        SendClientMessageToAll(COLOR_INFO, "ТДМ отменен! Набралось слишком мало участников");
        return 1;
    }
    
	new totaldm = 0;
	new slots[2];
	new name[25];
	for(new i; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i)) continue;
		if(GetPVarInt(i, "RegOnTDM") != 1) continue;

		switch(totaldm)
		{
			case 0, 2, 4, 6, 8, 10, 12, 14, 16, 18:
 			{
    			GetPlayerName(i, name, sizeof(name));
				strmid(TDM_Info[slots[0]][0][TDM_Name], name, 0, strlen(name), 255);
				TDM_Info[slots[0]][0][TDM_Kills] = 0;
				TDM_Info[slots[0]][0][TDM_On] = 1;
				TDM_Info[slots[0]][0][TDM_Playerid] = i;
				SetPVarInt(i, "TDM_Team", 0);
				SetPVarInt(i, "TDM_Slot", slots[0]);
				totaldm++;
				slots[0] ++;
			}
 			case 1, 3, 5, 7, 9, 11, 13, 15, 17, 19:
    		{
      			GetPlayerName(i, name, sizeof(name));
				strmid(TDM_Info[slots[1]][1][TDM_Name], name, 0, strlen(name), 255);
				TDM_Info[slots[1]][1][TDM_Kills] = 0;
				TDM_Info[slots[1]][1][TDM_On] = 1;
				TDM_Info[slots[1]][1][TDM_Playerid] = i;
				SetPVarInt(i, "TDM_Team", 1);
				SetPVarInt(i, "TDM_Slot", slots[1]);
				totaldm++;
				slots[1] ++;
 			}
 			default:
 			{
		     	GivePlayerPCash(i, 700);
		       	DeletePVar(i, "RegOnTDM");
				SendClientMessage(i, COLOR_WHITE, "ТДМ переполнен, набралось более 20 участников");
   			}
    	}
	}



    SetTimer("End_TDM", 600000, 0);
    

    TDM_Map = random(3);
    

    switch(TDM_Map)
    {
    	case 0:
        {
            SendClientMessageToAll(COLOR_INFO, "ТДМ начался! Карта: Zero RC, Окончание матча через 10 минут");
			for(new i; i < sizeof(TDM_Info); i++)
			{
				if(TDM_Info[i][0][TDM_Playerid] != -1)
  			  	{
				    SetPlayerInterior(TDM_Info[i][0][TDM_Playerid], floatround(Blue_Map_TDM_0[i][0]));
					oSetPlayerPos(TDM_Info[i][0][TDM_Playerid], Blue_Map_TDM_0[i][1], Blue_Map_TDM_0[i][2], Blue_Map_TDM_0[i][3]);
					SetPlayerFacingAngle(TDM_Info[i][0][TDM_Playerid], Blue_Map_TDM_0[i][4]);
					ResetPlayerWeaponsUAC(TDM_Info[i][0][TDM_Playerid]);
					GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 24, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 29, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 31, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 25, 999);
	             	SetPlayerSkinEx(TDM_Info[i][0][TDM_Playerid], 177);
	             	SetPlayerVirtualWorld(TDM_Info[i][0][TDM_Playerid], 2);
	             	SetPlayerColor(TDM_Info[i][0][TDM_Playerid],COLOR_BLUE);
	             	SetPlayerHealthUAC(TDM_Info[i][0][TDM_Playerid], 100.0);
	             	SetPlayerArmour(TDM_Info[i][0][TDM_Playerid], 0.0);
             	}
			    if(TDM_Info[i][1][TDM_Playerid] != -1)
			    {
				    SetPlayerInterior(TDM_Info[i][1][TDM_Playerid], floatround(Red_Map_TDM_0[i][0]));
					oSetPlayerPos(TDM_Info[i][1][TDM_Playerid], Red_Map_TDM_0[i][1], Red_Map_TDM_0[i][2], Red_Map_TDM_0[i][3]);
					SetPlayerFacingAngle(TDM_Info[i][1][TDM_Playerid], Red_Map_TDM_0[i][4]);
					ResetPlayerWeaponsUAC(TDM_Info[i][1][TDM_Playerid]);
					GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 24, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 29, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 31, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 25, 999);
	             	SetPlayerSkinEx(TDM_Info[i][1][TDM_Playerid], 170);
	             	SetPlayerVirtualWorld(TDM_Info[i][1][TDM_Playerid], 2);
	             	SetPlayerColor(TDM_Info[i][1][TDM_Playerid],COLOR_RED);
	             	SetPlayerHealthUAC(TDM_Info[i][1][TDM_Playerid], 100.0);
	             	SetPlayerArmour(TDM_Info[i][1][TDM_Playerid], 0.0);
             	}
			}
		}
		case 1:
        {
            SendClientMessageToAll(COLOR_INFO, "ТДМ начался! Карта: K.A.C.C, Окончание матча через 10 минут");
			for(new i; i < sizeof(TDM_Info); i++)
			{
   				if(TDM_Info[i][0][TDM_Playerid] != -1)
			    {
				    SetPlayerInterior(TDM_Info[i][0][TDM_Playerid], floatround(Blue_Map_TDM_1[i][0]));
					oSetPlayerPos(TDM_Info[i][0][TDM_Playerid], Blue_Map_TDM_1[i][1], Blue_Map_TDM_1[i][2], Blue_Map_TDM_1[i][3]);
					SetPlayerFacingAngle(TDM_Info[i][0][TDM_Playerid], Blue_Map_TDM_1[i][4]);
					ResetPlayerWeaponsUAC(TDM_Info[i][0][TDM_Playerid]);
					GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 24, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 29, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 31, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 25, 999);
	             	SetPlayerSkinEx(TDM_Info[i][0][TDM_Playerid], 177);
	             	SetPlayerVirtualWorld(TDM_Info[i][0][TDM_Playerid], 2);
	             	SetPlayerColor(TDM_Info[i][0][TDM_Playerid],COLOR_BLUE);
	             	SetPlayerHealthUAC(TDM_Info[i][0][TDM_Playerid], 100.0);
	             	SetPlayerArmour(TDM_Info[i][0][TDM_Playerid], 0.0);
             	}
			    if(TDM_Info[i][1][TDM_Playerid] != -1)
			    {
				    SetPlayerInterior(TDM_Info[i][1][TDM_Playerid], floatround(Red_Map_TDM_1[i][0]));
					oSetPlayerPos(TDM_Info[i][1][TDM_Playerid], Red_Map_TDM_1[i][1], Red_Map_TDM_1[i][2], Red_Map_TDM_1[i][3]);
					SetPlayerFacingAngle(TDM_Info[i][1][TDM_Playerid], Red_Map_TDM_1[i][4]);
					ResetPlayerWeaponsUAC(TDM_Info[i][1][TDM_Playerid]);
					GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 24, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 29, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 31, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 25, 999);
	             	SetPlayerSkinEx(TDM_Info[i][1][TDM_Playerid], 170);
	             	SetPlayerVirtualWorld(TDM_Info[i][1][TDM_Playerid], 2);
	             	SetPlayerColor(TDM_Info[i][1][TDM_Playerid],COLOR_RED);
	             	SetPlayerHealthUAC(TDM_Info[i][1][TDM_Playerid], 100.0);
	             	SetPlayerArmour(TDM_Info[i][1][TDM_Playerid], 0.0);
             	}
			}
		}
		case 2:
        {
            SendClientMessageToAll(COLOR_INFO, "ТДМ начался! Карта: Стоянка, Окончание матча через 10 минут");
			for(new i; i < sizeof(TDM_Info); i++)
			{
			    if(TDM_Info[i][0][TDM_Playerid] != -1)
			    {
				    SetPlayerInterior(TDM_Info[i][0][TDM_Playerid], floatround(Blue_Map_TDM_2[i][0]));
					oSetPlayerPos(TDM_Info[i][0][TDM_Playerid], Blue_Map_TDM_2[i][1], Blue_Map_TDM_2[i][2], Blue_Map_TDM_2[i][3]);
					SetPlayerFacingAngle(TDM_Info[i][0][TDM_Playerid], Blue_Map_TDM_2[i][4]);
					ResetPlayerWeaponsUAC(TDM_Info[i][0][TDM_Playerid]);
					GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 24, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 29, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 31, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][0][TDM_Playerid], 25, 999);
	             	SetPlayerSkinEx(TDM_Info[i][0][TDM_Playerid], 177);
	             	SetPlayerVirtualWorld(TDM_Info[i][0][TDM_Playerid], 2);
	             	SetPlayerColor(TDM_Info[i][0][TDM_Playerid],COLOR_BLUE);
	             	SetPlayerHealthUAC(TDM_Info[i][0][TDM_Playerid], 100.0);
	             	SetPlayerArmour(TDM_Info[i][0][TDM_Playerid], 0.0);
             	}
			    if(TDM_Info[i][1][TDM_Playerid] != -1)
			    {
				    SetPlayerInterior(TDM_Info[i][1][TDM_Playerid], floatround(Red_Map_TDM_2[i][0]));
					oSetPlayerPos(TDM_Info[i][1][TDM_Playerid], Red_Map_TDM_2[i][1], Red_Map_TDM_2[i][2], Red_Map_TDM_2[i][3]);
					SetPlayerFacingAngle(TDM_Info[i][1][TDM_Playerid], Red_Map_TDM_2[i][4]);
					ResetPlayerWeaponsUAC(TDM_Info[i][1][TDM_Playerid]);
					GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 24, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 29, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 31, 999);
	             	GivePlayerWeaponUAC(TDM_Info[i][1][TDM_Playerid], 25, 999);
	             	SetPlayerSkinEx(TDM_Info[i][1][TDM_Playerid], 170);
	             	SetPlayerVirtualWorld(TDM_Info[i][1][TDM_Playerid], 2);
	             	SetPlayerColor(TDM_Info[i][1][TDM_Playerid],COLOR_RED);
	             	SetPlayerHealthUAC(TDM_Info[i][1][TDM_Playerid], 100.0);
	             	SetPlayerArmour(TDM_Info[i][1][TDM_Playerid], 0.0);
             	}
			}
		}
	}
	StartCountTDM(7);
	printf("ТДМ запущен с %d игроками", TDM_Players);
	return 1;
}

forward StartCountTDM(t);
public StartCountTDM(t)
{
	if(t != 0)
	{
	    new str[20];
	    format(str, sizeof(str), "~g~%d", t);
	    for(new i; i < sizeof(TDM_Info); i++)
	    {
	    	if(TDM_Info[i][0][TDM_Playerid] != -1) GameTextForPlayer(TDM_Info[i][0][TDM_Playerid], str, 2000, 6), TogglePlayerControllable(TDM_Info[i][0][TDM_Playerid], 0);
	    	if(TDM_Info[i][1][TDM_Playerid] != -1) GameTextForPlayer(TDM_Info[i][1][TDM_Playerid], str, 2000, 6), TogglePlayerControllable(TDM_Info[i][1][TDM_Playerid], 0);
	    }
	    SetTimerEx("StartCountTDM", 1000, 0, "d", t-1);
	}
	else
	{
	    for(new i; i < sizeof(TDM_Info); i++)
	    {
	    	if(TDM_Info[i][0][TDM_Playerid] != -1) SetPlayerTeam(TDM_Info[i][0][TDM_Playerid], 1), TextDrawShowForPlayer(TDM_Info[i][0][TDM_Playerid], TDM_Count), GameTextForPlayer(TDM_Info[i][0][TDM_Playerid], "~g~GO GO GO!!!", 4000, 6), TogglePlayerControllable(TDM_Info[i][0][TDM_Playerid], 1);
	    	if(TDM_Info[i][1][TDM_Playerid] != -1) SetPlayerTeam(TDM_Info[i][1][TDM_Playerid], 2), TextDrawShowForPlayer(TDM_Info[i][1][TDM_Playerid], TDM_Count), GameTextForPlayer(TDM_Info[i][1][TDM_Playerid], "~g~GO GO GO!!!", 4000, 6), TogglePlayerControllable(TDM_Info[i][1][TDM_Playerid], 1);
	    }
    	TDM_Team_Kills[0] = 0;
		TDM_Team_Kills[1] = 0;
	}
	return 1;
}

forward End_TDM();
public End_TDM()
{
	if(TDM_Team_Kills[0] > TDM_Team_Kills[1])
	{
		for(new i; i < sizeof(TDM_Info); i++)
		{
		    if(TDM_Info[i][0][TDM_Playerid] != -1)
			{
				GivePlayerPCash(TDM_Info[i][0][TDM_Playerid], 1400);
				GameTextForPlayer(TDM_Info[i][0][TDM_Playerid], "~g~$1400", 3000, 1);
			}
		}
	    SendClientMessageToAll(COLOR_INFO, "ТДМ закончен! Победила Синяя команда. Участники - /tdminfo");
	}
	else if(TDM_Team_Kills[1] > TDM_Team_Kills[0])
	{
		for(new i; i < sizeof(TDM_Info); i++)
		{
		    if(TDM_Info[i][1][TDM_Playerid] != -1)
			{
				GivePlayerPCash(TDM_Info[i][1][TDM_Playerid], 1400);
				GameTextForPlayer(TDM_Info[i][1][TDM_Playerid], "~g~$1400", 3000, 1);
			}
		}
	    SendClientMessageToAll(COLOR_INFO, "ТДМ закончен! Победила Красная команда. Участники - /tdminfo");
	}
	else
	{
		for(new i; i < sizeof(TDM_Info); i++)
		{
		    if(TDM_Info[i][1][TDM_Playerid] != -1)
			{
				GivePlayerPCash(TDM_Info[i][1][TDM_Playerid], 700);
				GameTextForPlayer(TDM_Info[i][1][TDM_Playerid], "~g~$700", 3000, 1);
			}
		    if(TDM_Info[i][0][TDM_Playerid] != -1)
			{
				GivePlayerPCash(TDM_Info[i][0][TDM_Playerid], 700);
				GameTextForPlayer(TDM_Info[i][0][TDM_Playerid], "~g~$700", 3000, 1);
			}
		}
	    SendClientMessageToAll(COLOR_INFO, "ТДМ закончен! Ничья. Участники - /tdminfo");
	}
	
	
	
	for(new i; i < MAX_PLAYERS; i++)
	{
 		if(!IsPlayerConnected(i)) continue;
   		if(GetPVarInt(i, "RegOnTDM") == 1)
	    {
     		GivePlayerPCash(i, 700);
       		DeletePVar(i, "RegOnTDM");
	        DeletePVar(i, "TDM_Team");
	        DeletePVar(i, "TDM_Slot");

			SetPlayerVirtualWorld(i, i+1000);
			SetPlayerInterior(i, 3);
			oSetPlayerPos(i, 830.645507,7.429725,1004.179687);
			SetPlayerTeam(i, i);
			ReplaceSkin(i);
			ResetPlayerWeaponsUAC(i);
			SetPlayerToTeamColor(i);
			TextDrawHideForPlayer(i, TDM_Count);
			SetPVarInt(i, "Exit_Type", 1);
		}
	}

	return 1;
}

forward HolidayAds();
public HolidayAds()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(GetPVarInt(i, "Level") < 4) continue;
	    if(GetPVarInt(i, "SeeHAds") == 1) continue;
	    if(AFKText[i] > 3) continue;
	    
	    SetPVarInt(i, "SeeHAds", 1);
	    SendClientMessage(i, COLOR_INFO2, "На сервере действует праздничная акция! Вдвое больше DonateMoney при покупке на любую сумму");
		SendClientMessage(i, COLOR_INFO2, "Так же напоминаем, что за каждого приглашенного друга, Вы получаете по 20 респектов");
		SendClientMessage(i, COLOR_INFO2, "По любым игровым вопросам обращайтесь - /ask. Желаем приятной игры!");
	}
	return 1;
}


stock ReplaceSkin(playerid)
{
	switch(GetPVarInt(playerid, "CurrentSkin"))
	{
	    case 0: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin"));
	    case 1: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin1"));
	    case 2: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin2"));
	    case 3: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin3"));
	    case 4: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin4"));
	    case 5: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin5"));
	    case 6: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin6"));
	    case 7: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin7"));
	    case 8: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin8"));
	    case 9: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin9"));
	    case 10: SetPlayerSkinEx(playerid, GetPVarInt(playerid, "Skin10"));
	}
	return 1;
}

stock showDonateDialog(playerid, d)
{
	new str[400];
	switch(d)
	{
	    case 0:
	    {
	        format(str, sizeof(str), RGB_SERVER"Баланс: %d dm", GetPVarInt(playerid, "DonateMoney"));
	        return ShowPlayerDialog(playerid, 318, DIALOG_STYLE_LIST, str, "Активировать код\nТранспорт\nПерсонаж", "Далее", "Назад");
		}
		case 1:
		{
		    format(str, sizeof(str), RGB_WHITE"\
			Активируйте донат-код, введя его в окошко. Донат код можно получить\n\
		    на нашем сайте "RGB_SERVER"(crime-streets.ru)"RGB_WHITE", информацию об оплате\n\
		    и способы оплаты Вы можете так же узнать на сайте.\n\n\
		    Баланс Вашего счета: "RGB_ORANGE"%d dm", GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 319, DIALOG_STYLE_INPUT, RGB_SERVER"Меню » Активация кода", str, "Готово", "Назад");

		}
		case 2:
		{
		    ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, RGB_SERVER"Меню » Транспорт", "Покупка транспорта\nЗамена транспорта", "Далее", "Назад");
		}
		case 3: // Покупка авто
		{
            globalstr = "";
            for(new i; i < sizeof(DonateCar); i++)
            {
                format(globalstr, sizeof(globalstr), "%s%s "RGB_YELLOW"[%d dm]"RGB_WHITE"\n", globalstr, DonateCar[i][cName], DonateCar[i][cPrice]);
		    }

		    format(str, sizeof(str), RGB_SERVER"Баланс: %d dm", GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST, str, globalstr, "Купить", "Назад");
		    globalstr = "";
		}
		case 4: // Смена автомобиля
		{
            globalstr = "";
            for(new i; i < sizeof(DonateCar); i++)
            {
                format(globalstr, sizeof(globalstr), "%s%s "RGB_GREEN"[%d dm]"RGB_WHITE"\n", globalstr, DonateCar[i][cName], DonateCar[i][cChange]);
		    }


		    format(str, sizeof(str), RGB_SERVER"Баланс: %d dm", GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, str, globalstr, "Сменить", "Назад");
		    globalstr = "";
		}
		case 5:
		{
			ShowPlayerDialog(playerid, 326, DIALOG_STYLE_LIST, RGB_SERVER"Меню » Персонаж", "Купить премиум\nПродлить премиум\nКупить респекты\nПополнить гардероб\nСнять предупреждения", "Далее", "Назад");
		}
		case 6:
		{
		    format(str, sizeof(str), RGB_SERVER"Баланс: %d dm", GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 327, DIALOG_STYLE_LIST, str, "{ffd700}Gold"RGB_WHITE" аккаунт \t\t— 210 dm\n{c0c0c0}Silver"RGB_WHITE" аккаунт \t\t— 150 dm\n{cd7f32}Bronze"RGB_WHITE" аккаунт \t— 90 dm\nИнформация", "Далее", "Назад");
		}
		case 7:
		{
		    new vip_level = GetPVarInt(playerid, "VipLevel");
		    if(vip_level == 0)
		    {
		        SetPVarInt(playerid, "Return_D_Dialog", 5);
		        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", "У Вас нет премимум аккаунта, Вы не можете продлить его", "Назад", "Отмена");
		    }
		    new vip_price;
		    switch(vip_level)
		    {
		        case 1: vip_price = 3;
		        case 2: vip_price = 5;
		        default: vip_price = 7;
			}
		    format(str, sizeof(str), RGB_WHITE"\
			Введите в окошко количество дней, на которое хотите продлить свой премиум аккаунт.\n\
			Стоимость продления аккаунта Вашего уровня (%d) равняется "RGB_YELLOW"%d dm"RGB_WHITE"/День.\n\
			Ваш баланс равен: "RGB_YELLOW"%d dm", vip_level, vip_price, GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 329, DIALOG_STYLE_INPUT, RGB_SERVER"Меню » Персонаж » Продлить премиум",  str, "Продлить", "Назад");
		}
		case 8:
		{
		    format(str, sizeof(str), RGB_WHITE"\
			Введите в окошко количество респектов, которое хотите приобрести.\n\
			Стоимость одного респекта равняется "RGB_YELLOW"8 dm"RGB_WHITE".\n\
			Ваш баланс равен: "RGB_YELLOW"%d dm", GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 331, DIALOG_STYLE_INPUT, RGB_SERVER"Меню » Персонаж » Купить респекты",  str, "Купить", "Назад");
		}
		case 9:
		{
		    globalstr = "";
      		for(new i; i < sizeof(DonateSkin); i++)
            {
                format(globalstr, sizeof(globalstr), "%sID: %d\t\t"RGB_YELLOW"[%d dm]"RGB_WHITE"\n", globalstr, DonateSkin[i][sId], DonateSkin[i][sPrice]);
		    }

		    format(str, sizeof(str), RGB_SERVER"Баланс: %d dm", GetPVarInt(playerid, "DonateMoney"));
		    ShowPlayerDialog(playerid, 333, DIALOG_STYLE_LIST, str, globalstr, "Купить", "Назад");
		    globalstr = "";
		}
		case 10:
		{
			if(GetPVarInt(playerid, "Warnings") == 0)
		    {
		        SetPVarInt(playerid, "Return_D_Dialog", 5);
		        return ShowPlayerDialog(playerid, 323, DIALOG_STYLE_MSGBOX, RGB_SERVER"Ошибка", RGB_RED"На Вашем аккаунте нет предупреждений", "Назад", "Отмена");
		    }
		    format(str, sizeof(str), RGB_WHITE"\
		    На Вашем аккаунте имеется %d предупреждения(-й). Снять все предупреждения\n\
			будет стоить %d dm. Снять можно только все предупреждения разом.\n\
			Предупреждения так же снимаются автоматически, через 30 дней, после\n\
			последнего полученного.\n\
			Ваш баланс равен: "RGB_YELLOW"%d dm", GetPVarInt(playerid, "Warnings"), GetPVarInt(playerid, "Warnings")*50, GetPVarInt(playerid, "DonateMoney"));
			ShowPlayerDialog(playerid, 336, DIALOG_STYLE_MSGBOX, RGB_SERVER"Снятие предупреждений", str, "Снять", "Назад");
		}
	}
	return 1;
}


forward Re_Kick(playerid);
public Re_Kick(playerid)
{
	Kick(playerid);
	return 1;
}





stock SetPlayerMineCp(playerid)
{
	static Float:MinerPositions[][] = {
		{600.383483, 918.815246, -42.069892},
		{591.114318, 920.403991, -41.228618},
		{553.669128, 923.122680, -41.881980},
		{552.569396, 916.193664, -40.040626},
		{545.970825, 911.875488, -40.174625},
		{541.305114, 908.738769, -42.847160},
		{584.900512, 925.643920, -42.119544},
		{588.421325, 930.594726, -41.121173}
	};

	gPlayerCheckpointStatus[playerid] = CHECKPOINT_MINER;

	new i = random(sizeof(MinerPositions));

	SetPlayerCheckpoint(playerid, MinerPositions[i][0], MinerPositions[i][1], MinerPositions[i][2], 5.0);

	return 1;
}


forward MinerGetCount(playerid, Float:pX, Float:pY, Float:pZ);
public MinerGetCount(playerid, Float:pX, Float:pY, Float:pZ)
{
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, pX, pY, pZ)) 
	{
	    SetPlayerMineCp(playerid);
	    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
	    return SendClientMessage(playerid, COLOR_GREY, "Вы покинули место добычи руды");
	}
	    
	SetPVarInt(playerid, "Taked_Mine", 1);
	SendClientMessage(playerid, COLOR_GREEN, "Отнесите добытую руду на склад");
	
	ApplyAnimation(playerid, "PED", "IDLE_chat", 4.1, 0, 1, 1, 1, 10);
    
	SetPlayerAttachedObject(playerid, 2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);// Дали телегу с камнем
	SetPlayerAttachedObject(playerid, 3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);// Дали камень
	return 1;
}



public OnMysqlQuery(resultid, spareid, MySQL:handle)
{
	switch(resultid)
	{
	    case 1:
	    {
			new str[50];
			format(str, sizeof(str), "Уволено %d игроков", mysql_affected_rows());
			SendClientMessage(spareid, COLOR_WHITE, str);
	    }
	}
	return 1;
}


forward OnServerMessage(const msg[]);
public OnServerMessage(const msg[])
{
	new str[30], i;

	i = strfind(msg, "Invalid client connecting from ");
	if(i != -1)
	{
	    static _flood;
		if(_flood > gettime())
		{
		    i += strlen("Invalid client connecting from ");
		    strmid(str, msg, i, strlen(msg));

		    OnRemoteAttack(str, "Invalid client connecting");
	    }
	    else _flood = gettime()+1;

	    return 1;
	}

	i = strfind(msg, "Warning: /rcon command exploit from: ");
	if(i != -1)
	{
	    i += strlen("Warning: /rcon command exploit from: ");
	    strmid(str, msg, i, strfind(msg, ":", false, i));

	    OnRemoteAttack(str, "Rcon cmd exploit");
	    return 1;
	}

	i = strfind(msg, "Blocking ");
	if(i != -1 && strfind(msg, "due to a 'server full' attack"))
	{
        i += strlen("Blocking ");
	    strmid(str, msg, i, strfind(msg, " ", false, i));

	    OnRemoteAttack(str, "Server full attack");
	    return 1;
	}

// -------------------- IN GAME ------------------------------------------------
	i = strfind(msg, "Warning: PlayerDialogResponse PlayerId: ");
	if(i != -1)
	{
	    i += strlen("Warning: PlayerDialogResponse PlayerId: ");
	    OnIngameAttack(strval(msg[i]), "Dialog response");
	    return 1;
	}

	i = strfind(msg, "Warning: PlayerDialogResponse crash exploit from PlayerId: ");
	if(i != -1)
	{
	    i += strlen("Warning: PlayerDialogResponse crash exploit from PlayerId: ");
	    OnIngameAttack(strval(msg[i]), "Dialog crash exploit");
	    return 1;
	}

	i = strfind(msg, "Packet was modified, sent by id: ");
	if(i != -1)
	{
	    i += strlen("Packet was modified, sent by id: ");
	    OnIngameAttack(strval(msg[i]), "Packet was modified");
	    return 1;
	}

	return 1;
}



stock OnRemoteAttack(ip[], description[])
{
	if(strlen(ip) < 6) return 1;

	new str[80];
	
	format(str, sizeof(str), "banip %s", ip);
	SendRconCommand(str);

	format(str, sizeof(str), "AdmCmd: Заблокирован ip: %s за атаку (%s)", ip, description);
	ABroadCast(str);

	return 1;
}



enum a_flood_detect
{
	f_counter,
	f_last
}
new a_flood_control[MAX_PLAYERS][a_flood_detect];


stock OnIngameAttack(playerid, description[])
{
    if(a_flood_control[playerid][f_last] > gettime())
    {
        a_flood_control[playerid][f_counter] ++;

        if(a_flood_control[playerid][f_counter] == 30)
        {
            new str[120];
			new ip[17];
			GetPlayerIp(playerid, ip, sizeof(ip));
			
           	format(str, sizeof(str), "AdmCmd: %s[id: %d | ip: %s] забанен за атаку (%s) на 1 час", GetName(playerid), playerid, ip, description);
			ABroadCast(str);

			MySQL_Banip(playerid, 1, description);

			a_flood_control[playerid][f_last] = gettime()+3;
        }
    }
    else
   	{
        a_flood_control[playerid][f_last] = gettime()+1;
        a_flood_control[playerid][f_counter] = 0;
    }

	return 1;
}


public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	for(new i; i < sizeof(AdminCreateObject); i++)
	{
	    if(objectid == AdminCreateObject[i])
	    {
    		EditObject(playerid, objectid);
    		return 1;
		}
	}

	SendClientMessage(playerid, COLOR_GREY, "Вы не можете редактировать этот объект");

    return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	for(new i; i < sizeof(AdminCreateObject); i++)
	{
	    if(AdminCreateObject[i] == objectid)
	    {
			SetObjectPos(objectid, fX, fY, fZ);
			SetObjectRot(objectid, fRotX, fRotY, fRotZ);
	    }
	}
	return 1;
}

forward GModeExit();
public GModeExit()
{
	print("GModeExit");
	fclose(fopen(""));
	return 1;
}


public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(dodebug == true) printf("[%s] DEBUG LOG: OnPlayerWeaponShot(%d, %d, %d, %d, %f, %f, %f);", GetName(playerid), playerid, weaponid, hittype, hitid, fX, fY, fZ);
    if( hittype != BULLET_HIT_TYPE_NONE )
  	{
	    if(!(-200.0 <= fX <= 200.0 ) || !(-200.0 <= fY <= 200.0) || !(-200.0 <= fZ <= 200.0))
	    {
	      return 0;
	    }
  	}
	if(hittype == BULLET_HIT_TYPE_PLAYER)
	{
	    if(hitid >= 0 && hitid < MAX_PLAYERS)
	    {
	        if(AFKText[hitid] >= 2) return 0;
		}
	}
    return 1;
}

stock timeToDate(time, &hour, &minute, &second, &year, &month, &day)
{

        new remain = time, leapYear = 1, sub, yearCounter;

        for(new i = 0; i < time - sub;) {
                sub = (leapYear > 0 && leapYear < 4) ? 31622400 : 31536000;
                if(i == 0) {
                        i += 31536000;
                        remain -= 31536000;
                } else {
                        if(leapYear > 0 && leapYear < 4) {
                                i += 31536000;
                                leapYear++;
                                remain -= 31536000;
                        } else {
                                i += 31622400;
                                leapYear = 1;
                                remain -= 31622400;
                        }
                }
                if(time > 31536000) yearCounter++;
        }
        year = 1970 + yearCounter;

        sub = (leapYear > 0 && leapYear < 4) ? 86400 : 0;
        if(remain <= 2678400) { month = 1; remain -= 0; }
        else if(remain <= 5097600 + sub) { month = 2; remain -= 2678400; }
        else if(remain <= 7776000 + sub) { month = 3; remain -= 5097600; }
        else if(remain <= 10368000 + sub) { month = 4; remain -= 7776000; }
        else if(remain <= 13046400 + sub) { month = 5; remain -= 10368000; }
        else if(remain <= 15638400 + sub) { month = 6; remain -= 13046400; }
        else if(remain <= 18316800 + sub) { month = 7; remain -= 15638400; }
        else if(remain <= 20995200 + sub) { month = 8; remain -= 18316800; }
        else if(remain <= 23587200 + sub) { month = 9; remain -= 20995200; }
        else if(remain <= 26265600 + sub) { month = 10; remain -= 23587200; }
        else if(remain <= 28857600 + sub) { month = 11; remain -= 26265600; }
        else if(remain <= 31536000 + sub) { month = 12; remain -= 28857600; }

        day = floatround( floatdiv(float(remain), float(86400)), floatround_floor );
        remain -= (day * 86400);

        hour = floatround( floatdiv(float(remain), float(3600)), floatround_floor );
        remain -= (hour * 3600);

        minute = floatround( floatdiv(float(remain), float(60)), floatround_floor );
        remain -= (minute * 60);

        second = remain;
        day++;
        return 1;
}
